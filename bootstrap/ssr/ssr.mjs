import { ssrRenderAttrs, ssrRenderStyle, ssrRenderSlot, ssrRenderComponent, ssrRenderTeleport, ssrRenderClass, ssrLooseContain, ssrGetDynamicModelProps, ssrInterpolate, ssrRenderList, ssrRenderVNode, ssrRenderAttr, ssrIncludeBooleanAttr, ssrLooseEqual } from "vue/server-renderer";
import { useSSRContext, mergeProps, resolveComponent, withCtx, renderSlot, onMounted, onUnmounted, createVNode, openBlock, createBlock, createTextVNode, Fragment, renderList, toDisplayString, createCommentVNode, ref, watchEffect, resolveDynamicComponent, Transition, withDirectives, vModelSelect, vModelText, withModifiers, watch, vShow, computed, getCurrentInstance, withKeys, createSlots, defineComponent, vModelCheckbox, vModelRadio, unref, h as h$1, createSSRApp } from "vue";
import { instantMeiliSearch } from "@meilisearch/instant-meilisearch";
import { MagnifyingGlassIcon, ArchiveBoxIcon, PencilSquareIcon, TableCellsIcon, PlusIcon, XMarkIcon as XMarkIcon$1, CheckIcon, ChevronUpDownIcon, PencilIcon, PlusSmallIcon, ChevronUpIcon, PaperClipIcon, FolderIcon as FolderIcon$1, DocumentTextIcon, ArrowDownTrayIcon, ChevronRightIcon, InformationCircleIcon, HomeIcon, EllipsisVerticalIcon, ExclamationCircleIcon, ArrowUpTrayIcon, TrashIcon, XCircleIcon, ClipboardDocumentIcon, QuestionMarkCircleIcon, ExclamationTriangleIcon as ExclamationTriangleIcon$1, ArrowDownOnSquareStackIcon, PlayIcon, PauseIcon, ChevronLeftIcon, AtSymbolIcon, CodeBracketIcon, LinkIcon, CheckCircleIcon as CheckCircleIcon$1, RectangleStackIcon, StarIcon as StarIcon$1, ChevronDownIcon, LockClosedIcon, LockOpenIcon, EnvelopeIcon, ArrowLongLeftIcon, ArrowLongRightIcon, ArrowSmallRightIcon, FolderPlusIcon as FolderPlusIcon$1, CalendarIcon, ScaleIcon, QueueListIcon, Squares2X2Icon as Squares2X2Icon$1, ShareIcon, BellAlertIcon, BriefcaseIcon, CurrencyDollarIcon, MapPinIcon, EyeIcon, EyeSlashIcon } from "@heroicons/vue/24/solid";
import { Link, Head, router as router$1, createInertiaApp } from "@inertiajs/vue3";
import { useMagicKeys } from "@vueuse/core";
import { FolderIcon, TagIcon, DocumentPlusIcon, XMarkIcon, CheckCircleIcon, ExclamationTriangleIcon, HeartIcon, ArrowPathIcon, BellIcon, Bars3Icon, ClockIcon, UsersIcon, StarIcon, TrashIcon as TrashIcon$1, Squares2X2Icon, SwatchIcon, HomeIcon as HomeIcon$1, FolderPlusIcon, HashtagIcon, ArrowTopRightOnSquareIcon, ChevronRightIcon as ChevronRightIcon$1, CircleStackIcon, FolderOpenIcon, PlusSmallIcon as PlusSmallIcon$1, MinusSmallIcon, ChatBubbleLeftIcon, ChatBubbleLeftRightIcon, DocumentTextIcon as DocumentTextIcon$1, InboxIcon, PencilSquareIcon as PencilSquareIcon$1, MagnifyingGlassIcon as MagnifyingGlassIcon$2, ArrowUturnLeftIcon, SparklesIcon, ShareIcon as ShareIcon$1, ScaleIcon as ScaleIcon$1 } from "@heroicons/vue/24/outline";
import { Combobox, ComboboxInput, ComboboxOptions, ComboboxOption, DialogPanel, Dialog, DialogOverlay, TransitionChild, TransitionRoot, Menu, MenuItem, MenuItems, Listbox, ListboxButton, ListboxLabel, ListboxOption, ListboxOptions, Disclosure, DisclosureButton, DisclosurePanel, DialogTitle, MenuButton, Switch, SwitchDescription, SwitchGroup, SwitchLabel, Tab, TabGroup, TabList, TabPanel, TabPanels, Popover, PopoverButton, PopoverGroup, PopoverPanel } from "@headlessui/vue";
import Popper from "popper.js";
import OCL$1 from "openchemlib/full.js";
import Dropzone from "dropzone";
import axiosRetry from "axios-retry";
import { EllipsisVerticalIcon as EllipsisVerticalIcon$1, MagnifyingGlassIcon as MagnifyingGlassIcon$1 } from "@heroicons/vue/20/solid";
import Datepicker from "@vuepic/vue-datepicker";
import throttle from "lodash/throttle.js";
import mapValues from "lodash/mapValues.js";
import pickBy from "lodash/pickBy.js";
import axios$1 from "axios";
import Draggable from "vuedraggable";
import OCL$2 from "openchemlib/minimal.js";
import createServer from "@inertiajs/vue3/server";
import { renderToString } from "@vue/server-renderer";
import * as marked from "marked";
import { copyText } from "vue3-clipboard";
import pluralize from "pluralize";
const _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
const _sfc_main$2z = {
  props: ["on"]
};
function _sfc_ssrRender$2y(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><div style="${ssrRenderStyle($props.on ? null : { display: "none" })}" class="text-sm text-gray-600">`);
  ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div></div>`);
}
const _sfc_setup$2z = _sfc_main$2z.setup;
_sfc_main$2z.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/ActionMessage.vue");
  return _sfc_setup$2z ? _sfc_setup$2z(props, ctx) : void 0;
};
const JetActionMessage = /* @__PURE__ */ _export_sfc(_sfc_main$2z, [["ssrRender", _sfc_ssrRender$2y]]);
const _sfc_main$2y = {};
function _sfc_ssrRender$2x(_ctx, _push, _parent, _attrs) {
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "md:col-span-1 flex justify-between" }, _attrs))}><div class="px-4 sm:px-0"><h3 class="text-lg font-medium text-gray-900">`);
  ssrRenderSlot(_ctx.$slots, "title", {}, null, _push, _parent);
  _push(`</h3><p class="mt-1 text-sm text-gray-600">`);
  ssrRenderSlot(_ctx.$slots, "description", {}, null, _push, _parent);
  _push(`</p></div><div class="px-4 sm:px-0">`);
  ssrRenderSlot(_ctx.$slots, "aside", {}, null, _push, _parent);
  _push(`</div></div>`);
}
const _sfc_setup$2y = _sfc_main$2y.setup;
_sfc_main$2y.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/SectionTitle.vue");
  return _sfc_setup$2y ? _sfc_setup$2y(props, ctx) : void 0;
};
const JetSectionTitle = /* @__PURE__ */ _export_sfc(_sfc_main$2y, [["ssrRender", _sfc_ssrRender$2x]]);
const _sfc_main$2x = {
  components: {
    JetSectionTitle
  }
};
function _sfc_ssrRender$2w(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_section_title = resolveComponent("jet-section-title");
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "md:grid md:grid-cols-3 md:gap-6" }, _attrs))}>`);
  _push(ssrRenderComponent(_component_jet_section_title, null, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        ssrRenderSlot(_ctx.$slots, "title", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          renderSlot(_ctx.$slots, "title")
        ];
      }
    }),
    description: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        ssrRenderSlot(_ctx.$slots, "description", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          renderSlot(_ctx.$slots, "description")
        ];
      }
    }),
    _: 3
  }, _parent));
  _push(`<div class="mt-5 md:mt-0 md:col-span-2"><div class="px-4 py-5 sm:p-6 bg-white shadow sm:rounded-lg">`);
  ssrRenderSlot(_ctx.$slots, "content", {}, null, _push, _parent);
  _push(`</div></div></div>`);
}
const _sfc_setup$2x = _sfc_main$2x.setup;
_sfc_main$2x.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/ActionSection.vue");
  return _sfc_setup$2x ? _sfc_setup$2x(props, ctx) : void 0;
};
const JetActionSection = /* @__PURE__ */ _export_sfc(_sfc_main$2x, [["ssrRender", _sfc_ssrRender$2w]]);
const _sfc_main$2w = {
  props: {
    type: {
      type: String,
      default: "submit"
    }
  }
};
function _sfc_ssrRender$2v(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<button${ssrRenderAttrs(mergeProps({
    type: $props.type,
    class: "inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring focus:ring-gray-300 disabled:opacity-25 transition"
  }, _attrs))}>`);
  ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</button>`);
}
const _sfc_setup$2w = _sfc_main$2w.setup;
_sfc_main$2w.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/Button.vue");
  return _sfc_setup$2w ? _sfc_setup$2w(props, ctx) : void 0;
};
const JetButton = /* @__PURE__ */ _export_sfc(_sfc_main$2w, [["ssrRender", _sfc_ssrRender$2v]]);
const _sfc_main$2v = {
  props: {
    show: {
      default: false
    },
    maxWidth: {
      default: "2xl"
    },
    closeable: {
      default: true
    }
  },
  emits: ["close"],
  setup(props, { emit }) {
    const close = () => {
      if (props.closeable) {
        emit("close");
      }
    };
    const closeOnEscape = (e2) => {
      if (e2.key === "Escape" && props.show) {
        close();
      }
    };
    onMounted(() => document.addEventListener("keydown", closeOnEscape));
    onUnmounted(() => {
      document.removeEventListener("keydown", closeOnEscape);
      document.body.style.overflow = null;
    });
    return {
      close
    };
  },
  computed: {
    maxWidthClass() {
      return {
        sm: "sm:max-w-sm",
        md: "sm:max-w-md",
        lg: "sm:max-w-lg",
        xl: "sm:max-w-xl",
        "2xl": "sm:max-w-2xl",
        "3xl": "sm:max-w-3xl",
        "4xl": "sm:max-w-4xl",
        "5xl": "sm:max-w-5xl",
        "6xl": "sm:max-w-6xl",
        "7xl": "sm:max-w-7xl"
      }[this.maxWidth];
    }
  },
  watch: {
    show: {
      immediate: true,
      handler: (show) => {
        if (show) {
          document.body.style.overflow = "hidden";
        } else {
          document.body.style.overflow = null;
        }
      }
    }
  }
};
function _sfc_ssrRender$2u(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  ssrRenderTeleport(_push, (_push2) => {
    _push2(`<div style="${ssrRenderStyle($props.show ? null : { display: "none" })}" class="fixed inset-0 overflow-y-auto px-4 py-6 sm:px-0 z-50" scroll-region><div style="${ssrRenderStyle($props.show ? null : { display: "none" })}" class="fixed inset-0 transform transition-all"><div class="absolute inset-0 bg-gray-500 opacity-75"></div></div><div style="${ssrRenderStyle($props.show ? null : { display: "none" })}" class="${ssrRenderClass([$options.maxWidthClass, "mb-6 bg-white rounded-lg shadow-xl transform transition-all sm:w-full sm:mx-auto"])}">`);
    if ($props.show) {
      ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent);
    } else {
      _push2(`<!---->`);
    }
    _push2(`</div></div>`);
  }, "body", false, _parent);
}
const _sfc_setup$2v = _sfc_main$2v.setup;
_sfc_main$2v.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/Modal.vue");
  return _sfc_setup$2v ? _sfc_setup$2v(props, ctx) : void 0;
};
const Modal = /* @__PURE__ */ _export_sfc(_sfc_main$2v, [["ssrRender", _sfc_ssrRender$2u]]);
const _sfc_main$2u = {
  components: {
    Modal
  },
  props: {
    show: {
      default: false
    },
    maxWidth: {
      default: "2xl"
    },
    closeable: {
      default: true
    }
  },
  emits: ["close"],
  methods: {
    close() {
      this.$emit("close");
    }
  }
};
function _sfc_ssrRender$2t(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_modal = resolveComponent("modal");
  _push(ssrRenderComponent(_component_modal, mergeProps({
    show: $props.show,
    "max-width": $props.maxWidth,
    closeable: $props.closeable,
    onClose: $options.close
  }, _attrs), {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4"${_scopeId}><div class="sm:flex sm:items-start"${_scopeId}><div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10"${_scopeId}><svg class="h-6 w-6 text-red-600" stroke="currentColor" fill="none" viewBox="0 0 24 24"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"${_scopeId}></path></svg></div><div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left"${_scopeId}><h3 class="text-lg"${_scopeId}>`);
        ssrRenderSlot(_ctx.$slots, "title", {}, null, _push2, _parent2, _scopeId);
        _push2(`</h3><div class="mt-2"${_scopeId}>`);
        ssrRenderSlot(_ctx.$slots, "content", {}, null, _push2, _parent2, _scopeId);
        _push2(`</div></div></div></div><div class="px-6 py-4 bg-gray-100 text-right"${_scopeId}>`);
        ssrRenderSlot(_ctx.$slots, "footer", {}, null, _push2, _parent2, _scopeId);
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4" }, [
            createVNode("div", { class: "sm:flex sm:items-start" }, [
              createVNode("div", { class: "mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10" }, [
                (openBlock(), createBlock("svg", {
                  class: "h-6 w-6 text-red-600",
                  stroke: "currentColor",
                  fill: "none",
                  viewBox: "0 0 24 24"
                }, [
                  createVNode("path", {
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round",
                    "stroke-width": "2",
                    d: "M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"
                  })
                ]))
              ]),
              createVNode("div", { class: "mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left" }, [
                createVNode("h3", { class: "text-lg" }, [
                  renderSlot(_ctx.$slots, "title")
                ]),
                createVNode("div", { class: "mt-2" }, [
                  renderSlot(_ctx.$slots, "content")
                ])
              ])
            ])
          ]),
          createVNode("div", { class: "px-6 py-4 bg-gray-100 text-right" }, [
            renderSlot(_ctx.$slots, "footer")
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$2u = _sfc_main$2u.setup;
_sfc_main$2u.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/ConfirmationModal.vue");
  return _sfc_setup$2u ? _sfc_setup$2u(props, ctx) : void 0;
};
const JetConfirmationModal = /* @__PURE__ */ _export_sfc(_sfc_main$2u, [["ssrRender", _sfc_ssrRender$2t]]);
const _sfc_main$2t = {
  props: {
    type: {
      type: String,
      default: "button"
    }
  }
};
function _sfc_ssrRender$2s(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<button${ssrRenderAttrs(mergeProps({
    type: $props.type,
    class: "inline-flex items-center justify-center px-4 py-2 bg-red-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-red-500 focus:outline-none focus:border-red-700 focus:ring focus:ring-red-200 active:bg-red-600 disabled:opacity-25 transition"
  }, _attrs))}>`);
  ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</button>`);
}
const _sfc_setup$2t = _sfc_main$2t.setup;
_sfc_main$2t.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/DangerButton.vue");
  return _sfc_setup$2t ? _sfc_setup$2t(props, ctx) : void 0;
};
const JetDangerButton = /* @__PURE__ */ _export_sfc(_sfc_main$2t, [["ssrRender", _sfc_ssrRender$2s]]);
const _sfc_main$2s = {
  components: {
    Modal
  },
  props: {
    show: {
      default: false
    },
    maxWidth: {
      default: "2xl"
    },
    closeable: {
      default: true
    }
  },
  emits: ["close"],
  methods: {
    close() {
      this.$emit("close");
    }
  }
};
function _sfc_ssrRender$2r(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_modal = resolveComponent("modal");
  _push(ssrRenderComponent(_component_modal, mergeProps({
    show: $props.show,
    "max-width": $props.maxWidth,
    closeable: $props.closeable,
    onClose: $options.close
  }, _attrs), {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="px-6 py-4"${_scopeId}><div class="text-lg"${_scopeId}>`);
        ssrRenderSlot(_ctx.$slots, "title", {}, null, _push2, _parent2, _scopeId);
        _push2(`</div><div class="mt-4"${_scopeId}>`);
        ssrRenderSlot(_ctx.$slots, "content", {}, null, _push2, _parent2, _scopeId);
        _push2(`</div></div><div class="px-6 py-4 bg-gray-100 rounded-b-lg text-right"${_scopeId}>`);
        ssrRenderSlot(_ctx.$slots, "footer", {}, null, _push2, _parent2, _scopeId);
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "px-6 py-4" }, [
            createVNode("div", { class: "text-lg" }, [
              renderSlot(_ctx.$slots, "title")
            ]),
            createVNode("div", { class: "mt-4" }, [
              renderSlot(_ctx.$slots, "content")
            ])
          ]),
          createVNode("div", { class: "px-6 py-4 bg-gray-100 rounded-b-lg text-right" }, [
            renderSlot(_ctx.$slots, "footer")
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$2s = _sfc_main$2s.setup;
_sfc_main$2s.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/DialogModal.vue");
  return _sfc_setup$2s ? _sfc_setup$2s(props, ctx) : void 0;
};
const JetDialogModal = /* @__PURE__ */ _export_sfc(_sfc_main$2s, [["ssrRender", _sfc_ssrRender$2r]]);
const _sfc_main$2r = {
  components: {
    JetSectionTitle
  },
  emits: ["submitted"],
  computed: {
    hasActions() {
      return !!this.$slots.actions;
    }
  }
};
function _sfc_ssrRender$2q(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_section_title = resolveComponent("jet-section-title");
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "md:grid md:grid-cols-3 md:gap-6" }, _attrs))}>`);
  _push(ssrRenderComponent(_component_jet_section_title, null, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        ssrRenderSlot(_ctx.$slots, "title", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          renderSlot(_ctx.$slots, "title")
        ];
      }
    }),
    description: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        ssrRenderSlot(_ctx.$slots, "description", {}, null, _push2, _parent2, _scopeId);
      } else {
        return [
          renderSlot(_ctx.$slots, "description")
        ];
      }
    }),
    _: 3
  }, _parent));
  _push(`<div class="mt-5 md:mt-0 md:col-span-2"><form><div class="${ssrRenderClass([
    $options.hasActions ? "sm:rounded-tl-md sm:rounded-tr-md" : "sm:rounded-md",
    "px-4 py-5 bg-white sm:p-6 shadow"
  ])}"><div class="grid grid-cols-6 gap-6">`);
  ssrRenderSlot(_ctx.$slots, "form", {}, null, _push, _parent);
  _push(`</div></div>`);
  if ($options.hasActions) {
    _push(`<div class="flex items-center justify-end px-4 py-3 bg-gray-50 text-right sm:px-6 shadow sm:rounded-bl-md sm:rounded-br-md">`);
    ssrRenderSlot(_ctx.$slots, "actions", {}, null, _push, _parent);
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</form></div></div>`);
}
const _sfc_setup$2r = _sfc_main$2r.setup;
_sfc_main$2r.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/FormSection.vue");
  return _sfc_setup$2r ? _sfc_setup$2r(props, ctx) : void 0;
};
const JetFormSection = /* @__PURE__ */ _export_sfc(_sfc_main$2r, [["ssrRender", _sfc_ssrRender$2q]]);
const _sfc_main$2q = {
  props: ["modelValue"],
  emits: ["update:modelValue"],
  methods: {
    focus() {
      this.$refs.input.focus();
    }
  }
};
function _sfc_ssrRender$2p(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<input${ssrRenderAttrs(mergeProps({
    ref: "input",
    class: "border-gray-300 focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 rounded-md shadow-sm",
    value: $props.modelValue
  }, _attrs))}>`);
}
const _sfc_setup$2q = _sfc_main$2q.setup;
_sfc_main$2q.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/Input.vue");
  return _sfc_setup$2q ? _sfc_setup$2q(props, ctx) : void 0;
};
const JetInput = /* @__PURE__ */ _export_sfc(_sfc_main$2q, [["ssrRender", _sfc_ssrRender$2p]]);
const _sfc_main$2p = {
  props: {
    checked: {
      type: [Array, Boolean],
      default: false
    },
    value: {
      default: null
    }
  },
  emits: ["update:checked"],
  computed: {
    proxyChecked: {
      get() {
        return this.checked;
      },
      set(val) {
        this.$emit("update:checked", val);
      }
    }
  }
};
function _sfc_ssrRender$2o(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  let _temp0;
  _push(`<input${ssrRenderAttrs((_temp0 = mergeProps({
    checked: Array.isArray($options.proxyChecked) ? ssrLooseContain($options.proxyChecked, $props.value) : $options.proxyChecked,
    type: "checkbox",
    value: $props.value,
    class: "rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
  }, _attrs), mergeProps(_temp0, ssrGetDynamicModelProps(_temp0, $options.proxyChecked))))}>`);
}
const _sfc_setup$2p = _sfc_main$2p.setup;
_sfc_main$2p.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/Checkbox.vue");
  return _sfc_setup$2p ? _sfc_setup$2p(props, ctx) : void 0;
};
const JetCheckbox = /* @__PURE__ */ _export_sfc(_sfc_main$2p, [["ssrRender", _sfc_ssrRender$2o]]);
const _sfc_main$2o = {
  props: ["message"]
};
function _sfc_ssrRender$2n(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(mergeProps({
    style: $props.message ? null : { display: "none" }
  }, _attrs))}><p class="text-sm text-red-600">${ssrInterpolate($props.message)}</p></div>`);
}
const _sfc_setup$2o = _sfc_main$2o.setup;
_sfc_main$2o.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/InputError.vue");
  return _sfc_setup$2o ? _sfc_setup$2o(props, ctx) : void 0;
};
const JetInputError = /* @__PURE__ */ _export_sfc(_sfc_main$2o, [["ssrRender", _sfc_ssrRender$2n]]);
const _sfc_main$2n = {
  props: ["value"]
};
function _sfc_ssrRender$2m(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<label${ssrRenderAttrs(mergeProps({ class: "block font-medium text-sm text-gray-700" }, _attrs))}>`);
  if ($props.value) {
    _push(`<span>${ssrInterpolate($props.value)}</span>`);
  } else {
    _push(`<span>`);
    ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
    _push(`</span>`);
  }
  _push(`</label>`);
}
const _sfc_setup$2n = _sfc_main$2n.setup;
_sfc_main$2n.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/Label.vue");
  return _sfc_setup$2n ? _sfc_setup$2n(props, ctx) : void 0;
};
const JetLabel = /* @__PURE__ */ _export_sfc(_sfc_main$2n, [["ssrRender", _sfc_ssrRender$2m]]);
const _sfc_main$2m = {
  props: {
    type: {
      type: String,
      default: "button"
    }
  }
};
function _sfc_ssrRender$2l(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<button${ssrRenderAttrs(mergeProps({
    type: $props.type,
    class: "inline-flex items-center px-4 py-2 bg-white border border-gray-300 rounded-md font-semibold text-xs text-gray-700 uppercase tracking-widest shadow-sm hover:text-gray-500 focus:outline-none focus:border-blue-300 focus:ring focus:ring-blue-200 active:text-gray-800 active:bg-gray-50 disabled:opacity-25 transition"
  }, _attrs))}>`);
  ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</button>`);
}
const _sfc_setup$2m = _sfc_main$2m.setup;
_sfc_main$2m.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/SecondaryButton.vue");
  return _sfc_setup$2m ? _sfc_setup$2m(props, ctx) : void 0;
};
const JetSecondaryButton = /* @__PURE__ */ _export_sfc(_sfc_main$2m, [["ssrRender", _sfc_ssrRender$2l]]);
const _sfc_main$2l = {};
function _sfc_ssrRender$2k(_ctx, _push, _parent, _attrs) {
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "hidden sm:block" }, _attrs))}><div class="py-8"><div class="border-t border-gray-200"></div></div></div>`);
}
const _sfc_setup$2l = _sfc_main$2l.setup;
_sfc_main$2l.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/SectionBorder.vue");
  return _sfc_setup$2l ? _sfc_setup$2l(props, ctx) : void 0;
};
const JetSectionBorder = /* @__PURE__ */ _export_sfc(_sfc_main$2l, [["ssrRender", _sfc_ssrRender$2k]]);
const _sfc_main$2k = {
  components: {
    JetActionMessage,
    JetActionSection,
    JetButton,
    JetConfirmationModal,
    JetDangerButton,
    JetDialogModal,
    JetFormSection,
    JetInput,
    JetCheckbox,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    JetSectionBorder
  },
  props: ["tokens", "availablePermissions", "defaultPermissions"],
  data() {
    return {
      createApiTokenForm: this.$inertia.form({
        name: "",
        permissions: this.defaultPermissions
      }),
      updateApiTokenForm: this.$inertia.form({
        permissions: []
      }),
      deleteApiTokenForm: this.$inertia.form({}),
      displayingToken: false,
      managingPermissionsFor: null,
      apiTokenBeingDeleted: null
    };
  },
  methods: {
    createApiToken() {
      this.createApiTokenForm.post(route("api-tokens.store"), {
        preserveScroll: true,
        onSuccess: () => {
          this.displayingToken = true;
          this.createApiTokenForm.reset();
        }
      });
    },
    manageApiTokenPermissions(token) {
      this.updateApiTokenForm.permissions = token.abilities;
      this.managingPermissionsFor = token;
    },
    updateApiToken() {
      this.updateApiTokenForm.put(
        route("api-tokens.update", this.managingPermissionsFor),
        {
          preserveScroll: true,
          preserveState: true,
          onSuccess: () => this.managingPermissionsFor = null
        }
      );
    },
    confirmApiTokenDeletion(token) {
      this.apiTokenBeingDeleted = token;
    },
    deleteApiToken() {
      this.deleteApiTokenForm.delete(
        route("api-tokens.destroy", this.apiTokenBeingDeleted),
        {
          preserveScroll: true,
          preserveState: true,
          onSuccess: () => this.apiTokenBeingDeleted = null
        }
      );
    }
  }
};
function _sfc_ssrRender$2j(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = resolveComponent("jet-form-section");
  const _component_jet_label = resolveComponent("jet-label");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_jet_checkbox = resolveComponent("jet-checkbox");
  const _component_jet_action_message = resolveComponent("jet-action-message");
  const _component_jet_button = resolveComponent("jet-button");
  const _component_jet_section_border = resolveComponent("jet-section-border");
  const _component_jet_action_section = resolveComponent("jet-action-section");
  const _component_jet_dialog_modal = resolveComponent("jet-dialog-modal");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  const _component_jet_confirmation_modal = resolveComponent("jet-confirmation-modal");
  const _component_jet_danger_button = resolveComponent("jet-danger-button");
  _push(`<div${ssrRenderAttrs(_attrs)}>`);
  _push(ssrRenderComponent(_component_jet_form_section, { onSubmitted: $options.createApiToken }, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Create API Token `);
      } else {
        return [
          createTextVNode(" Create API Token ")
        ];
      }
    }),
    description: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` API tokens allow third-party services to authenticate with our application on your behalf. `);
      } else {
        return [
          createTextVNode(" API tokens allow third-party services to authenticate with our application on your behalf. ")
        ];
      }
    }),
    form: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Name"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "name",
          modelValue: $data.createApiTokenForm.name,
          "onUpdate:modelValue": ($event) => $data.createApiTokenForm.name = $event,
          type: "text",
          class: "mt-1 block w-full",
          autofocus: ""
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.createApiTokenForm.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
        if ($props.availablePermissions.length > 0) {
          _push2(`<div class="col-span-6"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_jet_label, {
            for: "permissions",
            value: "Permissions"
          }, null, _parent2, _scopeId));
          _push2(`<div class="mt-2 grid grid-cols-1 md:grid-cols-2 gap-4"${_scopeId}><!--[-->`);
          ssrRenderList($props.availablePermissions, (permission) => {
            _push2(`<div${_scopeId}><label class="flex items-center"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_jet_checkbox, {
              checked: $data.createApiTokenForm.permissions,
              "onUpdate:checked": ($event) => $data.createApiTokenForm.permissions = $event,
              value: permission
            }, null, _parent2, _scopeId));
            _push2(`<span class="ml-2 text-sm text-gray-600"${_scopeId}>${ssrInterpolate(permission)}</span></label></div>`);
          });
          _push2(`<!--]--></div></div>`);
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            createVNode(_component_jet_label, {
              for: "name",
              value: "Name"
            }),
            createVNode(_component_jet_input, {
              id: "name",
              modelValue: $data.createApiTokenForm.name,
              "onUpdate:modelValue": ($event) => $data.createApiTokenForm.name = $event,
              type: "text",
              class: "mt-1 block w-full",
              autofocus: ""
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            createVNode(_component_jet_input_error, {
              message: $data.createApiTokenForm.errors.name,
              class: "mt-2"
            }, null, 8, ["message"])
          ]),
          $props.availablePermissions.length > 0 ? (openBlock(), createBlock("div", {
            key: 0,
            class: "col-span-6"
          }, [
            createVNode(_component_jet_label, {
              for: "permissions",
              value: "Permissions"
            }),
            createVNode("div", { class: "mt-2 grid grid-cols-1 md:grid-cols-2 gap-4" }, [
              (openBlock(true), createBlock(Fragment, null, renderList($props.availablePermissions, (permission) => {
                return openBlock(), createBlock("div", { key: permission }, [
                  createVNode("label", { class: "flex items-center" }, [
                    createVNode(_component_jet_checkbox, {
                      checked: $data.createApiTokenForm.permissions,
                      "onUpdate:checked": ($event) => $data.createApiTokenForm.permissions = $event,
                      value: permission
                    }, null, 8, ["checked", "onUpdate:checked", "value"]),
                    createVNode("span", { class: "ml-2 text-sm text-gray-600" }, toDisplayString(permission), 1)
                  ])
                ]);
              }), 128))
            ])
          ])) : createCommentVNode("", true)
        ];
      }
    }),
    actions: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_action_message, {
          on: $data.createApiTokenForm.recentlySuccessful,
          class: "mr-3"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Created. `);
            } else {
              return [
                createTextVNode(" Created. ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_button, {
          class: { "opacity-25": $data.createApiTokenForm.processing },
          disabled: $data.createApiTokenForm.processing
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Create `);
            } else {
              return [
                createTextVNode(" Create ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_action_message, {
            on: $data.createApiTokenForm.recentlySuccessful,
            class: "mr-3"
          }, {
            default: withCtx(() => [
              createTextVNode(" Created. ")
            ]),
            _: 1
          }, 8, ["on"]),
          createVNode(_component_jet_button, {
            class: { "opacity-25": $data.createApiTokenForm.processing },
            disabled: $data.createApiTokenForm.processing
          }, {
            default: withCtx(() => [
              createTextVNode(" Create ")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
  if ($props.tokens.length > 0) {
    _push(`<div>`);
    _push(ssrRenderComponent(_component_jet_section_border, null, null, _parent));
    _push(`<div class="mt-10 sm:mt-0">`);
    _push(ssrRenderComponent(_component_jet_action_section, null, {
      title: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` Manage API Tokens `);
        } else {
          return [
            createTextVNode(" Manage API Tokens ")
          ];
        }
      }),
      description: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` You may delete any of your existing tokens if they are no longer needed. `);
        } else {
          return [
            createTextVNode(" You may delete any of your existing tokens if they are no longer needed. ")
          ];
        }
      }),
      content: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`<div class="space-y-6"${_scopeId}><!--[-->`);
          ssrRenderList($props.tokens, (token) => {
            _push2(`<div class="flex items-center justify-between"${_scopeId}><div${_scopeId}>${ssrInterpolate(token.name)}</div><div class="flex items-center"${_scopeId}>`);
            if (token.last_used_ago) {
              _push2(`<div class="text-sm text-gray-400"${_scopeId}> Last used ${ssrInterpolate(token.last_used_ago)}</div>`);
            } else {
              _push2(`<!---->`);
            }
            if ($props.availablePermissions.length > 0) {
              _push2(`<button class="cursor-pointer ml-6 text-sm text-gray-400 underline"${_scopeId}> Permissions </button>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`<button class="cursor-pointer ml-6 text-sm text-red-500"${_scopeId}> Delete </button></div></div>`);
          });
          _push2(`<!--]--></div>`);
        } else {
          return [
            createVNode("div", { class: "space-y-6" }, [
              (openBlock(true), createBlock(Fragment, null, renderList($props.tokens, (token) => {
                return openBlock(), createBlock("div", {
                  key: token.id,
                  class: "flex items-center justify-between"
                }, [
                  createVNode("div", null, toDisplayString(token.name), 1),
                  createVNode("div", { class: "flex items-center" }, [
                    token.last_used_ago ? (openBlock(), createBlock("div", {
                      key: 0,
                      class: "text-sm text-gray-400"
                    }, " Last used " + toDisplayString(token.last_used_ago), 1)) : createCommentVNode("", true),
                    $props.availablePermissions.length > 0 ? (openBlock(), createBlock("button", {
                      key: 1,
                      class: "cursor-pointer ml-6 text-sm text-gray-400 underline",
                      onClick: ($event) => $options.manageApiTokenPermissions(token)
                    }, " Permissions ", 8, ["onClick"])) : createCommentVNode("", true),
                    createVNode("button", {
                      class: "cursor-pointer ml-6 text-sm text-red-500",
                      onClick: ($event) => $options.confirmApiTokenDeletion(token)
                    }, " Delete ", 8, ["onClick"])
                  ])
                ]);
              }), 128))
            ])
          ];
        }
      }),
      _: 1
    }, _parent));
    _push(`</div></div>`);
  } else {
    _push(`<!---->`);
  }
  _push(ssrRenderComponent(_component_jet_dialog_modal, {
    show: $data.displayingToken,
    onClose: ($event) => $data.displayingToken = false
  }, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` API Token `);
      } else {
        return [
          createTextVNode(" API Token ")
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}> Please copy your new API token. For your security, it won&#39;t be shown again. </div>`);
        if (_ctx.$page.props.jetstream.flash.token) {
          _push2(`<div class="mt-4 bg-gray-100 px-4 py-2 rounded font-mono text-sm text-gray-500"${_scopeId}>${ssrInterpolate(_ctx.$page.props.jetstream.flash.token)}</div>`);
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          createVNode("div", null, " Please copy your new API token. For your security, it won't be shown again. "),
          _ctx.$page.props.jetstream.flash.token ? (openBlock(), createBlock("div", {
            key: 0,
            class: "mt-4 bg-gray-100 px-4 py-2 rounded font-mono text-sm text-gray-500"
          }, toDisplayString(_ctx.$page.props.jetstream.flash.token), 1)) : createCommentVNode("", true)
        ];
      }
    }),
    footer: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.displayingToken = false
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Close `);
            } else {
              return [
                createTextVNode(" Close ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_secondary_button, {
            onClick: ($event) => $data.displayingToken = false
          }, {
            default: withCtx(() => [
              createTextVNode(" Close ")
            ]),
            _: 1
          }, 8, ["onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(ssrRenderComponent(_component_jet_dialog_modal, {
    show: $data.managingPermissionsFor,
    onClose: ($event) => $data.managingPermissionsFor = null
  }, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` API Token Permissions `);
      } else {
        return [
          createTextVNode(" API Token Permissions ")
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="grid grid-cols-1 md:grid-cols-2 gap-4"${_scopeId}><!--[-->`);
        ssrRenderList($props.availablePermissions, (permission) => {
          _push2(`<div${_scopeId}><label class="flex items-center"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_jet_checkbox, {
            checked: $data.updateApiTokenForm.permissions,
            "onUpdate:checked": ($event) => $data.updateApiTokenForm.permissions = $event,
            value: permission
          }, null, _parent2, _scopeId));
          _push2(`<span class="ml-2 text-sm text-gray-600"${_scopeId}>${ssrInterpolate(permission)}</span></label></div>`);
        });
        _push2(`<!--]--></div>`);
      } else {
        return [
          createVNode("div", { class: "grid grid-cols-1 md:grid-cols-2 gap-4" }, [
            (openBlock(true), createBlock(Fragment, null, renderList($props.availablePermissions, (permission) => {
              return openBlock(), createBlock("div", { key: permission }, [
                createVNode("label", { class: "flex items-center" }, [
                  createVNode(_component_jet_checkbox, {
                    checked: $data.updateApiTokenForm.permissions,
                    "onUpdate:checked": ($event) => $data.updateApiTokenForm.permissions = $event,
                    value: permission
                  }, null, 8, ["checked", "onUpdate:checked", "value"]),
                  createVNode("span", { class: "ml-2 text-sm text-gray-600" }, toDisplayString(permission), 1)
                ])
              ]);
            }), 128))
          ])
        ];
      }
    }),
    footer: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.managingPermissionsFor = null
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_button, {
          class: ["ml-2", { "opacity-25": $data.updateApiTokenForm.processing }],
          disabled: $data.updateApiTokenForm.processing,
          onClick: $options.updateApiToken
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Save `);
            } else {
              return [
                createTextVNode(" Save ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_secondary_button, {
            onClick: ($event) => $data.managingPermissionsFor = null
          }, {
            default: withCtx(() => [
              createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          createVNode(_component_jet_button, {
            class: ["ml-2", { "opacity-25": $data.updateApiTokenForm.processing }],
            disabled: $data.updateApiTokenForm.processing,
            onClick: $options.updateApiToken
          }, {
            default: withCtx(() => [
              createTextVNode(" Save ")
            ]),
            _: 1
          }, 8, ["class", "disabled", "onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(ssrRenderComponent(_component_jet_confirmation_modal, {
    show: $data.apiTokenBeingDeleted,
    onClose: ($event) => $data.apiTokenBeingDeleted = null
  }, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete API Token `);
      } else {
        return [
          createTextVNode(" Delete API Token ")
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Are you sure you would like to delete this API token? `);
      } else {
        return [
          createTextVNode(" Are you sure you would like to delete this API token? ")
        ];
      }
    }),
    footer: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.apiTokenBeingDeleted = null
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_danger_button, {
          class: ["ml-2", { "opacity-25": $data.deleteApiTokenForm.processing }],
          disabled: $data.deleteApiTokenForm.processing,
          onClick: $options.deleteApiToken
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete `);
            } else {
              return [
                createTextVNode(" Delete ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_secondary_button, {
            onClick: ($event) => $data.apiTokenBeingDeleted = null
          }, {
            default: withCtx(() => [
              createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          createVNode(_component_jet_danger_button, {
            class: ["ml-2", { "opacity-25": $data.deleteApiTokenForm.processing }],
            disabled: $data.deleteApiTokenForm.processing,
            onClick: $options.deleteApiToken
          }, {
            default: withCtx(() => [
              createTextVNode(" Delete ")
            ]),
            _: 1
          }, 8, ["class", "disabled", "onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$2k = _sfc_main$2k.setup;
_sfc_main$2k.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/API/Partials/ApiTokenManager.vue");
  return _sfc_setup$2k ? _sfc_setup$2k(props, ctx) : void 0;
};
const ApiTokenManager = /* @__PURE__ */ _export_sfc(_sfc_main$2k, [["ssrRender", _sfc_ssrRender$2j]]);
const __vite_glob_0_1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ApiTokenManager
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2j = {};
function _sfc_ssrRender$2i(_ctx, _push, _parent, _attrs) {
  _push(`<div${ssrRenderAttrs(_attrs)}><svg width="180" height="61" viewBox="0 0 231 61" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M6.35242 30.7125C6.35242 40.4591 14.2535 48.3601 24 48.3601H24.7065C25.0925 48.3601 25.4118 48.6791 25.4118 49.0726V50.4712C25.4118 50.8708 25.0977 51.1837 24.7101 51.1837H24C12.6941 51.1837 3.52877 42.0184 3.52877 30.7125V29.8855L2.20216 31.2121C1.92597 31.4883 1.47792 31.4852 1.19966 31.207L0.210663 30.2181C-0.0718141 29.9355 -0.0681577 29.4892 0.209351 29.2117L3.94231 25.4787C4.49367 24.9274 5.38751 24.9274 5.93887 25.4787L9.67183 29.2117C9.94662 29.4865 9.94878 29.9398 9.67052 30.2181L8.68152 31.207C8.39904 31.4895 7.95437 31.4875 7.67902 31.2121L6.35242 29.8855V30.7125ZM41.6476 30.7125C41.6476 20.9659 33.7465 13.0649 24 13.0649H23.2973C22.9045 13.0649 22.5883 12.7459 22.5883 12.3524V10.9538C22.5883 10.5542 22.904 10.2413 23.2935 10.2413H24.0001C35.306 10.2413 44.4713 19.4066 44.4713 30.7125V31.5395L45.7979 30.2129C46.0741 29.9367 46.5222 29.9398 46.8004 30.2181L47.7894 31.207C48.0719 31.4895 48.0682 31.9358 47.7907 32.2133L44.0578 35.9463C43.5064 36.4976 42.6126 36.4976 42.0612 35.9463L38.3282 32.2133C38.0534 31.9385 38.0512 31.4852 38.3295 31.207L39.3185 30.2181C39.601 29.9355 40.0455 29.9375 40.321 30.2129L41.6476 31.5395V30.7125Z" fill="black"></path><path d="M16.2907 30.4709C16.2907 25.7923 20.0827 22 24.7616 22C29.4402 22 33.2325 25.7919 33.2325 30.4709C33.2325 35.1494 29.4405 38.9417 24.7616 38.9417C20.083 38.9417 16.2907 35.1498 16.2907 30.4709Z" fill="#019DBB"></path><path d="M75.9907 20.45C79.3574 20.45 82.0574 21.45 84.0907 23.45C86.1574 25.45 87.1907 28.4667 87.1907 32.5V48H77.6907V34.05C77.6907 30.35 76.2074 28.5 73.2407 28.5C71.6074 28.5 70.2907 29.0333 69.2907 30.1C68.324 31.1667 67.8407 32.7667 67.8407 34.9V48H58.3407V20.9H67.3907V23.85C68.4574 22.75 69.724 21.9167 71.1907 21.35C72.6574 20.75 74.2574 20.45 75.9907 20.45ZM123.705 20.45C127.038 20.45 129.688 21.45 131.655 23.45C133.655 25.45 134.655 28.4667 134.655 32.5V48H125.155V34.05C125.155 32.15 124.788 30.75 124.055 29.85C123.355 28.95 122.355 28.5 121.055 28.5C119.622 28.5 118.472 29 117.605 30C116.738 31 116.305 32.5167 116.305 34.55V48H106.805V34.05C106.805 30.35 105.438 28.5 102.705 28.5C101.238 28.5 100.072 29 99.2052 30C98.3385 31 97.9052 32.5167 97.9052 34.55V48H88.4052V20.9H97.4552V23.75C98.4552 22.65 99.6385 21.8333 101.005 21.3C102.405 20.7333 103.922 20.45 105.555 20.45C107.455 20.45 109.155 20.8 110.655 21.5C112.155 22.2 113.372 23.2667 114.305 24.7C115.372 23.3333 116.722 22.2833 118.355 21.55C119.988 20.8167 121.772 20.45 123.705 20.45ZM144.951 24.15C145.918 22.9167 147.168 22 148.701 21.4C150.268 20.7667 152.051 20.45 154.051 20.45V29C153.185 28.9 152.468 28.85 151.901 28.85C149.868 28.85 148.268 29.4 147.101 30.5C145.968 31.6 145.401 33.2833 145.401 35.55V48H135.901V20.9H144.951V24.15Z" fill="#019DBB"></path><path d="M175.869 48L168.619 37.15L161.469 48H150.169L162.919 30.3L150.719 13H161.869L168.869 23.1L175.769 13H186.469L174.269 29.9L187.269 48H175.869ZM187.946 20.9H197.446V48H187.946V20.9ZM192.696 17.9C190.963 17.9 189.563 17.4167 188.496 16.45C187.43 15.4833 186.896 14.2833 186.896 12.85C186.896 11.4167 187.43 10.2167 188.496 9.25C189.563 8.28333 190.963 7.8 192.696 7.8C194.43 7.8 195.83 8.26667 196.896 9.2C197.963 10.1 198.496 11.2667 198.496 12.7C198.496 14.2 197.963 15.45 196.896 16.45C195.83 17.4167 194.43 17.9 192.696 17.9ZM230.42 20.9L219.22 48H209.42L198.27 20.9H208.02L214.52 37.45L221.37 20.9H230.42Z" fill="black"></path></svg><a style="${ssrRenderStyle({ "font-size": "0.7em" })}" class="float-left font-bold border-red-900 text-red-900 absolute top-0 left-0 mx-1 my-1 text-xs border px-1 rounded-md">v1.0-rc</a></div>`);
}
const _sfc_setup$2j = _sfc_main$2j.setup;
_sfc_main$2j.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/ApplicationLogo.vue");
  return _sfc_setup$2j ? _sfc_setup$2j(props, ctx) : void 0;
};
const JetApplicationLogo = /* @__PURE__ */ _export_sfc(_sfc_main$2j, [["ssrRender", _sfc_ssrRender$2i]]);
const { meta: meta$1, k: k$1 } = useMagicKeys();
const open = ref(false);
const _sfc_main$2i = {
  components: {
    Combobox,
    ComboboxInput,
    ComboboxOptions,
    ComboboxOption,
    DialogPanel,
    Dialog,
    DialogOverlay,
    FolderIcon,
    MagnifyingGlassIcon,
    TransitionChild,
    TransitionRoot,
    Link
  },
  props: ["akey", "host"],
  setup() {
    watchEffect(() => {
      if (meta$1.value && k$1.value) {
        open.value = true;
      }
    });
    return {
      open,
      onSelect(item) {
        if (item.url && item.url !== void 0) {
          if (window) {
            window.location = item.url;
          }
        }
      }
    };
  },
  data: function() {
    return {
      projects: [],
      recent: [],
      quickActions: [
        {
          name: "Learn Spectral analysis...",
          icon: TagIcon,
          shortcut: "F",
          url: "https://docs.nmrxiv.org"
        },
        //   { name: "Add hashtag...", icon: HashtagIcon, shortcut: "H", url: "#" },
        //   { name: "Add label...", icon: TagIcon, shortcut: "L", url: "#" },
        {
          name: "For queries/feedback write to us at info.nmrxiv@uni-jena.de",
          icon: DocumentPlusIcon,
          shortcut: "N",
          url: "https://docs.nmrxiv.org/FAQs.html#how-to-reach-to-you"
        }
      ],
      selected: null,
      department: "all",
      query: null,
      filteredProjects: [],
      searchClient: instantMeiliSearch(this.host, this.akey)
    };
  },
  computed: {
    index() {
      return this.$page.props.SCOUT_PREFIX + "projects";
    }
  },
  methods: {
    submit() {
      if (window) {
        if (this.query && this.query != "") {
          window.location.href = "/search?query=" + this.query;
        } else {
          window.location.href = "/search";
        }
      }
    },
    searchFunction(helper) {
      const page = helper.getPage();
      helper.setQuery(this.query).setPage(page).search();
    }
  }
};
function _sfc_ssrRender$2h(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_ais_instant_search = resolveComponent("ais-instant-search");
  const _component_ais_autocomplete = resolveComponent("ais-autocomplete");
  const _component_TransitionRoot = resolveComponent("TransitionRoot");
  const _component_Dialog = resolveComponent("Dialog");
  const _component_TransitionChild = resolveComponent("TransitionChild");
  const _component_DialogPanel = resolveComponent("DialogPanel");
  const _component_Combobox = resolveComponent("Combobox");
  const _component_MagnifyingGlassIcon = resolveComponent("MagnifyingGlassIcon");
  const _component_ComboboxInput = resolveComponent("ComboboxInput");
  const _component_ComboboxOptions = resolveComponent("ComboboxOptions");
  const _component_ComboboxOption = resolveComponent("ComboboxOption");
  const _component_Link = resolveComponent("Link");
  const _component_FolderIcon = resolveComponent("FolderIcon");
  _push(`<!--[--><button type="button" class="hidden -ml-4 sm:flex items-center w-96 text-left space-x-3 px-4 h-12 bg-white ring-1 ring-slate-900/10 hover:ring-slate-300 focus:outline-none focus:ring-2 focus:ring-sky-500 shadow-sm rounded-lg text-slate-400"><svg width="24" height="24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="flex-none text-slate-300 dark:text-slate-400" aria-hidden="true"><path d="m19 19-3.5-3.5"></path><circle cx="11" cy="11" r="6"></circle></svg><span class="flex-auto">Search</span><kbd class="font-sans text-gray-300 font-semibold dark:text-slate-500"><abbr title="Command" class="no-underline text-slate-300 dark:text-slate-500">⌘</abbr> K</kbd></button>`);
  _push(ssrRenderComponent(_component_ais_instant_search, {
    "index-name": $options.index,
    "search-client": _ctx.searchClient
  }, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_ais_autocomplete, null, {
          default: withCtx(({ currentRefinement, indices, refine }, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_TransitionRoot, {
                show: $setup.open,
                as: "template",
                appear: "",
                onAfterLeave: ($event) => _ctx.query = ""
              }, {
                default: withCtx((_2, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(ssrRenderComponent(_component_Dialog, {
                      as: "div",
                      class: "relative z-10",
                      onClose: ($event) => $setup.open = false
                    }, {
                      default: withCtx((_3, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(ssrRenderComponent(_component_TransitionChild, {
                            as: "template",
                            enter: "ease-out duration-300",
                            "enter-from": "opacity-0",
                            "enter-to": "opacity-100",
                            leave: "ease-in duration-200",
                            "leave-from": "opacity-100",
                            "leave-to": "opacity-0"
                          }, {
                            default: withCtx((_4, _push6, _parent6, _scopeId5) => {
                              if (_push6) {
                                _push6(`<div class="fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity"${_scopeId5}></div>`);
                              } else {
                                return [
                                  createVNode("div", { class: "fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity" })
                                ];
                              }
                            }),
                            _: 2
                          }, _parent5, _scopeId4));
                          _push5(`<div class="fixed inset-0 z-10 overflow-y-auto p-4 sm:p-6 md:p-20"${_scopeId4}>`);
                          _push5(ssrRenderComponent(_component_TransitionChild, {
                            as: "template",
                            enter: "ease-out duration-300",
                            "enter-from": "opacity-0 scale-95",
                            "enter-to": "opacity-100 scale-100",
                            leave: "ease-in duration-200",
                            "leave-from": "opacity-100 scale-100",
                            "leave-to": "opacity-0 scale-95"
                          }, {
                            default: withCtx((_4, _push6, _parent6, _scopeId5) => {
                              if (_push6) {
                                _push6(ssrRenderComponent(_component_DialogPanel, { class: "mx-auto max-w-2xl transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all" }, {
                                  default: withCtx((_5, _push7, _parent7, _scopeId6) => {
                                    if (_push7) {
                                      _push7(ssrRenderComponent(_component_Combobox, {
                                        as: "div",
                                        class: "mx-auto max-w-2xl transform divide-y divide-gray-500 divide-opacity-10 overflow-hidden rounded-xl bg-white bg-opacity-80 shadow-2xl ring-1 ring-black ring-opacity-5 backdrop-blur backdrop-filter transition-all",
                                        "onUpdate:modelValue": $setup.onSelect
                                      }, {
                                        default: withCtx((_6, _push8, _parent8, _scopeId7) => {
                                          if (_push8) {
                                            _push8(`<div class="relative"${_scopeId7}>`);
                                            _push8(ssrRenderComponent(_component_MagnifyingGlassIcon, {
                                              class: "pointer-events-none absolute top-3.5 left-4 h-5 w-5 text-gray-900 text-opacity-40",
                                              "aria-hidden": "true"
                                            }, null, _parent8, _scopeId7));
                                            _push8(ssrRenderComponent(_component_ComboboxInput, {
                                              id: "searchAC",
                                              class: "h-12 w-full border-0 bg-transparent pl-11 pr-4 text-gray-900 placeholder-gray-500 focus:ring-0 sm:text-sm",
                                              placeholder: "Search",
                                              onInput: ($event) => refine(
                                                $event.currentTarget.value
                                              )
                                            }, null, _parent8, _scopeId7));
                                            _push8(`</div>`);
                                            _push8(ssrRenderComponent(_component_ComboboxOptions, {
                                              static: "",
                                              class: "max-h-80 scroll-py-2 divide-y divide-gray-500 divide-opacity-10 overflow-y-auto"
                                            }, {
                                              default: withCtx((_7, _push9, _parent9, _scopeId8) => {
                                                if (_push9) {
                                                  _push9(`<!--[-->`);
                                                  ssrRenderList(indices, (index) => {
                                                    _push9(`<div aria-labelledby="searchAC" class="dropdown-menu p-0 w-100"${_scopeId8}>`);
                                                    if (currentRefinement === "") {
                                                      _push9(`<li class="p-2"${_scopeId8}><div class="flex flex-wrap items-center bg-gray-50 py-2.5 px-4 text-xs text-gray-700"${_scopeId8}> Type to search projects or datasets or click below for help. </div></li>`);
                                                    } else {
                                                      _push9(`<!---->`);
                                                    }
                                                    if (currentRefinement != "") {
                                                      _push9(`<li class="p-2"${_scopeId8}>`);
                                                      if (currentRefinement === "" && _ctx.recent.length > 0) {
                                                        _push9(`<h2 class="mt-4 mb-2 px-3 text-xs font-semibold text-gray-900"${_scopeId8}> Recent searches </h2>`);
                                                      } else {
                                                        _push9(`<!---->`);
                                                      }
                                                      if (currentRefinement) {
                                                        _push9(`<div class="border rounded-md"${_scopeId8}>`);
                                                        if (index.hits.length > 0) {
                                                          _push9(`<span${_scopeId8}><ul class="text-sm text-gray-700"${_scopeId8}><!--[-->`);
                                                          ssrRenderList(index.hits, (hit) => {
                                                            _push9(ssrRenderComponent(_component_ComboboxOption, {
                                                              key: hit.objectID,
                                                              value: hit,
                                                              as: "template"
                                                            }, {
                                                              default: withCtx(({
                                                                active
                                                              }, _push10, _parent10, _scopeId9) => {
                                                                if (_push10) {
                                                                  _push10(`<li class="${ssrRenderClass([
                                                                    "flex cursor-default select-none items-center rounded-md px-3 py-2",
                                                                    active && "bg-gray-900 bg-opacity-5 text-gray-900"
                                                                  ])}"${_scopeId9}>`);
                                                                  _push10(ssrRenderComponent(_component_Link, {
                                                                    class: "w-full",
                                                                    href: hit.public_url,
                                                                    onClick: ($event) => $setup.open = false
                                                                  }, {
                                                                    default: withCtx((_8, _push11, _parent11, _scopeId10) => {
                                                                      if (_push11) {
                                                                        _push11(ssrRenderComponent(_component_FolderIcon, {
                                                                          class: [
                                                                            "h-6 w-6 inline flex-none text-gray-900 text-opacity-40",
                                                                            active && "text-opacity-100"
                                                                          ],
                                                                          "aria-hidden": "true"
                                                                        }, null, _parent11, _scopeId10));
                                                                        _push11(`<span class="ml-3 flex-auto truncate"${_scopeId10}>${ssrInterpolate(hit.name)}</span>`);
                                                                        if (active) {
                                                                          _push11(`<span class="ml-3 flex-none text-gray-500"${_scopeId10}>Jump to...</span>`);
                                                                        } else {
                                                                          _push11(`<!---->`);
                                                                        }
                                                                      } else {
                                                                        return [
                                                                          createVNode(_component_FolderIcon, {
                                                                            class: [
                                                                              "h-6 w-6 inline flex-none text-gray-900 text-opacity-40",
                                                                              active && "text-opacity-100"
                                                                            ],
                                                                            "aria-hidden": "true"
                                                                          }, null, 8, ["class"]),
                                                                          createVNode("span", { class: "ml-3 flex-auto truncate" }, toDisplayString(hit.name), 1),
                                                                          active ? (openBlock(), createBlock("span", {
                                                                            key: 0,
                                                                            class: "ml-3 flex-none text-gray-500"
                                                                          }, "Jump to...")) : createCommentVNode("", true)
                                                                        ];
                                                                      }
                                                                    }),
                                                                    _: 2
                                                                  }, _parent10, _scopeId9));
                                                                  _push10(`</li>`);
                                                                } else {
                                                                  return [
                                                                    createVNode("li", {
                                                                      class: [
                                                                        "flex cursor-default select-none items-center rounded-md px-3 py-2",
                                                                        active && "bg-gray-900 bg-opacity-5 text-gray-900"
                                                                      ]
                                                                    }, [
                                                                      createVNode(_component_Link, {
                                                                        class: "w-full",
                                                                        href: hit.public_url,
                                                                        onClick: ($event) => $setup.open = false
                                                                      }, {
                                                                        default: withCtx(() => [
                                                                          createVNode(_component_FolderIcon, {
                                                                            class: [
                                                                              "h-6 w-6 inline flex-none text-gray-900 text-opacity-40",
                                                                              active && "text-opacity-100"
                                                                            ],
                                                                            "aria-hidden": "true"
                                                                          }, null, 8, ["class"]),
                                                                          createVNode("span", { class: "ml-3 flex-auto truncate" }, toDisplayString(hit.name), 1),
                                                                          active ? (openBlock(), createBlock("span", {
                                                                            key: 0,
                                                                            class: "ml-3 flex-none text-gray-500"
                                                                          }, "Jump to...")) : createCommentVNode("", true)
                                                                        ]),
                                                                        _: 2
                                                                      }, 1032, ["href", "onClick"])
                                                                    ], 2)
                                                                  ];
                                                                }
                                                              }),
                                                              _: 2
                                                            }, _parent9, _scopeId8));
                                                          });
                                                          _push9(`<!--]--></ul></span>`);
                                                        } else {
                                                          _push9(`<span${_scopeId8}>`);
                                                          if (currentRefinement !== "" && index.hits.length === 0) {
                                                            _push9(`<div class="py-14 px-6 text-center sm:px-14"${_scopeId8}><p class="mt-4 text-sm text-gray-900"${_scopeId8}> We couldn&#39;t find any results with that term. Please try again. </p></div>`);
                                                          } else {
                                                            _push9(`<!---->`);
                                                          }
                                                          _push9(`</span>`);
                                                        }
                                                        _push9(`</div>`);
                                                      } else {
                                                        _push9(`<!---->`);
                                                      }
                                                      _push9(`</li>`);
                                                    } else {
                                                      _push9(`<!---->`);
                                                    }
                                                    _push9(`</div>`);
                                                  });
                                                  _push9(`<!--]-->`);
                                                  if (currentRefinement === "") {
                                                    _push9(`<li class="p-2"${_scopeId8}><h2 class="sr-only"${_scopeId8}> Quick actions </h2><ul class="text-sm text-gray-700"${_scopeId8}><!--[-->`);
                                                    ssrRenderList(_ctx.quickActions, (action) => {
                                                      _push9(ssrRenderComponent(_component_ComboboxOption, {
                                                        key: action.shortcut,
                                                        value: action,
                                                        as: "template"
                                                      }, {
                                                        default: withCtx(({ active }, _push10, _parent10, _scopeId9) => {
                                                          if (_push10) {
                                                            _push10(`<li class="${ssrRenderClass([
                                                              "flex cursor-pointer select-none items-center rounded-md px-3 py-2",
                                                              active && "bg-gray-900 bg-opacity-5 text-gray-900"
                                                            ])}"${_scopeId9}>`);
                                                            ssrRenderVNode(_push10, createVNode(resolveDynamicComponent(
                                                              action.icon
                                                            ), {
                                                              class: [
                                                                "h-6 w-6 flex-none text-gray-900 text-opacity-40",
                                                                active && "text-opacity-100"
                                                              ],
                                                              "aria-hidden": "true"
                                                            }, null), _parent10, _scopeId9);
                                                            _push10(`<span class="ml-3 flex-auto truncate"${_scopeId9}>${ssrInterpolate(action.name)}</span></li>`);
                                                          } else {
                                                            return [
                                                              createVNode("li", {
                                                                class: [
                                                                  "flex cursor-pointer select-none items-center rounded-md px-3 py-2",
                                                                  active && "bg-gray-900 bg-opacity-5 text-gray-900"
                                                                ]
                                                              }, [
                                                                (openBlock(), createBlock(resolveDynamicComponent(
                                                                  action.icon
                                                                ), {
                                                                  class: [
                                                                    "h-6 w-6 flex-none text-gray-900 text-opacity-40",
                                                                    active && "text-opacity-100"
                                                                  ],
                                                                  "aria-hidden": "true"
                                                                }, null, 8, ["class"])),
                                                                createVNode("span", { class: "ml-3 flex-auto truncate" }, toDisplayString(action.name), 1)
                                                              ], 2)
                                                            ];
                                                          }
                                                        }),
                                                        _: 2
                                                      }, _parent9, _scopeId8));
                                                    });
                                                    _push9(`<!--]--></ul></li>`);
                                                  } else {
                                                    _push9(`<!---->`);
                                                  }
                                                } else {
                                                  return [
                                                    (openBlock(true), createBlock(Fragment, null, renderList(indices, (index) => {
                                                      return openBlock(), createBlock("div", {
                                                        key: index.indexId,
                                                        "aria-labelledby": "searchAC",
                                                        class: "dropdown-menu p-0 w-100"
                                                      }, [
                                                        currentRefinement === "" ? (openBlock(), createBlock("li", {
                                                          key: 0,
                                                          class: "p-2"
                                                        }, [
                                                          createVNode("div", { class: "flex flex-wrap items-center bg-gray-50 py-2.5 px-4 text-xs text-gray-700" }, " Type to search projects or datasets or click below for help. ")
                                                        ])) : createCommentVNode("", true),
                                                        currentRefinement != "" ? (openBlock(), createBlock("li", {
                                                          key: 1,
                                                          class: "p-2"
                                                        }, [
                                                          currentRefinement === "" && _ctx.recent.length > 0 ? (openBlock(), createBlock("h2", {
                                                            key: 0,
                                                            class: "mt-4 mb-2 px-3 text-xs font-semibold text-gray-900"
                                                          }, " Recent searches ")) : createCommentVNode("", true),
                                                          currentRefinement ? (openBlock(), createBlock("div", {
                                                            key: 1,
                                                            class: "border rounded-md"
                                                          }, [
                                                            index.hits.length > 0 ? (openBlock(), createBlock("span", { key: 0 }, [
                                                              createVNode("ul", { class: "text-sm text-gray-700" }, [
                                                                (openBlock(true), createBlock(Fragment, null, renderList(index.hits, (hit) => {
                                                                  return openBlock(), createBlock(_component_ComboboxOption, {
                                                                    key: hit.objectID,
                                                                    value: hit,
                                                                    as: "template"
                                                                  }, {
                                                                    default: withCtx(({
                                                                      active
                                                                    }) => [
                                                                      createVNode("li", {
                                                                        class: [
                                                                          "flex cursor-default select-none items-center rounded-md px-3 py-2",
                                                                          active && "bg-gray-900 bg-opacity-5 text-gray-900"
                                                                        ]
                                                                      }, [
                                                                        createVNode(_component_Link, {
                                                                          class: "w-full",
                                                                          href: hit.public_url,
                                                                          onClick: ($event) => $setup.open = false
                                                                        }, {
                                                                          default: withCtx(() => [
                                                                            createVNode(_component_FolderIcon, {
                                                                              class: [
                                                                                "h-6 w-6 inline flex-none text-gray-900 text-opacity-40",
                                                                                active && "text-opacity-100"
                                                                              ],
                                                                              "aria-hidden": "true"
                                                                            }, null, 8, ["class"]),
                                                                            createVNode("span", { class: "ml-3 flex-auto truncate" }, toDisplayString(hit.name), 1),
                                                                            active ? (openBlock(), createBlock("span", {
                                                                              key: 0,
                                                                              class: "ml-3 flex-none text-gray-500"
                                                                            }, "Jump to...")) : createCommentVNode("", true)
                                                                          ]),
                                                                          _: 2
                                                                        }, 1032, ["href", "onClick"])
                                                                      ], 2)
                                                                    ]),
                                                                    _: 2
                                                                  }, 1032, ["value"]);
                                                                }), 128))
                                                              ])
                                                            ])) : (openBlock(), createBlock("span", { key: 1 }, [
                                                              currentRefinement !== "" && index.hits.length === 0 ? (openBlock(), createBlock("div", {
                                                                key: 0,
                                                                class: "py-14 px-6 text-center sm:px-14"
                                                              }, [
                                                                createVNode("p", { class: "mt-4 text-sm text-gray-900" }, " We couldn't find any results with that term. Please try again. ")
                                                              ])) : createCommentVNode("", true)
                                                            ]))
                                                          ])) : createCommentVNode("", true)
                                                        ])) : createCommentVNode("", true)
                                                      ]);
                                                    }), 128)),
                                                    currentRefinement === "" ? (openBlock(), createBlock("li", {
                                                      key: 0,
                                                      class: "p-2"
                                                    }, [
                                                      createVNode("h2", { class: "sr-only" }, " Quick actions "),
                                                      createVNode("ul", { class: "text-sm text-gray-700" }, [
                                                        (openBlock(true), createBlock(Fragment, null, renderList(_ctx.quickActions, (action) => {
                                                          return openBlock(), createBlock(_component_ComboboxOption, {
                                                            key: action.shortcut,
                                                            value: action,
                                                            as: "template"
                                                          }, {
                                                            default: withCtx(({ active }) => [
                                                              createVNode("li", {
                                                                class: [
                                                                  "flex cursor-pointer select-none items-center rounded-md px-3 py-2",
                                                                  active && "bg-gray-900 bg-opacity-5 text-gray-900"
                                                                ]
                                                              }, [
                                                                (openBlock(), createBlock(resolveDynamicComponent(
                                                                  action.icon
                                                                ), {
                                                                  class: [
                                                                    "h-6 w-6 flex-none text-gray-900 text-opacity-40",
                                                                    active && "text-opacity-100"
                                                                  ],
                                                                  "aria-hidden": "true"
                                                                }, null, 8, ["class"])),
                                                                createVNode("span", { class: "ml-3 flex-auto truncate" }, toDisplayString(action.name), 1)
                                                              ], 2)
                                                            ]),
                                                            _: 2
                                                          }, 1032, ["value"]);
                                                        }), 128))
                                                      ])
                                                    ])) : createCommentVNode("", true)
                                                  ];
                                                }
                                              }),
                                              _: 2
                                            }, _parent8, _scopeId7));
                                          } else {
                                            return [
                                              createVNode("div", { class: "relative" }, [
                                                createVNode(_component_MagnifyingGlassIcon, {
                                                  class: "pointer-events-none absolute top-3.5 left-4 h-5 w-5 text-gray-900 text-opacity-40",
                                                  "aria-hidden": "true"
                                                }),
                                                createVNode(_component_ComboboxInput, {
                                                  id: "searchAC",
                                                  class: "h-12 w-full border-0 bg-transparent pl-11 pr-4 text-gray-900 placeholder-gray-500 focus:ring-0 sm:text-sm",
                                                  placeholder: "Search",
                                                  onInput: ($event) => refine(
                                                    $event.currentTarget.value
                                                  )
                                                }, null, 8, ["onInput"])
                                              ]),
                                              createVNode(_component_ComboboxOptions, {
                                                static: "",
                                                class: "max-h-80 scroll-py-2 divide-y divide-gray-500 divide-opacity-10 overflow-y-auto"
                                              }, {
                                                default: withCtx(() => [
                                                  (openBlock(true), createBlock(Fragment, null, renderList(indices, (index) => {
                                                    return openBlock(), createBlock("div", {
                                                      key: index.indexId,
                                                      "aria-labelledby": "searchAC",
                                                      class: "dropdown-menu p-0 w-100"
                                                    }, [
                                                      currentRefinement === "" ? (openBlock(), createBlock("li", {
                                                        key: 0,
                                                        class: "p-2"
                                                      }, [
                                                        createVNode("div", { class: "flex flex-wrap items-center bg-gray-50 py-2.5 px-4 text-xs text-gray-700" }, " Type to search projects or datasets or click below for help. ")
                                                      ])) : createCommentVNode("", true),
                                                      currentRefinement != "" ? (openBlock(), createBlock("li", {
                                                        key: 1,
                                                        class: "p-2"
                                                      }, [
                                                        currentRefinement === "" && _ctx.recent.length > 0 ? (openBlock(), createBlock("h2", {
                                                          key: 0,
                                                          class: "mt-4 mb-2 px-3 text-xs font-semibold text-gray-900"
                                                        }, " Recent searches ")) : createCommentVNode("", true),
                                                        currentRefinement ? (openBlock(), createBlock("div", {
                                                          key: 1,
                                                          class: "border rounded-md"
                                                        }, [
                                                          index.hits.length > 0 ? (openBlock(), createBlock("span", { key: 0 }, [
                                                            createVNode("ul", { class: "text-sm text-gray-700" }, [
                                                              (openBlock(true), createBlock(Fragment, null, renderList(index.hits, (hit) => {
                                                                return openBlock(), createBlock(_component_ComboboxOption, {
                                                                  key: hit.objectID,
                                                                  value: hit,
                                                                  as: "template"
                                                                }, {
                                                                  default: withCtx(({
                                                                    active
                                                                  }) => [
                                                                    createVNode("li", {
                                                                      class: [
                                                                        "flex cursor-default select-none items-center rounded-md px-3 py-2",
                                                                        active && "bg-gray-900 bg-opacity-5 text-gray-900"
                                                                      ]
                                                                    }, [
                                                                      createVNode(_component_Link, {
                                                                        class: "w-full",
                                                                        href: hit.public_url,
                                                                        onClick: ($event) => $setup.open = false
                                                                      }, {
                                                                        default: withCtx(() => [
                                                                          createVNode(_component_FolderIcon, {
                                                                            class: [
                                                                              "h-6 w-6 inline flex-none text-gray-900 text-opacity-40",
                                                                              active && "text-opacity-100"
                                                                            ],
                                                                            "aria-hidden": "true"
                                                                          }, null, 8, ["class"]),
                                                                          createVNode("span", { class: "ml-3 flex-auto truncate" }, toDisplayString(hit.name), 1),
                                                                          active ? (openBlock(), createBlock("span", {
                                                                            key: 0,
                                                                            class: "ml-3 flex-none text-gray-500"
                                                                          }, "Jump to...")) : createCommentVNode("", true)
                                                                        ]),
                                                                        _: 2
                                                                      }, 1032, ["href", "onClick"])
                                                                    ], 2)
                                                                  ]),
                                                                  _: 2
                                                                }, 1032, ["value"]);
                                                              }), 128))
                                                            ])
                                                          ])) : (openBlock(), createBlock("span", { key: 1 }, [
                                                            currentRefinement !== "" && index.hits.length === 0 ? (openBlock(), createBlock("div", {
                                                              key: 0,
                                                              class: "py-14 px-6 text-center sm:px-14"
                                                            }, [
                                                              createVNode("p", { class: "mt-4 text-sm text-gray-900" }, " We couldn't find any results with that term. Please try again. ")
                                                            ])) : createCommentVNode("", true)
                                                          ]))
                                                        ])) : createCommentVNode("", true)
                                                      ])) : createCommentVNode("", true)
                                                    ]);
                                                  }), 128)),
                                                  currentRefinement === "" ? (openBlock(), createBlock("li", {
                                                    key: 0,
                                                    class: "p-2"
                                                  }, [
                                                    createVNode("h2", { class: "sr-only" }, " Quick actions "),
                                                    createVNode("ul", { class: "text-sm text-gray-700" }, [
                                                      (openBlock(true), createBlock(Fragment, null, renderList(_ctx.quickActions, (action) => {
                                                        return openBlock(), createBlock(_component_ComboboxOption, {
                                                          key: action.shortcut,
                                                          value: action,
                                                          as: "template"
                                                        }, {
                                                          default: withCtx(({ active }) => [
                                                            createVNode("li", {
                                                              class: [
                                                                "flex cursor-pointer select-none items-center rounded-md px-3 py-2",
                                                                active && "bg-gray-900 bg-opacity-5 text-gray-900"
                                                              ]
                                                            }, [
                                                              (openBlock(), createBlock(resolveDynamicComponent(
                                                                action.icon
                                                              ), {
                                                                class: [
                                                                  "h-6 w-6 flex-none text-gray-900 text-opacity-40",
                                                                  active && "text-opacity-100"
                                                                ],
                                                                "aria-hidden": "true"
                                                              }, null, 8, ["class"])),
                                                              createVNode("span", { class: "ml-3 flex-auto truncate" }, toDisplayString(action.name), 1)
                                                            ], 2)
                                                          ]),
                                                          _: 2
                                                        }, 1032, ["value"]);
                                                      }), 128))
                                                    ])
                                                  ])) : createCommentVNode("", true)
                                                ]),
                                                _: 2
                                              }, 1024)
                                            ];
                                          }
                                        }),
                                        _: 2
                                      }, _parent7, _scopeId6));
                                    } else {
                                      return [
                                        createVNode(_component_Combobox, {
                                          as: "div",
                                          class: "mx-auto max-w-2xl transform divide-y divide-gray-500 divide-opacity-10 overflow-hidden rounded-xl bg-white bg-opacity-80 shadow-2xl ring-1 ring-black ring-opacity-5 backdrop-blur backdrop-filter transition-all",
                                          "onUpdate:modelValue": $setup.onSelect
                                        }, {
                                          default: withCtx(() => [
                                            createVNode("div", { class: "relative" }, [
                                              createVNode(_component_MagnifyingGlassIcon, {
                                                class: "pointer-events-none absolute top-3.5 left-4 h-5 w-5 text-gray-900 text-opacity-40",
                                                "aria-hidden": "true"
                                              }),
                                              createVNode(_component_ComboboxInput, {
                                                id: "searchAC",
                                                class: "h-12 w-full border-0 bg-transparent pl-11 pr-4 text-gray-900 placeholder-gray-500 focus:ring-0 sm:text-sm",
                                                placeholder: "Search",
                                                onInput: ($event) => refine(
                                                  $event.currentTarget.value
                                                )
                                              }, null, 8, ["onInput"])
                                            ]),
                                            createVNode(_component_ComboboxOptions, {
                                              static: "",
                                              class: "max-h-80 scroll-py-2 divide-y divide-gray-500 divide-opacity-10 overflow-y-auto"
                                            }, {
                                              default: withCtx(() => [
                                                (openBlock(true), createBlock(Fragment, null, renderList(indices, (index) => {
                                                  return openBlock(), createBlock("div", {
                                                    key: index.indexId,
                                                    "aria-labelledby": "searchAC",
                                                    class: "dropdown-menu p-0 w-100"
                                                  }, [
                                                    currentRefinement === "" ? (openBlock(), createBlock("li", {
                                                      key: 0,
                                                      class: "p-2"
                                                    }, [
                                                      createVNode("div", { class: "flex flex-wrap items-center bg-gray-50 py-2.5 px-4 text-xs text-gray-700" }, " Type to search projects or datasets or click below for help. ")
                                                    ])) : createCommentVNode("", true),
                                                    currentRefinement != "" ? (openBlock(), createBlock("li", {
                                                      key: 1,
                                                      class: "p-2"
                                                    }, [
                                                      currentRefinement === "" && _ctx.recent.length > 0 ? (openBlock(), createBlock("h2", {
                                                        key: 0,
                                                        class: "mt-4 mb-2 px-3 text-xs font-semibold text-gray-900"
                                                      }, " Recent searches ")) : createCommentVNode("", true),
                                                      currentRefinement ? (openBlock(), createBlock("div", {
                                                        key: 1,
                                                        class: "border rounded-md"
                                                      }, [
                                                        index.hits.length > 0 ? (openBlock(), createBlock("span", { key: 0 }, [
                                                          createVNode("ul", { class: "text-sm text-gray-700" }, [
                                                            (openBlock(true), createBlock(Fragment, null, renderList(index.hits, (hit) => {
                                                              return openBlock(), createBlock(_component_ComboboxOption, {
                                                                key: hit.objectID,
                                                                value: hit,
                                                                as: "template"
                                                              }, {
                                                                default: withCtx(({
                                                                  active
                                                                }) => [
                                                                  createVNode("li", {
                                                                    class: [
                                                                      "flex cursor-default select-none items-center rounded-md px-3 py-2",
                                                                      active && "bg-gray-900 bg-opacity-5 text-gray-900"
                                                                    ]
                                                                  }, [
                                                                    createVNode(_component_Link, {
                                                                      class: "w-full",
                                                                      href: hit.public_url,
                                                                      onClick: ($event) => $setup.open = false
                                                                    }, {
                                                                      default: withCtx(() => [
                                                                        createVNode(_component_FolderIcon, {
                                                                          class: [
                                                                            "h-6 w-6 inline flex-none text-gray-900 text-opacity-40",
                                                                            active && "text-opacity-100"
                                                                          ],
                                                                          "aria-hidden": "true"
                                                                        }, null, 8, ["class"]),
                                                                        createVNode("span", { class: "ml-3 flex-auto truncate" }, toDisplayString(hit.name), 1),
                                                                        active ? (openBlock(), createBlock("span", {
                                                                          key: 0,
                                                                          class: "ml-3 flex-none text-gray-500"
                                                                        }, "Jump to...")) : createCommentVNode("", true)
                                                                      ]),
                                                                      _: 2
                                                                    }, 1032, ["href", "onClick"])
                                                                  ], 2)
                                                                ]),
                                                                _: 2
                                                              }, 1032, ["value"]);
                                                            }), 128))
                                                          ])
                                                        ])) : (openBlock(), createBlock("span", { key: 1 }, [
                                                          currentRefinement !== "" && index.hits.length === 0 ? (openBlock(), createBlock("div", {
                                                            key: 0,
                                                            class: "py-14 px-6 text-center sm:px-14"
                                                          }, [
                                                            createVNode("p", { class: "mt-4 text-sm text-gray-900" }, " We couldn't find any results with that term. Please try again. ")
                                                          ])) : createCommentVNode("", true)
                                                        ]))
                                                      ])) : createCommentVNode("", true)
                                                    ])) : createCommentVNode("", true)
                                                  ]);
                                                }), 128)),
                                                currentRefinement === "" ? (openBlock(), createBlock("li", {
                                                  key: 0,
                                                  class: "p-2"
                                                }, [
                                                  createVNode("h2", { class: "sr-only" }, " Quick actions "),
                                                  createVNode("ul", { class: "text-sm text-gray-700" }, [
                                                    (openBlock(true), createBlock(Fragment, null, renderList(_ctx.quickActions, (action) => {
                                                      return openBlock(), createBlock(_component_ComboboxOption, {
                                                        key: action.shortcut,
                                                        value: action,
                                                        as: "template"
                                                      }, {
                                                        default: withCtx(({ active }) => [
                                                          createVNode("li", {
                                                            class: [
                                                              "flex cursor-pointer select-none items-center rounded-md px-3 py-2",
                                                              active && "bg-gray-900 bg-opacity-5 text-gray-900"
                                                            ]
                                                          }, [
                                                            (openBlock(), createBlock(resolveDynamicComponent(
                                                              action.icon
                                                            ), {
                                                              class: [
                                                                "h-6 w-6 flex-none text-gray-900 text-opacity-40",
                                                                active && "text-opacity-100"
                                                              ],
                                                              "aria-hidden": "true"
                                                            }, null, 8, ["class"])),
                                                            createVNode("span", { class: "ml-3 flex-auto truncate" }, toDisplayString(action.name), 1)
                                                          ], 2)
                                                        ]),
                                                        _: 2
                                                      }, 1032, ["value"]);
                                                    }), 128))
                                                  ])
                                                ])) : createCommentVNode("", true)
                                              ]),
                                              _: 2
                                            }, 1024)
                                          ]),
                                          _: 2
                                        }, 1032, ["onUpdate:modelValue"])
                                      ];
                                    }
                                  }),
                                  _: 2
                                }, _parent6, _scopeId5));
                              } else {
                                return [
                                  createVNode(_component_DialogPanel, { class: "mx-auto max-w-2xl transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all" }, {
                                    default: withCtx(() => [
                                      createVNode(_component_Combobox, {
                                        as: "div",
                                        class: "mx-auto max-w-2xl transform divide-y divide-gray-500 divide-opacity-10 overflow-hidden rounded-xl bg-white bg-opacity-80 shadow-2xl ring-1 ring-black ring-opacity-5 backdrop-blur backdrop-filter transition-all",
                                        "onUpdate:modelValue": $setup.onSelect
                                      }, {
                                        default: withCtx(() => [
                                          createVNode("div", { class: "relative" }, [
                                            createVNode(_component_MagnifyingGlassIcon, {
                                              class: "pointer-events-none absolute top-3.5 left-4 h-5 w-5 text-gray-900 text-opacity-40",
                                              "aria-hidden": "true"
                                            }),
                                            createVNode(_component_ComboboxInput, {
                                              id: "searchAC",
                                              class: "h-12 w-full border-0 bg-transparent pl-11 pr-4 text-gray-900 placeholder-gray-500 focus:ring-0 sm:text-sm",
                                              placeholder: "Search",
                                              onInput: ($event) => refine(
                                                $event.currentTarget.value
                                              )
                                            }, null, 8, ["onInput"])
                                          ]),
                                          createVNode(_component_ComboboxOptions, {
                                            static: "",
                                            class: "max-h-80 scroll-py-2 divide-y divide-gray-500 divide-opacity-10 overflow-y-auto"
                                          }, {
                                            default: withCtx(() => [
                                              (openBlock(true), createBlock(Fragment, null, renderList(indices, (index) => {
                                                return openBlock(), createBlock("div", {
                                                  key: index.indexId,
                                                  "aria-labelledby": "searchAC",
                                                  class: "dropdown-menu p-0 w-100"
                                                }, [
                                                  currentRefinement === "" ? (openBlock(), createBlock("li", {
                                                    key: 0,
                                                    class: "p-2"
                                                  }, [
                                                    createVNode("div", { class: "flex flex-wrap items-center bg-gray-50 py-2.5 px-4 text-xs text-gray-700" }, " Type to search projects or datasets or click below for help. ")
                                                  ])) : createCommentVNode("", true),
                                                  currentRefinement != "" ? (openBlock(), createBlock("li", {
                                                    key: 1,
                                                    class: "p-2"
                                                  }, [
                                                    currentRefinement === "" && _ctx.recent.length > 0 ? (openBlock(), createBlock("h2", {
                                                      key: 0,
                                                      class: "mt-4 mb-2 px-3 text-xs font-semibold text-gray-900"
                                                    }, " Recent searches ")) : createCommentVNode("", true),
                                                    currentRefinement ? (openBlock(), createBlock("div", {
                                                      key: 1,
                                                      class: "border rounded-md"
                                                    }, [
                                                      index.hits.length > 0 ? (openBlock(), createBlock("span", { key: 0 }, [
                                                        createVNode("ul", { class: "text-sm text-gray-700" }, [
                                                          (openBlock(true), createBlock(Fragment, null, renderList(index.hits, (hit) => {
                                                            return openBlock(), createBlock(_component_ComboboxOption, {
                                                              key: hit.objectID,
                                                              value: hit,
                                                              as: "template"
                                                            }, {
                                                              default: withCtx(({
                                                                active
                                                              }) => [
                                                                createVNode("li", {
                                                                  class: [
                                                                    "flex cursor-default select-none items-center rounded-md px-3 py-2",
                                                                    active && "bg-gray-900 bg-opacity-5 text-gray-900"
                                                                  ]
                                                                }, [
                                                                  createVNode(_component_Link, {
                                                                    class: "w-full",
                                                                    href: hit.public_url,
                                                                    onClick: ($event) => $setup.open = false
                                                                  }, {
                                                                    default: withCtx(() => [
                                                                      createVNode(_component_FolderIcon, {
                                                                        class: [
                                                                          "h-6 w-6 inline flex-none text-gray-900 text-opacity-40",
                                                                          active && "text-opacity-100"
                                                                        ],
                                                                        "aria-hidden": "true"
                                                                      }, null, 8, ["class"]),
                                                                      createVNode("span", { class: "ml-3 flex-auto truncate" }, toDisplayString(hit.name), 1),
                                                                      active ? (openBlock(), createBlock("span", {
                                                                        key: 0,
                                                                        class: "ml-3 flex-none text-gray-500"
                                                                      }, "Jump to...")) : createCommentVNode("", true)
                                                                    ]),
                                                                    _: 2
                                                                  }, 1032, ["href", "onClick"])
                                                                ], 2)
                                                              ]),
                                                              _: 2
                                                            }, 1032, ["value"]);
                                                          }), 128))
                                                        ])
                                                      ])) : (openBlock(), createBlock("span", { key: 1 }, [
                                                        currentRefinement !== "" && index.hits.length === 0 ? (openBlock(), createBlock("div", {
                                                          key: 0,
                                                          class: "py-14 px-6 text-center sm:px-14"
                                                        }, [
                                                          createVNode("p", { class: "mt-4 text-sm text-gray-900" }, " We couldn't find any results with that term. Please try again. ")
                                                        ])) : createCommentVNode("", true)
                                                      ]))
                                                    ])) : createCommentVNode("", true)
                                                  ])) : createCommentVNode("", true)
                                                ]);
                                              }), 128)),
                                              currentRefinement === "" ? (openBlock(), createBlock("li", {
                                                key: 0,
                                                class: "p-2"
                                              }, [
                                                createVNode("h2", { class: "sr-only" }, " Quick actions "),
                                                createVNode("ul", { class: "text-sm text-gray-700" }, [
                                                  (openBlock(true), createBlock(Fragment, null, renderList(_ctx.quickActions, (action) => {
                                                    return openBlock(), createBlock(_component_ComboboxOption, {
                                                      key: action.shortcut,
                                                      value: action,
                                                      as: "template"
                                                    }, {
                                                      default: withCtx(({ active }) => [
                                                        createVNode("li", {
                                                          class: [
                                                            "flex cursor-pointer select-none items-center rounded-md px-3 py-2",
                                                            active && "bg-gray-900 bg-opacity-5 text-gray-900"
                                                          ]
                                                        }, [
                                                          (openBlock(), createBlock(resolveDynamicComponent(
                                                            action.icon
                                                          ), {
                                                            class: [
                                                              "h-6 w-6 flex-none text-gray-900 text-opacity-40",
                                                              active && "text-opacity-100"
                                                            ],
                                                            "aria-hidden": "true"
                                                          }, null, 8, ["class"])),
                                                          createVNode("span", { class: "ml-3 flex-auto truncate" }, toDisplayString(action.name), 1)
                                                        ], 2)
                                                      ]),
                                                      _: 2
                                                    }, 1032, ["value"]);
                                                  }), 128))
                                                ])
                                              ])) : createCommentVNode("", true)
                                            ]),
                                            _: 2
                                          }, 1024)
                                        ]),
                                        _: 2
                                      }, 1032, ["onUpdate:modelValue"])
                                    ]),
                                    _: 2
                                  }, 1024)
                                ];
                              }
                            }),
                            _: 2
                          }, _parent5, _scopeId4));
                          _push5(`</div>`);
                        } else {
                          return [
                            createVNode(_component_TransitionChild, {
                              as: "template",
                              enter: "ease-out duration-300",
                              "enter-from": "opacity-0",
                              "enter-to": "opacity-100",
                              leave: "ease-in duration-200",
                              "leave-from": "opacity-100",
                              "leave-to": "opacity-0"
                            }, {
                              default: withCtx(() => [
                                createVNode("div", { class: "fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity" })
                              ]),
                              _: 1
                            }),
                            createVNode("div", { class: "fixed inset-0 z-10 overflow-y-auto p-4 sm:p-6 md:p-20" }, [
                              createVNode(_component_TransitionChild, {
                                as: "template",
                                enter: "ease-out duration-300",
                                "enter-from": "opacity-0 scale-95",
                                "enter-to": "opacity-100 scale-100",
                                leave: "ease-in duration-200",
                                "leave-from": "opacity-100 scale-100",
                                "leave-to": "opacity-0 scale-95"
                              }, {
                                default: withCtx(() => [
                                  createVNode(_component_DialogPanel, { class: "mx-auto max-w-2xl transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all" }, {
                                    default: withCtx(() => [
                                      createVNode(_component_Combobox, {
                                        as: "div",
                                        class: "mx-auto max-w-2xl transform divide-y divide-gray-500 divide-opacity-10 overflow-hidden rounded-xl bg-white bg-opacity-80 shadow-2xl ring-1 ring-black ring-opacity-5 backdrop-blur backdrop-filter transition-all",
                                        "onUpdate:modelValue": $setup.onSelect
                                      }, {
                                        default: withCtx(() => [
                                          createVNode("div", { class: "relative" }, [
                                            createVNode(_component_MagnifyingGlassIcon, {
                                              class: "pointer-events-none absolute top-3.5 left-4 h-5 w-5 text-gray-900 text-opacity-40",
                                              "aria-hidden": "true"
                                            }),
                                            createVNode(_component_ComboboxInput, {
                                              id: "searchAC",
                                              class: "h-12 w-full border-0 bg-transparent pl-11 pr-4 text-gray-900 placeholder-gray-500 focus:ring-0 sm:text-sm",
                                              placeholder: "Search",
                                              onInput: ($event) => refine(
                                                $event.currentTarget.value
                                              )
                                            }, null, 8, ["onInput"])
                                          ]),
                                          createVNode(_component_ComboboxOptions, {
                                            static: "",
                                            class: "max-h-80 scroll-py-2 divide-y divide-gray-500 divide-opacity-10 overflow-y-auto"
                                          }, {
                                            default: withCtx(() => [
                                              (openBlock(true), createBlock(Fragment, null, renderList(indices, (index) => {
                                                return openBlock(), createBlock("div", {
                                                  key: index.indexId,
                                                  "aria-labelledby": "searchAC",
                                                  class: "dropdown-menu p-0 w-100"
                                                }, [
                                                  currentRefinement === "" ? (openBlock(), createBlock("li", {
                                                    key: 0,
                                                    class: "p-2"
                                                  }, [
                                                    createVNode("div", { class: "flex flex-wrap items-center bg-gray-50 py-2.5 px-4 text-xs text-gray-700" }, " Type to search projects or datasets or click below for help. ")
                                                  ])) : createCommentVNode("", true),
                                                  currentRefinement != "" ? (openBlock(), createBlock("li", {
                                                    key: 1,
                                                    class: "p-2"
                                                  }, [
                                                    currentRefinement === "" && _ctx.recent.length > 0 ? (openBlock(), createBlock("h2", {
                                                      key: 0,
                                                      class: "mt-4 mb-2 px-3 text-xs font-semibold text-gray-900"
                                                    }, " Recent searches ")) : createCommentVNode("", true),
                                                    currentRefinement ? (openBlock(), createBlock("div", {
                                                      key: 1,
                                                      class: "border rounded-md"
                                                    }, [
                                                      index.hits.length > 0 ? (openBlock(), createBlock("span", { key: 0 }, [
                                                        createVNode("ul", { class: "text-sm text-gray-700" }, [
                                                          (openBlock(true), createBlock(Fragment, null, renderList(index.hits, (hit) => {
                                                            return openBlock(), createBlock(_component_ComboboxOption, {
                                                              key: hit.objectID,
                                                              value: hit,
                                                              as: "template"
                                                            }, {
                                                              default: withCtx(({
                                                                active
                                                              }) => [
                                                                createVNode("li", {
                                                                  class: [
                                                                    "flex cursor-default select-none items-center rounded-md px-3 py-2",
                                                                    active && "bg-gray-900 bg-opacity-5 text-gray-900"
                                                                  ]
                                                                }, [
                                                                  createVNode(_component_Link, {
                                                                    class: "w-full",
                                                                    href: hit.public_url,
                                                                    onClick: ($event) => $setup.open = false
                                                                  }, {
                                                                    default: withCtx(() => [
                                                                      createVNode(_component_FolderIcon, {
                                                                        class: [
                                                                          "h-6 w-6 inline flex-none text-gray-900 text-opacity-40",
                                                                          active && "text-opacity-100"
                                                                        ],
                                                                        "aria-hidden": "true"
                                                                      }, null, 8, ["class"]),
                                                                      createVNode("span", { class: "ml-3 flex-auto truncate" }, toDisplayString(hit.name), 1),
                                                                      active ? (openBlock(), createBlock("span", {
                                                                        key: 0,
                                                                        class: "ml-3 flex-none text-gray-500"
                                                                      }, "Jump to...")) : createCommentVNode("", true)
                                                                    ]),
                                                                    _: 2
                                                                  }, 1032, ["href", "onClick"])
                                                                ], 2)
                                                              ]),
                                                              _: 2
                                                            }, 1032, ["value"]);
                                                          }), 128))
                                                        ])
                                                      ])) : (openBlock(), createBlock("span", { key: 1 }, [
                                                        currentRefinement !== "" && index.hits.length === 0 ? (openBlock(), createBlock("div", {
                                                          key: 0,
                                                          class: "py-14 px-6 text-center sm:px-14"
                                                        }, [
                                                          createVNode("p", { class: "mt-4 text-sm text-gray-900" }, " We couldn't find any results with that term. Please try again. ")
                                                        ])) : createCommentVNode("", true)
                                                      ]))
                                                    ])) : createCommentVNode("", true)
                                                  ])) : createCommentVNode("", true)
                                                ]);
                                              }), 128)),
                                              currentRefinement === "" ? (openBlock(), createBlock("li", {
                                                key: 0,
                                                class: "p-2"
                                              }, [
                                                createVNode("h2", { class: "sr-only" }, " Quick actions "),
                                                createVNode("ul", { class: "text-sm text-gray-700" }, [
                                                  (openBlock(true), createBlock(Fragment, null, renderList(_ctx.quickActions, (action) => {
                                                    return openBlock(), createBlock(_component_ComboboxOption, {
                                                      key: action.shortcut,
                                                      value: action,
                                                      as: "template"
                                                    }, {
                                                      default: withCtx(({ active }) => [
                                                        createVNode("li", {
                                                          class: [
                                                            "flex cursor-pointer select-none items-center rounded-md px-3 py-2",
                                                            active && "bg-gray-900 bg-opacity-5 text-gray-900"
                                                          ]
                                                        }, [
                                                          (openBlock(), createBlock(resolveDynamicComponent(
                                                            action.icon
                                                          ), {
                                                            class: [
                                                              "h-6 w-6 flex-none text-gray-900 text-opacity-40",
                                                              active && "text-opacity-100"
                                                            ],
                                                            "aria-hidden": "true"
                                                          }, null, 8, ["class"])),
                                                          createVNode("span", { class: "ml-3 flex-auto truncate" }, toDisplayString(action.name), 1)
                                                        ], 2)
                                                      ]),
                                                      _: 2
                                                    }, 1032, ["value"]);
                                                  }), 128))
                                                ])
                                              ])) : createCommentVNode("", true)
                                            ]),
                                            _: 2
                                          }, 1024)
                                        ]),
                                        _: 2
                                      }, 1032, ["onUpdate:modelValue"])
                                    ]),
                                    _: 2
                                  }, 1024)
                                ]),
                                _: 2
                              }, 1024)
                            ])
                          ];
                        }
                      }),
                      _: 2
                    }, _parent4, _scopeId3));
                  } else {
                    return [
                      createVNode(_component_Dialog, {
                        as: "div",
                        class: "relative z-10",
                        onClose: ($event) => $setup.open = false
                      }, {
                        default: withCtx(() => [
                          createVNode(_component_TransitionChild, {
                            as: "template",
                            enter: "ease-out duration-300",
                            "enter-from": "opacity-0",
                            "enter-to": "opacity-100",
                            leave: "ease-in duration-200",
                            "leave-from": "opacity-100",
                            "leave-to": "opacity-0"
                          }, {
                            default: withCtx(() => [
                              createVNode("div", { class: "fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity" })
                            ]),
                            _: 1
                          }),
                          createVNode("div", { class: "fixed inset-0 z-10 overflow-y-auto p-4 sm:p-6 md:p-20" }, [
                            createVNode(_component_TransitionChild, {
                              as: "template",
                              enter: "ease-out duration-300",
                              "enter-from": "opacity-0 scale-95",
                              "enter-to": "opacity-100 scale-100",
                              leave: "ease-in duration-200",
                              "leave-from": "opacity-100 scale-100",
                              "leave-to": "opacity-0 scale-95"
                            }, {
                              default: withCtx(() => [
                                createVNode(_component_DialogPanel, { class: "mx-auto max-w-2xl transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all" }, {
                                  default: withCtx(() => [
                                    createVNode(_component_Combobox, {
                                      as: "div",
                                      class: "mx-auto max-w-2xl transform divide-y divide-gray-500 divide-opacity-10 overflow-hidden rounded-xl bg-white bg-opacity-80 shadow-2xl ring-1 ring-black ring-opacity-5 backdrop-blur backdrop-filter transition-all",
                                      "onUpdate:modelValue": $setup.onSelect
                                    }, {
                                      default: withCtx(() => [
                                        createVNode("div", { class: "relative" }, [
                                          createVNode(_component_MagnifyingGlassIcon, {
                                            class: "pointer-events-none absolute top-3.5 left-4 h-5 w-5 text-gray-900 text-opacity-40",
                                            "aria-hidden": "true"
                                          }),
                                          createVNode(_component_ComboboxInput, {
                                            id: "searchAC",
                                            class: "h-12 w-full border-0 bg-transparent pl-11 pr-4 text-gray-900 placeholder-gray-500 focus:ring-0 sm:text-sm",
                                            placeholder: "Search",
                                            onInput: ($event) => refine(
                                              $event.currentTarget.value
                                            )
                                          }, null, 8, ["onInput"])
                                        ]),
                                        createVNode(_component_ComboboxOptions, {
                                          static: "",
                                          class: "max-h-80 scroll-py-2 divide-y divide-gray-500 divide-opacity-10 overflow-y-auto"
                                        }, {
                                          default: withCtx(() => [
                                            (openBlock(true), createBlock(Fragment, null, renderList(indices, (index) => {
                                              return openBlock(), createBlock("div", {
                                                key: index.indexId,
                                                "aria-labelledby": "searchAC",
                                                class: "dropdown-menu p-0 w-100"
                                              }, [
                                                currentRefinement === "" ? (openBlock(), createBlock("li", {
                                                  key: 0,
                                                  class: "p-2"
                                                }, [
                                                  createVNode("div", { class: "flex flex-wrap items-center bg-gray-50 py-2.5 px-4 text-xs text-gray-700" }, " Type to search projects or datasets or click below for help. ")
                                                ])) : createCommentVNode("", true),
                                                currentRefinement != "" ? (openBlock(), createBlock("li", {
                                                  key: 1,
                                                  class: "p-2"
                                                }, [
                                                  currentRefinement === "" && _ctx.recent.length > 0 ? (openBlock(), createBlock("h2", {
                                                    key: 0,
                                                    class: "mt-4 mb-2 px-3 text-xs font-semibold text-gray-900"
                                                  }, " Recent searches ")) : createCommentVNode("", true),
                                                  currentRefinement ? (openBlock(), createBlock("div", {
                                                    key: 1,
                                                    class: "border rounded-md"
                                                  }, [
                                                    index.hits.length > 0 ? (openBlock(), createBlock("span", { key: 0 }, [
                                                      createVNode("ul", { class: "text-sm text-gray-700" }, [
                                                        (openBlock(true), createBlock(Fragment, null, renderList(index.hits, (hit) => {
                                                          return openBlock(), createBlock(_component_ComboboxOption, {
                                                            key: hit.objectID,
                                                            value: hit,
                                                            as: "template"
                                                          }, {
                                                            default: withCtx(({
                                                              active
                                                            }) => [
                                                              createVNode("li", {
                                                                class: [
                                                                  "flex cursor-default select-none items-center rounded-md px-3 py-2",
                                                                  active && "bg-gray-900 bg-opacity-5 text-gray-900"
                                                                ]
                                                              }, [
                                                                createVNode(_component_Link, {
                                                                  class: "w-full",
                                                                  href: hit.public_url,
                                                                  onClick: ($event) => $setup.open = false
                                                                }, {
                                                                  default: withCtx(() => [
                                                                    createVNode(_component_FolderIcon, {
                                                                      class: [
                                                                        "h-6 w-6 inline flex-none text-gray-900 text-opacity-40",
                                                                        active && "text-opacity-100"
                                                                      ],
                                                                      "aria-hidden": "true"
                                                                    }, null, 8, ["class"]),
                                                                    createVNode("span", { class: "ml-3 flex-auto truncate" }, toDisplayString(hit.name), 1),
                                                                    active ? (openBlock(), createBlock("span", {
                                                                      key: 0,
                                                                      class: "ml-3 flex-none text-gray-500"
                                                                    }, "Jump to...")) : createCommentVNode("", true)
                                                                  ]),
                                                                  _: 2
                                                                }, 1032, ["href", "onClick"])
                                                              ], 2)
                                                            ]),
                                                            _: 2
                                                          }, 1032, ["value"]);
                                                        }), 128))
                                                      ])
                                                    ])) : (openBlock(), createBlock("span", { key: 1 }, [
                                                      currentRefinement !== "" && index.hits.length === 0 ? (openBlock(), createBlock("div", {
                                                        key: 0,
                                                        class: "py-14 px-6 text-center sm:px-14"
                                                      }, [
                                                        createVNode("p", { class: "mt-4 text-sm text-gray-900" }, " We couldn't find any results with that term. Please try again. ")
                                                      ])) : createCommentVNode("", true)
                                                    ]))
                                                  ])) : createCommentVNode("", true)
                                                ])) : createCommentVNode("", true)
                                              ]);
                                            }), 128)),
                                            currentRefinement === "" ? (openBlock(), createBlock("li", {
                                              key: 0,
                                              class: "p-2"
                                            }, [
                                              createVNode("h2", { class: "sr-only" }, " Quick actions "),
                                              createVNode("ul", { class: "text-sm text-gray-700" }, [
                                                (openBlock(true), createBlock(Fragment, null, renderList(_ctx.quickActions, (action) => {
                                                  return openBlock(), createBlock(_component_ComboboxOption, {
                                                    key: action.shortcut,
                                                    value: action,
                                                    as: "template"
                                                  }, {
                                                    default: withCtx(({ active }) => [
                                                      createVNode("li", {
                                                        class: [
                                                          "flex cursor-pointer select-none items-center rounded-md px-3 py-2",
                                                          active && "bg-gray-900 bg-opacity-5 text-gray-900"
                                                        ]
                                                      }, [
                                                        (openBlock(), createBlock(resolveDynamicComponent(
                                                          action.icon
                                                        ), {
                                                          class: [
                                                            "h-6 w-6 flex-none text-gray-900 text-opacity-40",
                                                            active && "text-opacity-100"
                                                          ],
                                                          "aria-hidden": "true"
                                                        }, null, 8, ["class"])),
                                                        createVNode("span", { class: "ml-3 flex-auto truncate" }, toDisplayString(action.name), 1)
                                                      ], 2)
                                                    ]),
                                                    _: 2
                                                  }, 1032, ["value"]);
                                                }), 128))
                                              ])
                                            ])) : createCommentVNode("", true)
                                          ]),
                                          _: 2
                                        }, 1024)
                                      ]),
                                      _: 2
                                    }, 1032, ["onUpdate:modelValue"])
                                  ]),
                                  _: 2
                                }, 1024)
                              ]),
                              _: 2
                            }, 1024)
                          ])
                        ]),
                        _: 2
                      }, 1032, ["onClose"])
                    ];
                  }
                }),
                _: 2
              }, _parent3, _scopeId2));
            } else {
              return [
                createVNode(_component_TransitionRoot, {
                  show: $setup.open,
                  as: "template",
                  appear: "",
                  onAfterLeave: ($event) => _ctx.query = ""
                }, {
                  default: withCtx(() => [
                    createVNode(_component_Dialog, {
                      as: "div",
                      class: "relative z-10",
                      onClose: ($event) => $setup.open = false
                    }, {
                      default: withCtx(() => [
                        createVNode(_component_TransitionChild, {
                          as: "template",
                          enter: "ease-out duration-300",
                          "enter-from": "opacity-0",
                          "enter-to": "opacity-100",
                          leave: "ease-in duration-200",
                          "leave-from": "opacity-100",
                          "leave-to": "opacity-0"
                        }, {
                          default: withCtx(() => [
                            createVNode("div", { class: "fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity" })
                          ]),
                          _: 1
                        }),
                        createVNode("div", { class: "fixed inset-0 z-10 overflow-y-auto p-4 sm:p-6 md:p-20" }, [
                          createVNode(_component_TransitionChild, {
                            as: "template",
                            enter: "ease-out duration-300",
                            "enter-from": "opacity-0 scale-95",
                            "enter-to": "opacity-100 scale-100",
                            leave: "ease-in duration-200",
                            "leave-from": "opacity-100 scale-100",
                            "leave-to": "opacity-0 scale-95"
                          }, {
                            default: withCtx(() => [
                              createVNode(_component_DialogPanel, { class: "mx-auto max-w-2xl transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all" }, {
                                default: withCtx(() => [
                                  createVNode(_component_Combobox, {
                                    as: "div",
                                    class: "mx-auto max-w-2xl transform divide-y divide-gray-500 divide-opacity-10 overflow-hidden rounded-xl bg-white bg-opacity-80 shadow-2xl ring-1 ring-black ring-opacity-5 backdrop-blur backdrop-filter transition-all",
                                    "onUpdate:modelValue": $setup.onSelect
                                  }, {
                                    default: withCtx(() => [
                                      createVNode("div", { class: "relative" }, [
                                        createVNode(_component_MagnifyingGlassIcon, {
                                          class: "pointer-events-none absolute top-3.5 left-4 h-5 w-5 text-gray-900 text-opacity-40",
                                          "aria-hidden": "true"
                                        }),
                                        createVNode(_component_ComboboxInput, {
                                          id: "searchAC",
                                          class: "h-12 w-full border-0 bg-transparent pl-11 pr-4 text-gray-900 placeholder-gray-500 focus:ring-0 sm:text-sm",
                                          placeholder: "Search",
                                          onInput: ($event) => refine(
                                            $event.currentTarget.value
                                          )
                                        }, null, 8, ["onInput"])
                                      ]),
                                      createVNode(_component_ComboboxOptions, {
                                        static: "",
                                        class: "max-h-80 scroll-py-2 divide-y divide-gray-500 divide-opacity-10 overflow-y-auto"
                                      }, {
                                        default: withCtx(() => [
                                          (openBlock(true), createBlock(Fragment, null, renderList(indices, (index) => {
                                            return openBlock(), createBlock("div", {
                                              key: index.indexId,
                                              "aria-labelledby": "searchAC",
                                              class: "dropdown-menu p-0 w-100"
                                            }, [
                                              currentRefinement === "" ? (openBlock(), createBlock("li", {
                                                key: 0,
                                                class: "p-2"
                                              }, [
                                                createVNode("div", { class: "flex flex-wrap items-center bg-gray-50 py-2.5 px-4 text-xs text-gray-700" }, " Type to search projects or datasets or click below for help. ")
                                              ])) : createCommentVNode("", true),
                                              currentRefinement != "" ? (openBlock(), createBlock("li", {
                                                key: 1,
                                                class: "p-2"
                                              }, [
                                                currentRefinement === "" && _ctx.recent.length > 0 ? (openBlock(), createBlock("h2", {
                                                  key: 0,
                                                  class: "mt-4 mb-2 px-3 text-xs font-semibold text-gray-900"
                                                }, " Recent searches ")) : createCommentVNode("", true),
                                                currentRefinement ? (openBlock(), createBlock("div", {
                                                  key: 1,
                                                  class: "border rounded-md"
                                                }, [
                                                  index.hits.length > 0 ? (openBlock(), createBlock("span", { key: 0 }, [
                                                    createVNode("ul", { class: "text-sm text-gray-700" }, [
                                                      (openBlock(true), createBlock(Fragment, null, renderList(index.hits, (hit) => {
                                                        return openBlock(), createBlock(_component_ComboboxOption, {
                                                          key: hit.objectID,
                                                          value: hit,
                                                          as: "template"
                                                        }, {
                                                          default: withCtx(({
                                                            active
                                                          }) => [
                                                            createVNode("li", {
                                                              class: [
                                                                "flex cursor-default select-none items-center rounded-md px-3 py-2",
                                                                active && "bg-gray-900 bg-opacity-5 text-gray-900"
                                                              ]
                                                            }, [
                                                              createVNode(_component_Link, {
                                                                class: "w-full",
                                                                href: hit.public_url,
                                                                onClick: ($event) => $setup.open = false
                                                              }, {
                                                                default: withCtx(() => [
                                                                  createVNode(_component_FolderIcon, {
                                                                    class: [
                                                                      "h-6 w-6 inline flex-none text-gray-900 text-opacity-40",
                                                                      active && "text-opacity-100"
                                                                    ],
                                                                    "aria-hidden": "true"
                                                                  }, null, 8, ["class"]),
                                                                  createVNode("span", { class: "ml-3 flex-auto truncate" }, toDisplayString(hit.name), 1),
                                                                  active ? (openBlock(), createBlock("span", {
                                                                    key: 0,
                                                                    class: "ml-3 flex-none text-gray-500"
                                                                  }, "Jump to...")) : createCommentVNode("", true)
                                                                ]),
                                                                _: 2
                                                              }, 1032, ["href", "onClick"])
                                                            ], 2)
                                                          ]),
                                                          _: 2
                                                        }, 1032, ["value"]);
                                                      }), 128))
                                                    ])
                                                  ])) : (openBlock(), createBlock("span", { key: 1 }, [
                                                    currentRefinement !== "" && index.hits.length === 0 ? (openBlock(), createBlock("div", {
                                                      key: 0,
                                                      class: "py-14 px-6 text-center sm:px-14"
                                                    }, [
                                                      createVNode("p", { class: "mt-4 text-sm text-gray-900" }, " We couldn't find any results with that term. Please try again. ")
                                                    ])) : createCommentVNode("", true)
                                                  ]))
                                                ])) : createCommentVNode("", true)
                                              ])) : createCommentVNode("", true)
                                            ]);
                                          }), 128)),
                                          currentRefinement === "" ? (openBlock(), createBlock("li", {
                                            key: 0,
                                            class: "p-2"
                                          }, [
                                            createVNode("h2", { class: "sr-only" }, " Quick actions "),
                                            createVNode("ul", { class: "text-sm text-gray-700" }, [
                                              (openBlock(true), createBlock(Fragment, null, renderList(_ctx.quickActions, (action) => {
                                                return openBlock(), createBlock(_component_ComboboxOption, {
                                                  key: action.shortcut,
                                                  value: action,
                                                  as: "template"
                                                }, {
                                                  default: withCtx(({ active }) => [
                                                    createVNode("li", {
                                                      class: [
                                                        "flex cursor-pointer select-none items-center rounded-md px-3 py-2",
                                                        active && "bg-gray-900 bg-opacity-5 text-gray-900"
                                                      ]
                                                    }, [
                                                      (openBlock(), createBlock(resolveDynamicComponent(
                                                        action.icon
                                                      ), {
                                                        class: [
                                                          "h-6 w-6 flex-none text-gray-900 text-opacity-40",
                                                          active && "text-opacity-100"
                                                        ],
                                                        "aria-hidden": "true"
                                                      }, null, 8, ["class"])),
                                                      createVNode("span", { class: "ml-3 flex-auto truncate" }, toDisplayString(action.name), 1)
                                                    ], 2)
                                                  ]),
                                                  _: 2
                                                }, 1032, ["value"]);
                                              }), 128))
                                            ])
                                          ])) : createCommentVNode("", true)
                                        ]),
                                        _: 2
                                      }, 1024)
                                    ]),
                                    _: 2
                                  }, 1032, ["onUpdate:modelValue"])
                                ]),
                                _: 2
                              }, 1024)
                            ]),
                            _: 2
                          }, 1024)
                        ])
                      ]),
                      _: 2
                    }, 1032, ["onClose"])
                  ]),
                  _: 2
                }, 1032, ["show", "onAfterLeave"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_ais_autocomplete, null, {
            default: withCtx(({ currentRefinement, indices, refine }) => [
              createVNode(_component_TransitionRoot, {
                show: $setup.open,
                as: "template",
                appear: "",
                onAfterLeave: ($event) => _ctx.query = ""
              }, {
                default: withCtx(() => [
                  createVNode(_component_Dialog, {
                    as: "div",
                    class: "relative z-10",
                    onClose: ($event) => $setup.open = false
                  }, {
                    default: withCtx(() => [
                      createVNode(_component_TransitionChild, {
                        as: "template",
                        enter: "ease-out duration-300",
                        "enter-from": "opacity-0",
                        "enter-to": "opacity-100",
                        leave: "ease-in duration-200",
                        "leave-from": "opacity-100",
                        "leave-to": "opacity-0"
                      }, {
                        default: withCtx(() => [
                          createVNode("div", { class: "fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity" })
                        ]),
                        _: 1
                      }),
                      createVNode("div", { class: "fixed inset-0 z-10 overflow-y-auto p-4 sm:p-6 md:p-20" }, [
                        createVNode(_component_TransitionChild, {
                          as: "template",
                          enter: "ease-out duration-300",
                          "enter-from": "opacity-0 scale-95",
                          "enter-to": "opacity-100 scale-100",
                          leave: "ease-in duration-200",
                          "leave-from": "opacity-100 scale-100",
                          "leave-to": "opacity-0 scale-95"
                        }, {
                          default: withCtx(() => [
                            createVNode(_component_DialogPanel, { class: "mx-auto max-w-2xl transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all" }, {
                              default: withCtx(() => [
                                createVNode(_component_Combobox, {
                                  as: "div",
                                  class: "mx-auto max-w-2xl transform divide-y divide-gray-500 divide-opacity-10 overflow-hidden rounded-xl bg-white bg-opacity-80 shadow-2xl ring-1 ring-black ring-opacity-5 backdrop-blur backdrop-filter transition-all",
                                  "onUpdate:modelValue": $setup.onSelect
                                }, {
                                  default: withCtx(() => [
                                    createVNode("div", { class: "relative" }, [
                                      createVNode(_component_MagnifyingGlassIcon, {
                                        class: "pointer-events-none absolute top-3.5 left-4 h-5 w-5 text-gray-900 text-opacity-40",
                                        "aria-hidden": "true"
                                      }),
                                      createVNode(_component_ComboboxInput, {
                                        id: "searchAC",
                                        class: "h-12 w-full border-0 bg-transparent pl-11 pr-4 text-gray-900 placeholder-gray-500 focus:ring-0 sm:text-sm",
                                        placeholder: "Search",
                                        onInput: ($event) => refine(
                                          $event.currentTarget.value
                                        )
                                      }, null, 8, ["onInput"])
                                    ]),
                                    createVNode(_component_ComboboxOptions, {
                                      static: "",
                                      class: "max-h-80 scroll-py-2 divide-y divide-gray-500 divide-opacity-10 overflow-y-auto"
                                    }, {
                                      default: withCtx(() => [
                                        (openBlock(true), createBlock(Fragment, null, renderList(indices, (index) => {
                                          return openBlock(), createBlock("div", {
                                            key: index.indexId,
                                            "aria-labelledby": "searchAC",
                                            class: "dropdown-menu p-0 w-100"
                                          }, [
                                            currentRefinement === "" ? (openBlock(), createBlock("li", {
                                              key: 0,
                                              class: "p-2"
                                            }, [
                                              createVNode("div", { class: "flex flex-wrap items-center bg-gray-50 py-2.5 px-4 text-xs text-gray-700" }, " Type to search projects or datasets or click below for help. ")
                                            ])) : createCommentVNode("", true),
                                            currentRefinement != "" ? (openBlock(), createBlock("li", {
                                              key: 1,
                                              class: "p-2"
                                            }, [
                                              currentRefinement === "" && _ctx.recent.length > 0 ? (openBlock(), createBlock("h2", {
                                                key: 0,
                                                class: "mt-4 mb-2 px-3 text-xs font-semibold text-gray-900"
                                              }, " Recent searches ")) : createCommentVNode("", true),
                                              currentRefinement ? (openBlock(), createBlock("div", {
                                                key: 1,
                                                class: "border rounded-md"
                                              }, [
                                                index.hits.length > 0 ? (openBlock(), createBlock("span", { key: 0 }, [
                                                  createVNode("ul", { class: "text-sm text-gray-700" }, [
                                                    (openBlock(true), createBlock(Fragment, null, renderList(index.hits, (hit) => {
                                                      return openBlock(), createBlock(_component_ComboboxOption, {
                                                        key: hit.objectID,
                                                        value: hit,
                                                        as: "template"
                                                      }, {
                                                        default: withCtx(({
                                                          active
                                                        }) => [
                                                          createVNode("li", {
                                                            class: [
                                                              "flex cursor-default select-none items-center rounded-md px-3 py-2",
                                                              active && "bg-gray-900 bg-opacity-5 text-gray-900"
                                                            ]
                                                          }, [
                                                            createVNode(_component_Link, {
                                                              class: "w-full",
                                                              href: hit.public_url,
                                                              onClick: ($event) => $setup.open = false
                                                            }, {
                                                              default: withCtx(() => [
                                                                createVNode(_component_FolderIcon, {
                                                                  class: [
                                                                    "h-6 w-6 inline flex-none text-gray-900 text-opacity-40",
                                                                    active && "text-opacity-100"
                                                                  ],
                                                                  "aria-hidden": "true"
                                                                }, null, 8, ["class"]),
                                                                createVNode("span", { class: "ml-3 flex-auto truncate" }, toDisplayString(hit.name), 1),
                                                                active ? (openBlock(), createBlock("span", {
                                                                  key: 0,
                                                                  class: "ml-3 flex-none text-gray-500"
                                                                }, "Jump to...")) : createCommentVNode("", true)
                                                              ]),
                                                              _: 2
                                                            }, 1032, ["href", "onClick"])
                                                          ], 2)
                                                        ]),
                                                        _: 2
                                                      }, 1032, ["value"]);
                                                    }), 128))
                                                  ])
                                                ])) : (openBlock(), createBlock("span", { key: 1 }, [
                                                  currentRefinement !== "" && index.hits.length === 0 ? (openBlock(), createBlock("div", {
                                                    key: 0,
                                                    class: "py-14 px-6 text-center sm:px-14"
                                                  }, [
                                                    createVNode("p", { class: "mt-4 text-sm text-gray-900" }, " We couldn't find any results with that term. Please try again. ")
                                                  ])) : createCommentVNode("", true)
                                                ]))
                                              ])) : createCommentVNode("", true)
                                            ])) : createCommentVNode("", true)
                                          ]);
                                        }), 128)),
                                        currentRefinement === "" ? (openBlock(), createBlock("li", {
                                          key: 0,
                                          class: "p-2"
                                        }, [
                                          createVNode("h2", { class: "sr-only" }, " Quick actions "),
                                          createVNode("ul", { class: "text-sm text-gray-700" }, [
                                            (openBlock(true), createBlock(Fragment, null, renderList(_ctx.quickActions, (action) => {
                                              return openBlock(), createBlock(_component_ComboboxOption, {
                                                key: action.shortcut,
                                                value: action,
                                                as: "template"
                                              }, {
                                                default: withCtx(({ active }) => [
                                                  createVNode("li", {
                                                    class: [
                                                      "flex cursor-pointer select-none items-center rounded-md px-3 py-2",
                                                      active && "bg-gray-900 bg-opacity-5 text-gray-900"
                                                    ]
                                                  }, [
                                                    (openBlock(), createBlock(resolveDynamicComponent(
                                                      action.icon
                                                    ), {
                                                      class: [
                                                        "h-6 w-6 flex-none text-gray-900 text-opacity-40",
                                                        active && "text-opacity-100"
                                                      ],
                                                      "aria-hidden": "true"
                                                    }, null, 8, ["class"])),
                                                    createVNode("span", { class: "ml-3 flex-auto truncate" }, toDisplayString(action.name), 1)
                                                  ], 2)
                                                ]),
                                                _: 2
                                              }, 1032, ["value"]);
                                            }), 128))
                                          ])
                                        ])) : createCommentVNode("", true)
                                      ]),
                                      _: 2
                                    }, 1024)
                                  ]),
                                  _: 2
                                }, 1032, ["onUpdate:modelValue"])
                              ]),
                              _: 2
                            }, 1024)
                          ]),
                          _: 2
                        }, 1024)
                      ])
                    ]),
                    _: 2
                  }, 1032, ["onClose"])
                ]),
                _: 2
              }, 1032, ["show", "onAfterLeave"])
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$2i = _sfc_main$2i.setup;
_sfc_main$2i.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/Search.vue");
  return _sfc_setup$2i ? _sfc_setup$2i(props, ctx) : void 0;
};
const Search$1 = /* @__PURE__ */ _export_sfc(_sfc_main$2i, [["ssrRender", _sfc_ssrRender$2h]]);
const _sfc_main$2h = {
  components: {
    Link,
    Menu,
    MenuItem,
    MenuItems,
    ArchiveBoxIcon,
    PencilSquareIcon,
    TableCellsIcon,
    PlusIcon
  },
  props: {
    mode: String
  },
  setup() {
  },
  computed: {},
  methods: {}
};
function _sfc_ssrRender$2g(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Link = resolveComponent("Link");
  _push(`<div${ssrRenderAttrs(_attrs)}>`);
  if ($props.mode == "button") {
    _push(`<span>`);
    if (_ctx.$page.props.auth.user && !_ctx.$page.props.auth.user.email) {
      _push(`<span>`);
      _push(ssrRenderComponent(_component_Link, {
        href: "/login",
        class: "p-3 cursor-pointer inline-flex items-center text-center border border-transparent text-base rounded-full shadow-sm text-white inline-flex items-center bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring focus:ring-gray-300 disabled:opacity-25 transition"
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<svg xmlns="http://www.w3.org/2000/svg" class="mr-3 ml-2 h-6 w-6 text-dark" viewBox="0 0 20 20" fill="currentColor"${_scopeId}><path fill-rule="evenodd" d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z" clip-rule="evenodd"${_scopeId}></path></svg> Upload   `);
          } else {
            return [
              (openBlock(), createBlock("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                class: "mr-3 ml-2 h-6 w-6 text-dark",
                viewBox: "0 0 20 20",
                fill: "currentColor"
              }, [
                createVNode("path", {
                  "fill-rule": "evenodd",
                  d: "M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z",
                  "clip-rule": "evenodd"
                })
              ])),
              createTextVNode(" Upload   ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</span>`);
    } else {
      _push(`<span>`);
      _push(ssrRenderComponent(_component_Link, {
        id: "tour-step-upload",
        href: _ctx.route("upload"),
        class: "p-3 inline-flex items-center text-center border border-transparent text-base rounded-full shadow-sm text-white inline-flex items-center bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring focus:ring-gray-300 disabled:opacity-25 transition"
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<svg xmlns="http://www.w3.org/2000/svg" class="mr-3 ml-2 h-6 w-6 text-dark" viewBox="0 0 20 20" fill="currentColor"${_scopeId}><path fill-rule="evenodd" d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z" clip-rule="evenodd"${_scopeId}></path></svg> Upload   `);
          } else {
            return [
              (openBlock(), createBlock("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                class: "mr-3 ml-2 h-6 w-6 text-dark",
                viewBox: "0 0 20 20",
                fill: "currentColor"
              }, [
                createVNode("path", {
                  "fill-rule": "evenodd",
                  d: "M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z",
                  "clip-rule": "evenodd"
                })
              ])),
              createTextVNode(" Upload   ")
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</span>`);
    }
    _push(`</span>`);
  } else {
    _push(`<!---->`);
  }
  if ($props.mode == "icon") {
    _push(`<span>`);
    if (!_ctx.$page.props.auth.user.email) {
      _push(`<span>`);
      _push(ssrRenderComponent(_component_Link, {
        href: "/login",
        class: "cursor-pointer inline-flex items-center text-center p-3 border border-transparent text-base font-medium rounded-full shadow-sm inline-flex items-center bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring focus:ring-gray-300 disabled:opacity-25 transition"
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-dark" viewBox="0 0 20 20" fill="currentColor"${_scopeId}><path fill-rule="evenodd" d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z" clip-rule="evenodd"${_scopeId}></path></svg>`);
          } else {
            return [
              (openBlock(), createBlock("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                class: "h-6 w-6 text-dark",
                viewBox: "0 0 20 20",
                fill: "currentColor"
              }, [
                createVNode("path", {
                  "fill-rule": "evenodd",
                  d: "M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z",
                  "clip-rule": "evenodd"
                })
              ]))
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</span>`);
    } else {
      _push(`<span>`);
      _push(ssrRenderComponent(_component_Link, {
        id: "tour-step-upload",
        href: _ctx.route("upload"),
        class: "inline-flex items-center text-center p-3 border border-transparent text-base font-medium rounded-full shadow-sm inline-flex items-center bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring focus:ring-gray-300 disabled:opacity-25 transition"
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-dark" viewBox="0 0 20 20" fill="currentColor"${_scopeId}><path fill-rule="evenodd" d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z" clip-rule="evenodd"${_scopeId}></path></svg>`);
          } else {
            return [
              (openBlock(), createBlock("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                class: "h-6 w-6 text-dark",
                viewBox: "0 0 20 20",
                fill: "currentColor"
              }, [
                createVNode("path", {
                  "fill-rule": "evenodd",
                  d: "M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM6.293 6.707a1 1 0 010-1.414l3-3a1 1 0 011.414 0l3 3a1 1 0 01-1.414 1.414L11 5.414V13a1 1 0 11-2 0V5.414L7.707 6.707a1 1 0 01-1.414 0z",
                  "clip-rule": "evenodd"
                })
              ]))
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</span>`);
    }
    _push(`</span>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div>`);
}
const _sfc_setup$2h = _sfc_main$2h.setup;
_sfc_main$2h.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/CreateButton.vue");
  return _sfc_setup$2h ? _sfc_setup$2h(props, ctx) : void 0;
};
const Create$3 = /* @__PURE__ */ _export_sfc(_sfc_main$2h, [["ssrRender", _sfc_ssrRender$2g]]);
const _sfc_main$2g = {};
function _sfc_ssrRender$2f(_ctx, _push, _parent, _attrs) {
  _push(`<svg${ssrRenderAttrs(mergeProps({
    width: "48",
    height: "42",
    viewBox: "0 0 48 42",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, _attrs))}><path d="M6.35242 20.7125C6.35242 30.4591 14.2535 38.3601 24 38.3601H24.7065C25.0925 38.3601 25.4118 38.6791 25.4118 39.0726V40.4712C25.4118 40.8708 25.0977 41.1837 24.7101 41.1837H24C12.6941 41.1837 3.52877 32.0184 3.52877 20.7125V19.8855L2.20216 21.2121C1.92597 21.4883 1.47792 21.4852 1.19966 21.207L0.210663 20.2181C-0.0718141 19.9355 -0.0681577 19.4892 0.209351 19.2117L3.94231 15.4787C4.49367 14.9274 5.38751 14.9274 5.93887 15.4787L9.67183 19.2117C9.94662 19.4865 9.94878 19.9398 9.67052 20.2181L8.68152 21.207C8.39904 21.4895 7.95437 21.4875 7.67902 21.2121L6.35242 19.8855V20.7125ZM41.6476 20.7125C41.6476 10.9659 33.7465 3.06492 24 3.06492H23.2973C22.9045 3.06492 22.5883 2.74588 22.5883 2.3524V0.953792C22.5883 0.554217 22.904 0.24127 23.2935 0.24127H24.0001C35.306 0.24127 44.4713 9.40656 44.4713 20.7125V21.5395L45.7979 20.2129C46.0741 19.9367 46.5222 19.9398 46.8004 20.2181L47.7894 21.207C48.0719 21.4895 48.0682 21.9358 47.7907 22.2133L44.0578 25.9463C43.5064 26.4976 42.6126 26.4976 42.0612 25.9463L38.3282 22.2133C38.0534 21.9385 38.0512 21.4852 38.3295 21.207L39.3185 20.2181C39.601 19.9355 40.0455 19.9375 40.321 20.2129L41.6476 21.5395V20.7125Z" fill="black"></path><path d="M16.2907 20.4709C16.2907 15.7923 20.0827 12 24.7616 12C29.4402 12 33.2325 15.7919 33.2325 20.4709C33.2325 25.1494 29.4405 28.9417 24.7616 28.9417C20.083 28.9417 16.2907 25.1498 16.2907 20.4709Z" fill="#019DBB"></path></svg>`);
}
const _sfc_setup$2g = _sfc_main$2g.setup;
_sfc_main$2g.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/ApplicationMark.vue");
  return _sfc_setup$2g ? _sfc_setup$2g(props, ctx) : void 0;
};
const JetApplicationMark = /* @__PURE__ */ _export_sfc(_sfc_main$2g, [["ssrRender", _sfc_ssrRender$2f]]);
const _sfc_main$2f = {
  props: {
    placement: {
      type: String,
      default: "bottom-end"
    },
    boundary: {
      type: String,
      default: "scrollParent"
    },
    autoClose: {
      type: Boolean,
      default: true
    }
  },
  data() {
    return {
      show: false
    };
  },
  watch: {
    show(show) {
      if (show) {
        this.$nextTick(() => {
          this.popper = new Popper(this.$el, this.$refs.dropdown, {
            placement: this.placement,
            modifiers: {
              preventOverflow: {
                boundariesElement: this.boundary
              }
            }
          });
        });
      } else if (this.popper) {
        setTimeout(() => this.popper.destroy(), 100);
      }
    }
  },
  mounted() {
    document.addEventListener("keydown", (e2) => {
      if (e2.keyCode === 27) {
        this.show = false;
      }
    });
  }
};
function _sfc_ssrRender$2e(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<button${ssrRenderAttrs(mergeProps({ type: "button" }, _attrs))}>`);
  ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  ssrRenderTeleport(_push, (_push2) => {
    if ($data.show) {
      _push2(`<div><div style="${ssrRenderStyle({ "position": "fixed", "top": "0", "right": "0", "left": "0", "bottom": "0", "z-index": "99998", "background": "black", "opacity": "0.2" })}"></div><div style="${ssrRenderStyle({ "position": "absolute", "z-index": "99999" })}">`);
      ssrRenderSlot(_ctx.$slots, "dropdown", {}, null, _push2, _parent);
      _push2(`</div></div>`);
    } else {
      _push2(`<!---->`);
    }
  }, "body", false, _parent);
  _push(`</button>`);
}
const _sfc_setup$2f = _sfc_main$2f.setup;
_sfc_main$2f.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/Dropdown.vue");
  return _sfc_setup$2f ? _sfc_setup$2f(props, ctx) : void 0;
};
const Dropdown = /* @__PURE__ */ _export_sfc(_sfc_main$2f, [["ssrRender", _sfc_ssrRender$2e]]);
const _sfc_main$2e = {
  components: {
    XMarkIcon,
    Button: Dropdown
  },
  data() {
    return {
      show: true
    };
  },
  computed: {
    style() {
      var _a;
      return ((_a = this.$page.props.jetstream.flash) == null ? void 0 : _a.bannerStyle) || "success";
    },
    message() {
      var _a;
      return ((_a = this.$page.props.jetstream.flash) == null ? void 0 : _a.banner) || "";
    }
  }
};
function _sfc_ssrRender$2d(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_XMarkIcon = resolveComponent("XMarkIcon");
  if ($data.show && $options.message) {
    _push(`<div${ssrRenderAttrs(mergeProps({ class: "fixed z-50 bg-yellow-400 border-b w-screen border-black-800" }, _attrs))}><div class="max-w-7xl mx-auto py-1 px-6"><p class="text-sm text-center text-dark font-semibold animate-pulse"><span>${ssrInterpolate($options.message)}</span></p><div class="absolute inset-y-0 right-0 pt-1 pr-1 flex items-start sm:pt-1 sm:pr-2 sm:items-start"><button type="button" class="flex p-1 rounded-md focus:outline-none hover:bg-yellow-300 focus:ring-2 focus:ring-white"><span class="sr-only">Dismiss</span>`);
    _push(ssrRenderComponent(_component_XMarkIcon, {
      class: "h-3 w-3 text-dark",
      "aria-hidden": "true"
    }, null, _parent));
    _push(`</button></div></div></div>`);
  } else {
    _push(`<!---->`);
  }
}
const _sfc_setup$2e = _sfc_main$2e.setup;
_sfc_main$2e.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/Banner.vue");
  return _sfc_setup$2e ? _sfc_setup$2e(props, ctx) : void 0;
};
const JetBanner = /* @__PURE__ */ _export_sfc(_sfc_main$2e, [["ssrRender", _sfc_ssrRender$2d]]);
const _sfc_main$2d = {
  props: {
    align: {
      default: "right"
    },
    width: {
      default: "48"
    },
    contentClasses: {
      default: () => ["py-1", "bg-white"]
    }
  },
  setup() {
    let open2 = ref(false);
    const closeOnEscape = (e2) => {
      if (open2.value && e2.keyCode === 27) {
        open2.value = false;
      }
    };
    onMounted(() => document.addEventListener("keydown", closeOnEscape));
    onUnmounted(
      () => document.removeEventListener("keydown", closeOnEscape)
    );
    return {
      open: open2
    };
  },
  computed: {
    widthClass() {
      return {
        48: "w-48"
      }[this.width.toString()];
    },
    alignmentClasses() {
      if (this.align === "left") {
        return "origin-top-left left-0";
      } else if (this.align === "right") {
        return "origin-top-right right-0";
      } else {
        return "origin-top";
      }
    }
  }
};
function _sfc_ssrRender$2c(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "relative" }, _attrs))}><div>`);
  ssrRenderSlot(_ctx.$slots, "trigger", {}, null, _push, _parent);
  _push(`</div><div style="${ssrRenderStyle($setup.open ? null : { display: "none" })}" class="fixed inset-0 z-40"></div><div style="${ssrRenderStyle([
    $setup.open ? null : { display: "none" },
    { "display": "none" }
  ])}" class="${ssrRenderClass([[$options.widthClass, $options.alignmentClasses], "absolute z-50 mt-2 rounded-md shadow-lg"])}"><div class="${ssrRenderClass([$props.contentClasses, "rounded-md ring-1 ring-black ring-opacity-5"])}">`);
  ssrRenderSlot(_ctx.$slots, "content", {}, null, _push, _parent);
  _push(`</div></div></div>`);
}
const _sfc_setup$2d = _sfc_main$2d.setup;
_sfc_main$2d.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/Dropdown.vue");
  return _sfc_setup$2d ? _sfc_setup$2d(props, ctx) : void 0;
};
const JetDropdown = /* @__PURE__ */ _export_sfc(_sfc_main$2d, [["ssrRender", _sfc_ssrRender$2c]]);
const _sfc_main$2c = {
  components: {
    Link
  },
  props: ["href", "as"]
};
function _sfc_ssrRender$2b(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Link = resolveComponent("Link");
  _push(`<div${ssrRenderAttrs(_attrs)}>`);
  if ($props.as == "button") {
    _push(`<button type="submit" class="block w-full px-4 py-2 text-sm leading-5 text-gray-700 text-left hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition">`);
    ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
    _push(`</button>`);
  } else if ($props.as == "a") {
    _push(ssrRenderComponent(_component_Link, {
      href: $props.href,
      class: "block px-4 py-2 text-sm leading-5 text-gray-700 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition"
    }, {
      default: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
        } else {
          return [
            renderSlot(_ctx.$slots, "default")
          ];
        }
      }),
      _: 3
    }, _parent));
  } else {
    _push(ssrRenderComponent(_component_Link, {
      href: $props.href,
      class: "block px-4 py-2 text-sm leading-5 text-gray-700 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition"
    }, {
      default: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
        } else {
          return [
            renderSlot(_ctx.$slots, "default")
          ];
        }
      }),
      _: 3
    }, _parent));
  }
  _push(`</div>`);
}
const _sfc_setup$2c = _sfc_main$2c.setup;
_sfc_main$2c.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/DropdownLink.vue");
  return _sfc_setup$2c ? _sfc_setup$2c(props, ctx) : void 0;
};
const JetDropdownLink = /* @__PURE__ */ _export_sfc(_sfc_main$2c, [["ssrRender", _sfc_ssrRender$2b]]);
const _sfc_main$2b = {
  components: {
    CheckCircleIcon,
    XMarkIcon: XMarkIcon$1,
    ExclamationTriangleIcon
  },
  data() {
    return {
      show: true,
      timeout: null
    };
  },
  watch: {
    "$page.props.flash": {
      deep: true,
      handler() {
        this.show = true;
        this.timeout = setTimeout(() => this.show = false, 5e3);
      }
    }
  }
};
function _sfc_ssrRender$2a(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_CheckCircleIcon = resolveComponent("CheckCircleIcon");
  const _component_XMarkIcon = resolveComponent("XMarkIcon");
  const _component_ExclamationTriangleIcon = resolveComponent("ExclamationTriangleIcon");
  _push(`<div${ssrRenderAttrs(mergeProps({
    "aria-live": "assertive",
    class: "fixed inset-0 flex items-end px-4 py-6 z-10 pointer-events-none sm:p-6 sm:items-start"
  }, _attrs))}>`);
  if (_ctx.$page.props.flash.success && $data.show) {
    _push(`<div class="w-full flex flex-col items-center space-y-4 sm:items-end"><div class="max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden"><div class="p-4"><div class="flex items-start"><div class="flex-shrink-0">`);
    _push(ssrRenderComponent(_component_CheckCircleIcon, {
      class: "h-6 w-6 text-green-400",
      "aria-hidden": "true"
    }, null, _parent));
    _push(`</div><div class="ml-3 w-0 flex-1 pt-0.5"><p class="text-sm font-medium text-gray-900">${ssrInterpolate(_ctx.$page.props.flash.success)}</p></div><div class="ml-4 flex-shrink-0 flex"><button class="bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"><span class="sr-only">Close</span>`);
    _push(ssrRenderComponent(_component_XMarkIcon, {
      class: "h-5 w-5",
      "aria-hidden": "true"
    }, null, _parent));
    _push(`</button></div></div></div></div></div>`);
  } else {
    _push(`<!---->`);
  }
  if (_ctx.$page.props.flash.error && $data.show) {
    _push(`<div class="w-full flex flex-col items-center space-y-4 sm:items-end"><div class="max-w-sm w-full bg-red-100 shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden"><div class="p-4"><div class="flex items-start"><div class="flex-shrink-0">`);
    _push(ssrRenderComponent(_component_ExclamationTriangleIcon, {
      class: "h-6 w-6 text-red-400",
      "aria-hidden": "true"
    }, null, _parent));
    _push(`</div><div class="ml-3 w-0 flex-1 pt-0.5"><p class="text-sm font-medium text-gray-900">${ssrInterpolate(_ctx.$page.props.flash.error)}</p></div><div class="ml-4 flex-shrink-0 flex"><button class="bg-red-100 rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"><span class="sr-only">Close</span>`);
    _push(ssrRenderComponent(_component_XMarkIcon, {
      class: "h-5 w-5",
      "aria-hidden": "true"
    }, null, _parent));
    _push(`</button></div></div></div></div></div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div>`);
}
const _sfc_setup$2b = _sfc_main$2b.setup;
_sfc_main$2b.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/FlashMessages.vue");
  return _sfc_setup$2b ? _sfc_setup$2b(props, ctx) : void 0;
};
const FlashMessages = /* @__PURE__ */ _export_sfc(_sfc_main$2b, [["ssrRender", _sfc_ssrRender$2a]]);
const _sfc_main$2a = {
  components: {
    XMarkIcon,
    Button: Dropdown
  },
  props: {},
  setup() {
  },
  data() {
    return {
      ustring: null,
      show: false
    };
  },
  computed: {
    announcements() {
      let announcements = this.$page.props.config.announcements;
      this.ustring = this.getHash(
        this.slugify(announcements.map((a2) => a2.message).toString())
      );
      let userAcknowledged = localStorage.getItem(
        "announcement_" + this.ustring
      );
      this.show = announcements.length > 0 && userAcknowledged == null;
      return announcements;
    }
  },
  methods: {
    acknowledgeAnnouncement() {
      let localItems = this.findLocalItems("announcement_*");
      if (localItems.length > 0) {
        localItems.forEach((element) => {
          localStorage.removeItem(element.key);
        });
      }
      localStorage.setItem("announcement_" + this.ustring, true);
      this.show = false;
    }
  }
};
function _sfc_ssrRender$29(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_XMarkIcon = resolveComponent("XMarkIcon");
  if ($options.announcements.length > 0 && $data.show) {
    _push(`<div${ssrRenderAttrs(mergeProps({ class: "fixed z-50 bg-yellow-400 border-b w-screen border-black-800" }, _attrs))}><div class="max-w-7xl mx-auto py-1 px-6"><p class="text-sm text-justify text-dark font-semibold animate-pulse"><!--[-->`);
    ssrRenderList($options.announcements, (announcement) => {
      _push(`<span><span>${announcement.message}</span></span>`);
    });
    _push(`<!--]--></p><div class="absolute inset-y-0 right-0 pt-1 pr-1 flex items-start sm:pt-1 sm:pr-2 sm:items-start"><button type="button" class="flex p-1 rounded-md focus:outline-none hover:bg-yellow-300 focus:ring-2 focus:ring-white"><span class="sr-only">Dismiss</span>`);
    _push(ssrRenderComponent(_component_XMarkIcon, {
      class: "h-3 w-3 text-dark",
      "aria-hidden": "true"
    }, null, _parent));
    _push(`</button></div></div></div>`);
  } else {
    _push(`<!---->`);
  }
}
const _sfc_setup$2a = _sfc_main$2a.setup;
_sfc_main$2a.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/AnnouncementBanner.vue");
  return _sfc_setup$2a ? _sfc_setup$2a(props, ctx) : void 0;
};
const AnnouncementBanner = /* @__PURE__ */ _export_sfc(_sfc_main$2a, [["ssrRender", _sfc_ssrRender$29]]);
const _sfc_main$29 = {
  name: "AppTour",
  data() {
    return {
      steps: [
        {
          target: "#tour-step-upload",
          header: {
            title: "Get Started"
          },
          content: `Click to start uploading <br/> your datasets to nmrXiv. <br/> <small>Check out our guides  <br/>to prepare datasets <br/>for uploading <a class="text-green-400 hover:text-decoration-line" href="https://docs.nmrxiv.org" target="_blank">here</a>.</small>`
        },
        {
          target: "#tour-step-dashboard",
          header: {
            title: "Your space: Dashboard"
          },
          content: `<small>You can find all your work<br/> organised under this section.<br/> All your active projects <br/>and quicklinks are accessible <br/> from your dashboard. <br/>Please remember you will have <br/>dedicated dashboards for you <br/>and your teams.</small>`
        },
        {
          target: "#tour-step-shared-with-me",
          header: {
            title: "Your space: Shared with me"
          },
          content: `<small>Projects and studies shared<br/> with you can be accessed from here.</small>`
        },
        {
          target: "#tour-step-recent",
          header: {
            title: "Your space: Recent"
          },
          content: `<small>Quick access to recently<br/> edited projects and studies.</small>`
        },
        {
          target: "#tour-step-starred",
          header: {
            title: "Your space: Starred"
          },
          content: `<small>Projects and studies that you star<br/> can be accessed quickly from this view.</small>`
        },
        {
          target: "#tour-step-trash",
          header: {
            title: "Your space: Trash"
          },
          content: `<small>Restore your deleted projects and studies <br/> (within 30 days) from here.</small>`
        },
        {
          target: "#tour-step-submission-guide",
          header: {
            title: "Guides on Submission"
          },
          content: `<small>Check out our submission guides any time for more information. Here is a quick link for you right from your dashboard.</small>`
        },
        {
          target: "#tour-step-api",
          header: {
            title: "API"
          },
          content: `<small>Developing a tool? Check out our API to access our data.</small>`
        },
        {
          target: "#tour-step-spectra-challenge",
          header: {
            title: "Spectra Challenges"
          },
          content: `<small>Are you proficient in structure ellucidation? Stay tuned for new challenges.</small>`
        },
        {
          target: "#tour-step-get-in-touch",
          header: {
            title: "Need help! Email us"
          },
          content: `<small>Any queries? Write to us via email.<br/>We are happy to help!</small>`
        },
        {
          target: "#tour-step-support-bubble",
          header: {
            title: "Help! Chat window"
          },
          content: `<small>Reach out to us with any questions, suggestions or bugs. We will get back to you as soon as we can.</small>`
        },
        {
          target: "#tour-step-documentation",
          header: {
            title: "Documentation site"
          },
          content: `<small>Check out our documentation site for the installation, submission guides, design principles and architectural overview.</small>`
        },
        {
          target: "#tour-step-account-management",
          header: {
            title: "Account management"
          },
          content: `<small>Manage your teams, profile and other settings from the drop down here.</small>`
        },
        {
          target: "#tour-step-upload",
          header: {
            title: "Let's upload a demo dataset"
          },
          content: `<small>Click here to start uploading.</small>`,
          before: (type) => new Promise((resolve, reject) => {
            this.emitter.emit("openDatasetCreateDialog", {});
            resolve("upload dialog open");
          })
        },
        {
          target: "#tour-step-submission-header",
          header: {
            title: "Files upload"
          },
          content: `<small>Lets provide some basic details about your submission and then upload files.</small>`
        },
        {
          target: "#tour-step-project-name",
          header: {
            title: "Project Name"
          },
          content: `<small>Enter a suitable name for your project.</small>`
        },
        {
          target: "#tour-step-project-desc",
          header: {
            title: "Project Description"
          },
          content: `<small>Briefly describe your project in not less than 20 words.</small>`
        },
        {
          target: "#tour-step-project-keywords",
          header: {
            title: "Project Keywords"
          },
          content: `<small>Classify your project </br>by entering keywords or tags.</small>`
        },
        {
          target: "#tour-step-upload-spectra",
          header: {
            title: "Upload Spectra files"
          },
          content: `<small>Lets start uploading your spectra data. <a class="text-green-400 hover:text-decoration-line" href="https://drive.google.com/drive/folders/1PS9jYkjCl_2iwwpod7rkxsmiH32QSgCM" target="_blank">Here</a> is an example dataset. Download and then drag and drop the files here.</small>`
        },
        {
          target: "#tour-step-proceed-from-step-1",
          header: {
            title: "Proceed"
          },
          content: `<small>Once the upload is finish. Press on the Proceed button to continue.</small>`
        },
        {
          target: "#tour-step-submission-header",
          header: {
            title: "Assignment and Meta data"
          },
          content: `<small>In this step you can use NMRium to edit your spectra and assign the peaks to the corresponding chemical groups, additionally, you can provide the metadata of the studies and samples.</small>`
        },
        {
          target: "#tour-step-side-panel-studies",
          header: {
            title: "Studies"
          },
          content: `<small>In this panel, you have a view of all the studies in the project with the datasets they include.</small> `
        },
        {
          target: "#tour-step-select-exp",
          header: {
            title: "Select Experiments"
          },
          content: `<small>You can navigate through different datasets (experiments) within the study through this dropdown.</small>`
        },
        {
          target: "#tour-step-nmrium",
          header: {
            title: "NMRium"
          },
          content: `<small>Visualize and analyse your spectra data using NMRium.<br/> You can visualize both 1D and 2D spectra, do smart peak picking and much more. <br/>Click <a class="text-green-400 hover:text-decoration-line" href="https://docs.nmrxiv.org/docs/introduction/nmrium" target="_blank">here</a> to learn more about NMRium.</small> `
        },
        {
          target: "#tour-step-spectra-info",
          header: {
            title: "Spectra Info"
          },
          content: `<small>In the Info table, you get all the information extracted about the NMR experiment.</small>`
        },
        // {
        //     target: "#sample-info",
        //     header: {
        //         title: "Sample Info.",
        //     },
        //     content: `<small></small>`,
        // },
        // {
        //     target: "#meta-data",
        //     header: {
        //         title: "Metadata.",
        //     },
        //     content: `<small></small>`,
        // },
        {
          target: "#tour-step-proceed-from-step-2",
          header: {
            title: "Proceed"
          },
          content: `<small>Click on proceed to submit your data and allow us for further processing.</small>`
        },
        {
          target: "#tour-step-queue",
          header: {
            title: "Queued"
          },
          content: `<small>Give us some moment to process your submission. <br/>You will automatically be routed to next step and also recieve an email once the process is complete.</small>`
        },
        {
          target: "#tour-step-submission-header",
          header: {
            title: "Complete"
          },
          content: `<small>GREAT!! <br/>Your data is now submitted to us and you are almost done with the submission process. </br>Here you find the summary of the project and we ask you to update few of the essential info to make your project complete. </small>`
        },
        {
          target: "#tour-step-summary",
          header: {
            title: "Summary"
          },
          content: `<small>Checkout to find the quick summary of your Study(s) and the list of Dataset(s) within.</small>`
        },
        {
          target: "#tour-step-privacy",
          header: {
            title: "Privacy"
          },
          content: `<small>From here you can choose to keep your project as private or make it public for open access.</small>`
        },
        {
          target: "#tour-step-release-date",
          header: {
            title: "Release Date"
          },
          content: `<small>Choose a release date to auto publish your project on selected date and time.</small>`
        },
        {
          target: "#tour-step-license",
          header: {
            title: "License"
          },
          content: `<small>Add a license to your project from the drop down. </br> This step is required before making your project public.</small>`
        },
        {
          target: "#tour-step-save",
          header: {
            title: "Save"
          },
          content: `<small>Dont forget to click on Save after making any changes.</small>`
        },
        {
          target: "#tour-step-download",
          header: {
            title: "Download"
          },
          content: `<small>Here is the quick link to download your project.</small>`
        },
        {
          target: "#tour-step-finish",
          header: {
            title: "Finish"
          },
          content: `<small>Thanks for completing the tour!! Press on Finish once your final changes are done and you will be routed to the dashboard where you can find your project listed. </small>`
        }
        /* {
            target: "#tour-step-projects",
            header: {
                title: "Projects.",
            },
            content: `<small>Now that the project is created succesfully, you can find the list of your projects in this section.<br/> You can always visit your project by clicking on it and make changes if required.</small>`,
        },
        {
            target: "#tour-step-tour",
            header: {
                title: "Tour",
            },
            content: `<small>Thanks for completing the tour!! <br/> You can always comeback and start this tour by clicking on this tour button.</small>`,
        },*/
      ]
    };
  },
  mounted: function() {
  },
  methods: {}
};
function _sfc_ssrRender$28(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_v_tour = resolveComponent("v-tour");
  _push(`<div${ssrRenderAttrs(_attrs)}>`);
  _push(ssrRenderComponent(_component_v_tour, {
    name: "appTour",
    steps: $data.steps
  }, null, _parent));
  _push(`</div>`);
}
const _sfc_setup$29 = _sfc_main$29.setup;
_sfc_main$29.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/App/Tour.vue");
  return _sfc_setup$29 ? _sfc_setup$29(props, ctx) : void 0;
};
const AppTour = /* @__PURE__ */ _export_sfc(_sfc_main$29, [["ssrRender", _sfc_ssrRender$28]]);
const _sfc_main$28 = {
  props: {
    text: String
  }
};
function _sfc_ssrRender$27(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "tooltip" }, _attrs))}><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path></svg><span class="w-64 bg-gray-900 text-white p-4 shadow-lg rounded-md tooltiptext">${$props.text}</span></div>`);
}
const _sfc_setup$28 = _sfc_main$28.setup;
_sfc_main$28.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/ToolTip.vue");
  return _sfc_setup$28 ? _sfc_setup$28(props, ctx) : void 0;
};
const ToolTip = /* @__PURE__ */ _export_sfc(_sfc_main$28, [["ssrRender", _sfc_ssrRender$27]]);
const _sfc_main$27 = {
  components: {
    Listbox,
    ListboxButton,
    ListboxLabel,
    ListboxOption,
    ListboxOptions,
    CheckIcon,
    ChevronUpDownIcon,
    ToolTip
  },
  props: ["items", "selected", "label"],
  computed: {
    proxySelected: {
      get() {
        return this.selected;
      },
      set(val) {
        this.$emit("update:selected", val);
      }
    }
  }
};
function _sfc_ssrRender$26(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Listbox = resolveComponent("Listbox");
  const _component_ListboxLabel = resolveComponent("ListboxLabel");
  const _component_ListboxButton = resolveComponent("ListboxButton");
  const _component_ChevronUpDownIcon = resolveComponent("ChevronUpDownIcon");
  const _component_ListboxOptions = resolveComponent("ListboxOptions");
  const _component_ListboxOption = resolveComponent("ListboxOption");
  const _component_CheckIcon = resolveComponent("CheckIcon");
  _push(ssrRenderComponent(_component_Listbox, mergeProps({
    modelValue: $options.proxySelected,
    "onUpdate:modelValue": ($event) => $options.proxySelected = $event,
    as: "div"
  }, _attrs), {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($props.label) {
          _push2(ssrRenderComponent(_component_ListboxLabel, { class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500" }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`${ssrInterpolate($props.label)}`);
              } else {
                return [
                  createTextVNode(toDisplayString($props.label), 1)
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="mt-1 relative"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_ListboxButton, { class: "relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-teal-500 focus:border-teal-500 sm:text-sm" }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              if ($props.selected) {
                _push3(`<span class="block truncate"${_scopeId2}>${ssrInterpolate($props.selected.title)}</span>`);
              } else {
                _push3(`<span class="block truncate"${_scopeId2}>--Select--</span>`);
              }
              _push3(`<span class="absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none"${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_ChevronUpDownIcon, {
                class: "h-5 w-5 text-gray-400",
                "aria-hidden": "true"
              }, null, _parent3, _scopeId2));
              _push3(`</span>`);
            } else {
              return [
                $props.selected ? (openBlock(), createBlock("span", {
                  key: 0,
                  class: "block truncate"
                }, toDisplayString($props.selected.title), 1)) : (openBlock(), createBlock("span", {
                  key: 1,
                  class: "block truncate"
                }, "--Select--")),
                createVNode("span", { class: "absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none" }, [
                  createVNode(_component_ChevronUpDownIcon, {
                    class: "h-5 w-5 text-gray-400",
                    "aria-hidden": "true"
                  })
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_ListboxOptions, { class: "absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm" }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<!--[-->`);
              ssrRenderList($props.items, (item) => {
                _push3(ssrRenderComponent(_component_ListboxOption, {
                  key: item.id,
                  as: "template",
                  value: item
                }, {
                  default: withCtx(({ active, selected }, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`<li class="${ssrRenderClass([
                        active ? "text-white bg-teal-600" : "text-gray-900",
                        "cursor-default border-b select-none relative py-2 pl-8 pr-4"
                      ])}"${_scopeId3}><span class="${ssrRenderClass([
                        selected ? "font-semibold" : "font-normal",
                        "block truncate"
                      ])}"${_scopeId3}><b${_scopeId3}>${ssrInterpolate(item.title)}</b> <br${_scopeId3}>`);
                      if (item.description) {
                        _push4(`<small${_scopeId3}>${item.description}</small>`);
                      } else {
                        _push4(`<!---->`);
                      }
                      _push4(`</span>`);
                      if (selected) {
                        _push4(`<span class="${ssrRenderClass([
                          active ? "text-white" : "text-teal-600",
                          "absolute inset-y-0 left-0 flex items-center pl-1.5"
                        ])}"${_scopeId3}>`);
                        _push4(ssrRenderComponent(_component_CheckIcon, {
                          class: "h-5 w-5",
                          "aria-hidden": "true"
                        }, null, _parent4, _scopeId3));
                        _push4(`</span>`);
                      } else {
                        _push4(`<!---->`);
                      }
                      _push4(`</li>`);
                    } else {
                      return [
                        createVNode("li", {
                          class: [
                            active ? "text-white bg-teal-600" : "text-gray-900",
                            "cursor-default border-b select-none relative py-2 pl-8 pr-4"
                          ]
                        }, [
                          createVNode("span", {
                            class: [
                              selected ? "font-semibold" : "font-normal",
                              "block truncate"
                            ]
                          }, [
                            createVNode("b", null, toDisplayString(item.title), 1),
                            createTextVNode(),
                            createVNode("br"),
                            item.description ? (openBlock(), createBlock("small", {
                              key: 0,
                              innerHTML: item.description
                            }, null, 8, ["innerHTML"])) : createCommentVNode("", true)
                          ], 2),
                          selected ? (openBlock(), createBlock("span", {
                            key: 0,
                            class: [
                              active ? "text-white" : "text-teal-600",
                              "absolute inset-y-0 left-0 flex items-center pl-1.5"
                            ]
                          }, [
                            createVNode(_component_CheckIcon, {
                              class: "h-5 w-5",
                              "aria-hidden": "true"
                            })
                          ], 2)) : createCommentVNode("", true)
                        ], 2)
                      ];
                    }
                  }),
                  _: 2
                }, _parent3, _scopeId2));
              });
              _push3(`<!--]-->`);
            } else {
              return [
                (openBlock(true), createBlock(Fragment, null, renderList($props.items, (item) => {
                  return openBlock(), createBlock(_component_ListboxOption, {
                    key: item.id,
                    as: "template",
                    value: item
                  }, {
                    default: withCtx(({ active, selected }) => [
                      createVNode("li", {
                        class: [
                          active ? "text-white bg-teal-600" : "text-gray-900",
                          "cursor-default border-b select-none relative py-2 pl-8 pr-4"
                        ]
                      }, [
                        createVNode("span", {
                          class: [
                            selected ? "font-semibold" : "font-normal",
                            "block truncate"
                          ]
                        }, [
                          createVNode("b", null, toDisplayString(item.title), 1),
                          createTextVNode(),
                          createVNode("br"),
                          item.description ? (openBlock(), createBlock("small", {
                            key: 0,
                            innerHTML: item.description
                          }, null, 8, ["innerHTML"])) : createCommentVNode("", true)
                        ], 2),
                        selected ? (openBlock(), createBlock("span", {
                          key: 0,
                          class: [
                            active ? "text-white" : "text-teal-600",
                            "absolute inset-y-0 left-0 flex items-center pl-1.5"
                          ]
                        }, [
                          createVNode(_component_CheckIcon, {
                            class: "h-5 w-5",
                            "aria-hidden": "true"
                          })
                        ], 2)) : createCommentVNode("", true)
                      ], 2)
                    ]),
                    _: 2
                  }, 1032, ["value"]);
                }), 128))
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          $props.label ? (openBlock(), createBlock(_component_ListboxLabel, {
            key: 0,
            class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500"
          }, {
            default: withCtx(() => [
              createTextVNode(toDisplayString($props.label), 1)
            ]),
            _: 1
          })) : createCommentVNode("", true),
          createVNode("div", { class: "mt-1 relative" }, [
            createVNode(_component_ListboxButton, { class: "relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-teal-500 focus:border-teal-500 sm:text-sm" }, {
              default: withCtx(() => [
                $props.selected ? (openBlock(), createBlock("span", {
                  key: 0,
                  class: "block truncate"
                }, toDisplayString($props.selected.title), 1)) : (openBlock(), createBlock("span", {
                  key: 1,
                  class: "block truncate"
                }, "--Select--")),
                createVNode("span", { class: "absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none" }, [
                  createVNode(_component_ChevronUpDownIcon, {
                    class: "h-5 w-5 text-gray-400",
                    "aria-hidden": "true"
                  })
                ])
              ]),
              _: 1
            }),
            createVNode(Transition, {
              "leave-active-class": "transition ease-in duration-100",
              "leave-from-class": "opacity-100",
              "leave-to-class": "opacity-0"
            }, {
              default: withCtx(() => [
                createVNode(_component_ListboxOptions, { class: "absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm" }, {
                  default: withCtx(() => [
                    (openBlock(true), createBlock(Fragment, null, renderList($props.items, (item) => {
                      return openBlock(), createBlock(_component_ListboxOption, {
                        key: item.id,
                        as: "template",
                        value: item
                      }, {
                        default: withCtx(({ active, selected }) => [
                          createVNode("li", {
                            class: [
                              active ? "text-white bg-teal-600" : "text-gray-900",
                              "cursor-default border-b select-none relative py-2 pl-8 pr-4"
                            ]
                          }, [
                            createVNode("span", {
                              class: [
                                selected ? "font-semibold" : "font-normal",
                                "block truncate"
                              ]
                            }, [
                              createVNode("b", null, toDisplayString(item.title), 1),
                              createTextVNode(),
                              createVNode("br"),
                              item.description ? (openBlock(), createBlock("small", {
                                key: 0,
                                innerHTML: item.description
                              }, null, 8, ["innerHTML"])) : createCommentVNode("", true)
                            ], 2),
                            selected ? (openBlock(), createBlock("span", {
                              key: 0,
                              class: [
                                active ? "text-white" : "text-teal-600",
                                "absolute inset-y-0 left-0 flex items-center pl-1.5"
                              ]
                            }, [
                              createVNode(_component_CheckIcon, {
                                class: "h-5 w-5",
                                "aria-hidden": "true"
                              })
                            ], 2)) : createCommentVNode("", true)
                          ], 2)
                        ]),
                        _: 2
                      }, 1032, ["value"]);
                    }), 128))
                  ]),
                  _: 1
                })
              ]),
              _: 1
            })
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$27 = _sfc_main$27.setup;
_sfc_main$27.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/SelectRich.vue");
  return _sfc_setup$27 ? _sfc_setup$27(props, ctx) : void 0;
};
const SelectRich = /* @__PURE__ */ _export_sfc(_sfc_main$27, [["ssrRender", _sfc_ssrRender$26]]);
const _sfc_main$26 = {
  components: {
    Dialog,
    DialogOverlay,
    TransitionChild,
    TransitionRoot,
    HeartIcon,
    PencilIcon,
    PlusSmallIcon,
    XMarkIcon
  },
  props: ["dataset"],
  data() {
    return {
      open: false,
      versions: []
    };
  },
  updated() {
    this.fetchVersions();
  },
  methods: {
    toggleVersions() {
      this.open = !this.open;
    },
    fetchVersions() {
      axios.get(
        "/dashboard/datasets/" + this.dataset.id + "/nmriumVersions"
      ).then((response) => {
        this.versions = response.data;
      });
    }
  }
};
function _sfc_ssrRender$25(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_TransitionRoot = resolveComponent("TransitionRoot");
  const _component_Dialog = resolveComponent("Dialog");
  const _component_TransitionChild = resolveComponent("TransitionChild");
  const _component_DialogOverlay = resolveComponent("DialogOverlay");
  const _component_XMarkIcon = resolveComponent("XMarkIcon");
  _push(ssrRenderComponent(_component_TransitionRoot, mergeProps({
    as: "template",
    show: $data.open
  }, _attrs), {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_Dialog, {
          as: "div",
          class: "fixed inset-0 overflow-hidden z-50",
          onClose: ($event) => $data.open = false
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div class="absolute inset-0 overflow-hidden"${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_TransitionChild, {
                as: "template",
                enter: "ease-in-out duration-500",
                "enter-from": "opacity-0",
                "enter-to": "opacity-100",
                leave: "ease-in-out duration-500",
                "leave-from": "opacity-100",
                "leave-to": "opacity-0"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(ssrRenderComponent(_component_DialogOverlay, { class: "absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity" }, null, _parent4, _scopeId3));
                  } else {
                    return [
                      createVNode(_component_DialogOverlay, { class: "absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity" })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`<div class="fixed inset-y-0 right-0 pl-10 max-w-full flex"${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_TransitionChild, {
                as: "template",
                enter: "transform transition ease-in-out duration-500 sm:duration-700",
                "enter-from": "translate-x-full",
                "enter-to": "translate-x-0",
                leave: "transform transition ease-in-out duration-500 sm:duration-700",
                "leave-from": "translate-x-0",
                "leave-to": "translate-x-full"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<div class="relative w-96"${_scopeId3}>`);
                    _push4(ssrRenderComponent(_component_TransitionChild, {
                      as: "template",
                      enter: "ease-in-out duration-500",
                      "enter-from": "opacity-0",
                      "enter-to": "opacity-100",
                      leave: "ease-in-out duration-500",
                      "leave-from": "opacity-100",
                      "leave-to": "opacity-0"
                    }, {
                      default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`<div class="absolute top-0 left-0 -ml-8 pt-4 pr-2 flex sm:-ml-10 sm:pr-4"${_scopeId4}><button type="button" class="rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white"${_scopeId4}><span class="sr-only"${_scopeId4}>Close panel</span>`);
                          _push5(ssrRenderComponent(_component_XMarkIcon, {
                            class: "h-6 w-6",
                            "aria-hidden": "true"
                          }, null, _parent5, _scopeId4));
                          _push5(`</button></div>`);
                        } else {
                          return [
                            createVNode("div", { class: "absolute top-0 left-0 -ml-8 pt-4 pr-2 flex sm:-ml-10 sm:pr-4" }, [
                              createVNode("button", {
                                type: "button",
                                class: "rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white",
                                onClick: ($event) => $data.open = false
                              }, [
                                createVNode("span", { class: "sr-only" }, "Close panel"),
                                createVNode(_component_XMarkIcon, {
                                  class: "h-6 w-6",
                                  "aria-hidden": "true"
                                })
                              ], 8, ["onClick"])
                            ])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(`<div class="h-full bg-white p-8 overflow-y-auto"${_scopeId3}><div class="pb-16 space-y-6"${_scopeId3}><div${_scopeId3}><div class="mt-0 flex items-start justify-between"${_scopeId3}><div${_scopeId3}><div class="mt-0 flex items-start justify-between"${_scopeId3}><div class="grid grid-cols-1 pt-1 text-left pt-0"${_scopeId3}><div class="text-xs italic text-gray-600 pr-5"${_scopeId3}><span class="text-gray-400"${_scopeId3}>Last updated on</span><br${_scopeId3}> ${ssrInterpolate(_ctx.formatDateTime(
                      $props.dataset.updated_at
                    ))}</div></div></div></div></div></div><div${_scopeId3}><div${_scopeId3}><h2 id="timeline-title" class="text-lg font-medium text-gray-900"${_scopeId3}> Edited by </h2><div class="mt-6 flow-root"${_scopeId3}><ul role="list" class="-mb-8"${_scopeId3}><!--[-->`);
                    ssrRenderList($data.versions, (version) => {
                      _push4(`<li${_scopeId3}><div class="relative pb-8"${_scopeId3}><span class="absolute top-4 left-4 -ml-px h-full w-0.5 bg-gray-200" aria-hidden="true"${_scopeId3}></span><div class="relative flex space-x-3"${_scopeId3}><div${_scopeId3}><img${ssrRenderAttr(
                        "src",
                        version.user.profile_photo_url
                      )}${ssrRenderAttr(
                        "alt",
                        version.user.name
                      )} class="h-8 w-8 rounded-full bg-gray-400 flex items-center justify-center ring-8 ring-white object-cover"${_scopeId3}></div><div class="min-w-0 flex-1 pt-1.5 flex justify-between space-x-4"${_scopeId3}><div${_scopeId3}><a class="font-medium text-gray-900"${_scopeId3}>${ssrInterpolate(version.user.name)}</a><br${_scopeId3}><small${_scopeId3}><time${_scopeId3}>${ssrInterpolate(_ctx.formatDateTime(
                        version.updated_at
                      ))}</time></small></div></div></div></div></li>`);
                    });
                    _push4(`<!--]--></ul></div></div></div></div>`);
                    if ($data.versions.length) {
                      _push4(`<small class="text-gray-500"${_scopeId3}><i${_scopeId3}>No logs before <br${_scopeId3}>${ssrInterpolate(_ctx.formatDateTime(
                        $data.versions[$data.versions.length - 1]["updated_at"]
                      ))}</i></small>`);
                    } else {
                      _push4(`<!---->`);
                    }
                    _push4(`</div></div>`);
                  } else {
                    return [
                      createVNode("div", { class: "relative w-96" }, [
                        createVNode(_component_TransitionChild, {
                          as: "template",
                          enter: "ease-in-out duration-500",
                          "enter-from": "opacity-0",
                          "enter-to": "opacity-100",
                          leave: "ease-in-out duration-500",
                          "leave-from": "opacity-100",
                          "leave-to": "opacity-0"
                        }, {
                          default: withCtx(() => [
                            createVNode("div", { class: "absolute top-0 left-0 -ml-8 pt-4 pr-2 flex sm:-ml-10 sm:pr-4" }, [
                              createVNode("button", {
                                type: "button",
                                class: "rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white",
                                onClick: ($event) => $data.open = false
                              }, [
                                createVNode("span", { class: "sr-only" }, "Close panel"),
                                createVNode(_component_XMarkIcon, {
                                  class: "h-6 w-6",
                                  "aria-hidden": "true"
                                })
                              ], 8, ["onClick"])
                            ])
                          ]),
                          _: 1
                        }),
                        createVNode("div", { class: "h-full bg-white p-8 overflow-y-auto" }, [
                          createVNode("div", { class: "pb-16 space-y-6" }, [
                            createVNode("div", null, [
                              createVNode("div", { class: "mt-0 flex items-start justify-between" }, [
                                createVNode("div", null, [
                                  createVNode("div", { class: "mt-0 flex items-start justify-between" }, [
                                    createVNode("div", { class: "grid grid-cols-1 pt-1 text-left pt-0" }, [
                                      createVNode("div", { class: "text-xs italic text-gray-600 pr-5" }, [
                                        createVNode("span", { class: "text-gray-400" }, "Last updated on"),
                                        createVNode("br"),
                                        createTextVNode(" " + toDisplayString(_ctx.formatDateTime(
                                          $props.dataset.updated_at
                                        )), 1)
                                      ])
                                    ])
                                  ])
                                ])
                              ])
                            ]),
                            createVNode("div", null, [
                              createVNode("div", null, [
                                createVNode("h2", {
                                  id: "timeline-title",
                                  class: "text-lg font-medium text-gray-900"
                                }, " Edited by "),
                                createVNode("div", { class: "mt-6 flow-root" }, [
                                  createVNode("ul", {
                                    role: "list",
                                    class: "-mb-8"
                                  }, [
                                    (openBlock(true), createBlock(Fragment, null, renderList($data.versions, (version) => {
                                      return openBlock(), createBlock("li", {
                                        key: version.id
                                      }, [
                                        createVNode("div", { class: "relative pb-8" }, [
                                          createVNode("span", {
                                            class: "absolute top-4 left-4 -ml-px h-full w-0.5 bg-gray-200",
                                            "aria-hidden": "true"
                                          }),
                                          createVNode("div", { class: "relative flex space-x-3" }, [
                                            createVNode("div", null, [
                                              createVNode("img", {
                                                src: version.user.profile_photo_url,
                                                alt: version.user.name,
                                                class: "h-8 w-8 rounded-full bg-gray-400 flex items-center justify-center ring-8 ring-white object-cover"
                                              }, null, 8, ["src", "alt"])
                                            ]),
                                            createVNode("div", { class: "min-w-0 flex-1 pt-1.5 flex justify-between space-x-4" }, [
                                              createVNode("div", null, [
                                                createVNode("a", { class: "font-medium text-gray-900" }, toDisplayString(version.user.name), 1),
                                                createVNode("br"),
                                                createVNode("small", null, [
                                                  createVNode("time", null, toDisplayString(_ctx.formatDateTime(
                                                    version.updated_at
                                                  )), 1)
                                                ])
                                              ])
                                            ])
                                          ])
                                        ])
                                      ]);
                                    }), 128))
                                  ])
                                ])
                              ])
                            ])
                          ]),
                          $data.versions.length ? (openBlock(), createBlock("small", {
                            key: 0,
                            class: "text-gray-500"
                          }, [
                            createVNode("i", null, [
                              createTextVNode("No logs before "),
                              createVNode("br"),
                              createTextVNode(toDisplayString(_ctx.formatDateTime(
                                $data.versions[$data.versions.length - 1]["updated_at"]
                              )), 1)
                            ])
                          ])) : createCommentVNode("", true)
                        ])
                      ])
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</div></div>`);
            } else {
              return [
                createVNode("div", { class: "absolute inset-0 overflow-hidden" }, [
                  createVNode(_component_TransitionChild, {
                    as: "template",
                    enter: "ease-in-out duration-500",
                    "enter-from": "opacity-0",
                    "enter-to": "opacity-100",
                    leave: "ease-in-out duration-500",
                    "leave-from": "opacity-100",
                    "leave-to": "opacity-0"
                  }, {
                    default: withCtx(() => [
                      createVNode(_component_DialogOverlay, { class: "absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity" })
                    ]),
                    _: 1
                  }),
                  createVNode("div", { class: "fixed inset-y-0 right-0 pl-10 max-w-full flex" }, [
                    createVNode(_component_TransitionChild, {
                      as: "template",
                      enter: "transform transition ease-in-out duration-500 sm:duration-700",
                      "enter-from": "translate-x-full",
                      "enter-to": "translate-x-0",
                      leave: "transform transition ease-in-out duration-500 sm:duration-700",
                      "leave-from": "translate-x-0",
                      "leave-to": "translate-x-full"
                    }, {
                      default: withCtx(() => [
                        createVNode("div", { class: "relative w-96" }, [
                          createVNode(_component_TransitionChild, {
                            as: "template",
                            enter: "ease-in-out duration-500",
                            "enter-from": "opacity-0",
                            "enter-to": "opacity-100",
                            leave: "ease-in-out duration-500",
                            "leave-from": "opacity-100",
                            "leave-to": "opacity-0"
                          }, {
                            default: withCtx(() => [
                              createVNode("div", { class: "absolute top-0 left-0 -ml-8 pt-4 pr-2 flex sm:-ml-10 sm:pr-4" }, [
                                createVNode("button", {
                                  type: "button",
                                  class: "rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white",
                                  onClick: ($event) => $data.open = false
                                }, [
                                  createVNode("span", { class: "sr-only" }, "Close panel"),
                                  createVNode(_component_XMarkIcon, {
                                    class: "h-6 w-6",
                                    "aria-hidden": "true"
                                  })
                                ], 8, ["onClick"])
                              ])
                            ]),
                            _: 1
                          }),
                          createVNode("div", { class: "h-full bg-white p-8 overflow-y-auto" }, [
                            createVNode("div", { class: "pb-16 space-y-6" }, [
                              createVNode("div", null, [
                                createVNode("div", { class: "mt-0 flex items-start justify-between" }, [
                                  createVNode("div", null, [
                                    createVNode("div", { class: "mt-0 flex items-start justify-between" }, [
                                      createVNode("div", { class: "grid grid-cols-1 pt-1 text-left pt-0" }, [
                                        createVNode("div", { class: "text-xs italic text-gray-600 pr-5" }, [
                                          createVNode("span", { class: "text-gray-400" }, "Last updated on"),
                                          createVNode("br"),
                                          createTextVNode(" " + toDisplayString(_ctx.formatDateTime(
                                            $props.dataset.updated_at
                                          )), 1)
                                        ])
                                      ])
                                    ])
                                  ])
                                ])
                              ]),
                              createVNode("div", null, [
                                createVNode("div", null, [
                                  createVNode("h2", {
                                    id: "timeline-title",
                                    class: "text-lg font-medium text-gray-900"
                                  }, " Edited by "),
                                  createVNode("div", { class: "mt-6 flow-root" }, [
                                    createVNode("ul", {
                                      role: "list",
                                      class: "-mb-8"
                                    }, [
                                      (openBlock(true), createBlock(Fragment, null, renderList($data.versions, (version) => {
                                        return openBlock(), createBlock("li", {
                                          key: version.id
                                        }, [
                                          createVNode("div", { class: "relative pb-8" }, [
                                            createVNode("span", {
                                              class: "absolute top-4 left-4 -ml-px h-full w-0.5 bg-gray-200",
                                              "aria-hidden": "true"
                                            }),
                                            createVNode("div", { class: "relative flex space-x-3" }, [
                                              createVNode("div", null, [
                                                createVNode("img", {
                                                  src: version.user.profile_photo_url,
                                                  alt: version.user.name,
                                                  class: "h-8 w-8 rounded-full bg-gray-400 flex items-center justify-center ring-8 ring-white object-cover"
                                                }, null, 8, ["src", "alt"])
                                              ]),
                                              createVNode("div", { class: "min-w-0 flex-1 pt-1.5 flex justify-between space-x-4" }, [
                                                createVNode("div", null, [
                                                  createVNode("a", { class: "font-medium text-gray-900" }, toDisplayString(version.user.name), 1),
                                                  createVNode("br"),
                                                  createVNode("small", null, [
                                                    createVNode("time", null, toDisplayString(_ctx.formatDateTime(
                                                      version.updated_at
                                                    )), 1)
                                                  ])
                                                ])
                                              ])
                                            ])
                                          ])
                                        ]);
                                      }), 128))
                                    ])
                                  ])
                                ])
                              ])
                            ]),
                            $data.versions.length ? (openBlock(), createBlock("small", {
                              key: 0,
                              class: "text-gray-500"
                            }, [
                              createVNode("i", null, [
                                createTextVNode("No logs before "),
                                createVNode("br"),
                                createTextVNode(toDisplayString(_ctx.formatDateTime(
                                  $data.versions[$data.versions.length - 1]["updated_at"]
                                )), 1)
                              ])
                            ])) : createCommentVNode("", true)
                          ])
                        ])
                      ]),
                      _: 1
                    })
                  ])
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_Dialog, {
            as: "div",
            class: "fixed inset-0 overflow-hidden z-50",
            onClose: ($event) => $data.open = false
          }, {
            default: withCtx(() => [
              createVNode("div", { class: "absolute inset-0 overflow-hidden" }, [
                createVNode(_component_TransitionChild, {
                  as: "template",
                  enter: "ease-in-out duration-500",
                  "enter-from": "opacity-0",
                  "enter-to": "opacity-100",
                  leave: "ease-in-out duration-500",
                  "leave-from": "opacity-100",
                  "leave-to": "opacity-0"
                }, {
                  default: withCtx(() => [
                    createVNode(_component_DialogOverlay, { class: "absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity" })
                  ]),
                  _: 1
                }),
                createVNode("div", { class: "fixed inset-y-0 right-0 pl-10 max-w-full flex" }, [
                  createVNode(_component_TransitionChild, {
                    as: "template",
                    enter: "transform transition ease-in-out duration-500 sm:duration-700",
                    "enter-from": "translate-x-full",
                    "enter-to": "translate-x-0",
                    leave: "transform transition ease-in-out duration-500 sm:duration-700",
                    "leave-from": "translate-x-0",
                    "leave-to": "translate-x-full"
                  }, {
                    default: withCtx(() => [
                      createVNode("div", { class: "relative w-96" }, [
                        createVNode(_component_TransitionChild, {
                          as: "template",
                          enter: "ease-in-out duration-500",
                          "enter-from": "opacity-0",
                          "enter-to": "opacity-100",
                          leave: "ease-in-out duration-500",
                          "leave-from": "opacity-100",
                          "leave-to": "opacity-0"
                        }, {
                          default: withCtx(() => [
                            createVNode("div", { class: "absolute top-0 left-0 -ml-8 pt-4 pr-2 flex sm:-ml-10 sm:pr-4" }, [
                              createVNode("button", {
                                type: "button",
                                class: "rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white",
                                onClick: ($event) => $data.open = false
                              }, [
                                createVNode("span", { class: "sr-only" }, "Close panel"),
                                createVNode(_component_XMarkIcon, {
                                  class: "h-6 w-6",
                                  "aria-hidden": "true"
                                })
                              ], 8, ["onClick"])
                            ])
                          ]),
                          _: 1
                        }),
                        createVNode("div", { class: "h-full bg-white p-8 overflow-y-auto" }, [
                          createVNode("div", { class: "pb-16 space-y-6" }, [
                            createVNode("div", null, [
                              createVNode("div", { class: "mt-0 flex items-start justify-between" }, [
                                createVNode("div", null, [
                                  createVNode("div", { class: "mt-0 flex items-start justify-between" }, [
                                    createVNode("div", { class: "grid grid-cols-1 pt-1 text-left pt-0" }, [
                                      createVNode("div", { class: "text-xs italic text-gray-600 pr-5" }, [
                                        createVNode("span", { class: "text-gray-400" }, "Last updated on"),
                                        createVNode("br"),
                                        createTextVNode(" " + toDisplayString(_ctx.formatDateTime(
                                          $props.dataset.updated_at
                                        )), 1)
                                      ])
                                    ])
                                  ])
                                ])
                              ])
                            ]),
                            createVNode("div", null, [
                              createVNode("div", null, [
                                createVNode("h2", {
                                  id: "timeline-title",
                                  class: "text-lg font-medium text-gray-900"
                                }, " Edited by "),
                                createVNode("div", { class: "mt-6 flow-root" }, [
                                  createVNode("ul", {
                                    role: "list",
                                    class: "-mb-8"
                                  }, [
                                    (openBlock(true), createBlock(Fragment, null, renderList($data.versions, (version) => {
                                      return openBlock(), createBlock("li", {
                                        key: version.id
                                      }, [
                                        createVNode("div", { class: "relative pb-8" }, [
                                          createVNode("span", {
                                            class: "absolute top-4 left-4 -ml-px h-full w-0.5 bg-gray-200",
                                            "aria-hidden": "true"
                                          }),
                                          createVNode("div", { class: "relative flex space-x-3" }, [
                                            createVNode("div", null, [
                                              createVNode("img", {
                                                src: version.user.profile_photo_url,
                                                alt: version.user.name,
                                                class: "h-8 w-8 rounded-full bg-gray-400 flex items-center justify-center ring-8 ring-white object-cover"
                                              }, null, 8, ["src", "alt"])
                                            ]),
                                            createVNode("div", { class: "min-w-0 flex-1 pt-1.5 flex justify-between space-x-4" }, [
                                              createVNode("div", null, [
                                                createVNode("a", { class: "font-medium text-gray-900" }, toDisplayString(version.user.name), 1),
                                                createVNode("br"),
                                                createVNode("small", null, [
                                                  createVNode("time", null, toDisplayString(_ctx.formatDateTime(
                                                    version.updated_at
                                                  )), 1)
                                                ])
                                              ])
                                            ])
                                          ])
                                        ])
                                      ]);
                                    }), 128))
                                  ])
                                ])
                              ])
                            ])
                          ]),
                          $data.versions.length ? (openBlock(), createBlock("small", {
                            key: 0,
                            class: "text-gray-500"
                          }, [
                            createVNode("i", null, [
                              createTextVNode("No logs before "),
                              createVNode("br"),
                              createTextVNode(toDisplayString(_ctx.formatDateTime(
                                $data.versions[$data.versions.length - 1]["updated_at"]
                              )), 1)
                            ])
                          ])) : createCommentVNode("", true)
                        ])
                      ])
                    ]),
                    _: 1
                  })
                ])
              ])
            ]),
            _: 1
          }, 8, ["onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$26 = _sfc_main$26.setup;
_sfc_main$26.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/Versions.vue");
  return _sfc_setup$26 ? _sfc_setup$26(props, ctx) : void 0;
};
const Versions = /* @__PURE__ */ _export_sfc(_sfc_main$26, [["ssrRender", _sfc_ssrRender$25]]);
const _sfc_main$25 = {
  components: {
    Versions,
    ArrowPathIcon
  },
  props: {
    dataset: Object,
    project: Object,
    study: Object
  },
  emits: ["loading"],
  setup() {
    const versionsElement = ref(null);
    return {
      versionsElement
    };
  },
  data() {
    return {
      spectraError: null,
      selectedSpectraData: null,
      autoSaving: false,
      currentMolecules: [],
      reset: false,
      resetInProgress: false,
      info: null,
      version: null
    };
  },
  computed: {
    url() {
      return String(this.$page.props.url) ? String(this.$page.props.url) : "https://dev.nmrxiv.org";
    },
    nmriumURL() {
      return this.$page.props.nmriumURL ? String(this.$page.props.nmriumURL + "&id=" + Math.random()) : "https://nmriumdev.nmrxiv.org?defaultEmptyMessage=''&workspace=embedded&id=" + Math.random();
    },
    mailFromAddress() {
      return String(this.$page.props.mailFromAddress);
    }
  },
  watch: {
    dataset: {
      immediate: true,
      handler() {
        this.loadSpectra();
      }
    },
    study: {
      immediate: true,
      handler() {
        this.loadSpectra();
      }
    }
  },
  methods: {
    registerEvents() {
      const saveNMRiumUpdates = (e2) => {
        const { data, type } = e2.data;
        if (type == "nmr-wrapper:action-response") {
          if (e2.origin != "https://nmriumdev.nmrxiv.org" && e2.origin != "https://nmrium.nmrxiv.org") {
            return;
          }
          let actionType = data.type;
          if (actionType == "exportSpectraViewerAsBlob") {
            this.saveStudyPreview(data.data);
          }
        }
        if (data && data.source == "data") {
          if (e2.origin != "https://nmriumdev.nmrxiv.org" && e2.origin != "https://nmrium.nmrxiv.org") {
            return;
          }
          if (type == "nmr-wrapper:error") {
            this.spectraError = e2.data;
            this.updateLoadingStatus(false);
            return;
          }
          let state = data.state;
          this.version = state.version;
          let actionType = state.data.actionType;
          if (type == "nmr-wrapper:data-change") {
            if (state.data.spectra.length > 0) {
              this.selectedSpectraData = state.data;
              if (actionType == "INITIATE") {
                if (!this.study.has_nmrium || this.resetInProgress) {
                  delete this.selectedSpectraData["actionType"];
                  this.selectedSpectraData.spectra.forEach(
                    (spec) => {
                      delete spec["data"];
                      delete spec["meta"];
                      delete spec["originalData"];
                      delete spec["originalInfo"];
                    }
                  );
                  if (this.study.study_photo_url == "") {
                    setTimeout(
                      (function() {
                        this.exportPreview();
                      }).bind(this),
                      500
                    );
                  }
                  this.resetInProgress = false;
                  this.updateStudyNMRiumInfo();
                  return;
                } else {
                  this.infoLog(
                    "Spectra loaded successfully...",
                    true
                  );
                  this.updateLoadingStatus(false);
                  return;
                }
              } else {
                this.updateLoadingStatus(
                  true,
                  "Saving updates: " + this.study.name
                );
                delete this.selectedSpectraData["actionType"];
                this.selectedSpectraData.spectra.forEach(
                  (spec) => {
                    delete spec["data"];
                    delete spec["meta"];
                    delete spec["originalData"];
                    delete spec["originalInfo"];
                  }
                );
                this.updateStudyNMRiumInfo();
                return;
              }
            }
          }
        }
      };
      if (!this.$props.eventRegistered) {
        window.addEventListener("message", saveNMRiumUpdates);
        this.$props.eventRegistered = true;
      } else {
        window.removeEventListener("message", saveNMRiumUpdates);
        this.$props.eventRegistered = false;
      }
    },
    loadSpectra() {
      this.infoLog("Loading Spectra..");
      const iframe = window.frames.submissionNMRiumIframe;
      this.spectraError = null;
      this.currentMolecules = [];
      let username = this.$page.props.team.owner ? this.$page.props.team.owner.username : this.project.owner.username;
      if (iframe) {
        this.updateLoadingStatus(
          true,
          "Loading spectra: " + this.study.name
        );
        if (this.study && this.study.has_nmrium) {
          this.infoLog("Loading Spectra from NMRium JSON..");
          axios.get(
            "/dashboard/studies/" + this.study.id + "/nmriumInfo"
          ).then((response) => {
            let nmrium_info = response.data;
            if (nmrium_info) {
              let data = {
                data: nmrium_info,
                type: "nmrium"
              };
              iframe.postMessage(
                { type: `nmr-wrapper:load`, data },
                "*"
              );
              this.updateMolecularData(
                nmrium_info.data.molecules
              );
            } else {
              this.loadFromURLs(null);
            }
          });
        } else {
          if (this.study.datasets.length > 0) {
            let urls = [];
            let url = null;
            if (this.study.download_url) {
              url = this.study.download_url;
            } else {
              url = this.url + "/" + username + "/datasets/" + this.project.slug + "/" + this.study.slug;
            }
            urls.push(url);
            this.loadFromURLs(urls);
          }
        }
      }
    },
    loadFromURLs(urls) {
      this.infoLog("Loading Spectra from URL..");
      const iframe = window.frames.submissionNMRiumIframe;
      if (!urls) {
        urls = [];
        let url = null;
        if (this.study.download_url) {
          url = this.study.download_url;
        } else {
          let username = this.$page.props.team.owner ? this.$page.props.team.owner.username : this.project.owner.username;
          url = this.url + "/" + username + "/datasets/" + this.project.slug + "/" + this.study.slug;
          urls.push(url);
        }
        urls.push(url);
        this.loadFromURLs(urls);
      }
      let data = {
        data: urls,
        type: "url"
      };
      iframe.postMessage({ type: `nmr-wrapper:load`, data }, "*");
    },
    updateStudyNMRiumInfo() {
      if (this.study != null && this.selectedSpectraData) {
        let _version = this.version ? this.version : 4;
        axios.post(
          "/dashboard/studies/" + this.study.id + "/nmriumInfo",
          {
            version: _version,
            data: this.selectedSpectraData
          }
        ).then((response) => {
          this.infoLog("Spectra saved successfully", true);
          this.updateLoadingStatus(false);
          this.autoSaving = false;
          this.study.has_nmrium = response.data.has_nmrium;
          this.updateMolecularData(
            this.selectedSpectraData.molecules
          );
        }).catch(() => {
          this.updateLoadingStatus(false);
          this.infoLog("Error saving spectra info");
          console.error(
            "Error saving the nmrium info. Please contact us at " + this.mailFromAddress + " if the error persist."
          );
          this.autoSaving = false;
        });
      }
    },
    fixLineError(mol) {
      let lineNumber = mol.molfile.substring(0, mol.molfile.indexOf("V2000")).split("\n").length;
      if (lineNumber == 3) {
        mol.molfile = "\n" + mol.molfile;
      }
      return mol;
    },
    updateMolecularData(molecules) {
      if (molecules.length > 0) {
        molecules.forEach((mol) => {
          mol = this.fixLineError(mol);
          axios.post(
            "https://api.naturalproducts.net/latest/chem/standardize",
            mol.molfile
          ).then((res) => {
            let _mol = res.data;
            axios.post(
              "/dashboard/studies/" + this.study.id + "/molecule",
              {
                InChI: _mol.inchi,
                InChIKey: _mol.inchikey,
                percentage: 0,
                mol: _mol.standardized_mol,
                canonical_smiles: _mol.canonical_smiles
              }
            ).then((res2) => {
              this.study.sample.molecules = res2.data;
            });
          });
        });
      }
    },
    updateDataSet() {
      if (this.dataset != null && this.selectedSpectraData.length > 0) {
        axios.post(
          "/dashboard/datasets/" + this.dataset.id + "/nmriumInfo",
          {
            spectra: this.selectedSpectraData,
            molecules: this.currentMolecules,
            version: this.version || 4
          }
        ).then((response) => {
          this.infoLog("Spectra saved successfully", true);
          this.autoSaving = false;
          this.dataset.has_nmrium = response.data.has_nmrium;
        }).catch((err) => {
          this.infoLog("Error saving spectra info");
          console.error(
            "Error saving the nmrium info. Please contact us at {{mailFromAddress}} if the error persist."
          );
          this.autoSaving = false;
        });
      }
    },
    loadMol(molFile) {
      let svgString = null;
      let mol = OCL.Molecule.fromMolfile(molFile);
      if (mol.toIsomericSmiles() != "") {
        svgString = mol.toSVG(300, 300);
      }
      return svgString;
    },
    exportPreview() {
      this.infoLog("Updating Preview");
      const iframe = window.frames.submissionNMRiumIframe;
      if (iframe) {
        let data = {
          type: "exportSpectraViewerAsBlob"
        };
        iframe.postMessage(
          {
            type: `nmr-wrapper:action-request`,
            data
          },
          "*"
        );
      }
    },
    saveStudyPreview(data) {
      if (this.study) {
        const reader = new FileReader();
        reader.addEventListener("loadend", () => {
          let svg = reader.result;
          axios.post(
            "/dashboard/studies/" + this.study.id + "/preview",
            {
              img: svg
            }
          ).then((response) => {
            this.infoLog("Saved preview successfully", true);
          });
        });
        reader.readAsText(data.blob);
      }
    },
    getSVGString(molecule) {
      if (molecule.MOL) {
        let mol = OCL.Molecule.fromMolfile(
          "\n  " + molecule.MOL.replaceAll('"', "")
        );
        return mol.toSVG(200, 200);
      }
    },
    updateLoadingStatus(status, message) {
      this.$emit("loading", {
        status,
        message
      });
    },
    infoLog(message, reset) {
      this.info = message;
      if (reset) {
        setTimeout(() => {
          this.info = "";
        }, 5e3);
      }
    },
    resetStudy() {
      this.resetInProgress = true;
      this.loadFromURLs(null);
    },
    showVersions() {
      this.versionsElement.toggleVersions();
    }
  }
};
function _sfc_ssrRender$24(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_ArrowPathIcon = resolveComponent("ArrowPathIcon");
  const _component_Versions = resolveComponent("Versions");
  _push(`<div${ssrRenderAttrs(_attrs)}><div><div class="mb-2 float-right"><small><a class="text-xs cursor-pointer hover:text-blue-700 mr-2" href="https://docs.nmrxiv.org/advanced-guides/nmrium/nmrium.html" target="_blank">Learn more </a><a class="cursor-pointer mr-3 border px-2 py-1 rounded-md">Reset</a><a class="cursor-pointer border px-2 py-1 rounded-md">`);
  _push(ssrRenderComponent(_component_ArrowPathIcon, { class: "w-4 h-4 inline" }, null, _parent));
  _push(` Preview</a></small></div><small class="text-gray-400">`);
  if ($data.info) {
    _push(`<span>${ssrInterpolate($data.info)}</span>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</small></div>`);
  if ($data.spectraError) {
    _push(`<div><div class="rounded-md bg-red-50 p-4"><div class="flex"><div class="flex-shrink-0"><svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z" clip-rule="evenodd"></path></svg></div><div class="ml-3"><h3 class="text-sm font-medium text-red-800"> There were errors loading spectra </h3><div class="mt-2 text-sm text-red-700"><ul role="list" class="list-disc space-y-1 pl-5"><li>${ssrInterpolate($data.spectraError)}</li></ul></div></div></div></div></div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`<iframe name="submissionNMRiumIframe" frameborder="0" allowfullscreen class="rounded-md border" style="${ssrRenderStyle({ "width": "100%", "height": "75vh", "max-height": "600px" })}"${ssrRenderAttr("src", $options.nmriumURL)}></iframe>`);
  _push(ssrRenderComponent(_component_Versions, {
    ref: "versionsElement",
    dataset: $props.dataset
  }, null, _parent));
  _push(`</div>`);
}
const _sfc_setup$25 = _sfc_main$25.setup;
_sfc_main$25.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/SpectraEditor.vue");
  return _sfc_setup$25 ? _sfc_setup$25(props, ctx) : void 0;
};
const SpectraEditor = /* @__PURE__ */ _export_sfc(_sfc_main$25, [["ssrRender", _sfc_ssrRender$24]]);
const _sfc_main$24 = {
  props: ["status"],
  computed: {
    isRequired() {
      if (typeof this.status != "boolean") {
        return this.status.indexOf("|required") > -1;
      }
      return true;
    },
    valueExists() {
      if (typeof this.status == "boolean") {
        return this.status;
      }
      return this.status ? this.status.split("|")[0] == "true" : "false";
    }
  }
};
function _sfc_ssrRender$23(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}>`);
  if ($options.valueExists) {
    _push(`<div class="inline-flex py-2 mr-2 text-xs font-semibold leading-5 text-green-800"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5"><path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg></div>`);
  } else {
    _push(`<!---->`);
  }
  if (!$options.valueExists && !$options.isRequired) {
    _push(`<div class="inline-flex py-2 mr-2 text-xs font-semibold leading-5 text-yellow-400"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5"><path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z"></path></svg></div>`);
  } else {
    _push(`<!---->`);
  }
  if (!$options.valueExists && $options.isRequired) {
    _push(`<div class="inline-flex py-2 mr-2 text-xs font-semibold leading-5 text-red-800"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5"><path stroke-linecap="round" stroke-linejoin="round" d="M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg></div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div>`);
}
const _sfc_setup$24 = _sfc_main$24.setup;
_sfc_main$24.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/ValidationStatus.vue");
  return _sfc_setup$24 ? _sfc_setup$24(props, ctx) : void 0;
};
const ValidationStatus = /* @__PURE__ */ _export_sfc(_sfc_main$24, [["ssrRender", _sfc_ssrRender$23]]);
const _sfc_main$23 = {
  components: {
    ValidationStatus,
    Disclosure,
    DisclosureButton,
    DisclosurePanel,
    ChevronUpIcon
  },
  props: {
    project: Object,
    validation: Object,
    mode: String,
    draft: Number
  },
  methods: {
    getStatus(value) {
      if (typeof value == "boolean") {
        return value;
      }
      return value ? value.split("|")[0] == "true" : "false";
    },
    update(model, property) {
      if (this.mode == "study") {
        this.$emit("update", {
          property,
          model
        });
      } else {
        if (window) {
          window.location.replace(
            "/upload?draft_id=" + this.draft + "&step=2&sample=" + model.id
          );
        }
      }
    }
  }
};
function _sfc_ssrRender$22(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_ValidationStatus = resolveComponent("ValidationStatus");
  const _component_Disclosure = resolveComponent("Disclosure");
  const _component_DisclosureButton = resolveComponent("DisclosureButton");
  const _component_ChevronUpIcon = resolveComponent("ChevronUpIcon");
  const _component_DisclosurePanel = resolveComponent("DisclosurePanel");
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 class="text-md font-extrabold text-gray-400"> Here’s how your `);
  if ($props.mode != "study") {
    _push(`<span>project</span>`);
  } else {
    _push(`<span>samples meta-data</span>`);
  }
  _push(` compares to <a target="_blank" class="text-blue-800" href="https://www.nfdi4chem.de/index.php/reports-from-minimum-information-standards-workshops">recommended community standards</a>. </h1><div class="items-center text-sm mt-6 mb-3 text-gray-700 uppercase font-bold tracking-widest"> Check list <div class="float-right"><small><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 inline text-red-700 mr-1"><path stroke-linecap="round" stroke-linejoin="round" d="M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>Missing <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 inline text-yellow-700 mr-1 ml-3"><path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z"></path></svg>Optional <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 inline text-green-700 mr-1 ml-3"><path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg> Complete</small></div></div><div class="border overflow-hidden bg-white shadow sm:rounded-md mb-12">`);
  if ($props.validation) {
    _push(`<ul role="list" class="divide-y border-t divide-gray-200">`);
    if ($props.mode != "study") {
      _push(`<li><a target="_blank" class="block"><div class="px-4 py-4 sm:px-6"><div class="flex items-center border-b">`);
      _push(ssrRenderComponent(_component_ValidationStatus, {
        status: $props.validation.project.status
      }, null, _parent));
      _push(`<p class="truncate text-md font-bold text-indigo-600"> Project </p></div><div class="flex items-center mt-2 hover:bg-gray-100 rounded-md px-2">`);
      _push(ssrRenderComponent(_component_ValidationStatus, {
        status: $props.validation.project.title
      }, null, _parent));
      _push(`<p class="truncate text-md font-bold text-dark-600"> Name </p>`);
      if (!$options.getStatus($props.validation.project.title)) {
        _push(`<a target="_blank"${ssrRenderAttr(
          "href",
          _ctx.route("publish", $props.project.draft_id) + "?edit=title#project-details"
        )} class="cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"> Edit </a>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div><div class="flex items-center hover:bg-gray-100 rounded-md px-2">`);
      _push(ssrRenderComponent(_component_ValidationStatus, {
        status: $props.validation.project.description
      }, null, _parent));
      _push(`<p class="truncate text-md font-bold text-dark-600"> Description </p>`);
      if (!$options.getStatus(
        $props.validation.project.description
      )) {
        _push(`<a target="_blank"${ssrRenderAttr(
          "href",
          _ctx.route("publish", $props.project.draft_id) + "?edit=description#project-details"
        )} class="cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"> Edit </a>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div><div class="flex items-center hover:bg-gray-100 rounded-md px-2">`);
      _push(ssrRenderComponent(_component_ValidationStatus, {
        status: $props.validation.project.keywords
      }, null, _parent));
      _push(`<p class="truncate text-md font-bold text-dark-600"> Keywords </p>`);
      if (!$options.getStatus($props.validation.project.keywords)) {
        _push(`<a target="_blank"${ssrRenderAttr(
          "href",
          _ctx.route("publish", $props.project.draft_id) + "?edit=keywords#project-details"
        )} class="cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"> Edit </a>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div><div class="flex items-center hover:bg-gray-100 rounded-md px-2">`);
      _push(ssrRenderComponent(_component_ValidationStatus, {
        status: $props.validation.project.citations
      }, null, _parent));
      _push(`<p class="truncate text-md font-bold text-dark-600"> Citations </p>`);
      if (!$options.getStatus($props.validation.project.citations)) {
        _push(`<a target="_blank"${ssrRenderAttr(
          "href",
          _ctx.route("publish", $props.project.draft_id) + "?edit=citation#project-details"
        )} class="cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"> Edit </a>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div><div class="flex items-center hover:bg-gray-100 rounded-md px-2">`);
      _push(ssrRenderComponent(_component_ValidationStatus, {
        status: $props.validation.project.authors
      }, null, _parent));
      _push(`<p class="truncate text-md font-bold text-dark-600"> Authors </p>`);
      if (!$options.getStatus($props.validation.project.authors)) {
        _push(`<a target="_blank"${ssrRenderAttr(
          "href",
          _ctx.route("publish", $props.project.draft_id) + "?edit=authors#project-details"
        )} class="cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"> Edit </a>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div><div class="flex items-center hover:bg-gray-100 rounded-md px-2">`);
      _push(ssrRenderComponent(_component_ValidationStatus, {
        status: $props.validation.project.license
      }, null, _parent));
      _push(`<p class="truncate text-md font-bold text-dark-600"> License </p>`);
      if (!$options.getStatus($props.validation.project.license)) {
        _push(`<a target="_blank"${ssrRenderAttr(
          "href",
          _ctx.route("publish", $props.project.draft_id) + "?edit=license#publish-details"
        )} class="cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"> Edit </a>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div><div class="flex items-center hover:bg-gray-100 rounded-md px-2">`);
      _push(ssrRenderComponent(_component_ValidationStatus, {
        status: $props.validation.project.image
      }, null, _parent));
      _push(`<p class="truncate text-md font-bold text-dark-600"> Project profile image </p>`);
      if (!$options.getStatus($props.validation.project.image)) {
        _push(`<a target="_blank"${ssrRenderAttr(
          "href",
          _ctx.route("publish", $props.project.draft_id) + "?edit=profile_image#publish-details"
        )} class="cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"> Edit </a>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div></a></li>`);
    } else {
      _push(`<!---->`);
    }
    _push(`<li><a target="_blank" class="block"><div class="px-4 py-4 sm:px-6"><div class="flex items-center hover:bg-gray-100 rounded-md px-2"><p class="truncate text-md font-bold text-indigo-600"> Samples </p></div><!--[-->`);
    ssrRenderList($props.validation.project.studies, (study) => {
      _push(`<div><div><div class="mx-auto w-full py-2">`);
      _push(ssrRenderComponent(_component_Disclosure, null, {
        default: withCtx(({ open: open2 }, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(ssrRenderComponent(_component_DisclosureButton, {
              class: [
                study.status ? "bg-gray-100 hover:bg-gray-200" : "bg-red-100 hover:bg-red-200",
                "flex w-full rounded-md px-4 py-2 text-left text-sm font-medium text-gray-900 focus:outline-none focus-visible:ring focus-visible:ring-gray-500 focus-visible:ring-opacity-75"
              ]
            }, {
              default: withCtx((_, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_ValidationStatus, {
                    class: "-my-2",
                    status: study.status
                  }, null, _parent3, _scopeId2));
                  _push3(`<span${_scopeId2}>${ssrInterpolate(study.name)}</span>`);
                  _push3(ssrRenderComponent(_component_ChevronUpIcon, {
                    class: [
                      !open2 ? "rotate-180 transform" : "",
                      "h-5 w-5 text-gray-500"
                    ]
                  }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_component_ValidationStatus, {
                      class: "-my-2",
                      status: study.status
                    }, null, 8, ["status"]),
                    createVNode("span", null, toDisplayString(study.name), 1),
                    createVNode(_component_ChevronUpIcon, {
                      class: [
                        !open2 ? "rotate-180 transform" : "",
                        "h-5 w-5 text-gray-500"
                      ]
                    }, null, 8, ["class"])
                  ];
                }
              }),
              _: 2
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_DisclosurePanel, { class: "px-4 pt-4 pb-2 text-sm text-gray-500" }, {
              default: withCtx((_, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<div class="flex items-center hover:bg-gray-100 rounded-md px-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(_component_ValidationStatus, {
                    status: study.title
                  }, null, _parent3, _scopeId2));
                  _push3(`<p class="truncate text-md text-dark-600"${_scopeId2}> Sample title </p></div><div class="flex items-center hover:bg-gray-100 rounded-md px-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(_component_ValidationStatus, {
                    status: study.description
                  }, null, _parent3, _scopeId2));
                  _push3(`<p class="truncate text-md text-dark-600"${_scopeId2}> Sample description </p></div><div class="flex items-center hover:bg-gray-100 rounded-md px-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(_component_ValidationStatus, {
                    status: study.keywords
                  }, null, _parent3, _scopeId2));
                  _push3(`<p class="truncate text-md text-dark-600"${_scopeId2}> Sample keywords </p>`);
                  if (!$options.getStatus(
                    study.keywords
                  )) {
                    _push3(`<a class="cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"${_scopeId2}> Edit </a>`);
                  } else {
                    _push3(`<!---->`);
                  }
                  _push3(`</div><div class="flex items-center hover:bg-gray-100 rounded-md px-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(_component_ValidationStatus, {
                    status: study.sample
                  }, null, _parent3, _scopeId2));
                  _push3(`<p class="truncate text-md text-dark-600"${_scopeId2}> Sample meta data </p>`);
                  if (!$options.getStatus(
                    study.sample
                  )) {
                    _push3(`<span class="cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"${_scopeId2}> Edit </span>`);
                  } else {
                    _push3(`<!---->`);
                  }
                  _push3(`</div><div class="flex items-center hover:bg-gray-100 rounded-md px-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(_component_ValidationStatus, {
                    status: study.nmrium_info
                  }, null, _parent3, _scopeId2));
                  _push3(`<p class="truncate text-md text-dark-600"${_scopeId2}> Spectra `);
                  if (study.nmrium_info.split(
                    "|"
                  )[0] !== "true") {
                    _push3(`<small${_scopeId2}><br${_scopeId2}> Please load and confirm the spectra uploaded. </small>`);
                  } else {
                    _push3(`<!---->`);
                  }
                  _push3(`</p>`);
                  if (!$options.getStatus(
                    study.nmrium_info
                  )) {
                    _push3(`<a target="_blank"${ssrRenderAttr(
                      "href",
                      _ctx.route(
                        "dashboard.study.datasets",
                        study.id
                      )
                    )} class="cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"${_scopeId2}> Edit </a>`);
                  } else {
                    _push3(`<!---->`);
                  }
                  _push3(`</div><div class="flex items-center hover:bg-gray-100 rounded-md px-2"${_scopeId2}>`);
                  _push3(ssrRenderComponent(_component_ValidationStatus, {
                    status: study.molecules
                  }, null, _parent3, _scopeId2));
                  _push3(`<p class="truncate text-md text-dark-600"${_scopeId2}> Compound Information </p>`);
                  if (!$options.getStatus(
                    study.molecules
                  )) {
                    _push3(`<a class="cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"${_scopeId2}> Edit </a>`);
                  } else {
                    _push3(`<!---->`);
                  }
                  _push3(`</div><div class="flex items-center mt-2"${_scopeId2}><p class="truncate text-md text-dark-600 mb-3"${_scopeId2}> Spectral Datasets </p></div><!--[-->`);
                  ssrRenderList(study.datasets, (dataset) => {
                    _push3(`<div class="mb-2"${_scopeId2}>`);
                    _push3(ssrRenderComponent(_component_Disclosure, null, {
                      default: withCtx(({ open: open3 }, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(ssrRenderComponent(_component_DisclosureButton, {
                            class: [
                              dataset.status ? "bg-gray-100 hover:bg-gray-200" : "bg-red-100 hover:bg-red-200",
                              "flex w-full rounded-md px-4 py-2 text-left text-sm font-medium text-gray-900 focus:outline-none focus-visible:ring focus-visible:ring-gray-500 focus-visible:ring-opacity-75"
                            ]
                          }, {
                            default: withCtx((_2, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(ssrRenderComponent(_component_ValidationStatus, {
                                  class: "-my-2",
                                  status: dataset.status
                                }, null, _parent5, _scopeId4));
                                _push5(`<span${_scopeId4}>${ssrInterpolate(dataset.name)}</span>`);
                                _push5(ssrRenderComponent(_component_ChevronUpIcon, {
                                  class: [
                                    !open3 ? "rotate-180 transform" : "",
                                    "h-5 w-5 text-gray-500"
                                  ]
                                }, null, _parent5, _scopeId4));
                              } else {
                                return [
                                  createVNode(_component_ValidationStatus, {
                                    class: "-my-2",
                                    status: dataset.status
                                  }, null, 8, ["status"]),
                                  createVNode("span", null, toDisplayString(dataset.name), 1),
                                  createVNode(_component_ChevronUpIcon, {
                                    class: [
                                      !open3 ? "rotate-180 transform" : "",
                                      "h-5 w-5 text-gray-500"
                                    ]
                                  }, null, 8, ["class"])
                                ];
                              }
                            }),
                            _: 2
                          }, _parent4, _scopeId3));
                          _push4(ssrRenderComponent(_component_DisclosurePanel, { class: "px-4 pt-4 pb-2 text-sm text-gray-500" }, {
                            default: withCtx((_2, _push5, _parent5, _scopeId4) => {
                              if (_push5) {
                                _push5(`<div class="flex items-center hover:bg-gray-100 rounded-md px-2"${_scopeId4}>`);
                                _push5(ssrRenderComponent(_component_ValidationStatus, {
                                  status: dataset.files
                                }, null, _parent5, _scopeId4));
                                _push5(`<p class="truncate text-md text-dark-600"${_scopeId4}> Files </p>`);
                                if (!$options.getStatus(
                                  dataset.files
                                )) {
                                  _push5(`<span class="cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"${_scopeId4}> Edit </span>`);
                                } else {
                                  _push5(`<!---->`);
                                }
                                _push5(`</div><div class="flex items-center hover:bg-gray-100 rounded-md px-2"${_scopeId4}>`);
                                _push5(ssrRenderComponent(_component_ValidationStatus, {
                                  status: dataset.nmrium_info
                                }, null, _parent5, _scopeId4));
                                _push5(`<p class="truncate text-md text-dark-600"${_scopeId4}> Spectra `);
                                if (dataset.nmrium_info.split(
                                  "|"
                                )[0] !== "true") {
                                  _push5(`<small${_scopeId4}><br${_scopeId4}> Please load and confirm the spectra uploaded. </small>`);
                                } else {
                                  _push5(`<!---->`);
                                }
                                _push5(`</p>`);
                                if (!$options.getStatus(
                                  dataset.nmrium_info
                                )) {
                                  _push5(`<a target="_blank"${ssrRenderAttr(
                                    "href",
                                    _ctx.route(
                                      "dashboard.study.datasets",
                                      study.id
                                    ) + "?dsid=" + dataset.id
                                  )} class="cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"${_scopeId4}> Edit </a>`);
                                } else {
                                  _push5(`<!---->`);
                                }
                                _push5(`</div><div class="flex items-center hover:bg-gray-100 rounded-md px-2"${_scopeId4}>`);
                                _push5(ssrRenderComponent(_component_ValidationStatus, {
                                  status: dataset.assay
                                }, null, _parent5, _scopeId4));
                                _push5(`<p class="truncate text-md text-dark-600"${_scopeId4}> Assay (Meta data) </p>`);
                                if (!$options.getStatus(
                                  dataset.assay
                                )) {
                                  _push5(`<span class="cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"${_scopeId4}> Edit </span>`);
                                } else {
                                  _push5(`<!---->`);
                                }
                                _push5(`</div><div class="flex items-center hover:bg-gray-100 rounded-md px-2"${_scopeId4}>`);
                                _push5(ssrRenderComponent(_component_ValidationStatus, {
                                  status: dataset.assignments
                                }, null, _parent5, _scopeId4));
                                _push5(`<p class="truncate text-md text-dark-600"${_scopeId4}> Assignments </p>`);
                                if (!$options.getStatus(
                                  dataset.assignments
                                )) {
                                  _push5(`<a class="cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"${_scopeId4}> Edit </a>`);
                                } else {
                                  _push5(`<!---->`);
                                }
                                _push5(`</div>`);
                              } else {
                                return [
                                  createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                                    createVNode(_component_ValidationStatus, {
                                      status: dataset.files
                                    }, null, 8, ["status"]),
                                    createVNode("p", { class: "truncate text-md text-dark-600" }, " Files "),
                                    !$options.getStatus(
                                      dataset.files
                                    ) ? (openBlock(), createBlock("span", {
                                      key: 0,
                                      class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"
                                    }, " Edit ")) : createCommentVNode("", true)
                                  ]),
                                  createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                                    createVNode(_component_ValidationStatus, {
                                      status: dataset.nmrium_info
                                    }, null, 8, ["status"]),
                                    createVNode("p", { class: "truncate text-md text-dark-600" }, [
                                      createTextVNode(" Spectra "),
                                      dataset.nmrium_info.split(
                                        "|"
                                      )[0] !== "true" ? (openBlock(), createBlock("small", { key: 0 }, [
                                        createVNode("br"),
                                        createTextVNode(" Please load and confirm the spectra uploaded. ")
                                      ])) : createCommentVNode("", true)
                                    ]),
                                    !$options.getStatus(
                                      dataset.nmrium_info
                                    ) ? (openBlock(), createBlock("a", {
                                      key: 0,
                                      target: "_blank",
                                      href: _ctx.route(
                                        "dashboard.study.datasets",
                                        study.id
                                      ) + "?dsid=" + dataset.id,
                                      class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"
                                    }, " Edit ", 8, ["href"])) : createCommentVNode("", true)
                                  ]),
                                  createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                                    createVNode(_component_ValidationStatus, {
                                      status: dataset.assay
                                    }, null, 8, ["status"]),
                                    createVNode("p", { class: "truncate text-md text-dark-600" }, " Assay (Meta data) "),
                                    !$options.getStatus(
                                      dataset.assay
                                    ) ? (openBlock(), createBlock("span", {
                                      key: 0,
                                      class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"
                                    }, " Edit ")) : createCommentVNode("", true)
                                  ]),
                                  createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                                    createVNode(_component_ValidationStatus, {
                                      status: dataset.assignments
                                    }, null, 8, ["status"]),
                                    createVNode("p", { class: "truncate text-md text-dark-600" }, " Assignments "),
                                    !$options.getStatus(
                                      dataset.assignments
                                    ) ? (openBlock(), createBlock("a", {
                                      key: 0,
                                      class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full",
                                      onClick: ($event) => $options.update(
                                        study,
                                        "structure"
                                      )
                                    }, " Edit ", 8, ["onClick"])) : createCommentVNode("", true)
                                  ])
                                ];
                              }
                            }),
                            _: 2
                          }, _parent4, _scopeId3));
                        } else {
                          return [
                            createVNode(_component_DisclosureButton, {
                              class: [
                                dataset.status ? "bg-gray-100 hover:bg-gray-200" : "bg-red-100 hover:bg-red-200",
                                "flex w-full rounded-md px-4 py-2 text-left text-sm font-medium text-gray-900 focus:outline-none focus-visible:ring focus-visible:ring-gray-500 focus-visible:ring-opacity-75"
                              ]
                            }, {
                              default: withCtx(() => [
                                createVNode(_component_ValidationStatus, {
                                  class: "-my-2",
                                  status: dataset.status
                                }, null, 8, ["status"]),
                                createVNode("span", null, toDisplayString(dataset.name), 1),
                                createVNode(_component_ChevronUpIcon, {
                                  class: [
                                    !open3 ? "rotate-180 transform" : "",
                                    "h-5 w-5 text-gray-500"
                                  ]
                                }, null, 8, ["class"])
                              ]),
                              _: 2
                            }, 1032, ["class"]),
                            createVNode(_component_DisclosurePanel, { class: "px-4 pt-4 pb-2 text-sm text-gray-500" }, {
                              default: withCtx(() => [
                                createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                                  createVNode(_component_ValidationStatus, {
                                    status: dataset.files
                                  }, null, 8, ["status"]),
                                  createVNode("p", { class: "truncate text-md text-dark-600" }, " Files "),
                                  !$options.getStatus(
                                    dataset.files
                                  ) ? (openBlock(), createBlock("span", {
                                    key: 0,
                                    class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"
                                  }, " Edit ")) : createCommentVNode("", true)
                                ]),
                                createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                                  createVNode(_component_ValidationStatus, {
                                    status: dataset.nmrium_info
                                  }, null, 8, ["status"]),
                                  createVNode("p", { class: "truncate text-md text-dark-600" }, [
                                    createTextVNode(" Spectra "),
                                    dataset.nmrium_info.split(
                                      "|"
                                    )[0] !== "true" ? (openBlock(), createBlock("small", { key: 0 }, [
                                      createVNode("br"),
                                      createTextVNode(" Please load and confirm the spectra uploaded. ")
                                    ])) : createCommentVNode("", true)
                                  ]),
                                  !$options.getStatus(
                                    dataset.nmrium_info
                                  ) ? (openBlock(), createBlock("a", {
                                    key: 0,
                                    target: "_blank",
                                    href: _ctx.route(
                                      "dashboard.study.datasets",
                                      study.id
                                    ) + "?dsid=" + dataset.id,
                                    class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"
                                  }, " Edit ", 8, ["href"])) : createCommentVNode("", true)
                                ]),
                                createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                                  createVNode(_component_ValidationStatus, {
                                    status: dataset.assay
                                  }, null, 8, ["status"]),
                                  createVNode("p", { class: "truncate text-md text-dark-600" }, " Assay (Meta data) "),
                                  !$options.getStatus(
                                    dataset.assay
                                  ) ? (openBlock(), createBlock("span", {
                                    key: 0,
                                    class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"
                                  }, " Edit ")) : createCommentVNode("", true)
                                ]),
                                createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                                  createVNode(_component_ValidationStatus, {
                                    status: dataset.assignments
                                  }, null, 8, ["status"]),
                                  createVNode("p", { class: "truncate text-md text-dark-600" }, " Assignments "),
                                  !$options.getStatus(
                                    dataset.assignments
                                  ) ? (openBlock(), createBlock("a", {
                                    key: 0,
                                    class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full",
                                    onClick: ($event) => $options.update(
                                      study,
                                      "structure"
                                    )
                                  }, " Edit ", 8, ["onClick"])) : createCommentVNode("", true)
                                ])
                              ]),
                              _: 2
                            }, 1024)
                          ];
                        }
                      }),
                      _: 2
                    }, _parent3, _scopeId2));
                    _push3(`</div>`);
                  });
                  _push3(`<!--]-->`);
                } else {
                  return [
                    createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                      createVNode(_component_ValidationStatus, {
                        status: study.title
                      }, null, 8, ["status"]),
                      createVNode("p", { class: "truncate text-md text-dark-600" }, " Sample title ")
                    ]),
                    createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                      createVNode(_component_ValidationStatus, {
                        status: study.description
                      }, null, 8, ["status"]),
                      createVNode("p", { class: "truncate text-md text-dark-600" }, " Sample description ")
                    ]),
                    createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                      createVNode(_component_ValidationStatus, {
                        status: study.keywords
                      }, null, 8, ["status"]),
                      createVNode("p", { class: "truncate text-md text-dark-600" }, " Sample keywords "),
                      !$options.getStatus(
                        study.keywords
                      ) ? (openBlock(), createBlock("a", {
                        key: 0,
                        class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full",
                        onClick: ($event) => $options.update(
                          study,
                          "keywords"
                        )
                      }, " Edit ", 8, ["onClick"])) : createCommentVNode("", true)
                    ]),
                    createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                      createVNode(_component_ValidationStatus, {
                        status: study.sample
                      }, null, 8, ["status"]),
                      createVNode("p", { class: "truncate text-md text-dark-600" }, " Sample meta data "),
                      !$options.getStatus(
                        study.sample
                      ) ? (openBlock(), createBlock("span", {
                        key: 0,
                        class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"
                      }, " Edit ")) : createCommentVNode("", true)
                    ]),
                    createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                      createVNode(_component_ValidationStatus, {
                        status: study.nmrium_info
                      }, null, 8, ["status"]),
                      createVNode("p", { class: "truncate text-md text-dark-600" }, [
                        createTextVNode(" Spectra "),
                        study.nmrium_info.split(
                          "|"
                        )[0] !== "true" ? (openBlock(), createBlock("small", { key: 0 }, [
                          createVNode("br"),
                          createTextVNode(" Please load and confirm the spectra uploaded. ")
                        ])) : createCommentVNode("", true)
                      ]),
                      !$options.getStatus(
                        study.nmrium_info
                      ) ? (openBlock(), createBlock("a", {
                        key: 0,
                        target: "_blank",
                        href: _ctx.route(
                          "dashboard.study.datasets",
                          study.id
                        ),
                        class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"
                      }, " Edit ", 8, ["href"])) : createCommentVNode("", true)
                    ]),
                    createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                      createVNode(_component_ValidationStatus, {
                        status: study.molecules
                      }, null, 8, ["status"]),
                      createVNode("p", { class: "truncate text-md text-dark-600" }, " Compound Information "),
                      !$options.getStatus(
                        study.molecules
                      ) ? (openBlock(), createBlock("a", {
                        key: 0,
                        class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full",
                        onClick: ($event) => $options.update(
                          study,
                          "structure"
                        )
                      }, " Edit ", 8, ["onClick"])) : createCommentVNode("", true)
                    ]),
                    createVNode("div", { class: "flex items-center mt-2" }, [
                      createVNode("p", { class: "truncate text-md text-dark-600 mb-3" }, " Spectral Datasets ")
                    ]),
                    (openBlock(true), createBlock(Fragment, null, renderList(study.datasets, (dataset) => {
                      return openBlock(), createBlock("div", {
                        key: dataset.id,
                        class: "mb-2"
                      }, [
                        createVNode(_component_Disclosure, null, {
                          default: withCtx(({ open: open3 }) => [
                            createVNode(_component_DisclosureButton, {
                              class: [
                                dataset.status ? "bg-gray-100 hover:bg-gray-200" : "bg-red-100 hover:bg-red-200",
                                "flex w-full rounded-md px-4 py-2 text-left text-sm font-medium text-gray-900 focus:outline-none focus-visible:ring focus-visible:ring-gray-500 focus-visible:ring-opacity-75"
                              ]
                            }, {
                              default: withCtx(() => [
                                createVNode(_component_ValidationStatus, {
                                  class: "-my-2",
                                  status: dataset.status
                                }, null, 8, ["status"]),
                                createVNode("span", null, toDisplayString(dataset.name), 1),
                                createVNode(_component_ChevronUpIcon, {
                                  class: [
                                    !open3 ? "rotate-180 transform" : "",
                                    "h-5 w-5 text-gray-500"
                                  ]
                                }, null, 8, ["class"])
                              ]),
                              _: 2
                            }, 1032, ["class"]),
                            createVNode(_component_DisclosurePanel, { class: "px-4 pt-4 pb-2 text-sm text-gray-500" }, {
                              default: withCtx(() => [
                                createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                                  createVNode(_component_ValidationStatus, {
                                    status: dataset.files
                                  }, null, 8, ["status"]),
                                  createVNode("p", { class: "truncate text-md text-dark-600" }, " Files "),
                                  !$options.getStatus(
                                    dataset.files
                                  ) ? (openBlock(), createBlock("span", {
                                    key: 0,
                                    class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"
                                  }, " Edit ")) : createCommentVNode("", true)
                                ]),
                                createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                                  createVNode(_component_ValidationStatus, {
                                    status: dataset.nmrium_info
                                  }, null, 8, ["status"]),
                                  createVNode("p", { class: "truncate text-md text-dark-600" }, [
                                    createTextVNode(" Spectra "),
                                    dataset.nmrium_info.split(
                                      "|"
                                    )[0] !== "true" ? (openBlock(), createBlock("small", { key: 0 }, [
                                      createVNode("br"),
                                      createTextVNode(" Please load and confirm the spectra uploaded. ")
                                    ])) : createCommentVNode("", true)
                                  ]),
                                  !$options.getStatus(
                                    dataset.nmrium_info
                                  ) ? (openBlock(), createBlock("a", {
                                    key: 0,
                                    target: "_blank",
                                    href: _ctx.route(
                                      "dashboard.study.datasets",
                                      study.id
                                    ) + "?dsid=" + dataset.id,
                                    class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"
                                  }, " Edit ", 8, ["href"])) : createCommentVNode("", true)
                                ]),
                                createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                                  createVNode(_component_ValidationStatus, {
                                    status: dataset.assay
                                  }, null, 8, ["status"]),
                                  createVNode("p", { class: "truncate text-md text-dark-600" }, " Assay (Meta data) "),
                                  !$options.getStatus(
                                    dataset.assay
                                  ) ? (openBlock(), createBlock("span", {
                                    key: 0,
                                    class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"
                                  }, " Edit ")) : createCommentVNode("", true)
                                ]),
                                createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                                  createVNode(_component_ValidationStatus, {
                                    status: dataset.assignments
                                  }, null, 8, ["status"]),
                                  createVNode("p", { class: "truncate text-md text-dark-600" }, " Assignments "),
                                  !$options.getStatus(
                                    dataset.assignments
                                  ) ? (openBlock(), createBlock("a", {
                                    key: 0,
                                    class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full",
                                    onClick: ($event) => $options.update(
                                      study,
                                      "structure"
                                    )
                                  }, " Edit ", 8, ["onClick"])) : createCommentVNode("", true)
                                ])
                              ]),
                              _: 2
                            }, 1024)
                          ]),
                          _: 2
                        }, 1024)
                      ]);
                    }), 128))
                  ];
                }
              }),
              _: 2
            }, _parent2, _scopeId));
          } else {
            return [
              createVNode(_component_DisclosureButton, {
                class: [
                  study.status ? "bg-gray-100 hover:bg-gray-200" : "bg-red-100 hover:bg-red-200",
                  "flex w-full rounded-md px-4 py-2 text-left text-sm font-medium text-gray-900 focus:outline-none focus-visible:ring focus-visible:ring-gray-500 focus-visible:ring-opacity-75"
                ]
              }, {
                default: withCtx(() => [
                  createVNode(_component_ValidationStatus, {
                    class: "-my-2",
                    status: study.status
                  }, null, 8, ["status"]),
                  createVNode("span", null, toDisplayString(study.name), 1),
                  createVNode(_component_ChevronUpIcon, {
                    class: [
                      !open2 ? "rotate-180 transform" : "",
                      "h-5 w-5 text-gray-500"
                    ]
                  }, null, 8, ["class"])
                ]),
                _: 2
              }, 1032, ["class"]),
              createVNode(_component_DisclosurePanel, { class: "px-4 pt-4 pb-2 text-sm text-gray-500" }, {
                default: withCtx(() => [
                  createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                    createVNode(_component_ValidationStatus, {
                      status: study.title
                    }, null, 8, ["status"]),
                    createVNode("p", { class: "truncate text-md text-dark-600" }, " Sample title ")
                  ]),
                  createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                    createVNode(_component_ValidationStatus, {
                      status: study.description
                    }, null, 8, ["status"]),
                    createVNode("p", { class: "truncate text-md text-dark-600" }, " Sample description ")
                  ]),
                  createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                    createVNode(_component_ValidationStatus, {
                      status: study.keywords
                    }, null, 8, ["status"]),
                    createVNode("p", { class: "truncate text-md text-dark-600" }, " Sample keywords "),
                    !$options.getStatus(
                      study.keywords
                    ) ? (openBlock(), createBlock("a", {
                      key: 0,
                      class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full",
                      onClick: ($event) => $options.update(
                        study,
                        "keywords"
                      )
                    }, " Edit ", 8, ["onClick"])) : createCommentVNode("", true)
                  ]),
                  createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                    createVNode(_component_ValidationStatus, {
                      status: study.sample
                    }, null, 8, ["status"]),
                    createVNode("p", { class: "truncate text-md text-dark-600" }, " Sample meta data "),
                    !$options.getStatus(
                      study.sample
                    ) ? (openBlock(), createBlock("span", {
                      key: 0,
                      class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"
                    }, " Edit ")) : createCommentVNode("", true)
                  ]),
                  createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                    createVNode(_component_ValidationStatus, {
                      status: study.nmrium_info
                    }, null, 8, ["status"]),
                    createVNode("p", { class: "truncate text-md text-dark-600" }, [
                      createTextVNode(" Spectra "),
                      study.nmrium_info.split(
                        "|"
                      )[0] !== "true" ? (openBlock(), createBlock("small", { key: 0 }, [
                        createVNode("br"),
                        createTextVNode(" Please load and confirm the spectra uploaded. ")
                      ])) : createCommentVNode("", true)
                    ]),
                    !$options.getStatus(
                      study.nmrium_info
                    ) ? (openBlock(), createBlock("a", {
                      key: 0,
                      target: "_blank",
                      href: _ctx.route(
                        "dashboard.study.datasets",
                        study.id
                      ),
                      class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"
                    }, " Edit ", 8, ["href"])) : createCommentVNode("", true)
                  ]),
                  createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                    createVNode(_component_ValidationStatus, {
                      status: study.molecules
                    }, null, 8, ["status"]),
                    createVNode("p", { class: "truncate text-md text-dark-600" }, " Compound Information "),
                    !$options.getStatus(
                      study.molecules
                    ) ? (openBlock(), createBlock("a", {
                      key: 0,
                      class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full",
                      onClick: ($event) => $options.update(
                        study,
                        "structure"
                      )
                    }, " Edit ", 8, ["onClick"])) : createCommentVNode("", true)
                  ]),
                  createVNode("div", { class: "flex items-center mt-2" }, [
                    createVNode("p", { class: "truncate text-md text-dark-600 mb-3" }, " Spectral Datasets ")
                  ]),
                  (openBlock(true), createBlock(Fragment, null, renderList(study.datasets, (dataset) => {
                    return openBlock(), createBlock("div", {
                      key: dataset.id,
                      class: "mb-2"
                    }, [
                      createVNode(_component_Disclosure, null, {
                        default: withCtx(({ open: open3 }) => [
                          createVNode(_component_DisclosureButton, {
                            class: [
                              dataset.status ? "bg-gray-100 hover:bg-gray-200" : "bg-red-100 hover:bg-red-200",
                              "flex w-full rounded-md px-4 py-2 text-left text-sm font-medium text-gray-900 focus:outline-none focus-visible:ring focus-visible:ring-gray-500 focus-visible:ring-opacity-75"
                            ]
                          }, {
                            default: withCtx(() => [
                              createVNode(_component_ValidationStatus, {
                                class: "-my-2",
                                status: dataset.status
                              }, null, 8, ["status"]),
                              createVNode("span", null, toDisplayString(dataset.name), 1),
                              createVNode(_component_ChevronUpIcon, {
                                class: [
                                  !open3 ? "rotate-180 transform" : "",
                                  "h-5 w-5 text-gray-500"
                                ]
                              }, null, 8, ["class"])
                            ]),
                            _: 2
                          }, 1032, ["class"]),
                          createVNode(_component_DisclosurePanel, { class: "px-4 pt-4 pb-2 text-sm text-gray-500" }, {
                            default: withCtx(() => [
                              createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                                createVNode(_component_ValidationStatus, {
                                  status: dataset.files
                                }, null, 8, ["status"]),
                                createVNode("p", { class: "truncate text-md text-dark-600" }, " Files "),
                                !$options.getStatus(
                                  dataset.files
                                ) ? (openBlock(), createBlock("span", {
                                  key: 0,
                                  class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"
                                }, " Edit ")) : createCommentVNode("", true)
                              ]),
                              createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                                createVNode(_component_ValidationStatus, {
                                  status: dataset.nmrium_info
                                }, null, 8, ["status"]),
                                createVNode("p", { class: "truncate text-md text-dark-600" }, [
                                  createTextVNode(" Spectra "),
                                  dataset.nmrium_info.split(
                                    "|"
                                  )[0] !== "true" ? (openBlock(), createBlock("small", { key: 0 }, [
                                    createVNode("br"),
                                    createTextVNode(" Please load and confirm the spectra uploaded. ")
                                  ])) : createCommentVNode("", true)
                                ]),
                                !$options.getStatus(
                                  dataset.nmrium_info
                                ) ? (openBlock(), createBlock("a", {
                                  key: 0,
                                  target: "_blank",
                                  href: _ctx.route(
                                    "dashboard.study.datasets",
                                    study.id
                                  ) + "?dsid=" + dataset.id,
                                  class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"
                                }, " Edit ", 8, ["href"])) : createCommentVNode("", true)
                              ]),
                              createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                                createVNode(_component_ValidationStatus, {
                                  status: dataset.assay
                                }, null, 8, ["status"]),
                                createVNode("p", { class: "truncate text-md text-dark-600" }, " Assay (Meta data) "),
                                !$options.getStatus(
                                  dataset.assay
                                ) ? (openBlock(), createBlock("span", {
                                  key: 0,
                                  class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full"
                                }, " Edit ")) : createCommentVNode("", true)
                              ]),
                              createVNode("div", { class: "flex items-center hover:bg-gray-100 rounded-md px-2" }, [
                                createVNode(_component_ValidationStatus, {
                                  status: dataset.assignments
                                }, null, 8, ["status"]),
                                createVNode("p", { class: "truncate text-md text-dark-600" }, " Assignments "),
                                !$options.getStatus(
                                  dataset.assignments
                                ) ? (openBlock(), createBlock("a", {
                                  key: 0,
                                  class: "cursor-pointer bg-red-800 text-white ml-auto inline-block py-0.5 px-3 text-xs rounded-full",
                                  onClick: ($event) => $options.update(
                                    study,
                                    "structure"
                                  )
                                }, " Edit ", 8, ["onClick"])) : createCommentVNode("", true)
                              ])
                            ]),
                            _: 2
                          }, 1024)
                        ]),
                        _: 2
                      }, 1024)
                    ]);
                  }), 128))
                ]),
                _: 2
              }, 1024)
            ];
          }
        }),
        _: 2
      }, _parent));
      _push(`</div></div></div>`);
    });
    _push(`<!--]--></div></a></li>`);
    if ($props.validation.errors && $props.validation.errors.length > 0) {
      _push(`<li><a target="_blank" class="block hover:bg-gray-50"><div class="px-4 py-4 sm:px-6"><div class="flex items-center hover:bg-gray-100 rounded-md px-2"><p class="truncate text-md font-bold text-red-600"> Errors </p><div class="ml-2 flex flex-shrink-0">`);
      _push(ssrRenderComponent(_component_ValidationStatus, {
        status: $props.validation.errors.length == 0
      }, null, _parent));
      _push(`</div></div></div></a></li>`);
    } else {
      _push(`<!---->`);
    }
    if ($props.validation.missing && $props.validation.missing.length > 0) {
      _push(`<li><a target="_blank" class="block hover:bg-gray-50"><div class="px-4 py-4 sm:px-6"><div class="flex items-center hover:bg-gray-100 rounded-md px-2"><p class="truncate text-md font-bold text-yellow-600"> Warnings </p></div></div></a></li>`);
    } else {
      _push(`<!---->`);
    }
    _push(`</ul>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div></div>`);
}
const _sfc_setup$23 = _sfc_main$23.setup;
_sfc_main$23.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/Validation.vue");
  return _sfc_setup$23 ? _sfc_setup$23(props, ctx) : void 0;
};
const Validation$1 = /* @__PURE__ */ _export_sfc(_sfc_main$23, [["ssrRender", _sfc_ssrRender$22]]);
const _sfc_main$22 = {
  components: {
    PaperClipIcon
  },
  props: ["file", "project", "study"],
  setup() {
    return {};
  },
  data() {
    return {};
  },
  computed: {
    downloadURL() {
      if (this.study || this.project) {
        let project = null;
        if (this.study && !this.project) {
          project = this.study.project;
        } else {
          project = this.project;
        }
        if (project) {
          return this.url + "/" + project.owner.username + "/download/" + project.slug + "?key=" + this.file.key + "&uuid=" + this.file.uuid;
        }
      }
    },
    url() {
      return String(this.$page.props.url);
    },
    fileInfo() {
      return JSON.parse(this.file.info);
    }
  }
};
function _sfc_ssrRender$21(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "bg-white shadow overflow-hidden sm:rounded-lg" }, _attrs))}><div class="px-4 py-5 sm:px-6"><h3 class="text-lg leading-6 text-xl font-bold text-gray-900">`);
  if ($props.file.status == "missing") {
    _push(`<span class="float-left inline pr-4 pt-1 text-sm font-medium pointer-events-none"><span class="mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10"><svg class="h-6 w-6 text-red-600" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z"></path></svg></span></span>`);
  } else {
    _push(`<!---->`);
  }
  _push(`${ssrInterpolate($props.file.name)}</h3><p class="mt-1 max-w-2xl text-sm text-gray-500">File information</p></div><div class="border-t border-gray-200 px-4 py-5 sm:p-0"><dl class="sm:divide-y sm:divide-gray-200"><div class="py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6"><dt class="text-sm font-medium text-gray-500"> Uploaded at </dt><dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">${ssrInterpolate(_ctx.formatDateTime($props.file.created_at))}</dd><dt class="text-sm font-medium text-gray-500">File size</dt><dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">${ssrInterpolate(_ctx.bytesToSize($options.fileInfo.size))}</dd><dt class="text-sm font-medium text-gray-500">ETag</dt><dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">`);
  if ($options.fileInfo.ETag) {
    _push(`<div>${ssrInterpolate($options.fileInfo.ETag.replace(/"/g, ""))}</div>`);
  } else {
    _push(`<div>-</div>`);
  }
  _push(`</dd></div><div></div><div class="py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6"><dt class="text-sm font-medium text-gray-500">Content</dt><dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2"><ul role="list" class="border border-gray-200 rounded-md divide-y divide-gray-200"><li class="pl-3 pr-4 py-3 flex items-center justify-between text-sm"><div class="w-0 flex-1 flex items-center"><svg class="flex-shrink-0 h-5 w-5 text-gray-400" x-description="Heroicon name: solid/paper-clip" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"><path fill-rule="evenodd" d="M8 4a3 3 0 00-3 3v4a5 5 0 0010 0V7a1 1 0 112 0v4a7 7 0 11-14 0V7a5 5 0 0110 0v4a3 3 0 11-6 0V7a1 1 0 012 0v4a1 1 0 102 0V7a3 3 0 00-3-3z" clip-rule="evenodd"></path></svg><span class="ml-2 flex-1 w-0 truncate">${ssrInterpolate($props.file.name)}</span></div>`);
  if ($options.downloadURL) {
    _push(`<div class="ml-4 flex-shrink-0"><a${ssrRenderAttr("href", $options.downloadURL)} class="font-medium text-indigo-600 hover:text-indigo-500"> Download </a></div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</li></ul></dd></div></dl></div></div>`);
}
const _sfc_setup$22 = _sfc_main$22.setup;
_sfc_main$22.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/FileDetails.vue");
  return _sfc_setup$22 ? _sfc_setup$22(props, ctx) : void 0;
};
const FileDetails = /* @__PURE__ */ _export_sfc(_sfc_main$22, [["ssrRender", _sfc_ssrRender$21]]);
const _sfc_main$21 = {
  inheritAttrs: false,
  props: {
    id: {
      type: String,
      default(test, ing) {
        return `select-input-${Math.random() * 1e3}`;
      }
    },
    modelValue: [String, Number, Boolean],
    label: String,
    error: String
  },
  data() {
    return {
      selected: this.modelValue
    };
  },
  watch: {
    selected(selected) {
      this.$emit("update:modelValue", selected);
    }
  },
  methods: {
    focus() {
      this.$refs.input.focus();
    },
    select() {
      this.$refs.input.select();
    }
  }
};
function _sfc_ssrRender$20(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(mergeProps({
    class: _ctx.$attrs.class
  }, _attrs))}>`);
  if ($props.label) {
    _push(`<label class="form-label"${ssrRenderAttr("for", $props.id)}>${ssrInterpolate($props.label)}:</label>`);
  } else {
    _push(`<!---->`);
  }
  _push(`<select${ssrRenderAttrs(mergeProps({
    id: $props.id,
    ref: "input"
  }, { ..._ctx.$attrs, class: null }, {
    class: ["form-select", { error: $props.error }]
  }))}>`);
  ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</select>`);
  if ($props.error) {
    _push(`<div class="form-error">${ssrInterpolate($props.error)}</div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div>`);
}
const _sfc_setup$21 = _sfc_main$21.setup;
_sfc_main$21.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/SelectInput.vue");
  return _sfc_setup$21 ? _sfc_setup$21(props, ctx) : void 0;
};
const SelectInput = /* @__PURE__ */ _export_sfc(_sfc_main$21, [["ssrRender", _sfc_ssrRender$20]]);
const _sfc_main$20 = {
  components: {
    FolderIcon: FolderIcon$1,
    DocumentTextIcon,
    ArrowDownTrayIcon,
    ChevronRightIcon,
    InformationCircleIcon,
    HomeIcon,
    FileDetails,
    JetDialogModal,
    JetSecondaryButton,
    EllipsisVerticalIcon,
    ExclamationCircleIcon,
    ArrowUpTrayIcon,
    CheckIcon,
    SelectInput,
    TrashIcon,
    ToolTip,
    JetConfirmationModal,
    JetDangerButton
  },
  props: ["draft", "readonly", "height"],
  emits: ["loading"],
  data() {
    return {
      status: "",
      dropzone: null,
      fullScreen: false,
      precentageUpload: 0,
      busy: false,
      loading: false,
      file: null,
      url: null,
      logs: {},
      logFilter: "Error",
      logFilters: ["Error", "Success", "Queued", "Inprogress"],
      uploadBatchErrors: [],
      showErrorBatchLogs: false,
      showLogsDialog: false,
      currentLog: null,
      fsoBeingDeleted: null,
      showMissingFilesDetails: null,
      missing_files: 0,
      missing_files_list: []
    };
  },
  computed: {
    baseURL() {
      return String(this.$page.props.url);
    },
    filteredLogs() {
      let logsClone = JSON.parse(JSON.stringify(this.logs));
      Object.keys(logsClone).forEach((key) => {
        if (logsClone[key].status != this.logFilter)
          delete logsClone[key];
      });
      return logsClone;
    }
  },
  mounted() {
    if (this.draft) {
      this.url = this.baseURL + "/dashboard/drafts/" + this.draft.id + "/files";
      this.loadDropZone();
    }
  },
  methods: {
    confirmFSODeletion() {
      this.fsoBeingDeleted = this.$page.props.selectedFileSystemObject.id;
    },
    deleteFSO() {
      if (this.$page.props.selectedFileSystemObject.id) {
        this.fsoBeingDeleted = null;
        this.updateBusyStatus(true);
        this.$emit("loading", true);
        axios.delete(
          "/dashboard/drafts/" + this.draft.id + "/files/" + this.$page.props.selectedFileSystemObject.id
        ).then((response) => {
          this.annotate();
          this.$emit("loading", true);
        });
      }
    },
    showMissingFilesDetailsModal() {
      this.fetchMissingFiles();
      this.showMissingFilesDetails = true;
    },
    fetchMissingFiles() {
      axios.get("/dashboard/drafts/" + this.draft.id + "/missing-files").then((response) => {
        console.log(response);
        this.missing_files_list = response.data.missing_files;
      });
    },
    toggleFullScreen() {
      this.fullScreen = !this.fullScreen;
    },
    toggleShowLogsDialog() {
      this.showLogsDialog = !this.showLogsDialog;
    },
    updateBusyStatus(status) {
      this.busy = status;
    },
    loadFiles() {
      this.updateBusyStatus(true);
      if (this.draft) {
        axios.get(this.url).then((response) => {
          this.file = response.data.file;
          this.file.has_children = true;
          this.$page.props.selectedFileSystemObject = this.file;
          this.$page.props.selectedFolder = "/";
          this.updateBusyStatus(true);
          this.$emit("loading", false);
          this.loading = false;
          this.missing_files = response.data.missing_files;
        });
      } else {
        this.file = this.$page.props.selectedFileSystemObject;
      }
    },
    annotate() {
      this.updateBusyStatus(true);
      this.$emit("loading", true);
      this.loading = true;
      this.status = "PROCESSING UPLOADED FILES";
      axios.get("/dashboard/drafts/" + this.draft.id + "/annotate").then(() => {
        this.updateBusyStatus(false);
        this.status = null;
        this.loadFiles();
      });
    },
    processFilesDZL(vm, filesBatch) {
      vm.batchesCount += 1;
      const url = "/dashboard/storage/signed-draft-storage-url";
      const client = axios.create({ baseURL: window.location.origin });
      vm.currentLog = "Fetching temporary storage url";
      axiosRetry(client, {
        retries: 3,
        retryCondition: (error) => {
          return error.response.status === 500 || error.response.status === 502;
        }
      });
      client.post(url, {
        draft_files: filesBatch,
        destination: vm.$page.props.selectedFolder,
        draft_id: vm.draft.id
      }).catch((err) => {
        this.processedBatches += 1;
        if (this.processedBatches == this.batches) {
          if (this.dropzone.files.length > 0) {
            this.status = "ERROR UPLOADING FILES";
            this.updateBusyStatus(false);
            this.dropzone.files.forEach((file) => {
              let message = "Upload failed";
              if (file.fullPath) {
                vm.logs[file.fullPath].status = "Error";
                vm.logs[file.fullPath].messages.push(
                  message + " (API call failed with status code:" + err.response.status + ") "
                );
              } else {
                vm.logs[file.name].status = "Error";
                vm.logs[file.name].messages.push(
                  message + "(API call failed with status code:" + err.response.status + ")"
                );
              }
            });
          }
        }
        this.uploadBatchErrors.push(err.response.data);
      }).then((response) => {
        if (response) {
          vm.currentLog = "Uploading files to temporary storage url";
          let data = response.data;
          this.processedBatches += 1;
          data.forEach((u2) => {
            let cFile = vm.dropzone.files.find((f2) => {
              if (f2.fullPath) {
                return f2.fullPath.trim() == u2.fullPath;
              } else {
                return "/" + f2.name.trim() == u2.fullPath || vm.$page.props.selectedFolder + "/" + f2.name.trim() == u2.fullPath;
              }
            });
            if (cFile) {
              let message = "Presigned Upload URL receieved.  Starting Upload.";
              if (cFile.fullPath) {
                vm.logs[cFile.fullPath].status = "Inprogress";
                vm.logs[cFile.fullPath].messages.push(
                  message
                );
              } else {
                vm.logs[cFile.name].status = "Inprogress";
                vm.logs[cFile.name].messages.push(message);
              }
              let headers = u2.headers;
              if ("Host" in headers) {
                delete headers.Host;
              }
              cFile.uploadURL = u2.url;
              setTimeout(
                () => vm.dropzone.processFile(cFile)
              );
            }
          });
        }
      });
    },
    loadDropZone() {
      this.$nextTick(() => {
        const vm = this;
        vm.totalFilesCount = 0;
        vm.uploadedFilesCount = 0;
        vm.batchCount = 100;
        vm.count = 0;
        vm.batches = 0;
        vm.processedBatches = 0;
        vm.$page.props.selectedFileSystemObject = vm.file;
        vm.$page.props.selectedFolder = "/";
        vm.selectedFSO = [];
        let options = {
          url: "/",
          method: "put",
          sending(file, xhr) {
            let _send = xhr.send;
            xhr.send = () => {
              _send.call(xhr, file);
            };
          },
          autoProcessQueue: false,
          uploadMultiple: true,
          disablePreviews: true,
          parallelUploads: 100,
          autoQueue: false,
          maxFiles: 2e4,
          dictDefaultMessage: document.querySelector(
            "#fs-dropzone-message"
          ).innerHTML,
          totaluploadprogress: function(progress) {
            vm.progress = Math.ceil(progress);
          }
        };
        vm.dropzone = new Dropzone("#fs-dropzone", options);
        vm.dropzone.on("processing", (file) => {
          vm.dropzone.options.url = file.uploadURL;
          vm.status = "UPLOAD IN PROGRESS";
        });
        vm.dropzone.on("success", (file) => {
          let message = "Upload complete";
          if (file.fullPath) {
            vm.logs[file.fullPath].status = "Success";
            vm.logs[file.fullPath].messages.push(message);
          } else {
            vm.logs[file.name].status = "Success";
            vm.logs[file.name].messages.push(message);
          }
          vm.uploadedFilesCount += 1;
          vm.precentageUpload = vm.uploadedFilesCount / vm.totalFilesCount * 100;
          vm.currentLog = file.fullPath;
        });
        vm.dropzone.on("error", (file) => {
          let message = "Upload failed";
          if (file.fullPath) {
            vm.logs[file.fullPath].status = "Error";
            vm.logs[file.fullPath].messages.push(message);
          } else {
            vm.logs[file.name].status = "Error";
            vm.logs[file.name].messages.push(message);
          }
        });
        vm.dropzone.on("addedfile", (file) => {
          vm.selectedFSO.push(file);
          if (file.fullPath) {
            vm.logs[file.fullPath] = {
              status: "Queued",
              messages: []
            };
          } else {
            vm.logs[file.name] = {
              status: "Queued",
              messages: []
            };
          }
        });
        vm.dropzone.on("addedfiles", (files) => {
          if (files.length > 0) {
            this.updateBusyStatus(true);
            setTimeout(() => {
              var timer = setInterval(function() {
                if (vm.totalFilesCount === vm.selectedFSO.length) {
                  clearInterval(timer);
                  vm.status = "BATCH UPLOAD STARTED";
                  for (let i2 = 0; i2 < vm.totalFilesCount; i2 += vm.batchCount) {
                    let filesBatch = vm.dropzone.files.slice(
                      i2,
                      i2 + vm.batchCount
                    );
                    vm.batches += 1;
                    vm.processFilesDZL(vm, filesBatch);
                  }
                } else {
                  vm.totalFilesCount = vm.selectedFSO.length;
                  vm.status = "PROCESSING FILES";
                }
              }, 500);
            });
          }
        });
        vm.dropzone.on("queuecomplete", () => {
          vm.status = "UPLOAD COMPLETE";
          vm.annotate();
          vm.currentLog = null;
          vm.dropzone.removeAllFiles();
          vm.precentageUpload = 0;
          vm.totalFilesCount = 0;
          vm.uploadedFilesCount = 0;
          this.updateBusyStatus(false);
          setTimeout(() => {
            vm.status = null;
          }, 5e3);
        });
      });
    },
    displaySelected(file) {
      this.$page.props.selectedFileSystemObject = file;
      let sFolder = "/";
      if (this.$page.props.selectedFileSystemObject.name == "/") {
        sFolder = "/";
      } else {
        if (this.$page.props.selectedFileSystemObject.type != "file") {
          sFolder = this.$page.props.selectedFileSystemObject.relative_url;
        } else {
          if (this.$page.props.selectedFileSystemObject.parent_id == null) {
            sFolder = "/";
          } else {
            sFolder = this.$page.props.selectedFileSystemObject.relative_url.replace(
              "/" + this.$page.props.selectedFileSystemObject.name,
              ""
            );
          }
        }
      }
      this.$page.props.selectedFolder = sFolder;
      if (file.has_children && file.level > 0 && !file.children) {
        file.loading = true;
        axios.get("/api/v1/files/children/" + file.id).then((response) => {
          file.children = response.data.files[0].children;
          file.loading = false;
        });
      }
    }
  }
};
function _sfc_ssrRender$1$(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_ToolTip = resolveComponent("ToolTip");
  const _component_children = resolveComponent("children");
  const _component_InformationCircleIcon = resolveComponent("InformationCircleIcon");
  const _component_jet_dialog_modal = resolveComponent("jet-dialog-modal");
  const _component_CheckIcon = resolveComponent("CheckIcon");
  const _component_ArrowUpTrayIcon = resolveComponent("ArrowUpTrayIcon");
  const _component_EllipsisVerticalIcon = resolveComponent("EllipsisVerticalIcon");
  const _component_ExclamationCircleIcon = resolveComponent("ExclamationCircleIcon");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  const _component_TrashIcon = resolveComponent("TrashIcon");
  const _component_FolderIcon = resolveComponent("FolderIcon");
  const _component_DocumentTextIcon = resolveComponent("DocumentTextIcon");
  const _component_File_details = resolveComponent("File-details");
  const _component_jet_confirmation_modal = resolveComponent("jet-confirmation-modal");
  const _component_jet_danger_button = resolveComponent("jet-danger-button");
  _push(`<!--[--><div id="fs-dropzone" class="${ssrRenderClass([
    $data.fullScreen ? "fixed w-screen h-screen -ml-4 -mt-6 sm:ml-0 md:-ml-0 md:w-auto inset-0" : "",
    "mt-3 bg-white"
  ])}"><div><div class="${ssrRenderClass([$data.fullScreen ? "px-6 py-4" : "", "flex"])}"><div class="w-full px-5">`);
  if (!$props.readonly) {
    _push(`<div class="text-sm cursor-pointer hover:text-blue-700 mt-2 mr-10"><i><a href="https://docs.nmrxiv.org/submission-guides/folder-structure.html" target="_blank" class="mb-4">`);
    _push(ssrRenderComponent(_component_ToolTip, {
      class: "w-3.5 h-3.5",
      text: "To submit data you will need an account with nmrXiv, so you will be redirected to our register page and once registered you can then go ahead and submit data. For more information please checkout our <a target='_blank' href='//docs.nmrxiv.org' class='text-gray-400' target='_blank'>documentation</a>."
    }, null, _parent));
    _push(`<span class="ml-4"> Learn more about folder structuring </span></a></i>`);
    if ($data.missing_files > 0) {
      _push(`<a class="text-red-900 text-strong float-right"><svg class="h-5 w-5 text-red-400 inline" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"><path fill-rule="evenodd" d="M8.485 2.495c.673-1.167 2.357-1.167 3.03 0l6.28 10.875c.673 1.167-.17 2.625-1.516 2.625H3.72c-1.347 0-2.189-1.458-1.515-2.625L8.485 2.495zM10 5a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0v-3.5A.75.75 0 0110 5zm0 9a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd"></path></svg> ${ssrInterpolate($data.missing_files)} files missing </a>`);
    } else {
      _push(`<!---->`);
    }
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div></div>`);
  if (!$props.readonly) {
    _push(`<div class="${ssrRenderClass([$data.fullScreen ? "px-6 py-4" : "px-5", ""])}"><form class="py-2 mb-3"><div id="fs-dropzone-message" class="text-center"><div type="button" class="relative block w-full border-2 border-gray-300 border-dashed rounded-lg p-4 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"><svg class="mx-auto h-12 w-12 text-gray-400" xmlns="http://www.w3.org/2000/svg" stroke="currentColor" fill="none" viewBox="0 0 48 48" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 14v20c0 4.418 7.163 8 16 8 1.381 0 2.721-.087 4-.252M8 14c0 4.418 7.163 8 16 8s16-3.582 16-8M8 14c0-4.418 7.163-8 16-8s16 3.582 16 8m0 0v14m0-4c0 4.418-7.163 8-16 8S8 28.418 8 24m32 10v6m0 0v6m0-6h6m-6 0h-6"></path></svg><span class="mt-2 block text-lg font-bold text-blue-600"> Drop Files or Folders to upload `);
    if (_ctx.$page.props.selectedFolder && _ctx.$page.props.selectedFolder != "/") {
      _push(`<span> to &quot;${ssrInterpolate(_ctx.$page.props.selectedFolder)}&quot; folder </span>`);
    } else {
      _push(`<!---->`);
    }
    _push(`<div class="text-sm text-gray-400"> Need help? Check out our <a class="text-blue-800 hover:underline" href="https://docs.nmrxiv.org/submission-guides/submission-process.html#step-1-files-upload" target="_blank">submission guides </a></div></span>`);
    if ($data.dropzone) {
      _push(`<div class="relative mt-5"><div class="overflow-hidden h-2 text-xs flex rounded bg-gray-200"><div style="${ssrRenderStyle(
        "width: " + $data.precentageUpload + "%"
      )}" class="shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-green-500"></div></div>`);
      if ($data.status) {
        _push(`<span class="mt-2 block text-sm font-medium text-gray-900">${ssrInterpolate($data.status)} `);
        if ($data.uploadBatchErrors.length > 0) {
          _push(`<div> - <a class="text-red-700 cursor-pointer">View logs</a></div>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</span>`);
      } else {
        _push(`<!---->`);
      }
      if ($data.showErrorBatchLogs) {
        _push(`<div class="mt-2 block text-sm font-medium text-gray-900"><!--[-->`);
        ssrRenderList($data.uploadBatchErrors, (error, $index) => {
          _push(`<div class="rounded-md">${error}</div>`);
        });
        _push(`<!--]--></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div>`);
    } else {
      _push(`<!---->`);
    }
    _push(`</div></div></form></div>`);
  } else {
    _push(`<!---->`);
  }
  if ($data.loading) {
    _push(`<div><div class="h-[calc(100vh-260px)] text-center py-12"><svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-dark flex-inline inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg> Loading Files... </div></div>`);
  } else {
    _push(`<div class="${ssrRenderClass([
      $data.fullScreen ? "overflow-scroll h-full relative px-6 py-4" : "px-1",
      "min-w-0 flex-1 bg-white border-t border-gray-200 lg:flex"
    ])}"><aside class="${ssrRenderClass([
      $props.height ? $props.height : "",
      "py-2 lg:inset-y-0 lg:z-50 lg:flex lg:w-72 lg:flex-col overflow-y-scroll overflow-x-scroll border-r"
    ])}">`);
    _push(ssrRenderComponent(_component_children, { file: $data.file }, null, _parent));
    if (Object.keys($data.logs).length > 0 && !$props.readonly) {
      _push(`<div class="mt-4 text-sm cursor-pointer text-gray-400">`);
      _push(ssrRenderComponent(_component_InformationCircleIcon, {
        class: "h-5 w-5 inline text-gray-400 flex-shrink-0 mx-auto",
        "aria-hidden": "true"
      }, null, _parent));
      _push(` View logs </div>`);
    } else {
      _push(`<!---->`);
    }
    _push(ssrRenderComponent(_component_jet_dialog_modal, {
      show: $data.showLogsDialog,
      onClose: ($event) => $data.showLogsDialog = false
    }, {
      title: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`<div class="block"${_scopeId}> File logs <div class="inline float-right"${_scopeId}><select class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md"${_scopeId}><!--[-->`);
          ssrRenderList($data.logFilters, (filter) => {
            _push2(`<option${ssrRenderAttr("value", filter)}${_scopeId}>${ssrInterpolate(filter)}</option>`);
          });
          _push2(`<!--]--></select></div></div>`);
        } else {
          return [
            createVNode("div", { class: "block" }, [
              createTextVNode(" File logs "),
              createVNode("div", { class: "inline float-right" }, [
                withDirectives(createVNode("select", {
                  "onUpdate:modelValue": ($event) => $data.logFilter = $event,
                  class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md"
                }, [
                  (openBlock(true), createBlock(Fragment, null, renderList($data.logFilters, (filter) => {
                    return openBlock(), createBlock("option", {
                      key: filter,
                      value: filter
                    }, toDisplayString(filter), 9, ["value"]);
                  }), 128))
                ], 8, ["onUpdate:modelValue"]), [
                  [vModelSelect, $data.logFilter]
                ])
              ])
            ])
          ];
        }
      }),
      content: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`<div class="relative h-[74vh] overflow-x-scroll z-0 mt-1 rounded-lg cursor-pointer"${_scopeId}>`);
          if (Object.keys($options.filteredLogs).length > 0) {
            _push2(`<ul role="list" class="divide-y divide-gray-200"${_scopeId}><!--[-->`);
            ssrRenderList(Object.keys(
              $options.filteredLogs
            ), (file) => {
              _push2(`<li class="py-4 flex"${_scopeId}>`);
              if ($data.logs[file].status == "Success") {
                _push2(ssrRenderComponent(_component_CheckIcon, {
                  class: "h-5 w-5 inline text-green-400",
                  "aria-hidden": "true"
                }, null, _parent2, _scopeId));
              } else {
                _push2(`<!---->`);
              }
              if ($data.logs[file].status == "Inprogress") {
                _push2(ssrRenderComponent(_component_ArrowUpTrayIcon, {
                  class: "h-5 w-5 inline text-yellow-400",
                  "aria-hidden": "true"
                }, null, _parent2, _scopeId));
              } else {
                _push2(`<!---->`);
              }
              if ($data.logs[file].status == "Inprogress") {
                _push2(ssrRenderComponent(_component_EllipsisVerticalIcon, {
                  class: "h-5 w-5 inline text-gray-400",
                  "aria-hidden": "true"
                }, null, _parent2, _scopeId));
              } else {
                _push2(`<!---->`);
              }
              if ($data.logs[file].status == "Error") {
                _push2(ssrRenderComponent(_component_ExclamationCircleIcon, {
                  class: "h-5 w-5 inline text-red-400",
                  "aria-hidden": "true"
                }, null, _parent2, _scopeId));
              } else {
                _push2(`<!---->`);
              }
              _push2(`<div class="ml-3"${_scopeId}><p class="text-sm font-medium text-gray-900"${_scopeId}>${ssrInterpolate(file)}</p><!--[-->`);
              ssrRenderList($data.logs[file].messages, (message) => {
                _push2(`<p class="text-sm text-gray-400"${_scopeId}>${ssrInterpolate(message)}</p>`);
              });
              _push2(`<!--]--></div></li>`);
            });
            _push2(`<!--]--></ul>`);
          } else {
            _push2(`<div class="mt-10"${_scopeId}><i class="text-gray-400"${_scopeId}>No logs with the status ${ssrInterpolate($data.logFilter)}</i></div>`);
          }
          _push2(`</div>`);
        } else {
          return [
            createVNode("div", { class: "relative h-[74vh] overflow-x-scroll z-0 mt-1 rounded-lg cursor-pointer" }, [
              Object.keys($options.filteredLogs).length > 0 ? (openBlock(), createBlock("ul", {
                key: 0,
                role: "list",
                class: "divide-y divide-gray-200"
              }, [
                (openBlock(true), createBlock(Fragment, null, renderList(Object.keys(
                  $options.filteredLogs
                ), (file) => {
                  return openBlock(), createBlock("li", {
                    key: file,
                    class: "py-4 flex"
                  }, [
                    $data.logs[file].status == "Success" ? (openBlock(), createBlock(_component_CheckIcon, {
                      key: 0,
                      class: "h-5 w-5 inline text-green-400",
                      "aria-hidden": "true"
                    })) : createCommentVNode("", true),
                    $data.logs[file].status == "Inprogress" ? (openBlock(), createBlock(_component_ArrowUpTrayIcon, {
                      key: 1,
                      class: "h-5 w-5 inline text-yellow-400",
                      "aria-hidden": "true"
                    })) : createCommentVNode("", true),
                    $data.logs[file].status == "Inprogress" ? (openBlock(), createBlock(_component_EllipsisVerticalIcon, {
                      key: 2,
                      class: "h-5 w-5 inline text-gray-400",
                      "aria-hidden": "true"
                    })) : createCommentVNode("", true),
                    $data.logs[file].status == "Error" ? (openBlock(), createBlock(_component_ExclamationCircleIcon, {
                      key: 3,
                      class: "h-5 w-5 inline text-red-400",
                      "aria-hidden": "true"
                    })) : createCommentVNode("", true),
                    createVNode("div", { class: "ml-3" }, [
                      createVNode("p", { class: "text-sm font-medium text-gray-900" }, toDisplayString(file), 1),
                      (openBlock(true), createBlock(Fragment, null, renderList($data.logs[file].messages, (message) => {
                        return openBlock(), createBlock("p", {
                          key: message,
                          class: "text-sm text-gray-400"
                        }, toDisplayString(message), 1);
                      }), 128))
                    ])
                  ]);
                }), 128))
              ])) : (openBlock(), createBlock("div", {
                key: 1,
                class: "mt-10"
              }, [
                createVNode("i", { class: "text-gray-400" }, "No logs with the status " + toDisplayString($data.logFilter), 1)
              ]))
            ])
          ];
        }
      }),
      footer: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(ssrRenderComponent(_component_jet_secondary_button, {
            class: "cursor-pointer",
            onClick: $options.toggleShowLogsDialog
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Close `);
              } else {
                return [
                  createTextVNode(" Close ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          return [
            createVNode(_component_jet_secondary_button, {
              class: "cursor-pointer",
              onClick: $options.toggleShowLogsDialog
            }, {
              default: withCtx(() => [
                createTextVNode(" Close ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ];
        }
      }),
      _: 1
    }, _parent));
    _push(`</aside><section class="${ssrRenderClass([
      $props.height ? $props.height : "",
      "p-6 flex-1 flex flex-col lg:order-last overflow-y-scroll"
    ])}">`);
    if (_ctx.$page.props.selectedFileSystemObject && _ctx.$page.props.selectedFileSystemObject.has_children) {
      _push(`<div class="mb-3"><div class="py-2 mb-2 block border-b pb-4"><p class="font-bold text-xl">${ssrInterpolate(_ctx.$page.props.selectedFileSystemObject.relative_url)} `);
      if (_ctx.$page.props.selectedFileSystemObject.id && !$props.readonly) {
        _push(`<a class="ml-4 cursor-pointer relative inline-flex items-center px-4 py-1 rounded-full border border-gray-300 bg-white text-sm font-black text-dark hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 float-right">`);
        _push(ssrRenderComponent(_component_TrashIcon, {
          class: "cursor-pointer h-4 w-4 text-gray-900 mr-2",
          "aria-hidden": "true"
        }, null, _parent));
        _push(` Delete </a>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</p></div><ul role="list" class="mb-3 mt-6 grid grid-cols-1 gap-5 sm:gap-6 sm:grid-cols-2 lg:grid-cols-4"><!--[-->`);
      ssrRenderList(_ctx.$page.props.selectedFileSystemObject.children, (file) => {
        _push(`<li class="relative shadow rounded-lg"><div style="${ssrRenderStyle({ "user-select": "none" })}" class="hover:cursor-pointer"><div class="group block w-full aspect-w-10 aspect-h-7 py-4 bg-gray-100 focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-offset-gray-100 focus-within:ring-indigo-500 overflow-hidden">`);
        if (file.type == "directory") {
          _push(`<span>`);
          _push(ssrRenderComponent(_component_FolderIcon, {
            class: "cursor-pointer h-28 w-28 text-gray-400 flex-shrink-0 mx-auto",
            "aria-hidden": "true"
          }, null, _parent));
          _push(`</span>`);
        } else {
          _push(`<span>`);
          _push(ssrRenderComponent(_component_DocumentTextIcon, {
            class: "h-28 w-28 text-gray-400 flex-shrink-0 mx-auto",
            "aria-hidden": "true"
          }, null, _parent));
          _push(`</span>`);
        }
        if (file.status == "missing") {
          _push(`<span class="absolute right-0 top-0 pr-4 pt-4 text-sm font-medium text-gray-500 pointer-events-none"><div class="mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10"><svg class="h-6 w-6 text-red-600" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true"><path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z"></path></svg></div></span>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</div><p class="mt-2 px-2 py-1 block text-sm font-medium truncate text-gray-900 pointer-events-none"><span class="float-left">${ssrInterpolate(file.name)}</span></p></div></li>`);
      });
      _push(`<!--]--></ul></div>`);
    } else {
      _push(`<div>`);
      if (_ctx.$page.props.selectedFileSystemObject) {
        _push(`<div class="py-2 mb-2 block border-b pb-4"><p class="font-bold text-xl">${ssrInterpolate(_ctx.$page.props.selectedFileSystemObject.relative_url)} `);
        if (!$props.readonly) {
          _push(`<a class="ml-4 cursor-pointer relative inline-flex items-center px-4 py-1 rounded-full border border-gray-300 bg-white text-sm font-black text-dark hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 float-right">`);
          _push(ssrRenderComponent(_component_TrashIcon, {
            class: "cursor-pointer h-4 w-4 text-gray-900 mr-2",
            "aria-hidden": "true"
          }, null, _parent));
          _push(` Delete </a>`);
        } else {
          _push(`<!---->`);
        }
        _push(`</p></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`<div class="pt-5">`);
      if (_ctx.$page.props.selectedFileSystemObject && _ctx.$page.props.selectedFileSystemObject.type == "file") {
        _push(`<span>`);
        _push(ssrRenderComponent(_component_File_details, {
          file: _ctx.$page.props.selectedFileSystemObject
        }, null, _parent));
        _push(`</span>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div>`);
    }
    _push(`</section></div>`);
  }
  _push(`</div></div>`);
  if ($data.status != "PROCESSING UPLOADED FILES" && $data.status != "" && $data.status != null || $data.precentageUpload > 0) {
    _push(`<div class="w-full h-screen mx-84 px-10 fixed block top-0 left-0 bg-white opacity-90 z-50"><div role="status" class="absolute -translate-x-1/2 -translate-y-1/2 top-2/4 left-1/2"><svg aria-hidden="true" class="w-8 h-8 mr-2 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600" viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z" fill="currentColor"></path><path d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z" fill="currentFill"></path></svg><div class="mt-4 w-64 h-84"><div class="h-2 mb-2 text-xs flex rounded-md bg-gray-200"><div style="${ssrRenderStyle("width: " + $data.precentageUpload + "%")}" class="shadow-none flex rounded-md flex-col text-center whitespace-nowrap text-white justify-center bg-green-500"></div></div> ${ssrInterpolate($data.status)} (${ssrInterpolate(_ctx.uploadedFilesCount)}/${ssrInterpolate(_ctx.totalFilesCount)}) </div><div class="w-64 text-gray-700 truncate"><small><i>${ssrInterpolate($data.currentLog)}</i></small></div>`);
    if (Object.keys($data.logs).length > 0) {
      _push(`<button class="mt-4 text-sm cursor-pointer bg-white-900">`);
      _push(ssrRenderComponent(_component_InformationCircleIcon, {
        class: "h-5 w-5 inline flex-shrink-0 mx-auto",
        "aria-hidden": "true"
      }, null, _parent));
      _push(` View logs </button>`);
    } else {
      _push(`<!---->`);
    }
    _push(`</div></div>`);
  } else {
    _push(`<!---->`);
  }
  _push(ssrRenderComponent(_component_jet_confirmation_modal, {
    show: $data.fsoBeingDeleted,
    onClose: ($event) => $data.fsoBeingDeleted = null
  }, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete `);
      } else {
        return [
          createTextVNode(" Delete ")
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Are you sure you would like to delete ${ssrInterpolate(_ctx.$page.props.selectedFileSystemObject.name)}? `);
      } else {
        return [
          createTextVNode(" Are you sure you would like to delete " + toDisplayString(_ctx.$page.props.selectedFileSystemObject.name) + "? ", 1)
        ];
      }
    }),
    footer: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.fsoBeingDeleted = null
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_danger_button, {
          class: "ml-2",
          onClick: $options.deleteFSO
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete `);
            } else {
              return [
                createTextVNode(" Delete ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_secondary_button, {
            onClick: ($event) => $data.fsoBeingDeleted = null
          }, {
            default: withCtx(() => [
              createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          createVNode(_component_jet_danger_button, {
            class: "ml-2",
            onClick: $options.deleteFSO
          }, {
            default: withCtx(() => [
              createTextVNode(" Delete ")
            ]),
            _: 1
          }, 8, ["onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(ssrRenderComponent(_component_jet_confirmation_modal, {
    show: $data.missing_files > 0 && $data.showMissingFilesDetails,
    onClose: ($event) => $data.showMissingFilesDetails = null
  }, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Missing Files `);
      } else {
        return [
          createTextVNode(" Missing Files ")
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Following files are mising <br${_scopeId}><!--[-->`);
        ssrRenderList($data.missing_files_list, (file) => {
          _push2(`<span${_scopeId}>${ssrInterpolate(file.relative_url)} <br${_scopeId}></span>`);
        });
        _push2(`<!--]-->`);
      } else {
        return [
          createTextVNode(" Following files are mising "),
          createVNode("br"),
          (openBlock(true), createBlock(Fragment, null, renderList($data.missing_files_list, (file) => {
            return openBlock(), createBlock("span", null, [
              createTextVNode(toDisplayString(file.relative_url) + " ", 1),
              createVNode("br")
            ]);
          }), 256))
        ];
      }
    }),
    footer: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.showMissingFilesDetails = null
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_secondary_button, {
            onClick: ($event) => $data.showMissingFilesDetails = null
          }, {
            default: withCtx(() => [
              createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$20 = _sfc_main$20.setup;
_sfc_main$20.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/FileSystemBrowser.vue");
  return _sfc_setup$20 ? _sfc_setup$20(props, ctx) : void 0;
};
const FileSystemBrowser = /* @__PURE__ */ _export_sfc(_sfc_main$20, [["ssrRender", _sfc_ssrRender$1$]]);
const _sfc_main$1$ = {
  components: {
    Link,
    JetDialogModal,
    JetSecondaryButton,
    JetButton,
    // VueTagsInput,
    // slider,
    SelectRich,
    XCircleIcon,
    PencilIcon,
    JetInputError,
    FileSystemBrowser,
    ClipboardDocumentIcon,
    QuestionMarkCircleIcon,
    ExclamationTriangleIcon: ExclamationTriangleIcon$1,
    ArrowDownOnSquareStackIcon,
    TrashIcon,
    PlayIcon,
    PauseIcon,
    SpectraEditor,
    Validation: Validation$1
  },
  props: [],
  data() {
    return {
      openCreateDatasetDialog: false,
      loading: false,
      loadingStep: false,
      currentDraft: null,
      errorMessage: null,
      datasetsToImport: null,
      errorMessage: "",
      draftForm: this.$inertia.form({
        _method: "POST",
        name: "",
        description: "",
        error_message: null,
        tags: [],
        tag: "",
        tags_array: [],
        owner_id: null
      }),
      steps: [
        {
          id: "01",
          step: "tour-step-submission-header",
          name: "Files Upload",
          description: "Vitae sed mi luctus laoreet.",
          href: "#",
          status: "upcoming"
        },
        {
          id: "02",
          step: "v-step-20",
          name: "Assignments & Metadata",
          description: "Cursus semper viverra.",
          href: "#",
          status: "upcoming"
        },
        {
          id: "03",
          name: "Complete ~ Community Standards",
          description: "Penatibus eu quis ante.",
          href: "#",
          status: "upcoming"
        }
      ],
      tabs: [
        { name: "Experiments (Spectra)", current: true },
        { name: "Sample Info", current: false },
        { name: "Metadata", current: false }
      ],
      createDatasetForm: this.$inertia.form({
        _method: "POST",
        name: "",
        description: "",
        error_message: null,
        team_id: null,
        owner_id: null,
        color: null,
        starred: null,
        project_id: this.project ? this.project.id : null,
        is_public: ref(false)
      }),
      file: null,
      status: null,
      selectedStudy: null,
      studyName: "",
      studyDescription: "",
      studyTags: [],
      studyTag: "",
      selectedDataset: null,
      currentMolecules: [],
      showPrimer: false,
      smiles: "",
      percentage: 1,
      editor: null,
      updateProjectForm: this.$inertia.form({
        _method: "PUT",
        name: null,
        description: null,
        error_message: null,
        is_public: false,
        license: null,
        owner_id: null,
        team_id: null,
        license_id: null,
        releaseDate: this.setReleaseDate()
      }),
      studyForm: this.$inertia.form({
        _method: "POST",
        name: "",
        description: "",
        error_message: null,
        tags: [],
        tag: "",
        tags_array: []
      }),
      licenses: [],
      project: null,
      initialised: false,
      autoimportList: [],
      confirmPublicAccess: false,
      studiesExist: false,
      returnUrl: "/dashboard"
    };
  },
  computed: {
    primed() {
      return this.$page.props.auth.user.primed;
    },
    currentStep() {
      return this.steps.filter((s2) => s2.status == "current")[0];
    },
    currentTab() {
      return this.tabs.find((t4) => t4.current);
    },
    downloadURL() {
      return this.url + "/" + this.project.owner.username + "/datasets/" + this.project.slug;
    },
    url() {
      return String(this.$page.props.url) ? String(this.$page.props.url) : "https://dev.nmrxiv.org";
    },
    getMax() {
      if (this.selectedStudy) {
        let totalCount = 0;
        this.selectedStudy.sample.molecules.forEach((mol) => {
          totalCount += parseInt(mol.pivot.percentage_composition);
        });
        return 100 - totalCount;
      } else {
        return 100;
      }
    }
  },
  mounted() {
    const initialise = (data) => {
      this.fetchDrafts().then((response) => {
        this.returnUrl = this.url + this.returnUrl + (data.return_url ? data.return_url : "");
        this.drafts = response.data.drafts;
        this.sharedDrafts = response.data.sharedDrafts;
        if (data.draft_id) {
          let selectedDraft = this.drafts.find(
            (d2) => d2.id == data.draft_id
          );
          if (!selectedDraft) {
            selectedDraft = this.sharedDrafts.find(
              (d2) => d2.id == data.draft_id
            );
          }
          this.selectDraft(selectedDraft);
          this.loading = false;
          this.toggleOpenCreateDatasetDialog();
        } else {
          this.defaultDraft = response.data.default;
          this.toggleOpenCreateDatasetDialog();
          if (this.drafts.length == 0) {
            this.currentDraft = this.defaultDraft;
            this.selectStep(1);
            this.loading = false;
          } else {
            this.loading = false;
          }
          this.showPrimer = !this.primed;
        }
      });
    };
    this.emitter.all.set("openDatasetCreateDialog", [initialise]);
  },
  unmounted() {
  },
  methods: {
    hidePrimer() {
      axios.post("/primer/skip").then(() => {
        router.reload({
          only: ["user", "user.permissions", "user.roles"]
        });
      });
    },
    skipPrimer() {
      this.showPrimer = false;
    },
    getSVGString(molecule) {
      if (molecule.MOL) {
        let mol = OCL$1.Molecule.fromMolfile(
          "\n  " + molecule.MOL.replaceAll('"', "")
        );
        return mol.toSVG(200, 200);
      }
    },
    autoGenerateDescription() {
      let desc = "This dataset contains NMR spectra obtained for the sample -" + this.selectedStudy.name + "</br>";
      let sampleNames = [];
      let sampleTags = [];
      this.selectedStudy.datasets.forEach((ds) => {
        if (ds.nmrium_info) {
          let nmriuminfo = JSON.parse(ds.nmrium_info);
          if (nmriuminfo) {
            let spectra = nmriuminfo.spectra;
            spectra.forEach((sp) => {
              desc = desc + "Experiment: " + sp.info.experiment + "</br>";
              desc = desc + "Nucleus: " + sp.info.nucleus + "</br>";
              desc = desc + "Type: " + sp.info.type + "</br>";
              desc = desc + "Temperature: " + sp.info.temperature + "</br>";
              desc = desc + "Solvent: " + sp.info.solvent + "</br>";
              desc = desc + "Origin Frequency: " + sp.info.originFrequency + "</br>";
              desc = desc + "Probe Name: " + sp.info.probeName + "</br>";
              sampleTags.push(
                this.isString(sp.info.nucleus) ? sp.info.nucleus : sp.info.nucleus.join(" - ")
              );
              if (sp.info.sampleName) {
                sampleNames.push(sp.info.sampleName);
                desc = desc + "Sample Name: " + sp.info.sampleName + "</br>";
              }
            });
            desc = desc + "</br></br>";
          }
        }
      });
      this.studyForm.description = desc;
      if (sampleNames.length > 0) {
        sampleNames = [...new Set(sampleNames)];
        let sampleName = sampleNames.join(", ");
        if (sampleName != "") {
          this.studyForm.name = sampleNames.join(", ");
        }
      }
      if (sampleTags.length > 0) {
        sampleTags = [...new Set(sampleTags)];
        let tags = [];
        sampleTags.forEach((t4) => {
          tags.push({
            text: t4
          });
        });
        this.studyForm.tags = tags;
      }
    },
    updateLoadingStatus(status) {
      this.loadingStep = status;
    },
    deleteMolecule(mol) {
      axios.delete(
        "/dashboard/studies/" + this.selectedStudy.id + "/molecule/" + mol.id
      ).then((res) => {
        this.selectedStudy.sample.molecules = res.data;
        this.smiles = "";
        this.percentage = 0;
        this.editor.setSmiles("");
      });
    },
    updateProject() {
      this.updateProjectForm.clearErrors();
      this.loadingStep = true;
      this.updateProjectForm.name = this.project.name;
      this.updateProjectForm.owner_id = this.project.owner_id;
      this.updateProjectForm.license_id = this.updateProjectForm.license ? this.updateProjectForm.license.id : null;
      this.updateProjectForm.team_id = this.project.team_id;
      this.updateProjectForm.description = this.project.description;
      this.updateProjectForm.post(
        route("dashboard.project.update", this.project.id),
        {
          preserveScroll: true,
          onSuccess: () => {
            this.loadingStep = false;
          },
          onError: (err) => {
            this.loadingStep = false;
          }
        }
      );
    },
    loadLicenses() {
      if (this.$page.props.licenses) {
        this.licenses = this.$page.props.licenses;
      } else {
        axios.get(route("licenses")).then((res) => {
          this.licenses = res.data;
          this.$page.props.licenses = res.data;
        });
      }
    },
    setReleaseDate() {
      var current_date = /* @__PURE__ */ new Date();
      var relase_date = /* @__PURE__ */ new Date();
      relase_date.setDate(current_date.getDate() + 7);
      return relase_date;
    },
    saveStudyDetails() {
      this.loadingStep = true;
      this.studyForm.tags_array = this.studyForm.tags.map((a2) => a2.text);
      axios.put(
        "/dashboard/studies/" + this.selectedStudy.id + "/update",
        this.studyForm
      ).catch((error) => {
        this.loadingStep = false;
        Object.keys(error.response.data.errors).forEach((key) => {
          error.response.data.errors[key] = error.response.data.errors[key].join(", ");
        });
        this.studyForm.errors = error.response.data.errors;
        this.studyForm.error_message = error.response.data.message;
        this.studyForm.hasErrors = true;
      }).then((response) => {
        if (response) {
          this.loadingStep = false;
          this.selectStudy(
            response.data,
            this.selectedStudyIndex
          );
          this.studyForm.hasErrors = false;
        }
      });
    },
    editMolecule(mol) {
      this.editor.setMolFile("\n  " + mol.MOL.replaceAll('"', ""));
      this.percentage = parseInt(mol.pivot.percentage_composition);
      axios.delete(
        "/dashboard/studies/" + this.selectedStudy.id + "/molecule/" + mol.id
      ).then((res) => {
        this.selectedStudy.sample.molecules = res.data;
      });
    },
    saveMolecule() {
      let mol = this.editor.getMolFile();
      axios.post(
        "https://www.cheminfo.org/webservices/inchi",
        "molfile=" + mol
      ).then((response) => {
        let InChI = response.data.output.InChI;
        let InChIKey = response.data.output.InChIKey;
        let MF = this.editor.getMolecule().getMolecularFormula().formula;
        axios.post(
          "/dashboard/studies/" + this.selectedStudy.id + "/molecule",
          {
            InChI,
            InChIKey,
            percentage: this.percentage,
            formula: MF,
            mol
          }
        ).then((res) => {
          this.selectedStudy.sample.molecules = res.data;
          this.smiles = "";
          this.percentage = 0;
          this.editor.setSmiles("");
        });
      });
    },
    loadSmiles() {
      this.errorMessage = "";
      if (this.smiles && this.smiles != "") {
        try {
          let mol = OCL$1.Molecule.fromSmiles(this.smiles);
          this.editor.setSmiles(this.smiles);
        } catch (e2) {
          this.errorMessage = "The entered SMILES is not valid.";
        }
      }
    },
    selectTab(tab) {
      this.tabs.forEach((t4) => {
        if (t4.name == tab.name) {
          t4.current = true;
          this.$nextTick(() => {
            this.editor = OCL$1.StructureEditor.createSVGEditor(
              "structureSearchEditor",
              1
            );
          });
        } else {
          t4.current = false;
        }
      });
    },
    closeDraft() {
      this.loadingStep = true;
      axios.post(
        "/dashboard/drafts/" + this.currentDraft.id + "/complete",
        {}
      ).catch((error) => {
        this.loadingStep = false;
      }).then((response) => {
        this.project = response.data.project;
        this.validation = this.parseJSON(
          response.data.validation.report
        );
        if (this.project) {
          this.loadingStep = false;
          this.loadLicenses();
          this.selectStep(3);
        }
      });
    },
    trackProject() {
      axios.get("/projects/status/" + this.project.id + "/queue").then((response) => {
        this.project.status = response.data.status;
        if (this.project.status != "complete") {
          setTimeout(() => this.trackProject(), 1e4);
        }
      });
    },
    openSelectDraftsView() {
      this.steps.forEach((s2) => {
        s2.status = "upcoming";
      });
      this.currentDraft = null;
    },
    selectDataset(dataset) {
      this.selectedDataset = dataset;
    },
    selectStudy(study, index, datasetIndex = null) {
      this.selectedStudyIndex = index;
      this.selectedStudy = study;
      this.studyForm.name = this.selectedStudy.name;
      this.studyForm.description = this.selectedStudy.description;
      let tags = [];
      this.selectedStudy.tags.forEach((t4) => {
        tags.push({
          text: t4.name["en"]
        });
      });
      this.studyForm.tags = tags;
      if (!datasetIndex) {
        this.selectedDSIndex = 0;
        this.selectDataset(this.selectedStudy.datasets[0]);
      } else {
        this.selectedDSIndex = datasetIndex;
        this.selectDataset(this.selectedStudy.datasets[datasetIndex]);
      }
    },
    createNewDraft() {
      if (!this.primed) {
        this.showPrimer = true;
        this.newDraft();
      } else {
        this.newDraft();
      }
    },
    newDraft() {
      if (this.defaultDraft) {
        this.defaultDraft.name = "Untitled Project - " + (/* @__PURE__ */ new Date()).toLocaleString();
        this.selectDraft(this.defaultDraft);
      } else {
        this.fetchDrafts().then((response) => {
          this.defaultDraft = response.data.default;
          this.loading = false;
          this.defaultDraft.name = "Untitled Project - " + (/* @__PURE__ */ new Date()).toLocaleString();
          this.selectDraft(this.defaultDraft);
        });
      }
    },
    hasStudies(file) {
      if (file.model_type == "study") {
        this.studiesExist = true;
      }
      if (file.has_children && file.children) {
        file.children.forEach((fso) => {
          this.hasStudies(fso);
        });
      }
    },
    process() {
      this.errorMessage = null;
      let foldersExist = false;
      this.$refs.fsbRef.file.children.forEach((fso) => {
        if (fso.has_children) {
          foldersExist = true;
        }
      });
      this.hasStudies(this.$refs.fsbRef.file);
      if (this.$refs.fsbRef.file && this.$refs.fsbRef.file.children.length > 0 && foldersExist && this.studiesExist) {
        this.loadingStep = true;
        this.draftForm.owner_id = this.$page.props.auth.user.id;
        this.draftForm.tags_array = this.draftForm.tags.map(
          (a2) => a2.text
        );
        axios.post(
          "/dashboard/drafts/" + this.currentDraft.id + "/process",
          this.draftForm
        ).then(
          (response) => {
            this.project = response.data.project;
            this.studies = response.data.studies;
            if (this.project && this.studies && this.studies.length > 0) {
              this.selectStudy(this.studies[0], 0);
              this.selectedDataset = this.selectedStudy.datasets[0];
              this.loadingStep = false;
              this.selectStep(2);
            } else {
              if (this.studies.length == 0) {
                this.loadingStep = false;
              }
            }
          },
          (error) => {
            this.loadingStep = false;
            Object.keys(error.response.data.errors).forEach(
              (key) => {
                error.response.data.errors[key] = error.response.data.errors[key].join(
                  ", "
                );
              }
            );
            this.draftForm.errors = error.response.data.errors;
            this.draftForm.error_message = error.response.data.message;
            this.draftForm.hasErrors = true;
            Object.keys(this.draftForm.errors).forEach(
              (key) => {
                if (!this.errorMessage) {
                  this.errorMessage = "<b class='capitalize'>" + key + "</b>: " + this.draftForm.errors[key] + "</br>";
                } else {
                  this.errorMessage += "<b class='capitalize'>" + key + "</b>: " + this.draftForm.errors[key] + "</br>";
                }
              }
            );
          }
        );
      } else {
        if (this.$refs.fsbRef.file.children.length > 0 && !foldersExist) {
          this.errorMessage = "Spectra files needs to be organised into folders. Please create a folder corresponding to each sample and add all your NMR spectroscopic experiment output files are added to the corresponding folders";
        } else if (this.$refs.fsbRef.file.children.length <= 0) {
          this.errorMessage = "Please upload spectral data to proceed.";
        } else if (!this.studiesExist) {
          this.errorMessage = "Please upload spectral data to proceed.";
        } else {
          this.errorMessage = "Please make sure you fill in all the required data before you proceed";
        }
      }
    },
    fetchProjectData() {
      axios.get("/dashboard/drafts/" + this.currentDraft.id + "/info").then((response) => {
        this.project = response.data.project;
        this.studies = response.data.studies;
        if (this.project && this.studies && this.studies.length > 0) {
          this.selectStudy(this.studies[0], 0);
          this.selectedDataset = this.selectedStudy.datasets[0];
          this.loadingStep = false;
          this.selectStep(2);
        } else {
          if (this.studies.length == 0) {
            this.loadingStep = false;
          }
        }
      });
    },
    selectStep(id2) {
      this.steps.forEach((step) => {
        if (parseInt(step.id) < id2) {
          step.status = "complete";
        } else if (parseInt(step.id) == id2) {
          step.status = "current";
        } else {
          step.status = "upcoming";
        }
      });
      if (id2 == 1) {
        this.$nextTick(function() {
          if (this.$refs.fsbRef) {
            this.$refs.fsbRef.annotate();
          }
        });
      } else if (id2 == 2) {
        this.$nextTick(function() {
          if (this.$refs.spectraEditorREF)
            ;
        });
      }
    },
    toggleOpenCreateDatasetDialog() {
      this.openCreateDatasetDialog = !this.openCreateDatasetDialog;
    },
    autoImport() {
      this.loadingStep = true;
      this.datasetsToImport = [];
      this.studies.forEach((study) => {
        study.datasets.forEach((dataset) => {
          if (!dataset.has_nmrium) {
            this.datasetsToImport.push({
              projectSlug: this.project.slug,
              studySlug: study.slug,
              datasetSlug: dataset.slug,
              datasetId: dataset.id,
              status: false
            });
          }
        });
      });
      this.fetchNMRium();
    },
    fetchNMRium() {
      let datasetDetails = this.datasetsToImport.filter(
        (f2) => f2.status == false
      )[0];
      if (datasetDetails) {
        this.loadingStep = true;
        let ownerUserName = this.$page.props.team ? this.$page.props.team.owner.username : this.project.owner.username;
        axios.post("https://nodejsdev.nmrxiv.org/spectra-parser", {
          urls: [
            this.url + "/" + ownerUserName + "/datasets/" + datasetDetails.projectSlug + "/" + datasetDetails.studySlug + "/" + datasetDetails.datasetSlug
          ],
          snapshot: false
        }).then((response) => {
          axios.post(
            "/dashboard/datasets/" + datasetDetails.datasetId + "/nmriumInfo",
            response.data.data
          ).then((res) => {
            this.loadingStep = false;
            this.datasetsToImport.filter(
              (f2) => f2.datasetId == datasetDetails.datasetId
            )[0].status = true;
            this.fetchNMRium();
          }).catch((err) => {
            this.loadingStep = false;
            this.datasetsToImport.filter(
              (f2) => f2.datasetId == datasetDetails.datasetId
            )[0].status = true;
            this.fetchNMRium();
          });
        }).catch((error) => {
          this.loadingStep = false;
          this.datasetsToImport.filter(
            (f2) => f2.datasetId == datasetDetails.datasetId
          )[0].status = true;
          this.fetchNMRium();
        });
      } else {
        if (this.datasetsToImport.length > 0) {
          this.datasetsToImport = null;
          this.fetchProjectData();
        }
      }
    },
    fetchDrafts() {
      this.loading = true;
      return axios.get("/dashboard/drafts");
    },
    selectDraft(draft) {
      this.currentDraft = draft;
      this.draftForm.name = this.currentDraft.name;
      this.draftForm.description = this.currentDraft.description;
      let tags = [];
      this.file = null;
      this.draftForm.tags = [];
      if (this.currentDraft.tags) {
        this.currentDraft.tags.forEach((t4) => {
          tags.push({
            text: t4.name["en"]
          });
        });
        this.draftForm.tags = tags;
      }
      this.selectStep(1);
    },
    UpdateAndClose() {
      this.updateProject();
      this.toggleOpenCreateDatasetDialog();
    }
  }
};
function _sfc_ssrRender$1_(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_dialog_modal = resolveComponent("jet-dialog-modal");
  const _component_Link = resolveComponent("Link");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_vue_tags_input = resolveComponent("vue-tags-input");
  const _component_file_system_browser = resolveComponent("file-system-browser");
  const _component_ArrowDownOnSquareStackIcon = resolveComponent("ArrowDownOnSquareStackIcon");
  const _component_SpectraEditor = resolveComponent("SpectraEditor");
  const _component_TrashIcon = resolveComponent("TrashIcon");
  const _component_PencilIcon = resolveComponent("PencilIcon");
  const _component_slider = resolveComponent("slider");
  const _component_Validation = resolveComponent("Validation");
  const _component_ExclamationTriangleIcon = resolveComponent("ExclamationTriangleIcon");
  const _component_jet_button = resolveComponent("jet-button");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  _push(ssrRenderComponent(_component_jet_dialog_modal, mergeProps({
    "max-width": "7xl",
    show: $data.openCreateDatasetDialog,
    onClose: ($event) => $data.openCreateDatasetDialog = false
  }, _attrs), {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if (!$data.showPrimer) {
          _push2(`<div${_scopeId}>`);
          if (!$data.loading && $data.currentDraft) {
            _push2(`<div class="lg:border-b lg:border-gray-200 pb-3 pr-5 -mx-6"${_scopeId}><div id="tour-step-submission-header" class="flex items-left justify-start pl-5 float-left"${_scopeId}><b${_scopeId}>${ssrInterpolate($data.steps.find((step) => step.status === "current").name)}</b></div><nav class="flex items-right justify-end" aria-label="Progress"${_scopeId}><p class="text-sm font-medium"${_scopeId}> Step ${ssrInterpolate($data.steps.findIndex(
              (step) => step.status === "current"
            ) + 1)} of ${ssrInterpolate($data.steps.length)}</p><ol role="list" class="ml-8 flex items-center space-x-5"${_scopeId}><!--[-->`);
            ssrRenderList($data.steps, (step) => {
              _push2(`<li${_scopeId}>`);
              if (step.status === "complete") {
                _push2(`<a class="block w-2.5 h-2.5 bg-teal-600 rounded-full hover:bg-teal-900"${_scopeId}></a>`);
              } else if (step.status === "current") {
                _push2(`<a class="relative flex items-center justify-center" aria-current="step"${_scopeId}><span class="absolute w-5 h-5 p-px flex" aria-hidden="true"${_scopeId}><span class="w-full h-full rounded-full bg-blue-100"${_scopeId}></span></span><span class="relative block w-2.5 h-2.5 bg-teal-600 rounded-full" aria-hidden="true"${_scopeId}></span></a>`);
              } else {
                _push2(`<a class="block w-2.5 h-2.5 bg-gray-200 rounded-full hover:bg-gray-400"${_scopeId}></a>`);
              }
              _push2(`</li>`);
            });
            _push2(`<!--]--></ol></nav></div>`);
          } else {
            _push2(`<div class="lg:border-b lg:border-gray-200 pb-3 pr-5 -mx-6"${_scopeId}>`);
            if (!$data.currentDraft) {
              _push2(`<div class="flex text-md font-bold items-left justify-start pl-5"${_scopeId}> Drafts </div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div>`);
          }
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          !$data.showPrimer ? (openBlock(), createBlock("div", { key: 0 }, [
            !$data.loading && $data.currentDraft ? (openBlock(), createBlock("div", {
              key: 0,
              class: "lg:border-b lg:border-gray-200 pb-3 pr-5 -mx-6"
            }, [
              createVNode("div", {
                id: "tour-step-submission-header",
                class: "flex items-left justify-start pl-5 float-left"
              }, [
                createVNode("b", null, toDisplayString($data.steps.find((step) => step.status === "current").name), 1)
              ]),
              createVNode("nav", {
                class: "flex items-right justify-end",
                "aria-label": "Progress"
              }, [
                createVNode("p", { class: "text-sm font-medium" }, " Step " + toDisplayString($data.steps.findIndex(
                  (step) => step.status === "current"
                ) + 1) + " of " + toDisplayString($data.steps.length), 1),
                createVNode("ol", {
                  role: "list",
                  class: "ml-8 flex items-center space-x-5"
                }, [
                  (openBlock(true), createBlock(Fragment, null, renderList($data.steps, (step) => {
                    return openBlock(), createBlock("li", {
                      key: step.name
                    }, [
                      step.status === "complete" ? (openBlock(), createBlock("a", {
                        key: 0,
                        class: "block w-2.5 h-2.5 bg-teal-600 rounded-full hover:bg-teal-900"
                      })) : step.status === "current" ? (openBlock(), createBlock("a", {
                        key: 1,
                        class: "relative flex items-center justify-center",
                        "aria-current": "step"
                      }, [
                        createVNode("span", {
                          class: "absolute w-5 h-5 p-px flex",
                          "aria-hidden": "true"
                        }, [
                          createVNode("span", { class: "w-full h-full rounded-full bg-blue-100" })
                        ]),
                        createVNode("span", {
                          class: "relative block w-2.5 h-2.5 bg-teal-600 rounded-full",
                          "aria-hidden": "true"
                        })
                      ])) : (openBlock(), createBlock("a", {
                        key: 2,
                        class: "block w-2.5 h-2.5 bg-gray-200 rounded-full hover:bg-gray-400"
                      }))
                    ]);
                  }), 128))
                ])
              ])
            ])) : (openBlock(), createBlock("div", {
              key: 1,
              class: "lg:border-b lg:border-gray-200 pb-3 pr-5 -mx-6"
            }, [
              !$data.currentDraft ? (openBlock(), createBlock("div", {
                key: 0,
                class: "flex text-md font-bold items-left justify-start pl-5"
              }, " Drafts ")) : createCommentVNode("", true)
            ]))
          ])) : createCommentVNode("", true)
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($data.loadingStep) {
          _push2(`<div class="absolute inset-0 flex justify-center items-center z-10 bg-white rounded bg-opacity-70"${_scopeId}><svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-dark flex-inline inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"${_scopeId}><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"${_scopeId}></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"${_scopeId}></path></svg>`);
          if ($data.datasetsToImport && $data.datasetsToImport.length > 0) {
            _push2(`<div${_scopeId}><br${_scopeId}> Processing ${ssrInterpolate($data.datasetsToImport.filter((f2) => f2.status == true).length + 1)} of ${ssrInterpolate($data.datasetsToImport.length)} spectra </div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        if (!$data.loading) {
          _push2(`<div${_scopeId}>`);
          if (_ctx.drafts.length > 0 && !$data.currentDraft) {
            _push2(`<div${_scopeId}><div${_scopeId}><ul role="list" class="-my-5 divide-y divide-gray-200"${_scopeId}><!--[-->`);
            ssrRenderList(_ctx.drafts, (draft) => {
              _push2(`<li class="py-4"${_scopeId}><div class="flex items-center space-x-4"${_scopeId}><div class="flex-1 min-w-0"${_scopeId}><p class="text-lg font-large text-black truncate"${_scopeId}><b${_scopeId}>${ssrInterpolate(draft.name)}</b></p><p class="text-sm font-medium text-gray-600 truncate pr-10"${_scopeId}>${ssrInterpolate(draft.description)}</p><p class="text-sm font-medium text-gray-500 truncate"${_scopeId}> ID: ${ssrInterpolate(draft.key)}</p><p class="text-sm text-gray-500 truncate"${_scopeId}> Created at: ${ssrInterpolate(_ctx.formatDateTime(draft.created_at))}</p></div><div${_scopeId}>`);
              _push2(ssrRenderComponent(_component_Link, {
                href: _ctx.route("dashboard", {
                  action: "submission",
                  draft_id: draft.id
                }),
                class: "inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring focus:ring-gray-300 disabled:opacity-25 transition ml-2"
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` Select `);
                  } else {
                    return [
                      createTextVNode(" Select ")
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
              _push2(`</div></div></li>`);
            });
            _push2(`<!--]--></ul></div><div class="relative mt-6"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-300"${_scopeId}></div></div><div class="relative flex justify-center"${_scopeId}><span class="px-2 bg-white text-sm text-gray-500"${_scopeId}> Or </span></div></div><div class="my-6 justify-center items-center flex"${_scopeId}><button class="inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring focus:ring-gray-300 disabled:opacity-25 transition"${_scopeId}> Create New </button></div></div>`);
          } else {
            _push2(`<div${_scopeId}>`);
            if ($data.showPrimer) {
              _push2(`<div class="-mx-6 -my-4"${_scopeId}><div${_scopeId}><section class="h-1/2 overflow-hidden bg-white overflow-hidden py-12"${_scopeId}><div class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"${_scopeId}><svg class="absolute top-full right-full transform translate-x-1/3 -translate-y-1/4 lg:translate-x-1/2 xl:-translate-y-1/2" width="404" height="404" fill="none" viewBox="0 0 404 404" role="img" aria-labelledby="svg-nmrxiv"${_scopeId}><title id="svg-nmrxiv"${_scopeId}>nmrxiv</title><defs${_scopeId}><pattern id="ad119f34-7694-4c31-947f-5c9d249b21f3" x="0" y="0" width="20" height="20" patternUnits="userSpaceOnUse"${_scopeId}><rect x="0" y="0" width="4" height="4" class="text-gray-200" fill="currentColor"${_scopeId}></rect></pattern></defs><rect width="404" height="404" fill="url(#ad119f34-7694-4c31-947f-5c9d249b21f3)"${_scopeId}></rect></svg><div class="relative"${_scopeId}><blockquote${_scopeId}><div class="max-w-3xl mx-auto text-left text-xl leading-9 font-medium text-gray-900"${_scopeId}><p class="flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest"${_scopeId}> Basic Concepts </p><p class="mt-3 text-lg"${_scopeId}> In nmrXiv, data is organised as <b class="text-teal-700"${_scopeId}>projects</b>. Consider a project is equivalent to your publication with the corresponding NMR data to be uploaded to nmrXiv. A project can have multiple studies. <b class="text-teal-700"${_scopeId}>A study corresponds to a group of NMR experiments of one sample</b>, e.g. 1H, 13C, APT, COSY HSQC, HMBC, NOESY in Bruker Format or (another study) in another format such as JCAMP-DX / Varian. <b class="text-teal-700"${_scopeId}>Each NMR measurement in a study is referred to as a dataset</b>, e.g. 1H NMR or COSY (are each a dataset). </p><img src="/img/primer.png" alt=""${_scopeId}><p class="text-md text-center leading-5 mb-3"${_scopeId}><small${_scopeId}>nmrXiv allows you to upload NMR raw data from any NMR instrument. We can currently auto-detect Bruker/Varian/JOEL formats &amp; JCAMP files and will support more raw &amp; processed file formats soon. Once you upload your raw or processed NMR data, nmrXiv will auto-generate the studies and datasets for you based on the uploaded folder structure. <i${_scopeId}><a class="text-xs" target="_blank" href="https://docs.nmrxiv.org/submission-guides/submission/folder-structure"${_scopeId}>More info here</a></i></small></p></div></blockquote></div></div></section></div></div>`);
            } else {
              _push2(`<div${_scopeId}>`);
              if ($options.currentStep) {
                _push2(`<div${_scopeId}>`);
                if ($options.currentStep.id == "01") {
                  _push2(`<div id="submission-dropzone"${_scopeId}>`);
                  if ($data.currentDraft) {
                    _push2(`<div${_scopeId}><div id="tour-step-project-name" class="mb-3"${_scopeId}><label for="project-name" class="block text-sm font-medium text-gray-700 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId}> Project Name </label><div class="mt-1"${_scopeId}><input${ssrRenderAttr("value", $data.draftForm.name)} type="text" name="project-name" class="block w-full shadow-sm focus:ring-teal-500 focus:border-teal-500 sm:text-sm border-gray-300 rounded-md"${_scopeId}></div>`);
                    _push2(ssrRenderComponent(_component_jet_input_error, {
                      message: $data.draftForm.errors.name,
                      class: "mt-2"
                    }, null, _parent2, _scopeId));
                    _push2(`</div><div id="tour-step-project-desc" class="mb-3"${_scopeId}><label for="description" class="block text-sm font-medium text-gray-700"${_scopeId}><span${_scopeId}>Project Description (Optional)</span></label><div class="mt-1"${_scopeId}><textarea id="description" name="description" placeholder="Describe this project" rows="3" class="block w-full shadow-sm focus:ring-teal-500 focus:border-teal-500 sm:text-sm border border-gray-300 rounded-md"${_scopeId}>${ssrInterpolate($data.draftForm.description)}</textarea></div>`);
                    _push2(ssrRenderComponent(_component_jet_input_error, {
                      message: $data.draftForm.errors.description,
                      class: "mt-2"
                    }, null, _parent2, _scopeId));
                    _push2(`</div><div id="tour-step-project-keywords" class="mb-3"${_scopeId}><label for="description" class="block text-sm font-medium text-gray-700"${_scopeId}> Keywords (Optional) </label><div${_scopeId}>`);
                    _push2(ssrRenderComponent(_component_vue_tags_input, {
                      modelValue: $data.draftForm.tag,
                      "onUpdate:modelValue": ($event) => $data.draftForm.tag = $event,
                      placeholder: "Type a keyword or keywords separated by comma (,) and press enter",
                      separators: [";", ","],
                      "max-width": "100%",
                      tags: $data.draftForm.tags,
                      onTagsChanged: (newTags) => $data.draftForm.tags = newTags
                    }, null, _parent2, _scopeId));
                    _push2(`</div>`);
                    _push2(ssrRenderComponent(_component_jet_input_error, {
                      message: $data.draftForm.errors.tags,
                      class: "mt-2"
                    }, null, _parent2, _scopeId));
                    _push2(`</div><div${_scopeId}><div${_scopeId}><small class="cursor-pointer"${_scopeId}>Draft ID: ${ssrInterpolate($data.currentDraft.key)}</small><div id="tour-step-upload-spectra"${_scopeId}>`);
                    _push2(ssrRenderComponent(_component_file_system_browser, {
                      ref: "fsbRef",
                      readonly: false,
                      draft: $data.currentDraft,
                      onLoading: $options.updateLoadingStatus
                    }, null, _parent2, _scopeId));
                    _push2(`</div>`);
                    _push2(ssrRenderComponent(_component_jet_input_error, {
                      message: $data.draftForm.errors.studies,
                      class: "mt-2"
                    }, null, _parent2, _scopeId));
                    _push2(`</div></div></div>`);
                  } else {
                    _push2(`<!---->`);
                  }
                  _push2(`</div>`);
                } else {
                  _push2(`<!---->`);
                }
                if ($options.currentStep.id == "02") {
                  _push2(`<div class="-mx-6 -my-4"${_scopeId}><div style="${ssrRenderStyle({ "height": "80vh" })}"${_scopeId}><div class="flex-1 flex md:overflow-hidden"${_scopeId}><nav aria-label="Sections" class="hidden flex-shrink-0 w-80 bg-white border-r border-blue-gray-200 md:flex md:flex-col"${_scopeId}><div class="border-gray-200 px-4 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs font-medium text-gray-500 tracking-wider flex-shrink-0 border-b border-blue-gray-200"${_scopeId}>${ssrInterpolate(_ctx.pluralize(
                    "STUDY",
                    _ctx.studies.length
                  ))} (${ssrInterpolate(_ctx.studies.length)}) <div class="float-right cursor-pointer tooltip"${_scopeId}>`);
                  _push2(ssrRenderComponent(_component_ArrowDownOnSquareStackIcon, { class: "w-5 h-5 mr-1 text-gray-600 hover:text-gray-500" }, null, _parent2, _scopeId));
                  _push2(`<span class="bg-gray-900 text-center text-white px-2 py-1 shadow-lg rounded-md tooltiptextbottom"${_scopeId}>Click to auto import spectra</span></div></div><div id="tour-step-side-panel-studies" style="${ssrRenderStyle({ "height": "74vh", "overflow": "scroll !important" })}"${_scopeId}><!--[-->`);
                  ssrRenderList(_ctx.studies, (study, $index) => {
                    _push2(`<a class="${ssrRenderClass([
                      $data.selectedStudy.id == study.id ? "bg-gray-800 text-white" : "hover:bg-gray-200 hover:bg-opacity-50",
                      "cursor-pointer flex p-4 pr-5 border-b border-blue-gray-200"
                    ])}"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" class="flex-shrink-0 -mt-0.5 h-6 w-6 text-blue-gray-400" viewBox="0 0 20 20" fill="currentColor"${_scopeId}><path d="M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z"${_scopeId}></path></svg><div class="ml-3 text-sm w-full"${_scopeId}><p class="font-medium text-blue-gray-900 pr-4"${_scopeId}><a class="hover:font-bold"${_scopeId}>${ssrInterpolate(study.name)}</a>`);
                    if (study.sample.molecules.length > 0) {
                      _push2(`<span class="float-right"${_scopeId}><img class="flex-shrink-0 -mt-0.5 mr-2 h-6 w-6 text-blue-gray-400" src="https://upload.wikimedia.org/wikipedia/sco/3/35/ChEBI_logo.png" alt=""${_scopeId}></span>`);
                    } else {
                      _push2(`<!---->`);
                    }
                    _push2(`</p><div class="mt-1 text-blue-gray-500"${_scopeId}><!--[-->`);
                    ssrRenderList(study.datasets, (ds, $dsIndex) => {
                      _push2(`<span${_scopeId}><div class="${ssrRenderClass([
                        study.has_nmrium || ds.has_nmrium ? "bg-green-100 text-gray-800" : "bg-gray-100 text-gray-800",
                        "w-64 inline-flex truncate break-words items-center px-3 py-0.5 rounded-full text-xs font-medium mr-1 hover:bg-teal-700"
                      ])}"${_scopeId}><a${_scopeId}>${ssrInterpolate(ds.name)} `);
                      if (ds.type) {
                        _push2(`<span${_scopeId}>(${ssrInterpolate(ds.type)})</span>`);
                      } else {
                        _push2(`<!---->`);
                      }
                      _push2(`</a></div></span>`);
                    });
                    _push2(`<!--]--></div></div></a>`);
                  });
                  _push2(`<!--]--></div></nav><div style="${ssrRenderStyle({ "height": "80vh", "overflow": "scroll !important" })}" class="flex-1 xl:overflow-y-auto"${_scopeId}><div class="mx-auto flex flex-col md:px-0 xl:px-0"${_scopeId}><main class="flex-1"${_scopeId}><div class="relative mx-auto md:px-0 xl:px-0"${_scopeId}><div class="pt-5 pb-16"${_scopeId}><div class="px-3 sm:px-3"${_scopeId}><h1 class="text-3xl font-extrabold text-gray-900"${_scopeId}>${ssrInterpolate($data.selectedStudy.name)}</h1></div><div class="lg:hidden px-4 sm:px-6"${_scopeId}><label for="selected-tab" class="sr-only"${_scopeId}>Select a tab</label><select id="selected-tab" name="selected-tab" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-teal-500 focus:border-teal-500 sm:text-sm rounded-md"${_scopeId}><!--[-->`);
                  ssrRenderList($data.tabs, (tab) => {
                    _push2(`<option${ssrIncludeBooleanAttr(
                      tab.current
                    ) ? " selected" : ""}${_scopeId}>${ssrInterpolate(tab.name)}</option>`);
                  });
                  _push2(`<!--]--></select></div><div class="hidden lg:block px-3 sm:px-3"${_scopeId}><div class="border-b border-gray-200"${_scopeId}><nav class="-mb-px flex space-x-8"${_scopeId}><!--[-->`);
                  ssrRenderList($data.tabs, (tab) => {
                    _push2(`<a class="${ssrRenderClass([
                      tab.current ? "border-teal-500 text-teal-600" : "border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700",
                      "cursor-pointer whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm"
                    ])}"${_scopeId}>${ssrInterpolate(tab.name)}</a>`);
                  });
                  _push2(`<!--]--></nav></div></div>`);
                  if ($options.currentTab.name == "Metadata") {
                    _push2(`<div class="px-4 sm:px-6"${_scopeId}><div class="pt-4 xl:col-span-2"${_scopeId}><div class="mb-3"${_scopeId}><label for="study-name" class="block text-sm font-medium text-gray-700"${_scopeId}> Study Name <span class="float-right border rounded-full px-2 py-1 mb-2"${_scopeId}> Auto generate </span></label><div class="mt-1"${_scopeId}><input${ssrRenderAttr(
                      "value",
                      $data.studyForm.name
                    )} type="text" name="study-name" class="block w-full shadow-sm focus:ring-teal-500 focus:border-teal-500 sm:text-sm border-gray-300 rounded-md"${_scopeId}>`);
                    _push2(ssrRenderComponent(_component_jet_input_error, {
                      message: $data.studyForm.errors.name,
                      class: "mt-2"
                    }, null, _parent2, _scopeId));
                    _push2(`</div></div><div class="mb-3"${_scopeId}><label for="description" class="block text-sm font-medium text-gray-700"${_scopeId}> Study Description </label><div class="mt-1"${_scopeId}><textarea id="study-description" name="study-description" rows="3" class="block w-full shadow-sm focus:ring-teal-500 focus:border-teal-500 sm:text-sm border border-gray-300 rounded-md"${_scopeId}>${ssrInterpolate(
                      $data.studyForm.description
                    )}</textarea>`);
                    _push2(ssrRenderComponent(_component_jet_input_error, {
                      message: $data.studyForm.errors.description,
                      class: "mt-2"
                    }, null, _parent2, _scopeId));
                    _push2(`</div></div><div class="mb-3"${_scopeId}><label for="description" class="block text-sm font-medium text-gray-700"${_scopeId}> Keywords </label><div${_scopeId}>`);
                    _push2(ssrRenderComponent(_component_vue_tags_input, {
                      modelValue: $data.studyForm.tag,
                      "onUpdate:modelValue": ($event) => $data.studyForm.tag = $event,
                      placeholder: "Type a keyword or keywords separated by comma (,) and press enter",
                      separators: [
                        ";",
                        ","
                      ],
                      "max-width": "100%",
                      tags: $data.studyForm.tags,
                      onTagsChanged: (newTags) => $data.studyForm.tags = newTags
                    }, null, _parent2, _scopeId));
                    _push2(ssrRenderComponent(_component_jet_input_error, {
                      message: $data.studyForm.errors.tags,
                      class: "mt-2"
                    }, null, _parent2, _scopeId));
                    _push2(`</div></div><div class="mb-6"${_scopeId}><button type="button" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"${_scopeId}> SAVE </button></div></div></div>`);
                  } else {
                    _push2(`<!---->`);
                  }
                  if ($options.currentTab.name == "Experiments (Spectra)") {
                    _push2(`<div id="tour-step-nmrium" class="px-4 sm:px-6 md:px-0"${_scopeId}><div class="p-3"${_scopeId}><div class="my-3"${_scopeId}>`);
                    _push2(ssrRenderComponent(_component_SpectraEditor, {
                      ref: "spectraEditorREF",
                      dataset: $data.selectedDataset,
                      project: $data.project,
                      study: $data.selectedStudy,
                      onLoading: $options.updateLoadingStatus
                    }, null, _parent2, _scopeId));
                    _push2(`</div></div></div>`);
                  } else {
                    _push2(`<!---->`);
                  }
                  if ($options.currentTab.name == "Sample Info") {
                    _push2(`<div class="px-4 sm:px-6 pt-4"${_scopeId}><h1 class="text-xl font-bold text-gray-900"${_scopeId}> Sample Details </h1><div class="py-4 max-w-7xl mx-auto"${_scopeId}><div class="sm:flex sm:items-center sm:justify-between"${_scopeId}><h3 class="text-xl font-bold text-gray-900"${_scopeId}> Chemical composition (optional) </h3></div><p class="mt-2 pb-3 border-b border-gray-200 text-sm text-gray-500"${_scopeId}> Residual Complexity (RC) refers to the subtle but significant convolution of major and minor (&quot;hidden&quot;) chemical species in materials that originate from biochemical or synthetic reaction mixtures. Certain levels of these chemical species (molecules) usually remain present even after a number of purification steps, and this RC is to some degree conserved even in highly purified materials. In principle, RC affects all &quot;pure&quot; materials, including synthetic compound, whenever chromatographic or other purification steps are required prior to their biological evaluation. Please report the chemical composition (if known) of your sample. If unknown please report the molecules that you expect to be present in your sample with-out the composition. </p></div><div class="grid grid-cols-2 gap-2"${_scopeId}><div class="pr-2"${_scopeId}>`);
                    if ($data.selectedStudy.sample.molecules.length > 0) {
                      _push2(`<div class="flow-root"${_scopeId}><ul role="list" class="-mb-8"${_scopeId}><!--[-->`);
                      ssrRenderList($data.selectedStudy.sample.molecules, (molecule) => {
                        _push2(`<li${_scopeId}><div class="relative pb-8"${_scopeId}><span class="absolute top-5 left-5 -ml-px h-full w-0.5 bg-gray-200" aria-hidden="true"${_scopeId}></span><div class="relative flex items-start space-x-3"${_scopeId}>`);
                        if (molecule && molecule.pivot) {
                          _push2(`<div class="relative"${_scopeId}><div class="rounded-full border p-2 z-10 bg-gray-100 text-sm"${_scopeId}>${ssrInterpolate(molecule.pivot.percentage_composition)}% </div></div>`);
                        } else {
                          _push2(`<!---->`);
                        }
                        _push2(`<div class="min-w-0 flex-1"${_scopeId}><div${_scopeId}><div class="text-sm"${_scopeId}><a href="#" class="font-medium text-gray-900"${_scopeId}>${ssrInterpolate(molecule.standard_inchi)}</a></div></div><div class="mt-2 text-sm text-gray-700"${_scopeId}><div class="rounded-md border my-3 flex justify-center items-center"${_scopeId}><span${_scopeId}>${$options.getSVGString(
                          molecule
                        )}</span></div><button class="inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"${_scopeId}>`);
                        _push2(ssrRenderComponent(_component_TrashIcon, { class: "w-4 h-4 inline mr-1" }, null, _parent2, _scopeId));
                        _push2(`Delete </button><button class="inline-flex ml-2 items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"${_scopeId}>`);
                        _push2(ssrRenderComponent(_component_PencilIcon, { class: "w-4 h-4 inline mr-1" }, null, _parent2, _scopeId));
                        _push2(`Edit </button></div></div></div></div></li>`);
                      });
                      _push2(`<!--]--></ul><div class="rounded-full border p-2 z-10 bg-gray-100 text-sm mt-14 text-center"${_scopeId}> Sample chemical composition </div></div>`);
                    } else {
                      _push2(`<div${_scopeId}><div class="text-center my-10 py-10"${_scopeId}><svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true"${_scopeId}><path vector-effect="non-scaling-stroke" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"${_scopeId}></path></svg><h3 class="mt-2 text-sm font-medium text-gray-900"${_scopeId}> No structures associated with the sample yet! </h3><p class="mt-1 text-sm text-gray-500"${_scopeId}> Get started by adding a new molecule. </p></div></div>`);
                    }
                    _push2(`</div><div class="pl-2"${_scopeId}><div class="sm:col-span-4"${_scopeId}><label for="email" class="block text-sm font-medium text-gray-700"${_scopeId}> SMILES </label><div class="mt-1 mb-2"${_scopeId}><input id="smiles"${ssrRenderAttr(
                      "value",
                      $data.smiles
                    )} name="smiles" type="text" class="shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md"${_scopeId}></div>`);
                    if ($data.smiles && $data.smiles != "") {
                      _push2(`<button class="inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 mt-2"${_scopeId}> Load Structure </button>`);
                    } else {
                      _push2(`<!---->`);
                    }
                    _push2(ssrRenderComponent(_component_jet_input_error, {
                      message: $data.errorMessage,
                      class: "mt-2"
                    }, null, _parent2, _scopeId));
                    _push2(`</div><div class="relative"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-300"${_scopeId}></div></div><div class="relative flex justify-center"${_scopeId}><span class="px-2 bg-white text-sm text-gray-500"${_scopeId}> Or </span></div></div><span class="float-right text-xs cursor-pointer hover:text-blue-700 m-2"${_scopeId}><a href="https://docs.nmrxiv.org/docs/submission-guides/submission/editor" target="_blank"${_scopeId}>Need help? </a></span><div id="structureSearchEditor" class="w-full border my-4 rounded-md" style="${ssrRenderStyle({ "height": "400px" })}"${_scopeId}></div><div class="mt-1 mb-6"${_scopeId}><label for="email" class="block text-sm font-medium text-gray-700"${_scopeId}> Percentage composition (${ssrInterpolate($data.percentage)}%) </label>`);
                    _push2(ssrRenderComponent(_component_slider, {
                      modelValue: $data.percentage,
                      "onUpdate:modelValue": ($event) => $data.percentage = $event,
                      min: 0,
                      max: $options.getMax,
                      height: 10,
                      color: "#000",
                      "track-color": "#999"
                    }, null, _parent2, _scopeId));
                    _push2(`</div><button type="button" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"${_scopeId}> ADD </button></div></div>`);
                    if ($data.selectedStudy) {
                      _push2(`<div${_scopeId}>`);
                      if ($data.selectedStudy.molecules && $data.selectedStudy.molecules.length == 0) {
                        _push2(`<div${_scopeId}><template${_scopeId}><button type="button" class="relative block w-full border-2 border-gray-300 border-dashed rounded-lg p-12 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"${_scopeId}><svg class="mx-auto h-12 w-12 text-gray-400" xmlns="http://www.w3.org/2000/svg" stroke="currentColor" fill="none" viewBox="0 0 48 48" aria-hidden="true"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 14v20c0 4.418 7.163 8 16 8 1.381 0 2.721-.087 4-.252M8 14c0 4.418 7.163 8 16 8s16-3.582 16-8M8 14c0-4.418 7.163-8 16-8s16 3.582 16 8m0 0v14m0-4c0 4.418-7.163 8-16 8S8 28.418 8 24m32 10v6m0 0v6m0-6h6m-6 0h-6"${_scopeId}></path></svg><span class="mt-2 block text-sm font-medium text-gray-900"${_scopeId}> Create a new database </span></button></template></div>`);
                      } else {
                        _push2(`<!---->`);
                      }
                      if ($data.selectedStudy.molecules && $data.selectedStudy.molecules.length > 0) {
                        _push2(`<div${_scopeId}> Mols </div>`);
                      } else {
                        _push2(`<!---->`);
                      }
                      _push2(`</div>`);
                    } else {
                      _push2(`<!---->`);
                    }
                    _push2(`</div>`);
                  } else {
                    _push2(`<!---->`);
                  }
                  _push2(`</div></div></main></div></div></div></div></div>`);
                } else {
                  _push2(`<!---->`);
                }
                if ($options.currentStep.id == "03") {
                  _push2(`<div${_scopeId}>`);
                  _push2(ssrRenderComponent(_component_Validation, {
                    project: $data.project,
                    validation: _ctx.validation
                  }, null, _parent2, _scopeId));
                  _push2(`</div>`);
                } else {
                  _push2(`<!---->`);
                }
                _push2(`</div>`);
              } else {
                _push2(`<!---->`);
              }
              _push2(`</div>`);
            }
            _push2(`</div>`);
          }
          _push2(`</div>`);
        } else {
          _push2(`<div${_scopeId}><svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-dark flex-inline inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"${_scopeId}><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"${_scopeId}></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"${_scopeId}></path></svg> Loading... </div>`);
        }
        if ($data.errorMessage != null && $data.errorMessage != "") {
          _push2(`<div class="rounded-md bg-red-50 p-4 mb-2"${_scopeId}><div class="flex"${_scopeId}><div class="flex-shrink-0"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_ExclamationTriangleIcon, {
            class: "h-5 w-5 text-red-400",
            "aria-hidden": "true"
          }, null, _parent2, _scopeId));
          _push2(`</div><div class="ml-3"${_scopeId}><h3 class="text-sm font-medium text-red-400"${_scopeId}> There were errors with your submission </h3><div class="mt-2 text-sm text-red-900"${_scopeId}>${$data.errorMessage}</div></div></div></div>`);
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          $data.loadingStep ? (openBlock(), createBlock("div", {
            key: 0,
            class: "absolute inset-0 flex justify-center items-center z-10 bg-white rounded bg-opacity-70"
          }, [
            (openBlock(), createBlock("svg", {
              class: "animate-spin -ml-1 mr-3 h-5 w-5 text-dark flex-inline inline",
              xmlns: "http://www.w3.org/2000/svg",
              fill: "none",
              viewBox: "0 0 24 24"
            }, [
              createVNode("circle", {
                class: "opacity-25",
                cx: "12",
                cy: "12",
                r: "10",
                stroke: "currentColor",
                "stroke-width": "4"
              }),
              createVNode("path", {
                class: "opacity-75",
                fill: "currentColor",
                d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
              })
            ])),
            $data.datasetsToImport && $data.datasetsToImport.length > 0 ? (openBlock(), createBlock("div", { key: 0 }, [
              createVNode("br"),
              createTextVNode(" Processing " + toDisplayString($data.datasetsToImport.filter((f2) => f2.status == true).length + 1) + " of " + toDisplayString($data.datasetsToImport.length) + " spectra ", 1)
            ])) : createCommentVNode("", true)
          ])) : createCommentVNode("", true),
          !$data.loading ? (openBlock(), createBlock("div", { key: 1 }, [
            _ctx.drafts.length > 0 && !$data.currentDraft ? (openBlock(), createBlock("div", { key: 0 }, [
              createVNode("div", null, [
                createVNode("ul", {
                  role: "list",
                  class: "-my-5 divide-y divide-gray-200"
                }, [
                  (openBlock(true), createBlock(Fragment, null, renderList(_ctx.drafts, (draft) => {
                    return openBlock(), createBlock("li", {
                      key: draft.id,
                      class: "py-4"
                    }, [
                      createVNode("div", { class: "flex items-center space-x-4" }, [
                        createVNode("div", { class: "flex-1 min-w-0" }, [
                          createVNode("p", { class: "text-lg font-large text-black truncate" }, [
                            createVNode("b", null, toDisplayString(draft.name), 1)
                          ]),
                          createVNode("p", { class: "text-sm font-medium text-gray-600 truncate pr-10" }, toDisplayString(draft.description), 1),
                          createVNode("p", { class: "text-sm font-medium text-gray-500 truncate" }, " ID: " + toDisplayString(draft.key), 1),
                          createVNode("p", { class: "text-sm text-gray-500 truncate" }, " Created at: " + toDisplayString(_ctx.formatDateTime(draft.created_at)), 1)
                        ]),
                        createVNode("div", null, [
                          createVNode(_component_Link, {
                            href: _ctx.route("dashboard", {
                              action: "submission",
                              draft_id: draft.id
                            }),
                            class: "inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring focus:ring-gray-300 disabled:opacity-25 transition ml-2"
                          }, {
                            default: withCtx(() => [
                              createTextVNode(" Select ")
                            ]),
                            _: 2
                          }, 1032, ["href"])
                        ])
                      ])
                    ]);
                  }), 128))
                ])
              ]),
              createVNode("div", { class: "relative mt-6" }, [
                createVNode("div", {
                  class: "absolute inset-0 flex items-center",
                  "aria-hidden": "true"
                }, [
                  createVNode("div", { class: "w-full border-t border-gray-300" })
                ]),
                createVNode("div", { class: "relative flex justify-center" }, [
                  createVNode("span", { class: "px-2 bg-white text-sm text-gray-500" }, " Or ")
                ])
              ]),
              createVNode("div", { class: "my-6 justify-center items-center flex" }, [
                createVNode("button", {
                  class: "inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring focus:ring-gray-300 disabled:opacity-25 transition",
                  onClick: ($event) => $options.createNewDraft()
                }, " Create New ", 8, ["onClick"])
              ])
            ])) : (openBlock(), createBlock("div", { key: 1 }, [
              $data.showPrimer ? (openBlock(), createBlock("div", {
                key: 0,
                class: "-mx-6 -my-4"
              }, [
                createVNode("div", null, [
                  createVNode("section", { class: "h-1/2 overflow-hidden bg-white overflow-hidden py-12" }, [
                    createVNode("div", { class: "relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" }, [
                      (openBlock(), createBlock("svg", {
                        class: "absolute top-full right-full transform translate-x-1/3 -translate-y-1/4 lg:translate-x-1/2 xl:-translate-y-1/2",
                        width: "404",
                        height: "404",
                        fill: "none",
                        viewBox: "0 0 404 404",
                        role: "img",
                        "aria-labelledby": "svg-nmrxiv"
                      }, [
                        createVNode("title", { id: "svg-nmrxiv" }, "nmrxiv"),
                        createVNode("defs", null, [
                          createVNode("pattern", {
                            id: "ad119f34-7694-4c31-947f-5c9d249b21f3",
                            x: "0",
                            y: "0",
                            width: "20",
                            height: "20",
                            patternUnits: "userSpaceOnUse"
                          }, [
                            createVNode("rect", {
                              x: "0",
                              y: "0",
                              width: "4",
                              height: "4",
                              class: "text-gray-200",
                              fill: "currentColor"
                            })
                          ])
                        ]),
                        createVNode("rect", {
                          width: "404",
                          height: "404",
                          fill: "url(#ad119f34-7694-4c31-947f-5c9d249b21f3)"
                        })
                      ])),
                      createVNode("div", { class: "relative" }, [
                        createVNode("blockquote", null, [
                          createVNode("div", { class: "max-w-3xl mx-auto text-left text-xl leading-9 font-medium text-gray-900" }, [
                            createVNode("p", { class: "flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest" }, " Basic Concepts "),
                            createVNode("p", { class: "mt-3 text-lg" }, [
                              createTextVNode(" In nmrXiv, data is organised as "),
                              createVNode("b", { class: "text-teal-700" }, "projects"),
                              createTextVNode(". Consider a project is equivalent to your publication with the corresponding NMR data to be uploaded to nmrXiv. A project can have multiple studies. "),
                              createVNode("b", { class: "text-teal-700" }, "A study corresponds to a group of NMR experiments of one sample"),
                              createTextVNode(", e.g. 1H, 13C, APT, COSY HSQC, HMBC, NOESY in Bruker Format or (another study) in another format such as JCAMP-DX / Varian. "),
                              createVNode("b", { class: "text-teal-700" }, "Each NMR measurement in a study is referred to as a dataset"),
                              createTextVNode(", e.g. 1H NMR or COSY (are each a dataset). ")
                            ]),
                            createVNode("img", {
                              src: "/img/primer.png",
                              alt: ""
                            }),
                            createVNode("p", { class: "text-md text-center leading-5 mb-3" }, [
                              createVNode("small", null, [
                                createTextVNode("nmrXiv allows you to upload NMR raw data from any NMR instrument. We can currently auto-detect Bruker/Varian/JOEL formats & JCAMP files and will support more raw & processed file formats soon. Once you upload your raw or processed NMR data, nmrXiv will auto-generate the studies and datasets for you based on the uploaded folder structure. "),
                                createVNode("i", null, [
                                  createVNode("a", {
                                    class: "text-xs",
                                    target: "_blank",
                                    href: "https://docs.nmrxiv.org/submission-guides/submission/folder-structure"
                                  }, "More info here")
                                ])
                              ])
                            ])
                          ])
                        ])
                      ])
                    ])
                  ])
                ])
              ])) : (openBlock(), createBlock("div", { key: 1 }, [
                $options.currentStep ? (openBlock(), createBlock("div", { key: 0 }, [
                  $options.currentStep.id == "01" ? (openBlock(), createBlock("div", {
                    key: 0,
                    id: "submission-dropzone"
                  }, [
                    $data.currentDraft ? (openBlock(), createBlock("div", { key: 0 }, [
                      createVNode("div", {
                        id: "tour-step-project-name",
                        class: "mb-3"
                      }, [
                        createVNode("label", {
                          for: "project-name",
                          class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500"
                        }, " Project Name "),
                        createVNode("div", { class: "mt-1" }, [
                          withDirectives(createVNode("input", {
                            "onUpdate:modelValue": ($event) => $data.draftForm.name = $event,
                            type: "text",
                            name: "project-name",
                            class: "block w-full shadow-sm focus:ring-teal-500 focus:border-teal-500 sm:text-sm border-gray-300 rounded-md"
                          }, null, 8, ["onUpdate:modelValue"]), [
                            [vModelText, $data.draftForm.name]
                          ])
                        ]),
                        createVNode(_component_jet_input_error, {
                          message: $data.draftForm.errors.name,
                          class: "mt-2"
                        }, null, 8, ["message"])
                      ]),
                      createVNode("div", {
                        id: "tour-step-project-desc",
                        class: "mb-3"
                      }, [
                        createVNode("label", {
                          for: "description",
                          class: "block text-sm font-medium text-gray-700"
                        }, [
                          createVNode("span", {
                            onClick: ($event) => $data.draftForm.description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore"
                          }, "Project Description (Optional)", 8, ["onClick"])
                        ]),
                        createVNode("div", { class: "mt-1" }, [
                          withDirectives(createVNode("textarea", {
                            id: "description",
                            "onUpdate:modelValue": ($event) => $data.draftForm.description = $event,
                            name: "description",
                            placeholder: "Describe this project",
                            rows: "3",
                            class: "block w-full shadow-sm focus:ring-teal-500 focus:border-teal-500 sm:text-sm border border-gray-300 rounded-md"
                          }, null, 8, ["onUpdate:modelValue"]), [
                            [vModelText, $data.draftForm.description]
                          ])
                        ]),
                        createVNode(_component_jet_input_error, {
                          message: $data.draftForm.errors.description,
                          class: "mt-2"
                        }, null, 8, ["message"])
                      ]),
                      createVNode("div", {
                        id: "tour-step-project-keywords",
                        class: "mb-3"
                      }, [
                        createVNode("label", {
                          for: "description",
                          class: "block text-sm font-medium text-gray-700"
                        }, " Keywords (Optional) "),
                        createVNode("div", null, [
                          createVNode(_component_vue_tags_input, {
                            modelValue: $data.draftForm.tag,
                            "onUpdate:modelValue": ($event) => $data.draftForm.tag = $event,
                            placeholder: "Type a keyword or keywords separated by comma (,) and press enter",
                            separators: [";", ","],
                            "max-width": "100%",
                            tags: $data.draftForm.tags,
                            onTagsChanged: (newTags) => $data.draftForm.tags = newTags
                          }, null, 8, ["modelValue", "onUpdate:modelValue", "tags", "onTagsChanged"])
                        ]),
                        createVNode(_component_jet_input_error, {
                          message: $data.draftForm.errors.tags,
                          class: "mt-2"
                        }, null, 8, ["message"])
                      ]),
                      createVNode("div", null, [
                        createVNode("div", null, [
                          createVNode("small", { class: "cursor-pointer" }, "Draft ID: " + toDisplayString($data.currentDraft.key), 1),
                          createVNode("div", { id: "tour-step-upload-spectra" }, [
                            createVNode(_component_file_system_browser, {
                              ref: "fsbRef",
                              readonly: false,
                              draft: $data.currentDraft,
                              onLoading: $options.updateLoadingStatus
                            }, null, 8, ["draft", "onLoading"])
                          ]),
                          createVNode(_component_jet_input_error, {
                            message: $data.draftForm.errors.studies,
                            class: "mt-2"
                          }, null, 8, ["message"])
                        ])
                      ])
                    ])) : createCommentVNode("", true)
                  ])) : createCommentVNode("", true),
                  $options.currentStep.id == "02" ? (openBlock(), createBlock("div", {
                    key: 1,
                    class: "-mx-6 -my-4"
                  }, [
                    createVNode("div", { style: { "height": "80vh" } }, [
                      createVNode("div", { class: "flex-1 flex md:overflow-hidden" }, [
                        createVNode("nav", {
                          "aria-label": "Sections",
                          class: "hidden flex-shrink-0 w-80 bg-white border-r border-blue-gray-200 md:flex md:flex-col"
                        }, [
                          createVNode("div", { class: "border-gray-200 px-4 py-3 border-b border-gray-200 bg-gray-50 text-left text-xs font-medium text-gray-500 tracking-wider flex-shrink-0 border-b border-blue-gray-200" }, [
                            createTextVNode(toDisplayString(_ctx.pluralize(
                              "STUDY",
                              _ctx.studies.length
                            )) + " (" + toDisplayString(_ctx.studies.length) + ") ", 1),
                            createVNode("div", {
                              class: "float-right cursor-pointer tooltip",
                              onClick: ($event) => $options.autoImport()
                            }, [
                              createVNode(_component_ArrowDownOnSquareStackIcon, { class: "w-5 h-5 mr-1 text-gray-600 hover:text-gray-500" }),
                              createVNode("span", { class: "bg-gray-900 text-center text-white px-2 py-1 shadow-lg rounded-md tooltiptextbottom" }, "Click to auto import spectra")
                            ], 8, ["onClick"])
                          ]),
                          createVNode("div", {
                            id: "tour-step-side-panel-studies",
                            style: { "height": "74vh", "overflow": "scroll !important" }
                          }, [
                            (openBlock(true), createBlock(Fragment, null, renderList(_ctx.studies, (study, $index) => {
                              return openBlock(), createBlock("a", {
                                key: study.slug,
                                class: [
                                  $data.selectedStudy.id == study.id ? "bg-gray-800 text-white" : "hover:bg-gray-200 hover:bg-opacity-50",
                                  "cursor-pointer flex p-4 pr-5 border-b border-blue-gray-200"
                                ]
                              }, [
                                (openBlock(), createBlock("svg", {
                                  xmlns: "http://www.w3.org/2000/svg",
                                  class: "flex-shrink-0 -mt-0.5 h-6 w-6 text-blue-gray-400",
                                  viewBox: "0 0 20 20",
                                  fill: "currentColor"
                                }, [
                                  createVNode("path", { d: "M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z" })
                                ])),
                                createVNode("div", { class: "ml-3 text-sm w-full" }, [
                                  createVNode("p", { class: "font-medium text-blue-gray-900 pr-4" }, [
                                    createVNode("a", {
                                      class: "hover:font-bold",
                                      onClick: ($event) => $options.selectStudy(
                                        study,
                                        $index
                                      )
                                    }, toDisplayString(study.name), 9, ["onClick"]),
                                    study.sample.molecules.length > 0 ? (openBlock(), createBlock("span", {
                                      key: 0,
                                      class: "float-right"
                                    }, [
                                      createVNode("img", {
                                        class: "flex-shrink-0 -mt-0.5 mr-2 h-6 w-6 text-blue-gray-400",
                                        src: "https://upload.wikimedia.org/wikipedia/sco/3/35/ChEBI_logo.png",
                                        alt: ""
                                      })
                                    ])) : createCommentVNode("", true)
                                  ]),
                                  createVNode("div", { class: "mt-1 text-blue-gray-500" }, [
                                    (openBlock(true), createBlock(Fragment, null, renderList(study.datasets, (ds, $dsIndex) => {
                                      return openBlock(), createBlock("span", {
                                        key: ds.id
                                      }, [
                                        createVNode("div", {
                                          class: [
                                            study.has_nmrium || ds.has_nmrium ? "bg-green-100 text-gray-800" : "bg-gray-100 text-gray-800",
                                            "w-64 inline-flex truncate break-words items-center px-3 py-0.5 rounded-full text-xs font-medium mr-1 hover:bg-teal-700"
                                          ],
                                          onClick: ($event) => $options.selectStudy(
                                            study,
                                            $index,
                                            $dsIndex
                                          )
                                        }, [
                                          createVNode("a", null, [
                                            createTextVNode(toDisplayString(ds.name) + " ", 1),
                                            ds.type ? (openBlock(), createBlock("span", { key: 0 }, "(" + toDisplayString(ds.type) + ")", 1)) : createCommentVNode("", true)
                                          ])
                                        ], 10, ["onClick"])
                                      ]);
                                    }), 128))
                                  ])
                                ])
                              ], 2);
                            }), 128))
                          ])
                        ]),
                        createVNode("div", {
                          style: { "height": "80vh", "overflow": "scroll !important" },
                          class: "flex-1 xl:overflow-y-auto"
                        }, [
                          createVNode("div", { class: "mx-auto flex flex-col md:px-0 xl:px-0" }, [
                            createVNode("main", { class: "flex-1" }, [
                              createVNode("div", { class: "relative mx-auto md:px-0 xl:px-0" }, [
                                createVNode("div", { class: "pt-5 pb-16" }, [
                                  createVNode("div", { class: "px-3 sm:px-3" }, [
                                    createVNode("h1", { class: "text-3xl font-extrabold text-gray-900" }, toDisplayString($data.selectedStudy.name), 1)
                                  ]),
                                  createVNode("div", { class: "lg:hidden px-4 sm:px-6" }, [
                                    createVNode("label", {
                                      for: "selected-tab",
                                      class: "sr-only"
                                    }, "Select a tab"),
                                    createVNode("select", {
                                      id: "selected-tab",
                                      name: "selected-tab",
                                      class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-teal-500 focus:border-teal-500 sm:text-sm rounded-md"
                                    }, [
                                      (openBlock(true), createBlock(Fragment, null, renderList($data.tabs, (tab) => {
                                        return openBlock(), createBlock("option", {
                                          key: tab.name,
                                          selected: tab.current
                                        }, toDisplayString(tab.name), 9, ["selected"]);
                                      }), 128))
                                    ])
                                  ]),
                                  createVNode("div", { class: "hidden lg:block px-3 sm:px-3" }, [
                                    createVNode("div", { class: "border-b border-gray-200" }, [
                                      createVNode("nav", { class: "-mb-px flex space-x-8" }, [
                                        (openBlock(true), createBlock(Fragment, null, renderList($data.tabs, (tab) => {
                                          return openBlock(), createBlock("a", {
                                            key: tab.name,
                                            class: [
                                              tab.current ? "border-teal-500 text-teal-600" : "border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700",
                                              "cursor-pointer whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm"
                                            ],
                                            onClick: ($event) => $options.selectTab(
                                              tab
                                            )
                                          }, toDisplayString(tab.name), 11, ["onClick"]);
                                        }), 128))
                                      ])
                                    ])
                                  ]),
                                  $options.currentTab.name == "Metadata" ? (openBlock(), createBlock("div", {
                                    key: 0,
                                    class: "px-4 sm:px-6"
                                  }, [
                                    createVNode("div", { class: "pt-4 xl:col-span-2" }, [
                                      createVNode("div", { class: "mb-3" }, [
                                        createVNode("label", {
                                          for: "study-name",
                                          class: "block text-sm font-medium text-gray-700"
                                        }, [
                                          createTextVNode(" Study Name "),
                                          createVNode("span", {
                                            class: "float-right border rounded-full px-2 py-1 mb-2",
                                            onClick: ($event) => $options.autoGenerateDescription()
                                          }, " Auto generate ", 8, ["onClick"])
                                        ]),
                                        createVNode("div", { class: "mt-1" }, [
                                          withDirectives(createVNode("input", {
                                            "onUpdate:modelValue": ($event) => $data.studyForm.name = $event,
                                            type: "text",
                                            name: "study-name",
                                            class: "block w-full shadow-sm focus:ring-teal-500 focus:border-teal-500 sm:text-sm border-gray-300 rounded-md"
                                          }, null, 8, ["onUpdate:modelValue"]), [
                                            [
                                              vModelText,
                                              $data.studyForm.name
                                            ]
                                          ]),
                                          createVNode(_component_jet_input_error, {
                                            message: $data.studyForm.errors.name,
                                            class: "mt-2"
                                          }, null, 8, ["message"])
                                        ])
                                      ]),
                                      createVNode("div", { class: "mb-3" }, [
                                        createVNode("label", {
                                          for: "description",
                                          class: "block text-sm font-medium text-gray-700"
                                        }, " Study Description "),
                                        createVNode("div", { class: "mt-1" }, [
                                          withDirectives(createVNode("textarea", {
                                            id: "study-description",
                                            "onUpdate:modelValue": ($event) => $data.studyForm.description = $event,
                                            name: "study-description",
                                            rows: "3",
                                            class: "block w-full shadow-sm focus:ring-teal-500 focus:border-teal-500 sm:text-sm border border-gray-300 rounded-md"
                                          }, null, 8, ["onUpdate:modelValue"]), [
                                            [
                                              vModelText,
                                              $data.studyForm.description
                                            ]
                                          ]),
                                          createVNode(_component_jet_input_error, {
                                            message: $data.studyForm.errors.description,
                                            class: "mt-2"
                                          }, null, 8, ["message"])
                                        ])
                                      ]),
                                      createVNode("div", { class: "mb-3" }, [
                                        createVNode("label", {
                                          for: "description",
                                          class: "block text-sm font-medium text-gray-700"
                                        }, " Keywords "),
                                        createVNode("div", null, [
                                          createVNode(_component_vue_tags_input, {
                                            modelValue: $data.studyForm.tag,
                                            "onUpdate:modelValue": ($event) => $data.studyForm.tag = $event,
                                            placeholder: "Type a keyword or keywords separated by comma (,) and press enter",
                                            separators: [
                                              ";",
                                              ","
                                            ],
                                            "max-width": "100%",
                                            tags: $data.studyForm.tags,
                                            onTagsChanged: (newTags) => $data.studyForm.tags = newTags
                                          }, null, 8, ["modelValue", "onUpdate:modelValue", "tags", "onTagsChanged"]),
                                          createVNode(_component_jet_input_error, {
                                            message: $data.studyForm.errors.tags,
                                            class: "mt-2"
                                          }, null, 8, ["message"])
                                        ])
                                      ]),
                                      createVNode("div", { class: "mb-6" }, [
                                        createVNode("button", {
                                          type: "button",
                                          class: "inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                                          onClick: $options.saveStudyDetails
                                        }, " SAVE ", 8, ["onClick"])
                                      ])
                                    ])
                                  ])) : createCommentVNode("", true),
                                  $options.currentTab.name == "Experiments (Spectra)" ? (openBlock(), createBlock("div", {
                                    key: 1,
                                    id: "tour-step-nmrium",
                                    class: "px-4 sm:px-6 md:px-0"
                                  }, [
                                    createVNode("div", { class: "p-3" }, [
                                      createVNode("div", { class: "my-3" }, [
                                        createVNode(_component_SpectraEditor, {
                                          ref: "spectraEditorREF",
                                          dataset: $data.selectedDataset,
                                          project: $data.project,
                                          study: $data.selectedStudy,
                                          onLoading: $options.updateLoadingStatus
                                        }, null, 8, ["dataset", "project", "study", "onLoading"])
                                      ])
                                    ])
                                  ])) : createCommentVNode("", true),
                                  $options.currentTab.name == "Sample Info" ? (openBlock(), createBlock("div", {
                                    key: 2,
                                    class: "px-4 sm:px-6 pt-4"
                                  }, [
                                    createVNode("h1", { class: "text-xl font-bold text-gray-900" }, " Sample Details "),
                                    createVNode("div", { class: "py-4 max-w-7xl mx-auto" }, [
                                      createVNode("div", { class: "sm:flex sm:items-center sm:justify-between" }, [
                                        createVNode("h3", { class: "text-xl font-bold text-gray-900" }, " Chemical composition (optional) ")
                                      ]),
                                      createVNode("p", { class: "mt-2 pb-3 border-b border-gray-200 text-sm text-gray-500" }, ' Residual Complexity (RC) refers to the subtle but significant convolution of major and minor ("hidden") chemical species in materials that originate from biochemical or synthetic reaction mixtures. Certain levels of these chemical species (molecules) usually remain present even after a number of purification steps, and this RC is to some degree conserved even in highly purified materials. In principle, RC affects all "pure" materials, including synthetic compound, whenever chromatographic or other purification steps are required prior to their biological evaluation. Please report the chemical composition (if known) of your sample. If unknown please report the molecules that you expect to be present in your sample with-out the composition. ')
                                    ]),
                                    createVNode("div", { class: "grid grid-cols-2 gap-2" }, [
                                      createVNode("div", { class: "pr-2" }, [
                                        $data.selectedStudy.sample.molecules.length > 0 ? (openBlock(), createBlock("div", {
                                          key: 0,
                                          class: "flow-root"
                                        }, [
                                          createVNode("ul", {
                                            role: "list",
                                            class: "-mb-8"
                                          }, [
                                            (openBlock(true), createBlock(Fragment, null, renderList($data.selectedStudy.sample.molecules, (molecule) => {
                                              return openBlock(), createBlock("li", {
                                                key: molecule.standard_inchi
                                              }, [
                                                createVNode("div", { class: "relative pb-8" }, [
                                                  createVNode("span", {
                                                    class: "absolute top-5 left-5 -ml-px h-full w-0.5 bg-gray-200",
                                                    "aria-hidden": "true"
                                                  }),
                                                  createVNode("div", { class: "relative flex items-start space-x-3" }, [
                                                    molecule && molecule.pivot ? (openBlock(), createBlock("div", {
                                                      key: 0,
                                                      class: "relative"
                                                    }, [
                                                      createVNode("div", { class: "rounded-full border p-2 z-10 bg-gray-100 text-sm" }, toDisplayString(molecule.pivot.percentage_composition) + "% ", 1)
                                                    ])) : createCommentVNode("", true),
                                                    createVNode("div", { class: "min-w-0 flex-1" }, [
                                                      createVNode("div", null, [
                                                        createVNode("div", { class: "text-sm" }, [
                                                          createVNode("a", {
                                                            href: "#",
                                                            class: "font-medium text-gray-900"
                                                          }, toDisplayString(molecule.standard_inchi), 1)
                                                        ])
                                                      ]),
                                                      createVNode("div", { class: "mt-2 text-sm text-gray-700" }, [
                                                        createVNode("div", { class: "rounded-md border my-3 flex justify-center items-center" }, [
                                                          createVNode("span", {
                                                            innerHTML: $options.getSVGString(
                                                              molecule
                                                            )
                                                          }, null, 8, ["innerHTML"])
                                                        ]),
                                                        createVNode("button", {
                                                          class: "inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500",
                                                          onClick: ($event) => $options.deleteMolecule(
                                                            molecule
                                                          )
                                                        }, [
                                                          createVNode(_component_TrashIcon, { class: "w-4 h-4 inline mr-1" }),
                                                          createTextVNode("Delete ")
                                                        ], 8, ["onClick"]),
                                                        createVNode("button", {
                                                          class: "inline-flex ml-2 items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500",
                                                          onClick: ($event) => $options.editMolecule(
                                                            molecule
                                                          )
                                                        }, [
                                                          createVNode(_component_PencilIcon, { class: "w-4 h-4 inline mr-1" }),
                                                          createTextVNode("Edit ")
                                                        ], 8, ["onClick"])
                                                      ])
                                                    ])
                                                  ])
                                                ])
                                              ]);
                                            }), 128))
                                          ]),
                                          createVNode("div", { class: "rounded-full border p-2 z-10 bg-gray-100 text-sm mt-14 text-center" }, " Sample chemical composition ")
                                        ])) : (openBlock(), createBlock("div", { key: 1 }, [
                                          createVNode("div", { class: "text-center my-10 py-10" }, [
                                            (openBlock(), createBlock("svg", {
                                              class: "mx-auto h-12 w-12 text-gray-400",
                                              fill: "none",
                                              viewBox: "0 0 24 24",
                                              stroke: "currentColor",
                                              "aria-hidden": "true"
                                            }, [
                                              createVNode("path", {
                                                "vector-effect": "non-scaling-stroke",
                                                "stroke-linecap": "round",
                                                "stroke-linejoin": "round",
                                                "stroke-width": "2",
                                                d: "M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"
                                              })
                                            ])),
                                            createVNode("h3", { class: "mt-2 text-sm font-medium text-gray-900" }, " No structures associated with the sample yet! "),
                                            createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " Get started by adding a new molecule. ")
                                          ])
                                        ]))
                                      ]),
                                      createVNode("div", { class: "pl-2" }, [
                                        createVNode("div", { class: "sm:col-span-4" }, [
                                          createVNode("label", {
                                            for: "email",
                                            class: "block text-sm font-medium text-gray-700"
                                          }, " SMILES "),
                                          createVNode("div", { class: "mt-1 mb-2" }, [
                                            withDirectives(createVNode("input", {
                                              id: "smiles",
                                              "onUpdate:modelValue": ($event) => $data.smiles = $event,
                                              name: "smiles",
                                              type: "text",
                                              class: "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md",
                                              onBlur: $options.loadSmiles
                                            }, null, 40, ["onUpdate:modelValue", "onBlur"]), [
                                              [
                                                vModelText,
                                                $data.smiles
                                              ]
                                            ])
                                          ]),
                                          $data.smiles && $data.smiles != "" ? (openBlock(), createBlock("button", {
                                            key: 0,
                                            class: "inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 mt-2",
                                            onClick: $options.loadSmiles
                                          }, " Load Structure ", 8, ["onClick"])) : createCommentVNode("", true),
                                          createVNode(_component_jet_input_error, {
                                            message: $data.errorMessage,
                                            class: "mt-2"
                                          }, null, 8, ["message"])
                                        ]),
                                        createVNode("div", { class: "relative" }, [
                                          createVNode("div", {
                                            class: "absolute inset-0 flex items-center",
                                            "aria-hidden": "true"
                                          }, [
                                            createVNode("div", { class: "w-full border-t border-gray-300" })
                                          ]),
                                          createVNode("div", { class: "relative flex justify-center" }, [
                                            createVNode("span", { class: "px-2 bg-white text-sm text-gray-500" }, " Or ")
                                          ])
                                        ]),
                                        createVNode("span", { class: "float-right text-xs cursor-pointer hover:text-blue-700 m-2" }, [
                                          createVNode("a", {
                                            href: "https://docs.nmrxiv.org/docs/submission-guides/submission/editor",
                                            target: "_blank"
                                          }, "Need help? ")
                                        ]),
                                        createVNode("div", {
                                          id: "structureSearchEditor",
                                          class: "w-full border my-4 rounded-md",
                                          style: { "height": "400px" }
                                        }),
                                        createVNode("div", { class: "mt-1 mb-6" }, [
                                          createVNode("label", {
                                            for: "email",
                                            class: "block text-sm font-medium text-gray-700"
                                          }, " Percentage composition (" + toDisplayString($data.percentage) + "%) ", 1),
                                          createVNode(_component_slider, {
                                            modelValue: $data.percentage,
                                            "onUpdate:modelValue": ($event) => $data.percentage = $event,
                                            min: 0,
                                            max: $options.getMax,
                                            height: 10,
                                            color: "#000",
                                            "track-color": "#999"
                                          }, null, 8, ["modelValue", "onUpdate:modelValue", "max"])
                                        ]),
                                        createVNode("button", {
                                          type: "button",
                                          class: "inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                                          onClick: $options.saveMolecule
                                        }, " ADD ", 8, ["onClick"])
                                      ])
                                    ]),
                                    $data.selectedStudy ? (openBlock(), createBlock("div", { key: 0 }, [
                                      $data.selectedStudy.molecules && $data.selectedStudy.molecules.length == 0 ? (openBlock(), createBlock("div", { key: 0 }, [
                                        createVNode("template", null, [
                                          createVNode("button", {
                                            type: "button",
                                            class: "relative block w-full border-2 border-gray-300 border-dashed rounded-lg p-12 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"
                                          }, [
                                            (openBlock(), createBlock("svg", {
                                              class: "mx-auto h-12 w-12 text-gray-400",
                                              xmlns: "http://www.w3.org/2000/svg",
                                              stroke: "currentColor",
                                              fill: "none",
                                              viewBox: "0 0 48 48",
                                              "aria-hidden": "true"
                                            }, [
                                              createVNode("path", {
                                                "stroke-linecap": "round",
                                                "stroke-linejoin": "round",
                                                "stroke-width": "2",
                                                d: "M8 14v20c0 4.418 7.163 8 16 8 1.381 0 2.721-.087 4-.252M8 14c0 4.418 7.163 8 16 8s16-3.582 16-8M8 14c0-4.418 7.163-8 16-8s16 3.582 16 8m0 0v14m0-4c0 4.418-7.163 8-16 8S8 28.418 8 24m32 10v6m0 0v6m0-6h6m-6 0h-6"
                                              })
                                            ])),
                                            createVNode("span", { class: "mt-2 block text-sm font-medium text-gray-900" }, " Create a new database ")
                                          ])
                                        ])
                                      ])) : createCommentVNode("", true),
                                      $data.selectedStudy.molecules && $data.selectedStudy.molecules.length > 0 ? (openBlock(), createBlock("div", { key: 1 }, " Mols ")) : createCommentVNode("", true)
                                    ])) : createCommentVNode("", true)
                                  ])) : createCommentVNode("", true)
                                ])
                              ])
                            ])
                          ])
                        ])
                      ])
                    ])
                  ])) : createCommentVNode("", true),
                  $options.currentStep.id == "03" ? (openBlock(), createBlock("div", { key: 2 }, [
                    createVNode(_component_Validation, {
                      project: $data.project,
                      validation: _ctx.validation
                    }, null, 8, ["project", "validation"])
                  ])) : createCommentVNode("", true)
                ])) : createCommentVNode("", true)
              ]))
            ]))
          ])) : (openBlock(), createBlock("div", { key: 2 }, [
            (openBlock(), createBlock("svg", {
              class: "animate-spin -ml-1 mr-3 h-5 w-5 text-dark flex-inline inline",
              xmlns: "http://www.w3.org/2000/svg",
              fill: "none",
              viewBox: "0 0 24 24"
            }, [
              createVNode("circle", {
                class: "opacity-25",
                cx: "12",
                cy: "12",
                r: "10",
                stroke: "currentColor",
                "stroke-width": "4"
              }),
              createVNode("path", {
                class: "opacity-75",
                fill: "currentColor",
                d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
              })
            ])),
            createTextVNode(" Loading... ")
          ])),
          $data.errorMessage != null && $data.errorMessage != "" ? (openBlock(), createBlock("div", {
            key: 3,
            class: "rounded-md bg-red-50 p-4 mb-2"
          }, [
            createVNode("div", { class: "flex" }, [
              createVNode("div", { class: "flex-shrink-0" }, [
                createVNode(_component_ExclamationTriangleIcon, {
                  class: "h-5 w-5 text-red-400",
                  "aria-hidden": "true"
                })
              ]),
              createVNode("div", { class: "ml-3" }, [
                createVNode("h3", { class: "text-sm font-medium text-red-400" }, " There were errors with your submission "),
                createVNode("div", {
                  class: "mt-2 text-sm text-red-900",
                  innerHTML: $data.errorMessage
                }, null, 8, ["innerHTML"])
              ])
            ])
          ])) : createCommentVNode("", true)
        ];
      }
    }),
    footer: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex"${_scopeId}>`);
        if ($data.showPrimer && $data.currentDraft) {
          _push2(`<div class="w-full"${_scopeId}><div class="float-left"${_scopeId}><div class="relative mt-2 flex items-start"${_scopeId}><div class="flex h-5 items-center"${_scopeId}><input id="comments" aria-describedby="comments-description" name="comments" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500"${_scopeId}></div><div class="ml-3 text-sm"${_scopeId}><label for="comments" class="font-medium text-gray-700"${_scopeId}>Don&#39;t show this again</label></div></div></div>`);
          _push2(ssrRenderComponent(_component_jet_button, {
            class: ["ml-2 float-right", {
              "opacity-25": $data.createDatasetForm.processing
            }],
            onClick: ($event) => $options.skipPrimer()
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Proceed `);
              } else {
                return [
                  createTextVNode(" Proceed ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<div class="w-full"${_scopeId}>`);
          if (!$options.currentStep) {
            _push2(`<span${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Link, {
              class: "inline-flex items-center px-2.5 py-1 border border-gray-300 shadow-sm text-md font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
              href: $data.returnUrl
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Cancel `);
                } else {
                  return [
                    createTextVNode(" Cancel ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</span>`);
          } else {
            _push2(`<span${_scopeId}>`);
            if ($options.currentStep.id == "01") {
              _push2(`<span${_scopeId}>`);
              if (_ctx.drafts.length > 0) {
                _push2(ssrRenderComponent(_component_jet_secondary_button, {
                  class: ["ml-2 float-left", {
                    "opacity-25": $data.createDatasetForm.processing
                  }],
                  disabled: $data.createDatasetForm.processing,
                  onClick: $options.openSelectDraftsView
                }, {
                  default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                    if (_push3) {
                      _push3(` Drafts `);
                    } else {
                      return [
                        createTextVNode(" Drafts ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent2, _scopeId));
              } else {
                _push2(`<!---->`);
              }
              _push2(ssrRenderComponent(_component_Link, {
                class: "inline-flex items-center px-2.5 py-1 border border-gray-300 shadow-sm text-md font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                href: $data.returnUrl
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` Cancel `);
                  } else {
                    return [
                      createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(ssrRenderComponent(_component_jet_button, {
                id: "tour-step-proceed-from-step-1",
                class: ["ml-2", {
                  "opacity-25": $data.createDatasetForm.processing
                }],
                disabled: $data.createDatasetForm.processing || $data.loading || $data.loadingStep,
                onClick: $options.process
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    if ($data.loadingStep) {
                      _push3(`<span${_scopeId2}><svg class="animate-spin -ml-1 mr-3 h-2 w-2 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"${_scopeId2}><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"${_scopeId2}></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"${_scopeId2}></path></svg></span>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    _push3(` Proceed `);
                  } else {
                    return [
                      $data.loadingStep ? (openBlock(), createBlock("span", { key: 0 }, [
                        (openBlock(), createBlock("svg", {
                          class: "animate-spin -ml-1 mr-3 h-2 w-2 text-white",
                          xmlns: "http://www.w3.org/2000/svg",
                          fill: "none",
                          viewBox: "0 0 24 24"
                        }, [
                          createVNode("circle", {
                            class: "opacity-25",
                            cx: "12",
                            cy: "12",
                            r: "10",
                            stroke: "currentColor",
                            "stroke-width": "4"
                          }),
                          createVNode("path", {
                            class: "opacity-75",
                            fill: "currentColor",
                            d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                          })
                        ]))
                      ])) : createCommentVNode("", true),
                      createTextVNode(" Proceed ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</span>`);
            } else if ($options.currentStep.id == "02") {
              _push2(`<span${_scopeId}>`);
              _push2(ssrRenderComponent(_component_jet_button, {
                class: ["ml-2 float-left", {
                  "opacity-25": $data.createDatasetForm.processing
                }],
                disabled: $data.createDatasetForm.processing,
                onClick: ($event) => $options.selectStep(1)
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` Back `);
                  } else {
                    return [
                      createTextVNode(" Back ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(ssrRenderComponent(_component_Link, {
                href: $data.returnUrl,
                class: "inline-flex items-center px-2.5 py-1 border border-gray-300 shadow-sm text-md font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` Cancel `);
                  } else {
                    return [
                      createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(ssrRenderComponent(_component_jet_button, {
                id: "tour-step-proceed-from-step-2",
                class: ["ml-2", {
                  "opacity-25": $data.createDatasetForm.processing
                }],
                disabled: $data.createDatasetForm.processing || $data.loading || $data.loadingStep,
                onClick: $options.closeDraft
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    if ($data.loadingStep) {
                      _push3(`<span${_scopeId2}><svg class="animate-spin -ml-1 mr-3 h-2 w-2 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"${_scopeId2}><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"${_scopeId2}></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"${_scopeId2}></path></svg></span>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    _push3(` Proceed `);
                  } else {
                    return [
                      $data.loadingStep ? (openBlock(), createBlock("span", { key: 0 }, [
                        (openBlock(), createBlock("svg", {
                          class: "animate-spin -ml-1 mr-3 h-2 w-2 text-white",
                          xmlns: "http://www.w3.org/2000/svg",
                          fill: "none",
                          viewBox: "0 0 24 24"
                        }, [
                          createVNode("circle", {
                            class: "opacity-25",
                            cx: "12",
                            cy: "12",
                            r: "10",
                            stroke: "currentColor",
                            "stroke-width": "4"
                          }),
                          createVNode("path", {
                            class: "opacity-75",
                            fill: "currentColor",
                            d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                          })
                        ]))
                      ])) : createCommentVNode("", true),
                      createTextVNode(" Proceed ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</span>`);
            } else if ($options.currentStep.id == "03") {
              _push2(`<span${_scopeId}>`);
              _push2(ssrRenderComponent(_component_Link, {
                id: "tour-step-finish",
                class: "inline-flex items-center px-2.5 py-1 border border-gray-300 shadow-sm text-md font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                href: _ctx.route("dashboard")
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` Finish `);
                  } else {
                    return [
                      createTextVNode(" Finish ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</span>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</span>`);
          }
          _push2(`</div>`);
        }
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "flex" }, [
            $data.showPrimer && $data.currentDraft ? (openBlock(), createBlock("div", {
              key: 0,
              class: "w-full"
            }, [
              createVNode("div", { class: "float-left" }, [
                createVNode("div", {
                  class: "relative mt-2 flex items-start",
                  onChange: ($event) => $options.hidePrimer()
                }, [
                  createVNode("div", { class: "flex h-5 items-center" }, [
                    createVNode("input", {
                      id: "comments",
                      "aria-describedby": "comments-description",
                      name: "comments",
                      type: "checkbox",
                      class: "h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500"
                    })
                  ]),
                  createVNode("div", { class: "ml-3 text-sm" }, [
                    createVNode("label", {
                      for: "comments",
                      class: "font-medium text-gray-700"
                    }, "Don't show this again")
                  ])
                ], 40, ["onChange"])
              ]),
              createVNode(_component_jet_button, {
                class: ["ml-2 float-right", {
                  "opacity-25": $data.createDatasetForm.processing
                }],
                onClick: ($event) => $options.skipPrimer()
              }, {
                default: withCtx(() => [
                  createTextVNode(" Proceed ")
                ]),
                _: 1
              }, 8, ["class", "onClick"])
            ])) : (openBlock(), createBlock("div", {
              key: 1,
              class: "w-full"
            }, [
              !$options.currentStep ? (openBlock(), createBlock("span", { key: 0 }, [
                createVNode(_component_Link, {
                  class: "inline-flex items-center px-2.5 py-1 border border-gray-300 shadow-sm text-md font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                  href: $data.returnUrl
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["href"])
              ])) : (openBlock(), createBlock("span", { key: 1 }, [
                $options.currentStep.id == "01" ? (openBlock(), createBlock("span", { key: 0 }, [
                  _ctx.drafts.length > 0 ? (openBlock(), createBlock(_component_jet_secondary_button, {
                    key: 0,
                    class: ["ml-2 float-left", {
                      "opacity-25": $data.createDatasetForm.processing
                    }],
                    disabled: $data.createDatasetForm.processing,
                    onClick: $options.openSelectDraftsView
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Drafts ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled", "onClick"])) : createCommentVNode("", true),
                  createVNode(_component_Link, {
                    class: "inline-flex items-center px-2.5 py-1 border border-gray-300 shadow-sm text-md font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                    href: $data.returnUrl
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Cancel ")
                    ]),
                    _: 1
                  }, 8, ["href"]),
                  createVNode(_component_jet_button, {
                    id: "tour-step-proceed-from-step-1",
                    class: ["ml-2", {
                      "opacity-25": $data.createDatasetForm.processing
                    }],
                    disabled: $data.createDatasetForm.processing || $data.loading || $data.loadingStep,
                    onClick: $options.process
                  }, {
                    default: withCtx(() => [
                      $data.loadingStep ? (openBlock(), createBlock("span", { key: 0 }, [
                        (openBlock(), createBlock("svg", {
                          class: "animate-spin -ml-1 mr-3 h-2 w-2 text-white",
                          xmlns: "http://www.w3.org/2000/svg",
                          fill: "none",
                          viewBox: "0 0 24 24"
                        }, [
                          createVNode("circle", {
                            class: "opacity-25",
                            cx: "12",
                            cy: "12",
                            r: "10",
                            stroke: "currentColor",
                            "stroke-width": "4"
                          }),
                          createVNode("path", {
                            class: "opacity-75",
                            fill: "currentColor",
                            d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                          })
                        ]))
                      ])) : createCommentVNode("", true),
                      createTextVNode(" Proceed ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled", "onClick"])
                ])) : $options.currentStep.id == "02" ? (openBlock(), createBlock("span", { key: 1 }, [
                  createVNode(_component_jet_button, {
                    class: ["ml-2 float-left", {
                      "opacity-25": $data.createDatasetForm.processing
                    }],
                    disabled: $data.createDatasetForm.processing,
                    onClick: ($event) => $options.selectStep(1)
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Back ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled", "onClick"]),
                  createVNode(_component_Link, {
                    href: $data.returnUrl,
                    class: "inline-flex items-center px-2.5 py-1 border border-gray-300 shadow-sm text-md font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Cancel ")
                    ]),
                    _: 1
                  }, 8, ["href"]),
                  createVNode(_component_jet_button, {
                    id: "tour-step-proceed-from-step-2",
                    class: ["ml-2", {
                      "opacity-25": $data.createDatasetForm.processing
                    }],
                    disabled: $data.createDatasetForm.processing || $data.loading || $data.loadingStep,
                    onClick: $options.closeDraft
                  }, {
                    default: withCtx(() => [
                      $data.loadingStep ? (openBlock(), createBlock("span", { key: 0 }, [
                        (openBlock(), createBlock("svg", {
                          class: "animate-spin -ml-1 mr-3 h-2 w-2 text-white",
                          xmlns: "http://www.w3.org/2000/svg",
                          fill: "none",
                          viewBox: "0 0 24 24"
                        }, [
                          createVNode("circle", {
                            class: "opacity-25",
                            cx: "12",
                            cy: "12",
                            r: "10",
                            stroke: "currentColor",
                            "stroke-width": "4"
                          }),
                          createVNode("path", {
                            class: "opacity-75",
                            fill: "currentColor",
                            d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                          })
                        ]))
                      ])) : createCommentVNode("", true),
                      createTextVNode(" Proceed ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled", "onClick"])
                ])) : $options.currentStep.id == "03" ? (openBlock(), createBlock("span", { key: 2 }, [
                  createVNode(_component_Link, {
                    id: "tour-step-finish",
                    class: "inline-flex items-center px-2.5 py-1 border border-gray-300 shadow-sm text-md font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                    href: _ctx.route("dashboard")
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Finish ")
                    ]),
                    _: 1
                  }, 8, ["href"])
                ])) : createCommentVNode("", true)
              ]))
            ]))
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1$ = _sfc_main$1$.setup;
_sfc_main$1$.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/Submission.vue");
  return _sfc_setup$1$ ? _sfc_setup$1$(props, ctx) : void 0;
};
const Submission = /* @__PURE__ */ _export_sfc(_sfc_main$1$, [["ssrRender", _sfc_ssrRender$1_]]);
const _sfc_main$1_ = {
  components: {
    Dialog,
    DialogPanel,
    DialogTitle,
    TransitionChild,
    TransitionRoot,
    XMarkIcon,
    JetButton,
    JetSecondaryButton,
    Menu,
    MenuButton,
    MenuItem,
    MenuItems,
    EllipsisVerticalIcon: EllipsisVerticalIcon$1
  },
  props: [],
  data() {
    return {
      open: false,
      info: {},
      notifications: this.$page.props.auth.user.notifications,
      notificationForm: this.$inertia.form({
        _method: "POST",
        id: "",
        title: "",
        message: "",
        user_id: ""
      }),
      markAllAsReadForm: this.$inertia.form({
        _method: "POST"
      })
    };
  },
  methods: {
    toggleShowNotificationDialog(notifications) {
      this.info.title = "";
      this.info.body = "";
      this.open = !this.open;
    },
    markNotificationAsRead(notification) {
      this.notificationForm.user_id = notification.notifiable_id;
      this.notificationForm.id = notification.id;
      this.notificationForm.title = notification.data["title"];
      this.notificationForm.message = notification.data["message"];
      this.notificationForm.post(
        route(
          "users.markNotificationAsRead",
          notification.notifiable_id
        ),
        {
          preserveScroll: true,
          onSuccess: () => {
            this.notificationForm.reset();
            this.notifications = this.$page.props.auth.user.notifications;
          },
          onError: (err) => console.error(err)
        }
      );
    },
    markAllNotificationAsRead() {
      this.markAllAsReadForm.post(
        route("users.markAllNotificationAsRead"),
        {
          preserveScroll: true,
          onSuccess: () => {
            this.markAllAsReadForm.reset();
            this.notifications = this.$page.props.auth.user.notifications;
          },
          onError: (err) => console.error(err)
        }
      );
    },
    calculateDaysDifference(createdDate) {
      var createdDateObj = new Date(createdDate);
      var currentDate = /* @__PURE__ */ new Date();
      var differenceInMs = currentDate - createdDateObj;
      var differenceInDays = Math.floor(
        differenceInMs / (1e3 * 60 * 60 * 24)
      );
      if (differenceInDays === 0) {
        return "today";
      } else if (differenceInDays === 1) {
        return "yesterday";
      } else {
        return `${differenceInDays} days ago`;
      }
    }
  }
};
function _sfc_ssrRender$1Z(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_TransitionRoot = resolveComponent("TransitionRoot");
  const _component_Dialog = resolveComponent("Dialog");
  const _component_TransitionChild = resolveComponent("TransitionChild");
  const _component_DialogPanel = resolveComponent("DialogPanel");
  const _component_XMarkIcon = resolveComponent("XMarkIcon");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  const _component_jet_button = resolveComponent("jet-button");
  _push(ssrRenderComponent(_component_TransitionRoot, mergeProps({
    as: "template",
    show: $data.open
  }, _attrs), {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_Dialog, {
          as: "div",
          class: "fixed inset-0 z-50",
          onClose: ($event) => $data.open = false
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_TransitionChild, {
                as: "template",
                enter: "ease-in-out duration-500",
                "enter-from": "opacity-0",
                "enter-to": "opacity-100",
                leave: "ease-in-out duration-500",
                "leave-from": "opacity-100",
                "leave-to": "opacity-0"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"${_scopeId3}></div>`);
                  } else {
                    return [
                      createVNode("div", { class: "fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`<div class="fixed inset-0 overflow-hidden"${_scopeId2}><div class="absolute inset-0 overflow-hidden"${_scopeId2}><div class="pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10"${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_TransitionChild, {
                as: "template",
                enter: "transform transition ease-in-out duration-500 sm:duration-700",
                "enter-from": "translate-x-full",
                "enter-to": "translate-x-0",
                leave: "transform transition ease-in-out duration-500 sm:duration-700",
                "leave-from": "translate-x-0",
                "leave-to": "translate-x-full"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(ssrRenderComponent(_component_DialogPanel, { class: "pointer-events-auto relative w-screen max-w-md" }, {
                      default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(ssrRenderComponent(_component_TransitionChild, {
                            as: "template",
                            enter: "ease-in-out duration-500",
                            "enter-from": "opacity-0",
                            "enter-to": "opacity-100",
                            leave: "ease-in-out duration-500",
                            "leave-from": "opacity-100",
                            "leave-to": "opacity-0"
                          }, {
                            default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                              if (_push6) {
                                _push6(`<div class="absolute left-0 top-0 -ml-8 flex pr-2 pt-4 sm:-ml-10 sm:pr-4"${_scopeId5}><button type="button" class="rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white"${_scopeId5}><span class="sr-only"${_scopeId5}>Close panel</span>`);
                                _push6(ssrRenderComponent(_component_XMarkIcon, {
                                  class: "h-6 w-6",
                                  "aria-hidden": "true"
                                }, null, _parent6, _scopeId5));
                                _push6(`</button></div>`);
                              } else {
                                return [
                                  createVNode("div", { class: "absolute left-0 top-0 -ml-8 flex pr-2 pt-4 sm:-ml-10 sm:pr-4" }, [
                                    createVNode("button", {
                                      type: "button",
                                      class: "rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white",
                                      onClick: ($event) => $data.open = false
                                    }, [
                                      createVNode("span", { class: "sr-only" }, "Close panel"),
                                      createVNode(_component_XMarkIcon, {
                                        class: "h-6 w-6",
                                        "aria-hidden": "true"
                                      })
                                    ], 8, ["onClick"])
                                  ])
                                ];
                              }
                            }),
                            _: 1
                          }, _parent5, _scopeId4));
                          _push5(`<div class="flex h-full flex-col overflow-y-scroll bg-white py-6 shadow-xl"${_scopeId4}><h2 class="text-2xl font-bold dark:text-white text-center"${_scopeId4}> Notifications </h2><div class="inline-flex items-center justify-center w-full"${_scopeId4}><hr class="w-64 h-1 my-8 bg-gray-200 border-0 rounded dark:bg-gray-700"${_scopeId4}><div class="absolute px-4 -translate-x-1/2 bg-white left-1/2 dark:bg-gray-900"${_scopeId4}><svg class="w-4 h-4 text-primary-dark dark:text-primary-dark" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 18 14"${_scopeId4}><path d="M6 0H2a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4v1a3 3 0 0 1-3 3H2a1 1 0 0 0 0 2h1a5.006 5.006 0 0 0 5-5V2a2 2 0 0 0-2-2Zm10 0h-4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4v1a3 3 0 0 1-3 3h-1a1 1 0 0 0 0 2h1a5.006 5.006 0 0 0 5-5V2a2 2 0 0 0-2-2Z"${_scopeId4}></path></svg></div></div><div class="flex-1 overflow-y-auto m-2"${_scopeId4}>`);
                          if ($data.notifications.length == 0) {
                            _push5(`<div class="text-m font-semi-bold text-center text-gray-500 italic"${_scopeId4}> No unread notifications. </div>`);
                          } else {
                            _push5(`<!---->`);
                          }
                          _push5(`<!--[-->`);
                          ssrRenderList($data.notifications, (notification) => {
                            _push5(`<div${_scopeId4}><div class="relative rounded-lg border border-gray-300 bg-gray-50 px-6 py-5 shadow-sm items-top m-1 shadow-md transition-all"${_scopeId4}><div class="text-m font-semi-bold text-gray-900"${_scopeId4}>${notification.data.title}</div><div class="text-sm text-gray-500"${_scopeId4}>${notification.data.message}</div><div class="flex justify-between mt-2"${_scopeId4}><button type="button" class="rounded-md text-sm font-medium text-teal-600 hover:text-teal-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"${_scopeId4}> Mark As Read </button><div class="text-sm text-gray-400 justify-end italic"${_scopeId4}>${ssrInterpolate($options.calculateDaysDifference(
                              notification.created_at
                            ))}</div></div></div></div>`);
                          });
                          _push5(`<!--]--></div><hr class="h-px my-1 bg-gray-200 border-0 dark:bg-gray-700"${_scopeId4}><div class="flex justify-end m-2"${_scopeId4}>`);
                          _push5(ssrRenderComponent(_component_jet_secondary_button, {
                            type: "button",
                            onClick: ($event) => $data.open = false
                          }, {
                            default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                              if (_push6) {
                                _push6(` Close `);
                              } else {
                                return [
                                  createTextVNode(" Close ")
                                ];
                              }
                            }),
                            _: 1
                          }, _parent5, _scopeId4));
                          _push5(ssrRenderComponent(_component_jet_button, {
                            type: "button",
                            class: "ml-4",
                            disabled: $data.notifications.length == 0,
                            onClick: ($event) => $options.markAllNotificationAsRead()
                          }, {
                            default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                              if (_push6) {
                                _push6(` Mark All As Read `);
                              } else {
                                return [
                                  createTextVNode(" Mark All As Read ")
                                ];
                              }
                            }),
                            _: 1
                          }, _parent5, _scopeId4));
                          _push5(`</div></div>`);
                        } else {
                          return [
                            createVNode(_component_TransitionChild, {
                              as: "template",
                              enter: "ease-in-out duration-500",
                              "enter-from": "opacity-0",
                              "enter-to": "opacity-100",
                              leave: "ease-in-out duration-500",
                              "leave-from": "opacity-100",
                              "leave-to": "opacity-0"
                            }, {
                              default: withCtx(() => [
                                createVNode("div", { class: "absolute left-0 top-0 -ml-8 flex pr-2 pt-4 sm:-ml-10 sm:pr-4" }, [
                                  createVNode("button", {
                                    type: "button",
                                    class: "rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white",
                                    onClick: ($event) => $data.open = false
                                  }, [
                                    createVNode("span", { class: "sr-only" }, "Close panel"),
                                    createVNode(_component_XMarkIcon, {
                                      class: "h-6 w-6",
                                      "aria-hidden": "true"
                                    })
                                  ], 8, ["onClick"])
                                ])
                              ]),
                              _: 1
                            }),
                            createVNode("div", { class: "flex h-full flex-col overflow-y-scroll bg-white py-6 shadow-xl" }, [
                              createVNode("h2", { class: "text-2xl font-bold dark:text-white text-center" }, " Notifications "),
                              createVNode("div", { class: "inline-flex items-center justify-center w-full" }, [
                                createVNode("hr", { class: "w-64 h-1 my-8 bg-gray-200 border-0 rounded dark:bg-gray-700" }),
                                createVNode("div", { class: "absolute px-4 -translate-x-1/2 bg-white left-1/2 dark:bg-gray-900" }, [
                                  (openBlock(), createBlock("svg", {
                                    class: "w-4 h-4 text-primary-dark dark:text-primary-dark",
                                    "aria-hidden": "true",
                                    xmlns: "http://www.w3.org/2000/svg",
                                    fill: "currentColor",
                                    viewBox: "0 0 18 14"
                                  }, [
                                    createVNode("path", { d: "M6 0H2a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4v1a3 3 0 0 1-3 3H2a1 1 0 0 0 0 2h1a5.006 5.006 0 0 0 5-5V2a2 2 0 0 0-2-2Zm10 0h-4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4v1a3 3 0 0 1-3 3h-1a1 1 0 0 0 0 2h1a5.006 5.006 0 0 0 5-5V2a2 2 0 0 0-2-2Z" })
                                  ]))
                                ])
                              ]),
                              createVNode("div", { class: "flex-1 overflow-y-auto m-2" }, [
                                $data.notifications.length == 0 ? (openBlock(), createBlock("div", {
                                  key: 0,
                                  class: "text-m font-semi-bold text-center text-gray-500 italic"
                                }, " No unread notifications. ")) : createCommentVNode("", true),
                                (openBlock(true), createBlock(Fragment, null, renderList($data.notifications, (notification) => {
                                  return openBlock(), createBlock("div", {
                                    key: notification.title
                                  }, [
                                    createVNode("div", { class: "relative rounded-lg border border-gray-300 bg-gray-50 px-6 py-5 shadow-sm items-top m-1 shadow-md transition-all" }, [
                                      createVNode("div", {
                                        class: "text-m font-semi-bold text-gray-900",
                                        innerHTML: notification.data.title
                                      }, null, 8, ["innerHTML"]),
                                      createVNode("div", {
                                        class: "text-sm text-gray-500",
                                        innerHTML: notification.data.message
                                      }, null, 8, ["innerHTML"]),
                                      createVNode("div", { class: "flex justify-between mt-2" }, [
                                        createVNode("button", {
                                          type: "button",
                                          class: "rounded-md text-sm font-medium text-teal-600 hover:text-teal-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                                          onClick: ($event) => $options.markNotificationAsRead(
                                            notification
                                          )
                                        }, " Mark As Read ", 8, ["onClick"]),
                                        createVNode("div", { class: "text-sm text-gray-400 justify-end italic" }, toDisplayString($options.calculateDaysDifference(
                                          notification.created_at
                                        )), 1)
                                      ])
                                    ])
                                  ]);
                                }), 128))
                              ]),
                              createVNode("hr", { class: "h-px my-1 bg-gray-200 border-0 dark:bg-gray-700" }),
                              createVNode("div", { class: "flex justify-end m-2" }, [
                                createVNode(_component_jet_secondary_button, {
                                  type: "button",
                                  onClick: ($event) => $data.open = false
                                }, {
                                  default: withCtx(() => [
                                    createTextVNode(" Close ")
                                  ]),
                                  _: 1
                                }, 8, ["onClick"]),
                                createVNode(_component_jet_button, {
                                  type: "button",
                                  class: "ml-4",
                                  disabled: $data.notifications.length == 0,
                                  onClick: ($event) => $options.markAllNotificationAsRead()
                                }, {
                                  default: withCtx(() => [
                                    createTextVNode(" Mark All As Read ")
                                  ]),
                                  _: 1
                                }, 8, ["disabled", "onClick"])
                              ])
                            ])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                  } else {
                    return [
                      createVNode(_component_DialogPanel, { class: "pointer-events-auto relative w-screen max-w-md" }, {
                        default: withCtx(() => [
                          createVNode(_component_TransitionChild, {
                            as: "template",
                            enter: "ease-in-out duration-500",
                            "enter-from": "opacity-0",
                            "enter-to": "opacity-100",
                            leave: "ease-in-out duration-500",
                            "leave-from": "opacity-100",
                            "leave-to": "opacity-0"
                          }, {
                            default: withCtx(() => [
                              createVNode("div", { class: "absolute left-0 top-0 -ml-8 flex pr-2 pt-4 sm:-ml-10 sm:pr-4" }, [
                                createVNode("button", {
                                  type: "button",
                                  class: "rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white",
                                  onClick: ($event) => $data.open = false
                                }, [
                                  createVNode("span", { class: "sr-only" }, "Close panel"),
                                  createVNode(_component_XMarkIcon, {
                                    class: "h-6 w-6",
                                    "aria-hidden": "true"
                                  })
                                ], 8, ["onClick"])
                              ])
                            ]),
                            _: 1
                          }),
                          createVNode("div", { class: "flex h-full flex-col overflow-y-scroll bg-white py-6 shadow-xl" }, [
                            createVNode("h2", { class: "text-2xl font-bold dark:text-white text-center" }, " Notifications "),
                            createVNode("div", { class: "inline-flex items-center justify-center w-full" }, [
                              createVNode("hr", { class: "w-64 h-1 my-8 bg-gray-200 border-0 rounded dark:bg-gray-700" }),
                              createVNode("div", { class: "absolute px-4 -translate-x-1/2 bg-white left-1/2 dark:bg-gray-900" }, [
                                (openBlock(), createBlock("svg", {
                                  class: "w-4 h-4 text-primary-dark dark:text-primary-dark",
                                  "aria-hidden": "true",
                                  xmlns: "http://www.w3.org/2000/svg",
                                  fill: "currentColor",
                                  viewBox: "0 0 18 14"
                                }, [
                                  createVNode("path", { d: "M6 0H2a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4v1a3 3 0 0 1-3 3H2a1 1 0 0 0 0 2h1a5.006 5.006 0 0 0 5-5V2a2 2 0 0 0-2-2Zm10 0h-4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4v1a3 3 0 0 1-3 3h-1a1 1 0 0 0 0 2h1a5.006 5.006 0 0 0 5-5V2a2 2 0 0 0-2-2Z" })
                                ]))
                              ])
                            ]),
                            createVNode("div", { class: "flex-1 overflow-y-auto m-2" }, [
                              $data.notifications.length == 0 ? (openBlock(), createBlock("div", {
                                key: 0,
                                class: "text-m font-semi-bold text-center text-gray-500 italic"
                              }, " No unread notifications. ")) : createCommentVNode("", true),
                              (openBlock(true), createBlock(Fragment, null, renderList($data.notifications, (notification) => {
                                return openBlock(), createBlock("div", {
                                  key: notification.title
                                }, [
                                  createVNode("div", { class: "relative rounded-lg border border-gray-300 bg-gray-50 px-6 py-5 shadow-sm items-top m-1 shadow-md transition-all" }, [
                                    createVNode("div", {
                                      class: "text-m font-semi-bold text-gray-900",
                                      innerHTML: notification.data.title
                                    }, null, 8, ["innerHTML"]),
                                    createVNode("div", {
                                      class: "text-sm text-gray-500",
                                      innerHTML: notification.data.message
                                    }, null, 8, ["innerHTML"]),
                                    createVNode("div", { class: "flex justify-between mt-2" }, [
                                      createVNode("button", {
                                        type: "button",
                                        class: "rounded-md text-sm font-medium text-teal-600 hover:text-teal-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                                        onClick: ($event) => $options.markNotificationAsRead(
                                          notification
                                        )
                                      }, " Mark As Read ", 8, ["onClick"]),
                                      createVNode("div", { class: "text-sm text-gray-400 justify-end italic" }, toDisplayString($options.calculateDaysDifference(
                                        notification.created_at
                                      )), 1)
                                    ])
                                  ])
                                ]);
                              }), 128))
                            ]),
                            createVNode("hr", { class: "h-px my-1 bg-gray-200 border-0 dark:bg-gray-700" }),
                            createVNode("div", { class: "flex justify-end m-2" }, [
                              createVNode(_component_jet_secondary_button, {
                                type: "button",
                                onClick: ($event) => $data.open = false
                              }, {
                                default: withCtx(() => [
                                  createTextVNode(" Close ")
                                ]),
                                _: 1
                              }, 8, ["onClick"]),
                              createVNode(_component_jet_button, {
                                type: "button",
                                class: "ml-4",
                                disabled: $data.notifications.length == 0,
                                onClick: ($event) => $options.markAllNotificationAsRead()
                              }, {
                                default: withCtx(() => [
                                  createTextVNode(" Mark All As Read ")
                                ]),
                                _: 1
                              }, 8, ["disabled", "onClick"])
                            ])
                          ])
                        ]),
                        _: 1
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</div></div></div>`);
            } else {
              return [
                createVNode(_component_TransitionChild, {
                  as: "template",
                  enter: "ease-in-out duration-500",
                  "enter-from": "opacity-0",
                  "enter-to": "opacity-100",
                  leave: "ease-in-out duration-500",
                  "leave-from": "opacity-100",
                  "leave-to": "opacity-0"
                }, {
                  default: withCtx(() => [
                    createVNode("div", { class: "fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" })
                  ]),
                  _: 1
                }),
                createVNode("div", { class: "fixed inset-0 overflow-hidden" }, [
                  createVNode("div", { class: "absolute inset-0 overflow-hidden" }, [
                    createVNode("div", { class: "pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10" }, [
                      createVNode(_component_TransitionChild, {
                        as: "template",
                        enter: "transform transition ease-in-out duration-500 sm:duration-700",
                        "enter-from": "translate-x-full",
                        "enter-to": "translate-x-0",
                        leave: "transform transition ease-in-out duration-500 sm:duration-700",
                        "leave-from": "translate-x-0",
                        "leave-to": "translate-x-full"
                      }, {
                        default: withCtx(() => [
                          createVNode(_component_DialogPanel, { class: "pointer-events-auto relative w-screen max-w-md" }, {
                            default: withCtx(() => [
                              createVNode(_component_TransitionChild, {
                                as: "template",
                                enter: "ease-in-out duration-500",
                                "enter-from": "opacity-0",
                                "enter-to": "opacity-100",
                                leave: "ease-in-out duration-500",
                                "leave-from": "opacity-100",
                                "leave-to": "opacity-0"
                              }, {
                                default: withCtx(() => [
                                  createVNode("div", { class: "absolute left-0 top-0 -ml-8 flex pr-2 pt-4 sm:-ml-10 sm:pr-4" }, [
                                    createVNode("button", {
                                      type: "button",
                                      class: "rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white",
                                      onClick: ($event) => $data.open = false
                                    }, [
                                      createVNode("span", { class: "sr-only" }, "Close panel"),
                                      createVNode(_component_XMarkIcon, {
                                        class: "h-6 w-6",
                                        "aria-hidden": "true"
                                      })
                                    ], 8, ["onClick"])
                                  ])
                                ]),
                                _: 1
                              }),
                              createVNode("div", { class: "flex h-full flex-col overflow-y-scroll bg-white py-6 shadow-xl" }, [
                                createVNode("h2", { class: "text-2xl font-bold dark:text-white text-center" }, " Notifications "),
                                createVNode("div", { class: "inline-flex items-center justify-center w-full" }, [
                                  createVNode("hr", { class: "w-64 h-1 my-8 bg-gray-200 border-0 rounded dark:bg-gray-700" }),
                                  createVNode("div", { class: "absolute px-4 -translate-x-1/2 bg-white left-1/2 dark:bg-gray-900" }, [
                                    (openBlock(), createBlock("svg", {
                                      class: "w-4 h-4 text-primary-dark dark:text-primary-dark",
                                      "aria-hidden": "true",
                                      xmlns: "http://www.w3.org/2000/svg",
                                      fill: "currentColor",
                                      viewBox: "0 0 18 14"
                                    }, [
                                      createVNode("path", { d: "M6 0H2a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4v1a3 3 0 0 1-3 3H2a1 1 0 0 0 0 2h1a5.006 5.006 0 0 0 5-5V2a2 2 0 0 0-2-2Zm10 0h-4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4v1a3 3 0 0 1-3 3h-1a1 1 0 0 0 0 2h1a5.006 5.006 0 0 0 5-5V2a2 2 0 0 0-2-2Z" })
                                    ]))
                                  ])
                                ]),
                                createVNode("div", { class: "flex-1 overflow-y-auto m-2" }, [
                                  $data.notifications.length == 0 ? (openBlock(), createBlock("div", {
                                    key: 0,
                                    class: "text-m font-semi-bold text-center text-gray-500 italic"
                                  }, " No unread notifications. ")) : createCommentVNode("", true),
                                  (openBlock(true), createBlock(Fragment, null, renderList($data.notifications, (notification) => {
                                    return openBlock(), createBlock("div", {
                                      key: notification.title
                                    }, [
                                      createVNode("div", { class: "relative rounded-lg border border-gray-300 bg-gray-50 px-6 py-5 shadow-sm items-top m-1 shadow-md transition-all" }, [
                                        createVNode("div", {
                                          class: "text-m font-semi-bold text-gray-900",
                                          innerHTML: notification.data.title
                                        }, null, 8, ["innerHTML"]),
                                        createVNode("div", {
                                          class: "text-sm text-gray-500",
                                          innerHTML: notification.data.message
                                        }, null, 8, ["innerHTML"]),
                                        createVNode("div", { class: "flex justify-between mt-2" }, [
                                          createVNode("button", {
                                            type: "button",
                                            class: "rounded-md text-sm font-medium text-teal-600 hover:text-teal-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                                            onClick: ($event) => $options.markNotificationAsRead(
                                              notification
                                            )
                                          }, " Mark As Read ", 8, ["onClick"]),
                                          createVNode("div", { class: "text-sm text-gray-400 justify-end italic" }, toDisplayString($options.calculateDaysDifference(
                                            notification.created_at
                                          )), 1)
                                        ])
                                      ])
                                    ]);
                                  }), 128))
                                ]),
                                createVNode("hr", { class: "h-px my-1 bg-gray-200 border-0 dark:bg-gray-700" }),
                                createVNode("div", { class: "flex justify-end m-2" }, [
                                  createVNode(_component_jet_secondary_button, {
                                    type: "button",
                                    onClick: ($event) => $data.open = false
                                  }, {
                                    default: withCtx(() => [
                                      createTextVNode(" Close ")
                                    ]),
                                    _: 1
                                  }, 8, ["onClick"]),
                                  createVNode(_component_jet_button, {
                                    type: "button",
                                    class: "ml-4",
                                    disabled: $data.notifications.length == 0,
                                    onClick: ($event) => $options.markAllNotificationAsRead()
                                  }, {
                                    default: withCtx(() => [
                                      createTextVNode(" Mark All As Read ")
                                    ]),
                                    _: 1
                                  }, 8, ["disabled", "onClick"])
                                ])
                              ])
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      })
                    ])
                  ])
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_Dialog, {
            as: "div",
            class: "fixed inset-0 z-50",
            onClose: ($event) => $data.open = false
          }, {
            default: withCtx(() => [
              createVNode(_component_TransitionChild, {
                as: "template",
                enter: "ease-in-out duration-500",
                "enter-from": "opacity-0",
                "enter-to": "opacity-100",
                leave: "ease-in-out duration-500",
                "leave-from": "opacity-100",
                "leave-to": "opacity-0"
              }, {
                default: withCtx(() => [
                  createVNode("div", { class: "fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" })
                ]),
                _: 1
              }),
              createVNode("div", { class: "fixed inset-0 overflow-hidden" }, [
                createVNode("div", { class: "absolute inset-0 overflow-hidden" }, [
                  createVNode("div", { class: "pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10" }, [
                    createVNode(_component_TransitionChild, {
                      as: "template",
                      enter: "transform transition ease-in-out duration-500 sm:duration-700",
                      "enter-from": "translate-x-full",
                      "enter-to": "translate-x-0",
                      leave: "transform transition ease-in-out duration-500 sm:duration-700",
                      "leave-from": "translate-x-0",
                      "leave-to": "translate-x-full"
                    }, {
                      default: withCtx(() => [
                        createVNode(_component_DialogPanel, { class: "pointer-events-auto relative w-screen max-w-md" }, {
                          default: withCtx(() => [
                            createVNode(_component_TransitionChild, {
                              as: "template",
                              enter: "ease-in-out duration-500",
                              "enter-from": "opacity-0",
                              "enter-to": "opacity-100",
                              leave: "ease-in-out duration-500",
                              "leave-from": "opacity-100",
                              "leave-to": "opacity-0"
                            }, {
                              default: withCtx(() => [
                                createVNode("div", { class: "absolute left-0 top-0 -ml-8 flex pr-2 pt-4 sm:-ml-10 sm:pr-4" }, [
                                  createVNode("button", {
                                    type: "button",
                                    class: "rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white",
                                    onClick: ($event) => $data.open = false
                                  }, [
                                    createVNode("span", { class: "sr-only" }, "Close panel"),
                                    createVNode(_component_XMarkIcon, {
                                      class: "h-6 w-6",
                                      "aria-hidden": "true"
                                    })
                                  ], 8, ["onClick"])
                                ])
                              ]),
                              _: 1
                            }),
                            createVNode("div", { class: "flex h-full flex-col overflow-y-scroll bg-white py-6 shadow-xl" }, [
                              createVNode("h2", { class: "text-2xl font-bold dark:text-white text-center" }, " Notifications "),
                              createVNode("div", { class: "inline-flex items-center justify-center w-full" }, [
                                createVNode("hr", { class: "w-64 h-1 my-8 bg-gray-200 border-0 rounded dark:bg-gray-700" }),
                                createVNode("div", { class: "absolute px-4 -translate-x-1/2 bg-white left-1/2 dark:bg-gray-900" }, [
                                  (openBlock(), createBlock("svg", {
                                    class: "w-4 h-4 text-primary-dark dark:text-primary-dark",
                                    "aria-hidden": "true",
                                    xmlns: "http://www.w3.org/2000/svg",
                                    fill: "currentColor",
                                    viewBox: "0 0 18 14"
                                  }, [
                                    createVNode("path", { d: "M6 0H2a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4v1a3 3 0 0 1-3 3H2a1 1 0 0 0 0 2h1a5.006 5.006 0 0 0 5-5V2a2 2 0 0 0-2-2Zm10 0h-4a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2h4v1a3 3 0 0 1-3 3h-1a1 1 0 0 0 0 2h1a5.006 5.006 0 0 0 5-5V2a2 2 0 0 0-2-2Z" })
                                  ]))
                                ])
                              ]),
                              createVNode("div", { class: "flex-1 overflow-y-auto m-2" }, [
                                $data.notifications.length == 0 ? (openBlock(), createBlock("div", {
                                  key: 0,
                                  class: "text-m font-semi-bold text-center text-gray-500 italic"
                                }, " No unread notifications. ")) : createCommentVNode("", true),
                                (openBlock(true), createBlock(Fragment, null, renderList($data.notifications, (notification) => {
                                  return openBlock(), createBlock("div", {
                                    key: notification.title
                                  }, [
                                    createVNode("div", { class: "relative rounded-lg border border-gray-300 bg-gray-50 px-6 py-5 shadow-sm items-top m-1 shadow-md transition-all" }, [
                                      createVNode("div", {
                                        class: "text-m font-semi-bold text-gray-900",
                                        innerHTML: notification.data.title
                                      }, null, 8, ["innerHTML"]),
                                      createVNode("div", {
                                        class: "text-sm text-gray-500",
                                        innerHTML: notification.data.message
                                      }, null, 8, ["innerHTML"]),
                                      createVNode("div", { class: "flex justify-between mt-2" }, [
                                        createVNode("button", {
                                          type: "button",
                                          class: "rounded-md text-sm font-medium text-teal-600 hover:text-teal-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                                          onClick: ($event) => $options.markNotificationAsRead(
                                            notification
                                          )
                                        }, " Mark As Read ", 8, ["onClick"]),
                                        createVNode("div", { class: "text-sm text-gray-400 justify-end italic" }, toDisplayString($options.calculateDaysDifference(
                                          notification.created_at
                                        )), 1)
                                      ])
                                    ])
                                  ]);
                                }), 128))
                              ]),
                              createVNode("hr", { class: "h-px my-1 bg-gray-200 border-0 dark:bg-gray-700" }),
                              createVNode("div", { class: "flex justify-end m-2" }, [
                                createVNode(_component_jet_secondary_button, {
                                  type: "button",
                                  onClick: ($event) => $data.open = false
                                }, {
                                  default: withCtx(() => [
                                    createTextVNode(" Close ")
                                  ]),
                                  _: 1
                                }, 8, ["onClick"]),
                                createVNode(_component_jet_button, {
                                  type: "button",
                                  class: "ml-4",
                                  disabled: $data.notifications.length == 0,
                                  onClick: ($event) => $options.markAllNotificationAsRead()
                                }, {
                                  default: withCtx(() => [
                                    createTextVNode(" Mark All As Read ")
                                  ]),
                                  _: 1
                                }, 8, ["disabled", "onClick"])
                              ])
                            ])
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    })
                  ])
                ])
              ])
            ]),
            _: 1
          }, 8, ["onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1_ = _sfc_main$1_.setup;
_sfc_main$1_.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/Notification.vue");
  return _sfc_setup$1_ ? _sfc_setup$1_(props, ctx) : void 0;
};
const Notification = /* @__PURE__ */ _export_sfc(_sfc_main$1_, [["ssrRender", _sfc_ssrRender$1Z]]);
const userNavigation = [];
const secondaryNavigation = [
  { name: "Starred", href: "#" },
  { name: "Shared with me", href: "#" }
];
const navigation = [
  {
    auth: false,
    name: "Projects",
    href: "/projects",
    icon: FolderIcon,
    bg: "bg-white"
  },
  {
    auth: false,
    name: "Spectra",
    href: "/spectra",
    icon: Squares2X2Icon,
    bg: "bg-white"
  },
  {
    auth: false,
    name: "Compounds",
    href: "/compounds",
    icon: SwatchIcon,
    bg: "bg-white"
  },
  {
    auth: true,
    name: "Dashboard",
    href: "/dashboard",
    prefix: "Your Space",
    id: "tour-step-dashboard",
    icon: HomeIcon$1,
    bg: "bg-gray-50",
    children: [
      {
        auth: true,
        name: "Shared with me",
        href: "/dashboard/shared-with-me",
        id: "tour-step-shared-with-me",
        icon: UsersIcon,
        bg: "bg-white"
      },
      {
        auth: false,
        name: "Recent",
        href: "/dashboard/recent",
        id: "tour-step-recent",
        icon: ClockIcon,
        bg: "bg-white"
      },
      {
        auth: false,
        name: "Starred",
        href: "/dashboard/starred",
        id: "tour-step-starred",
        icon: StarIcon,
        bg: "bg-white"
      },
      {
        auth: false,
        name: "Trash",
        href: "/dashboard/trashed",
        id: "tour-step-trash",
        icon: TrashIcon$1,
        bg: "bg-white"
      }
    ]
  }
];
const _sfc_main$1Z = {
  components: {
    // ProjectCreate,
    AppTour,
    JetBanner,
    JetApplicationLogo,
    JetApplicationMark,
    JetDropdownLink,
    JetDropdown,
    Link,
    Head,
    Dialog,
    DialogOverlay,
    Menu,
    MenuButton,
    MenuItem,
    MenuItems,
    TransitionChild,
    TransitionRoot,
    BellIcon,
    Bars3Icon,
    MagnifyingGlassIcon,
    XMarkIcon,
    PlusIcon,
    FlashMessages,
    DialogPanel,
    AnnouncementBanner,
    Search: Search$1,
    Create: Create$3,
    ClockIcon,
    UsersIcon,
    StarIcon,
    TrashIcon: TrashIcon$1,
    FolderIcon,
    Squares2X2Icon,
    // StudyCreate,
    Submission,
    Notification,
    SwatchIcon
  },
  props: {
    title: String
  },
  setup() {
    var collapseSidebarStatus = JSON.parse(
      localStorage.getItem("collapseSidebarStatus")
    );
    if (!collapseSidebarStatus) {
      collapseSidebarStatus = false;
    }
    const sidebarOpen = ref(false);
    const collapseSidebar = ref(collapseSidebarStatus);
    const notificationElement = ref(null);
    return {
      userNavigation,
      secondaryNavigation,
      sidebarOpen,
      collapseSidebar,
      notificationElement,
      navigation
    };
  },
  computed: {
    editableTeamRole() {
      if (this.$page.props.teamRole && this.$page.props.teamRole.name) {
        if (this.$page.props.teamRole.key == "owner" || this.$page.props.teamRole.key == "collaborator") {
          return true;
        } else {
          return false;
        }
      } else {
        return true;
      }
    },
    filteredNavigation() {
      if (this.$page.props.auth.user && this.$page.props.auth.user.first_name) {
        return this.navigation;
      } else {
        return this.navigation.filter((i2) => !i2.auth);
      }
    },
    personalTeam() {
      return this.$page.props.auth.user.all_teams.filter(
        (t4) => t4.personal_team
      )[0];
    },
    MEILISEARCH_HOST() {
      return this.$page.props.MEILISEARCH_HOST;
    },
    MEILISEARCH_PUBLICKEY() {
      return this.$page.props.MEILISEARCH_PUBLICKEY;
    }
  },
  mounted() {
  },
  methods: {
    switchToTeam(team) {
      this.$inertia.put(
        route("current-team.update"),
        {
          team_id: team.id
        },
        {
          preserveState: false
        }
      );
    },
    toggleCollapseSidebar() {
      this.collapseSidebar = !this.collapseSidebar;
      localStorage.setItem("collapseSidebarStatus", this.collapseSidebar);
    },
    logout() {
      this.$inertia.post(route("logout"));
    },
    startTour() {
      this.$tours["appTour"].start();
    },
    openShowNotificationDialog(notification) {
      this.notificationElement.toggleShowNotificationDialog(notification);
    },
    hasUnreadNotification() {
      return this.$page.props.auth.user.notifications ? this.$page.props.auth.user.notifications.length > 0 : false;
    },
    countNotification() {
      return this.$page.props.auth.user.notifications ? this.$page.props.auth.user.notifications.length : 0;
    }
  }
};
function _sfc_ssrRender$1Y(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = resolveComponent("Head");
  const _component_AppTour = resolveComponent("AppTour");
  const _component_jet_banner = resolveComponent("jet-banner");
  const _component_announcement_banner = resolveComponent("announcement-banner");
  const _component_TransitionRoot = resolveComponent("TransitionRoot");
  const _component_Dialog = resolveComponent("Dialog");
  const _component_TransitionChild = resolveComponent("TransitionChild");
  const _component_DialogOverlay = resolveComponent("DialogOverlay");
  const _component_XMarkIcon = resolveComponent("XMarkIcon");
  const _component_Link = resolveComponent("Link");
  const _component_jet_application_logo = resolveComponent("jet-application-logo");
  const _component_create = resolveComponent("create");
  const _component_jet_application_mark = resolveComponent("jet-application-mark");
  const _component_Bars3Icon = resolveComponent("Bars3Icon");
  const _component_search = resolveComponent("search");
  const _component_flash_messages = resolveComponent("flash-messages");
  const _component_BellIcon = resolveComponent("BellIcon");
  const _component_notification = resolveComponent("notification");
  const _component_Menu = resolveComponent("Menu");
  const _component_MenuButton = resolveComponent("MenuButton");
  const _component_MenuItems = resolveComponent("MenuItems");
  const _component_jet_dropdown_link = resolveComponent("jet-dropdown-link");
  _push(`<!--[-->`);
  _push(ssrRenderComponent(_component_Head, { title: $props.title }, null, _parent));
  _push(ssrRenderComponent(_component_AppTour, null, null, _parent));
  _push(ssrRenderComponent(_component_jet_banner, null, null, _parent));
  _push(ssrRenderComponent(_component_announcement_banner, null, null, _parent));
  _push(`<div class="h-full flex min-h-screen">`);
  _push(ssrRenderComponent(_component_TransitionRoot, {
    as: "template",
    show: $setup.sidebarOpen
  }, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_Dialog, {
          as: "div",
          class: "fixed inset-0 flex z-40 md:hidden",
          onClose: ($event) => $setup.sidebarOpen = false
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_TransitionChild, {
                as: "template",
                enter: "transition-opacity ease-linear duration-300",
                "enter-from": "opacity-0",
                "enter-to": "opacity-100",
                leave: "transition-opacity ease-linear duration-300",
                "leave-from": "opacity-100",
                "leave-to": "opacity-0"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(ssrRenderComponent(_component_DialogOverlay, { class: "fixed inset-0 bg-gray-600 bg-opacity-75" }, null, _parent4, _scopeId3));
                  } else {
                    return [
                      createVNode(_component_DialogOverlay, { class: "fixed inset-0 bg-gray-600 bg-opacity-75" })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(ssrRenderComponent(_component_TransitionChild, {
                as: "template",
                enter: "transition ease-in-out duration-300 transform",
                "enter-from": "-translate-x-full",
                "enter-to": "translate-x-0",
                leave: "transition ease-in-out duration-300 transform",
                "leave-from": "translate-x-0",
                "leave-to": "-translate-x-full"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<div class="relative flex-1 flex flex-col max-w-xs w-full pt-5 pb-4 bg-white"${_scopeId3}>`);
                    _push4(ssrRenderComponent(_component_TransitionChild, {
                      as: "template",
                      enter: "ease-in-out duration-300",
                      "enter-from": "opacity-0",
                      "enter-to": "opacity-100",
                      leave: "ease-in-out duration-300",
                      "leave-from": "opacity-100",
                      "leave-to": "opacity-0"
                    }, {
                      default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`<div class="absolute top-0 right-0 -mr-12 pt-2"${_scopeId4}><button type="button" class="ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white"${_scopeId4}><span class="sr-only"${_scopeId4}>Close sidebar</span>`);
                          _push5(ssrRenderComponent(_component_XMarkIcon, {
                            class: "h-6 w-6 text-white",
                            "aria-hidden": "true"
                          }, null, _parent5, _scopeId4));
                          _push5(`</button></div>`);
                        } else {
                          return [
                            createVNode("div", { class: "absolute top-0 right-0 -mr-12 pt-2" }, [
                              createVNode("button", {
                                type: "button",
                                class: "ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white",
                                onClick: ($event) => $setup.sidebarOpen = false
                              }, [
                                createVNode("span", { class: "sr-only" }, "Close sidebar"),
                                createVNode(_component_XMarkIcon, {
                                  class: "h-6 w-6 text-white",
                                  "aria-hidden": "true"
                                })
                              ], 8, ["onClick"])
                            ])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(`<div class="flex-shrink-0 flex items-center px-4"${_scopeId3}>`);
                    _push4(ssrRenderComponent(_component_Link, {
                      href: _ctx.route("landing")
                    }, {
                      default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(ssrRenderComponent(_component_jet_application_logo, { class: "block h-8 w-auto" }, null, _parent5, _scopeId4));
                        } else {
                          return [
                            createVNode(_component_jet_application_logo, { class: "block h-8 w-auto" })
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(`</div>`);
                    if ($options.editableTeamRole) {
                      _push4(`<div class="mt-1 flex-1 h-0 overflow-y-auto"${_scopeId3}><div class="my-4 mx-4"${_scopeId3}>`);
                      _push4(ssrRenderComponent(_component_create, { mode: "button" }, null, _parent4, _scopeId3));
                      _push4(`<span class="float-center text-xs cursor-pointer hover:text-blue-700 mt-2"${_scopeId3}><a href="https://docs.nmrxiv.org/submission-guides/submission-process.html" target="_blank"${_scopeId3}>Need help? </a></span></div><!--[-->`);
                      ssrRenderList($options.filteredNavigation, (item) => {
                        _push4(`<nav class="flex-1 px-2 bg-white space-y-1"${_scopeId3}>`);
                        _push4(ssrRenderComponent(_component_Link, {
                          href: item.href,
                          class: "my-6 text-gray-900 group flex items-center px-2 text-sm font-medium rounded-md"
                        }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`<div class="pl-2 pr-4"${_scopeId4}>`);
                              ssrRenderVNode(_push5, createVNode(resolveDynamicComponent(item.icon), {
                                class: "h-6 w-6",
                                "aria-hidden": "true"
                              }, null), _parent5, _scopeId4);
                              _push5(`</div> ${ssrInterpolate(item.name)}`);
                            } else {
                              return [
                                createVNode("div", { class: "pl-2 pr-4" }, [
                                  (openBlock(), createBlock(resolveDynamicComponent(item.icon), {
                                    class: "h-6 w-6",
                                    "aria-hidden": "true"
                                  }))
                                ]),
                                createTextVNode(" " + toDisplayString(item.name), 1)
                              ];
                            }
                          }),
                          _: 2
                        }, _parent4, _scopeId3));
                        _push4(`</nav>`);
                      });
                      _push4(`<!--]--></div>`);
                    } else {
                      _push4(`<!---->`);
                    }
                    _push4(`</div>`);
                  } else {
                    return [
                      createVNode("div", { class: "relative flex-1 flex flex-col max-w-xs w-full pt-5 pb-4 bg-white" }, [
                        createVNode(_component_TransitionChild, {
                          as: "template",
                          enter: "ease-in-out duration-300",
                          "enter-from": "opacity-0",
                          "enter-to": "opacity-100",
                          leave: "ease-in-out duration-300",
                          "leave-from": "opacity-100",
                          "leave-to": "opacity-0"
                        }, {
                          default: withCtx(() => [
                            createVNode("div", { class: "absolute top-0 right-0 -mr-12 pt-2" }, [
                              createVNode("button", {
                                type: "button",
                                class: "ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white",
                                onClick: ($event) => $setup.sidebarOpen = false
                              }, [
                                createVNode("span", { class: "sr-only" }, "Close sidebar"),
                                createVNode(_component_XMarkIcon, {
                                  class: "h-6 w-6 text-white",
                                  "aria-hidden": "true"
                                })
                              ], 8, ["onClick"])
                            ])
                          ]),
                          _: 1
                        }),
                        createVNode("div", { class: "flex-shrink-0 flex items-center px-4" }, [
                          createVNode(_component_Link, {
                            href: _ctx.route("landing")
                          }, {
                            default: withCtx(() => [
                              createVNode(_component_jet_application_logo, { class: "block h-8 w-auto" })
                            ]),
                            _: 1
                          }, 8, ["href"])
                        ]),
                        $options.editableTeamRole ? (openBlock(), createBlock("div", {
                          key: 0,
                          class: "mt-1 flex-1 h-0 overflow-y-auto"
                        }, [
                          createVNode("div", { class: "my-4 mx-4" }, [
                            createVNode(_component_create, { mode: "button" }),
                            createVNode("span", { class: "float-center text-xs cursor-pointer hover:text-blue-700 mt-2" }, [
                              createVNode("a", {
                                href: "https://docs.nmrxiv.org/submission-guides/submission-process.html",
                                target: "_blank"
                              }, "Need help? ")
                            ])
                          ]),
                          (openBlock(true), createBlock(Fragment, null, renderList($options.filteredNavigation, (item) => {
                            return openBlock(), createBlock("nav", {
                              key: item.name,
                              class: "flex-1 px-2 bg-white space-y-1"
                            }, [
                              createVNode(_component_Link, {
                                href: item.href,
                                class: "my-6 text-gray-900 group flex items-center px-2 text-sm font-medium rounded-md"
                              }, {
                                default: withCtx(() => [
                                  createVNode("div", { class: "pl-2 pr-4" }, [
                                    (openBlock(), createBlock(resolveDynamicComponent(item.icon), {
                                      class: "h-6 w-6",
                                      "aria-hidden": "true"
                                    }))
                                  ]),
                                  createTextVNode(" " + toDisplayString(item.name), 1)
                                ]),
                                _: 2
                              }, 1032, ["href"])
                            ]);
                          }), 128))
                        ])) : createCommentVNode("", true)
                      ])
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`<div class="flex-shrink-0 w-14" aria-hidden="true"${_scopeId2}></div>`);
            } else {
              return [
                createVNode(_component_TransitionChild, {
                  as: "template",
                  enter: "transition-opacity ease-linear duration-300",
                  "enter-from": "opacity-0",
                  "enter-to": "opacity-100",
                  leave: "transition-opacity ease-linear duration-300",
                  "leave-from": "opacity-100",
                  "leave-to": "opacity-0"
                }, {
                  default: withCtx(() => [
                    createVNode(_component_DialogOverlay, { class: "fixed inset-0 bg-gray-600 bg-opacity-75" })
                  ]),
                  _: 1
                }),
                createVNode(_component_TransitionChild, {
                  as: "template",
                  enter: "transition ease-in-out duration-300 transform",
                  "enter-from": "-translate-x-full",
                  "enter-to": "translate-x-0",
                  leave: "transition ease-in-out duration-300 transform",
                  "leave-from": "translate-x-0",
                  "leave-to": "-translate-x-full"
                }, {
                  default: withCtx(() => [
                    createVNode("div", { class: "relative flex-1 flex flex-col max-w-xs w-full pt-5 pb-4 bg-white" }, [
                      createVNode(_component_TransitionChild, {
                        as: "template",
                        enter: "ease-in-out duration-300",
                        "enter-from": "opacity-0",
                        "enter-to": "opacity-100",
                        leave: "ease-in-out duration-300",
                        "leave-from": "opacity-100",
                        "leave-to": "opacity-0"
                      }, {
                        default: withCtx(() => [
                          createVNode("div", { class: "absolute top-0 right-0 -mr-12 pt-2" }, [
                            createVNode("button", {
                              type: "button",
                              class: "ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white",
                              onClick: ($event) => $setup.sidebarOpen = false
                            }, [
                              createVNode("span", { class: "sr-only" }, "Close sidebar"),
                              createVNode(_component_XMarkIcon, {
                                class: "h-6 w-6 text-white",
                                "aria-hidden": "true"
                              })
                            ], 8, ["onClick"])
                          ])
                        ]),
                        _: 1
                      }),
                      createVNode("div", { class: "flex-shrink-0 flex items-center px-4" }, [
                        createVNode(_component_Link, {
                          href: _ctx.route("landing")
                        }, {
                          default: withCtx(() => [
                            createVNode(_component_jet_application_logo, { class: "block h-8 w-auto" })
                          ]),
                          _: 1
                        }, 8, ["href"])
                      ]),
                      $options.editableTeamRole ? (openBlock(), createBlock("div", {
                        key: 0,
                        class: "mt-1 flex-1 h-0 overflow-y-auto"
                      }, [
                        createVNode("div", { class: "my-4 mx-4" }, [
                          createVNode(_component_create, { mode: "button" }),
                          createVNode("span", { class: "float-center text-xs cursor-pointer hover:text-blue-700 mt-2" }, [
                            createVNode("a", {
                              href: "https://docs.nmrxiv.org/submission-guides/submission-process.html",
                              target: "_blank"
                            }, "Need help? ")
                          ])
                        ]),
                        (openBlock(true), createBlock(Fragment, null, renderList($options.filteredNavigation, (item) => {
                          return openBlock(), createBlock("nav", {
                            key: item.name,
                            class: "flex-1 px-2 bg-white space-y-1"
                          }, [
                            createVNode(_component_Link, {
                              href: item.href,
                              class: "my-6 text-gray-900 group flex items-center px-2 text-sm font-medium rounded-md"
                            }, {
                              default: withCtx(() => [
                                createVNode("div", { class: "pl-2 pr-4" }, [
                                  (openBlock(), createBlock(resolveDynamicComponent(item.icon), {
                                    class: "h-6 w-6",
                                    "aria-hidden": "true"
                                  }))
                                ]),
                                createTextVNode(" " + toDisplayString(item.name), 1)
                              ]),
                              _: 2
                            }, 1032, ["href"])
                          ]);
                        }), 128))
                      ])) : createCommentVNode("", true)
                    ])
                  ]),
                  _: 1
                }),
                createVNode("div", {
                  class: "flex-shrink-0 w-14",
                  "aria-hidden": "true"
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_Dialog, {
            as: "div",
            class: "fixed inset-0 flex z-40 md:hidden",
            onClose: ($event) => $setup.sidebarOpen = false
          }, {
            default: withCtx(() => [
              createVNode(_component_TransitionChild, {
                as: "template",
                enter: "transition-opacity ease-linear duration-300",
                "enter-from": "opacity-0",
                "enter-to": "opacity-100",
                leave: "transition-opacity ease-linear duration-300",
                "leave-from": "opacity-100",
                "leave-to": "opacity-0"
              }, {
                default: withCtx(() => [
                  createVNode(_component_DialogOverlay, { class: "fixed inset-0 bg-gray-600 bg-opacity-75" })
                ]),
                _: 1
              }),
              createVNode(_component_TransitionChild, {
                as: "template",
                enter: "transition ease-in-out duration-300 transform",
                "enter-from": "-translate-x-full",
                "enter-to": "translate-x-0",
                leave: "transition ease-in-out duration-300 transform",
                "leave-from": "translate-x-0",
                "leave-to": "-translate-x-full"
              }, {
                default: withCtx(() => [
                  createVNode("div", { class: "relative flex-1 flex flex-col max-w-xs w-full pt-5 pb-4 bg-white" }, [
                    createVNode(_component_TransitionChild, {
                      as: "template",
                      enter: "ease-in-out duration-300",
                      "enter-from": "opacity-0",
                      "enter-to": "opacity-100",
                      leave: "ease-in-out duration-300",
                      "leave-from": "opacity-100",
                      "leave-to": "opacity-0"
                    }, {
                      default: withCtx(() => [
                        createVNode("div", { class: "absolute top-0 right-0 -mr-12 pt-2" }, [
                          createVNode("button", {
                            type: "button",
                            class: "ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white",
                            onClick: ($event) => $setup.sidebarOpen = false
                          }, [
                            createVNode("span", { class: "sr-only" }, "Close sidebar"),
                            createVNode(_component_XMarkIcon, {
                              class: "h-6 w-6 text-white",
                              "aria-hidden": "true"
                            })
                          ], 8, ["onClick"])
                        ])
                      ]),
                      _: 1
                    }),
                    createVNode("div", { class: "flex-shrink-0 flex items-center px-4" }, [
                      createVNode(_component_Link, {
                        href: _ctx.route("landing")
                      }, {
                        default: withCtx(() => [
                          createVNode(_component_jet_application_logo, { class: "block h-8 w-auto" })
                        ]),
                        _: 1
                      }, 8, ["href"])
                    ]),
                    $options.editableTeamRole ? (openBlock(), createBlock("div", {
                      key: 0,
                      class: "mt-1 flex-1 h-0 overflow-y-auto"
                    }, [
                      createVNode("div", { class: "my-4 mx-4" }, [
                        createVNode(_component_create, { mode: "button" }),
                        createVNode("span", { class: "float-center text-xs cursor-pointer hover:text-blue-700 mt-2" }, [
                          createVNode("a", {
                            href: "https://docs.nmrxiv.org/submission-guides/submission-process.html",
                            target: "_blank"
                          }, "Need help? ")
                        ])
                      ]),
                      (openBlock(true), createBlock(Fragment, null, renderList($options.filteredNavigation, (item) => {
                        return openBlock(), createBlock("nav", {
                          key: item.name,
                          class: "flex-1 px-2 bg-white space-y-1"
                        }, [
                          createVNode(_component_Link, {
                            href: item.href,
                            class: "my-6 text-gray-900 group flex items-center px-2 text-sm font-medium rounded-md"
                          }, {
                            default: withCtx(() => [
                              createVNode("div", { class: "pl-2 pr-4" }, [
                                (openBlock(), createBlock(resolveDynamicComponent(item.icon), {
                                  class: "h-6 w-6",
                                  "aria-hidden": "true"
                                }))
                              ]),
                              createTextVNode(" " + toDisplayString(item.name), 1)
                            ]),
                            _: 2
                          }, 1032, ["href"])
                        ]);
                      }), 128))
                    ])) : createCommentVNode("", true)
                  ])
                ]),
                _: 1
              }),
              createVNode("div", {
                class: "flex-shrink-0 w-14",
                "aria-hidden": "true"
              })
            ]),
            _: 1
          }, 8, ["onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
  if ($setup.collapseSidebar) {
    _push(`<div class="hidden fixed bg-white border-r md:flex md:flex-shrink-0 md:inset-y-0 z-10"><div class="flex flex-col w-20"><div class="flex-1 flex flex-col min-h-0 overflow-y-auto"><div class="flex-1"><div class="bg-white border-b pb-4 pt-4 flex flex-shrink-0 px-4">`);
    _push(ssrRenderComponent(_component_Link, {
      href: _ctx.route("landing")
    }, {
      default: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(ssrRenderComponent(_component_jet_application_mark, { class: "block h-8 p-0.5 ml-1.5 w-auto" }, null, _parent2, _scopeId));
        } else {
          return [
            createVNode(_component_jet_application_mark, { class: "block h-8 p-0.5 ml-1.5 w-auto" })
          ];
        }
      }),
      _: 1
    }, _parent));
    _push(`</div><div class="px-4 flex flex-col mt-3 mb-1">`);
    _push(ssrRenderComponent(_component_create, { mode: "icon" }, null, _parent));
    _push(`</div><nav aria-label="Sidebar" class="flex flex-col items-center py-4 px-0"><!--[-->`);
    ssrRenderList($options.filteredNavigation, (item) => {
      _push(ssrRenderComponent(_component_Link, {
        key: item.name,
        href: item.href,
        class: [
          _ctx.$page.url === item.href ? " border-r-4 bg-gray-200 border-r-black" : "",
          "w-full px-7 hover:bg-gray-700 hover:text-white group flex items-center py-3 text-sm font-medium " + item.bg
        ]
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderVNode(_push2, createVNode(resolveDynamicComponent(item.icon), {
              class: "h-6 w-6",
              "aria-hidden": "true"
            }, null), _parent2, _scopeId);
            _push2(`<span class="sr-only"${_scopeId}>${ssrInterpolate(item.name)}</span>`);
          } else {
            return [
              (openBlock(), createBlock(resolveDynamicComponent(item.icon), {
                class: "h-6 w-6",
                "aria-hidden": "true"
              })),
              createVNode("span", { class: "sr-only" }, toDisplayString(item.name), 1)
            ];
          }
        }),
        _: 2
      }, _parent));
    });
    _push(`<!--]--></nav></div><div class="flex-shrink-0 flex pb-5"></div></div></div></div>`);
  } else {
    _push(`<!---->`);
  }
  if (!$setup.collapseSidebar) {
    _push(`<div class="hidden md:flex md:w-64 md:flex-col md:fixed md:inset-y-0 z-10"><div class="flex flex-col flex-grow border-r border-gray-200 bg-white overflow-y-auto"><div class="flex py-3 pb-4 items-center flex-shrink-0 px-4">`);
    _push(ssrRenderComponent(_component_Link, {
      class: "ml-2",
      href: _ctx.route("landing")
    }, {
      default: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(ssrRenderComponent(_component_jet_application_logo, { class: "block h-10 w-auto" }, null, _parent2, _scopeId));
        } else {
          return [
            createVNode(_component_jet_application_logo, { class: "block h-10 w-auto" })
          ];
        }
      }),
      _: 1
    }, _parent));
    _push(`</div><div class="flex-grow flex flex-col -mt-1.5">`);
    if ($options.editableTeamRole) {
      _push(`<div class="px-4 flex flex-col mt-3 mb-1 text-center">`);
      _push(ssrRenderComponent(_component_create, { mode: "button" }, null, _parent));
      _push(`<span class="text-xs cursor-pointer hover:text-blue-700 mt-2"><a href="https://docs.nmrxiv.org/submission-guides/submission-process.html" target="_blank">Need help? </a></span></div>`);
    } else {
      _push(`<!---->`);
    }
    _push(`<nav class="py-4 px-0 bg-white"><!--[-->`);
    ssrRenderList($options.filteredNavigation, (item) => {
      _push(`<div class="${ssrRenderClass([item.auth ? "border-t" : ""])}">`);
      if (item.prefix) {
        _push(`<div class="p-2 bg-gray-100 text-gray-500 text-sm border-b">${ssrInterpolate(item.prefix)}</div>`);
      } else {
        _push(`<!---->`);
      }
      _push(ssrRenderComponent(_component_Link, {
        id: item.id,
        href: item.href,
        class: [
          _ctx.$page.url === item.href ? " border-r-4 bg-gray-200 border-r-black" : "",
          "w-full px-7 hover:bg-gray-700 hover:text-white group flex items-center py-3 text-sm font-medium " + item.bg
        ]
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            ssrRenderVNode(_push2, createVNode(resolveDynamicComponent(item.icon), {
              class: "mr-3 ml-2 h-6 w-6",
              "aria-hidden": "true"
            }, null), _parent2, _scopeId);
            _push2(`<span class="flex-1"${_scopeId}>${ssrInterpolate(item.name)}</span>`);
          } else {
            return [
              (openBlock(), createBlock(resolveDynamicComponent(item.icon), {
                class: "mr-3 ml-2 h-6 w-6",
                "aria-hidden": "true"
              })),
              createVNode("span", { class: "flex-1" }, toDisplayString(item.name), 1)
            ];
          }
        }),
        _: 2
      }, _parent));
      _push(`<!--[-->`);
      ssrRenderList(item.children, (child) => {
        _push(ssrRenderComponent(_component_Link, {
          id: child.id,
          key: child.name,
          href: child.href,
          class: [
            _ctx.$page.url === child.href ? " border-r-4 bg-gray-200 border-r-black" : "",
            "w-full px-10 hover:bg-gray-700 hover:text-white group flex items-center py-1.5 text-sm font-small " + child.bg
          ]
        }, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              ssrRenderVNode(_push2, createVNode(resolveDynamicComponent(child.icon), {
                class: "mr-3 ml-2 h-4 w-4",
                "aria-hidden": "true"
              }, null), _parent2, _scopeId);
              _push2(`<span class="flex-1"${_scopeId}>${ssrInterpolate(child.name)}</span>`);
            } else {
              return [
                (openBlock(), createBlock(resolveDynamicComponent(child.icon), {
                  class: "mr-3 ml-2 h-4 w-4",
                  "aria-hidden": "true"
                })),
                createVNode("span", { class: "flex-1" }, toDisplayString(child.name), 1)
              ];
            }
          }),
          _: 2
        }, _parent));
      });
      _push(`<!--]--></div>`);
    });
    _push(`<!--]--></nav></div></div></div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`<div class="${ssrRenderClass([
    $setup.collapseSidebar ? "md:pl-40 md:-ml-20" : "md:pl-64",
    "flex flex-col flex-1 z-0"
  ])}"><div class="sticky top-0 z-10 flex-shrink-0 flex h-16 bg-white shadow"><button type="button" class="hidden md:inline-flex p-4 rounded mx-1 mr-3 border-red-200 text-gray-500">`);
  _push(ssrRenderComponent(_component_Bars3Icon, {
    class: "h-6 w-6",
    "aria-hidden": "true"
  }, null, _parent));
  _push(`</button><button type="button" class="px-4 border-r border-gray-200 text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-teal-500 md:hidden"><span class="sr-only">Open sidebar</span>`);
  _push(ssrRenderComponent(_component_Bars3Icon, {
    class: "h-6 w-6",
    "aria-hidden": "true"
  }, null, _parent));
  _push(`</button><div class="flex-1 px-4 py-2 flex justify-between"><div class="flex-1 flex">`);
  _push(ssrRenderComponent(_component_search, {
    host: $options.MEILISEARCH_HOST,
    akey: $options.MEILISEARCH_PUBLICKEY
  }, null, _parent));
  _push(`</div>`);
  _push(ssrRenderComponent(_component_flash_messages, null, null, _parent));
  _push(`<div class="ml-4 flex items-center md:ml-6">`);
  if (_ctx.$page.props.auth.user && _ctx.$page.props.auth.user.first_name != null) {
    _push(`<span><div class="ml-5 mt-2 tooltip"><a class="cursor-pointer">`);
    _push(ssrRenderComponent(_component_BellIcon, { class: "w-6 h-6 fill-current text-gray-600" }, null, _parent));
    _push(`</a><span class="bg-gray-900 text-center text-white px-2 py-1 shadow-lg rounded-md tooltiptextbottom">View Notifications</span></div>`);
    if ($options.hasUnreadNotification()) {
      _push(`<span class="inline-flex items-center justify-center px-1.5 py-0.5 text-xs font-bold leading-none text-red-100 bg-red-600 rounded-full">${ssrInterpolate($options.countNotification())}</span>`);
    } else {
      _push(`<!---->`);
    }
    _push(ssrRenderComponent(_component_notification, {
      ref: "notificationElement",
      notification: _ctx.$page.props.auth.user.notifications
    }, null, _parent));
    _push(`</span>`);
  } else {
    _push(`<!---->`);
  }
  _push(`<div class="ml-5 tooltip"><a id="tour-step-documentation" href="https://docs.nmrxiv.org/submission-guides/submission-process.html" target="_blank"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="h-6 w-6"><path d="M12 21a2 2 0 0 1-1.41-.59l-.83-.82A2 2 0 0 0 8.34 19H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h4a5 5 0 0 1 4 2v16z" class="fill-current text-gray-400"></path><path d="M12 21V5a5 5 0 0 1 4-2h4a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1h-4.34a2 2 0 0 0-1.42.59l-.83.82A2 2 0 0 1 12 21z" class="fill-current text-gray-600"></path></svg></a><span class="bg-gray-900 text-center text-white px-2 py-1 shadow-lg rounded-md tooltiptextbottom">Submission guides</span></div>`);
  if (_ctx.$page.props.auth.user) {
    _push(ssrRenderComponent(_component_Menu, {
      as: "div",
      class: "ml-3 relative"
    }, {
      default: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          if (_ctx.$page.props.auth.user.current_team && _ctx.$page.props.auth.user.current_team.personal_team) {
            _push2(`<div id="tour-step-account-management"${_scopeId}>`);
            if (!_ctx.$page.props.jetstream.managesProfilePhotos) {
              _push2(ssrRenderComponent(_component_MenuButton, { class: "flex text-sm border-2 border-transparent rounded-full focus:outline-none focus:border-gray-300 transition" }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`<img class="h-8 w-8 rounded-full object-cover"${ssrRenderAttr(
                      "src",
                      _ctx.$page.props.auth.user.profile_photo_url
                    )}${ssrRenderAttr("alt", _ctx.$page.props.auth.user.first_name)}${_scopeId2}>`);
                  } else {
                    return [
                      createVNode("img", {
                        class: "h-8 w-8 rounded-full object-cover",
                        src: _ctx.$page.props.auth.user.profile_photo_url,
                        alt: _ctx.$page.props.auth.user.first_name
                      }, null, 8, ["src", "alt"])
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
            } else {
              _push2(`<span class="inline-flex rounded-md"${_scopeId}>`);
              _push2(ssrRenderComponent(_component_MenuButton, {
                type: "button",
                class: "inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none transition"
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`<img class="h-8 w-8 rounded-full object-cover mr-2"${ssrRenderAttr(
                      "src",
                      _ctx.$page.props.auth.user.profile_photo_url
                    )}${ssrRenderAttr("alt", _ctx.$page.props.auth.user.first_name)}${_scopeId2}><span class="flex md:block hidden"${_scopeId2}>${ssrInterpolate(_ctx.$page.props.auth.user.first_name)}</span><svg class="ml-2 -mr-0.5 h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"${_scopeId2}><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"${_scopeId2}></path></svg>`);
                  } else {
                    return [
                      createVNode("img", {
                        class: "h-8 w-8 rounded-full object-cover mr-2",
                        src: _ctx.$page.props.auth.user.profile_photo_url,
                        alt: _ctx.$page.props.auth.user.first_name
                      }, null, 8, ["src", "alt"]),
                      createVNode("span", { class: "flex md:block hidden" }, toDisplayString(_ctx.$page.props.auth.user.first_name), 1),
                      (openBlock(), createBlock("svg", {
                        class: "ml-2 -mr-0.5 h-4 w-4",
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor"
                      }, [
                        createVNode("path", {
                          "fill-rule": "evenodd",
                          d: "M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z",
                          "clip-rule": "evenodd"
                        })
                      ]))
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</span>`);
            }
            _push2(`</div>`);
          } else {
            _push2(`<div${_scopeId}>`);
            if (_ctx.$page.props.auth.user && _ctx.$page.props.auth.user.current_team) {
              _push2(ssrRenderComponent(_component_MenuButton, {
                type: "button",
                class: "inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none transition"
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`<img class="h-8 w-8 rounded-full object-cover mr-2"${ssrRenderAttr(
                      "src",
                      _ctx.$page.props.auth.user.current_team.profile_photo_url
                    )}${ssrRenderAttr(
                      "alt",
                      _ctx.$page.props.auth.user.current_team.name
                    )}${_scopeId2}><span class="flex md:block hidden"${_scopeId2}>${ssrInterpolate(_ctx.$page.props.auth.user.current_team.name)}</span><svg class="ml-2 -mr-0.5 h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"${_scopeId2}><path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"${_scopeId2}></path></svg>`);
                  } else {
                    return [
                      createVNode("img", {
                        class: "h-8 w-8 rounded-full object-cover mr-2",
                        src: _ctx.$page.props.auth.user.current_team.profile_photo_url,
                        alt: _ctx.$page.props.auth.user.current_team.name
                      }, null, 8, ["src", "alt"]),
                      createVNode("span", { class: "flex md:block hidden" }, toDisplayString(_ctx.$page.props.auth.user.current_team.name), 1),
                      (openBlock(), createBlock("svg", {
                        class: "ml-2 -mr-0.5 h-4 w-4",
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor"
                      }, [
                        createVNode("path", {
                          "fill-rule": "evenodd",
                          d: "M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z",
                          "clip-rule": "evenodd"
                        })
                      ]))
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div>`);
          }
          _push2(``);
          _push2(ssrRenderComponent(_component_MenuItems, { class: "origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none" }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                if (_ctx.hasAnyPermission([
                  "manage platform"
                ])) {
                  _push3(`<span${_scopeId2}><div class="block px-4 pt-2 text-xs text-gray-400"${_scopeId2}> Management </div>`);
                  _push3(ssrRenderComponent(_component_jet_dropdown_link, {
                    href: _ctx.route("console")
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Admin Console `);
                      } else {
                        return [
                          createTextVNode(" Admin Console ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(`</span>`);
                } else {
                  _push3(`<!---->`);
                }
                _push3(`<div class="border-t border-gray-100"${_scopeId2}></div>`);
                if (_ctx.$page.props.jetstream.hasTeamFeatures) {
                  _push3(`<span${_scopeId2}>`);
                  if (!_ctx.$page.props.auth.user.current_team.personal_team) {
                    _push3(`<div class="block px-4 pt-2 text-xs text-gray-400"${_scopeId2}> Personal Account </div>`);
                  } else {
                    _push3(`<!---->`);
                  }
                  if (!_ctx.$page.props.auth.user.current_team.personal_team) {
                    _push3(`<form${_scopeId2}>`);
                    _push3(ssrRenderComponent(_component_jet_dropdown_link, { as: "button" }, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(`<div class="flex items-center"${_scopeId3}><svg class="mr-2 h-5 w-5 text-gray-400" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" stroke="currentColor" viewBox="0 0 24 24"${_scopeId3}><path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"${_scopeId3}></path></svg><div${_scopeId3}>${ssrInterpolate(_ctx.$page.props.auth.user.first_name)} ${ssrInterpolate(_ctx.$page.props.auth.user.last_name)}</div></div>`);
                        } else {
                          return [
                            createVNode("div", { class: "flex items-center" }, [
                              (openBlock(), createBlock("svg", {
                                class: "mr-2 h-5 w-5 text-gray-400",
                                fill: "none",
                                "stroke-linecap": "round",
                                "stroke-linejoin": "round",
                                "stroke-width": "2",
                                stroke: "currentColor",
                                viewBox: "0 0 24 24"
                              }, [
                                createVNode("path", { d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" })
                              ])),
                              createVNode("div", null, toDisplayString(_ctx.$page.props.auth.user.first_name) + " " + toDisplayString(_ctx.$page.props.auth.user.last_name), 1)
                            ])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                    _push3(`</form>`);
                  } else {
                    _push3(`<!---->`);
                  }
                  _push3(`<div class="block px-4 pt-2 text-xs text-gray-400"${_scopeId2}> Your Teams </div>`);
                  if (_ctx.$page.props.jetstream.hasTeamFeatures) {
                    _push3(`<!--[--><!--[-->`);
                    ssrRenderList(_ctx.$page.props.auth.user.all_teams, (team) => {
                      _push3(`<form${_scopeId2}>`);
                      if (!team.personal_team) {
                        _push3(ssrRenderComponent(_component_jet_dropdown_link, { as: "button" }, {
                          default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                            if (_push4) {
                              _push4(`<div class="flex items-center"${_scopeId3}>`);
                              if (team.id == _ctx.$page.props.user.current_team_id) {
                                _push4(`<svg class="mr-2 h-5 w-5 text-green-400" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" stroke="currentColor" viewBox="0 0 24 24"${_scopeId3}><path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"${_scopeId3}></path></svg>`);
                              } else {
                                _push4(`<svg class="mr-2 h-5 w-5 text-gray-400" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" stroke="currentColor" viewBox="0 0 24 24"${_scopeId3}><path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"${_scopeId3}></path></svg>`);
                              }
                              _push4(`<div${_scopeId3}>${ssrInterpolate(team.name)}</div></div>`);
                            } else {
                              return [
                                createVNode("div", { class: "flex items-center" }, [
                                  team.id == _ctx.$page.props.user.current_team_id ? (openBlock(), createBlock("svg", {
                                    key: 0,
                                    class: "mr-2 h-5 w-5 text-green-400",
                                    fill: "none",
                                    "stroke-linecap": "round",
                                    "stroke-linejoin": "round",
                                    "stroke-width": "2",
                                    stroke: "currentColor",
                                    viewBox: "0 0 24 24"
                                  }, [
                                    createVNode("path", { d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" })
                                  ])) : (openBlock(), createBlock("svg", {
                                    key: 1,
                                    class: "mr-2 h-5 w-5 text-gray-400",
                                    fill: "none",
                                    "stroke-linecap": "round",
                                    "stroke-linejoin": "round",
                                    "stroke-width": "2",
                                    stroke: "currentColor",
                                    viewBox: "0 0 24 24"
                                  }, [
                                    createVNode("path", { d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" })
                                  ])),
                                  createVNode("div", null, toDisplayString(team.name), 1)
                                ])
                              ];
                            }
                          }),
                          _: 2
                        }, _parent3, _scopeId2));
                      } else {
                        _push3(`<!---->`);
                      }
                      _push3(`</form>`);
                    });
                    _push3(`<!--]-->`);
                    if (_ctx.$page.props.jetstream.canCreateTeams) {
                      _push3(ssrRenderComponent(_component_jet_dropdown_link, {
                        href: _ctx.route("teams.create")
                      }, {
                        default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                          if (_push4) {
                            _push4(` Create New Team `);
                          } else {
                            return [
                              createTextVNode(" Create New Team ")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent3, _scopeId2));
                    } else {
                      _push3(`<!---->`);
                    }
                    _push3(`<!--]-->`);
                  } else {
                    _push3(`<!---->`);
                  }
                  _push3(`</span>`);
                } else {
                  _push3(`<!---->`);
                }
                _push3(`<div class="border-t border-gray-100"${_scopeId2}></div><div class="block px-4 pt-2 text-xs text-gray-400"${_scopeId2}> Manage Account </div>`);
                _push3(ssrRenderComponent(_component_jet_dropdown_link, {
                  href: _ctx.route("profile.show")
                }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(` Account `);
                    } else {
                      return [
                        createTextVNode(" Account ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                if (_ctx.$page.props.jetstream.hasApiFeatures) {
                  _push3(ssrRenderComponent(_component_jet_dropdown_link, {
                    href: _ctx.route("api-tokens.index")
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` API Tokens `);
                      } else {
                        return [
                          createTextVNode(" API Tokens ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  _push3(`<!---->`);
                }
                _push3(`<div class="border-t border-gray-100"${_scopeId2}></div><form${_scopeId2}>`);
                _push3(ssrRenderComponent(_component_jet_dropdown_link, { as: "button" }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(` Log Out `);
                    } else {
                      return [
                        createTextVNode(" Log Out ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                _push3(`</form>`);
              } else {
                return [
                  _ctx.hasAnyPermission([
                    "manage platform"
                  ]) ? (openBlock(), createBlock("span", { key: 0 }, [
                    createVNode("div", { class: "block px-4 pt-2 text-xs text-gray-400" }, " Management "),
                    createVNode(_component_jet_dropdown_link, {
                      href: _ctx.route("console")
                    }, {
                      default: withCtx(() => [
                        createTextVNode(" Admin Console ")
                      ]),
                      _: 1
                    }, 8, ["href"])
                  ])) : createCommentVNode("", true),
                  createVNode("div", { class: "border-t border-gray-100" }),
                  _ctx.$page.props.jetstream.hasTeamFeatures ? (openBlock(), createBlock("span", { key: 1 }, [
                    !_ctx.$page.props.auth.user.current_team.personal_team ? (openBlock(), createBlock("div", {
                      key: 0,
                      class: "block px-4 pt-2 text-xs text-gray-400"
                    }, " Personal Account ")) : createCommentVNode("", true),
                    !_ctx.$page.props.auth.user.current_team.personal_team ? (openBlock(), createBlock("form", {
                      key: 1,
                      onSubmit: withModifiers(($event) => $options.switchToTeam($options.personalTeam), ["prevent"])
                    }, [
                      createVNode(_component_jet_dropdown_link, { as: "button" }, {
                        default: withCtx(() => [
                          createVNode("div", { class: "flex items-center" }, [
                            (openBlock(), createBlock("svg", {
                              class: "mr-2 h-5 w-5 text-gray-400",
                              fill: "none",
                              "stroke-linecap": "round",
                              "stroke-linejoin": "round",
                              "stroke-width": "2",
                              stroke: "currentColor",
                              viewBox: "0 0 24 24"
                            }, [
                              createVNode("path", { d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" })
                            ])),
                            createVNode("div", null, toDisplayString(_ctx.$page.props.auth.user.first_name) + " " + toDisplayString(_ctx.$page.props.auth.user.last_name), 1)
                          ])
                        ]),
                        _: 1
                      })
                    ], 40, ["onSubmit"])) : createCommentVNode("", true),
                    createVNode("div", { class: "block px-4 pt-2 text-xs text-gray-400" }, " Your Teams "),
                    _ctx.$page.props.jetstream.hasTeamFeatures ? (openBlock(), createBlock(Fragment, { key: 2 }, [
                      (openBlock(true), createBlock(Fragment, null, renderList(_ctx.$page.props.auth.user.all_teams, (team) => {
                        return openBlock(), createBlock("form", {
                          key: team.id,
                          onSubmit: withModifiers(($event) => $options.switchToTeam(team), ["prevent"])
                        }, [
                          !team.personal_team ? (openBlock(), createBlock(_component_jet_dropdown_link, {
                            key: 0,
                            as: "button"
                          }, {
                            default: withCtx(() => [
                              createVNode("div", { class: "flex items-center" }, [
                                team.id == _ctx.$page.props.user.current_team_id ? (openBlock(), createBlock("svg", {
                                  key: 0,
                                  class: "mr-2 h-5 w-5 text-green-400",
                                  fill: "none",
                                  "stroke-linecap": "round",
                                  "stroke-linejoin": "round",
                                  "stroke-width": "2",
                                  stroke: "currentColor",
                                  viewBox: "0 0 24 24"
                                }, [
                                  createVNode("path", { d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" })
                                ])) : (openBlock(), createBlock("svg", {
                                  key: 1,
                                  class: "mr-2 h-5 w-5 text-gray-400",
                                  fill: "none",
                                  "stroke-linecap": "round",
                                  "stroke-linejoin": "round",
                                  "stroke-width": "2",
                                  stroke: "currentColor",
                                  viewBox: "0 0 24 24"
                                }, [
                                  createVNode("path", { d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" })
                                ])),
                                createVNode("div", null, toDisplayString(team.name), 1)
                              ])
                            ]),
                            _: 2
                          }, 1024)) : createCommentVNode("", true)
                        ], 40, ["onSubmit"]);
                      }), 128)),
                      _ctx.$page.props.jetstream.canCreateTeams ? (openBlock(), createBlock(_component_jet_dropdown_link, {
                        key: 0,
                        href: _ctx.route("teams.create")
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Create New Team ")
                        ]),
                        _: 1
                      }, 8, ["href"])) : createCommentVNode("", true)
                    ], 64)) : createCommentVNode("", true)
                  ])) : createCommentVNode("", true),
                  createVNode("div", { class: "border-t border-gray-100" }),
                  createVNode("div", { class: "block px-4 pt-2 text-xs text-gray-400" }, " Manage Account "),
                  createVNode(_component_jet_dropdown_link, {
                    href: _ctx.route("profile.show")
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Account ")
                    ]),
                    _: 1
                  }, 8, ["href"]),
                  _ctx.$page.props.jetstream.hasApiFeatures ? (openBlock(), createBlock(_component_jet_dropdown_link, {
                    key: 2,
                    href: _ctx.route("api-tokens.index")
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" API Tokens ")
                    ]),
                    _: 1
                  }, 8, ["href"])) : createCommentVNode("", true),
                  createVNode("div", { class: "border-t border-gray-100" }),
                  createVNode("form", {
                    onSubmit: withModifiers($options.logout, ["prevent"])
                  }, [
                    createVNode(_component_jet_dropdown_link, { as: "button" }, {
                      default: withCtx(() => [
                        createTextVNode(" Log Out ")
                      ]),
                      _: 1
                    })
                  ], 40, ["onSubmit"])
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          return [
            _ctx.$page.props.auth.user.current_team && _ctx.$page.props.auth.user.current_team.personal_team ? (openBlock(), createBlock("div", {
              key: 0,
              id: "tour-step-account-management"
            }, [
              !_ctx.$page.props.jetstream.managesProfilePhotos ? (openBlock(), createBlock(_component_MenuButton, {
                key: 0,
                class: "flex text-sm border-2 border-transparent rounded-full focus:outline-none focus:border-gray-300 transition"
              }, {
                default: withCtx(() => [
                  createVNode("img", {
                    class: "h-8 w-8 rounded-full object-cover",
                    src: _ctx.$page.props.auth.user.profile_photo_url,
                    alt: _ctx.$page.props.auth.user.first_name
                  }, null, 8, ["src", "alt"])
                ]),
                _: 1
              })) : (openBlock(), createBlock("span", {
                key: 1,
                class: "inline-flex rounded-md"
              }, [
                createVNode(_component_MenuButton, {
                  type: "button",
                  class: "inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none transition"
                }, {
                  default: withCtx(() => [
                    createVNode("img", {
                      class: "h-8 w-8 rounded-full object-cover mr-2",
                      src: _ctx.$page.props.auth.user.profile_photo_url,
                      alt: _ctx.$page.props.auth.user.first_name
                    }, null, 8, ["src", "alt"]),
                    createVNode("span", { class: "flex md:block hidden" }, toDisplayString(_ctx.$page.props.auth.user.first_name), 1),
                    (openBlock(), createBlock("svg", {
                      class: "ml-2 -mr-0.5 h-4 w-4",
                      xmlns: "http://www.w3.org/2000/svg",
                      viewBox: "0 0 20 20",
                      fill: "currentColor"
                    }, [
                      createVNode("path", {
                        "fill-rule": "evenodd",
                        d: "M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z",
                        "clip-rule": "evenodd"
                      })
                    ]))
                  ]),
                  _: 1
                })
              ]))
            ])) : (openBlock(), createBlock("div", { key: 1 }, [
              _ctx.$page.props.auth.user && _ctx.$page.props.auth.user.current_team ? (openBlock(), createBlock(_component_MenuButton, {
                key: 0,
                type: "button",
                class: "inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none transition"
              }, {
                default: withCtx(() => [
                  createVNode("img", {
                    class: "h-8 w-8 rounded-full object-cover mr-2",
                    src: _ctx.$page.props.auth.user.current_team.profile_photo_url,
                    alt: _ctx.$page.props.auth.user.current_team.name
                  }, null, 8, ["src", "alt"]),
                  createVNode("span", { class: "flex md:block hidden" }, toDisplayString(_ctx.$page.props.auth.user.current_team.name), 1),
                  (openBlock(), createBlock("svg", {
                    class: "ml-2 -mr-0.5 h-4 w-4",
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 20 20",
                    fill: "currentColor"
                  }, [
                    createVNode("path", {
                      "fill-rule": "evenodd",
                      d: "M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z",
                      "clip-rule": "evenodd"
                    })
                  ]))
                ]),
                _: 1
              })) : createCommentVNode("", true)
            ])),
            createVNode(Transition, {
              "enter-active-class": "transition ease-out duration-100",
              "enter-from-class": "transform opacity-0 scale-95",
              "enter-to-class": "transform opacity-100 scale-100",
              "leave-active-class": "transition ease-in duration-75",
              "leave-from-class": "transform opacity-100 scale-100",
              "leave-to-class": "transform opacity-0 scale-95"
            }, {
              default: withCtx(() => [
                createVNode(_component_MenuItems, { class: "origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none" }, {
                  default: withCtx(() => [
                    _ctx.hasAnyPermission([
                      "manage platform"
                    ]) ? (openBlock(), createBlock("span", { key: 0 }, [
                      createVNode("div", { class: "block px-4 pt-2 text-xs text-gray-400" }, " Management "),
                      createVNode(_component_jet_dropdown_link, {
                        href: _ctx.route("console")
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Admin Console ")
                        ]),
                        _: 1
                      }, 8, ["href"])
                    ])) : createCommentVNode("", true),
                    createVNode("div", { class: "border-t border-gray-100" }),
                    _ctx.$page.props.jetstream.hasTeamFeatures ? (openBlock(), createBlock("span", { key: 1 }, [
                      !_ctx.$page.props.auth.user.current_team.personal_team ? (openBlock(), createBlock("div", {
                        key: 0,
                        class: "block px-4 pt-2 text-xs text-gray-400"
                      }, " Personal Account ")) : createCommentVNode("", true),
                      !_ctx.$page.props.auth.user.current_team.personal_team ? (openBlock(), createBlock("form", {
                        key: 1,
                        onSubmit: withModifiers(($event) => $options.switchToTeam($options.personalTeam), ["prevent"])
                      }, [
                        createVNode(_component_jet_dropdown_link, { as: "button" }, {
                          default: withCtx(() => [
                            createVNode("div", { class: "flex items-center" }, [
                              (openBlock(), createBlock("svg", {
                                class: "mr-2 h-5 w-5 text-gray-400",
                                fill: "none",
                                "stroke-linecap": "round",
                                "stroke-linejoin": "round",
                                "stroke-width": "2",
                                stroke: "currentColor",
                                viewBox: "0 0 24 24"
                              }, [
                                createVNode("path", { d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" })
                              ])),
                              createVNode("div", null, toDisplayString(_ctx.$page.props.auth.user.first_name) + " " + toDisplayString(_ctx.$page.props.auth.user.last_name), 1)
                            ])
                          ]),
                          _: 1
                        })
                      ], 40, ["onSubmit"])) : createCommentVNode("", true),
                      createVNode("div", { class: "block px-4 pt-2 text-xs text-gray-400" }, " Your Teams "),
                      _ctx.$page.props.jetstream.hasTeamFeatures ? (openBlock(), createBlock(Fragment, { key: 2 }, [
                        (openBlock(true), createBlock(Fragment, null, renderList(_ctx.$page.props.auth.user.all_teams, (team) => {
                          return openBlock(), createBlock("form", {
                            key: team.id,
                            onSubmit: withModifiers(($event) => $options.switchToTeam(team), ["prevent"])
                          }, [
                            !team.personal_team ? (openBlock(), createBlock(_component_jet_dropdown_link, {
                              key: 0,
                              as: "button"
                            }, {
                              default: withCtx(() => [
                                createVNode("div", { class: "flex items-center" }, [
                                  team.id == _ctx.$page.props.user.current_team_id ? (openBlock(), createBlock("svg", {
                                    key: 0,
                                    class: "mr-2 h-5 w-5 text-green-400",
                                    fill: "none",
                                    "stroke-linecap": "round",
                                    "stroke-linejoin": "round",
                                    "stroke-width": "2",
                                    stroke: "currentColor",
                                    viewBox: "0 0 24 24"
                                  }, [
                                    createVNode("path", { d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" })
                                  ])) : (openBlock(), createBlock("svg", {
                                    key: 1,
                                    class: "mr-2 h-5 w-5 text-gray-400",
                                    fill: "none",
                                    "stroke-linecap": "round",
                                    "stroke-linejoin": "round",
                                    "stroke-width": "2",
                                    stroke: "currentColor",
                                    viewBox: "0 0 24 24"
                                  }, [
                                    createVNode("path", { d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" })
                                  ])),
                                  createVNode("div", null, toDisplayString(team.name), 1)
                                ])
                              ]),
                              _: 2
                            }, 1024)) : createCommentVNode("", true)
                          ], 40, ["onSubmit"]);
                        }), 128)),
                        _ctx.$page.props.jetstream.canCreateTeams ? (openBlock(), createBlock(_component_jet_dropdown_link, {
                          key: 0,
                          href: _ctx.route("teams.create")
                        }, {
                          default: withCtx(() => [
                            createTextVNode(" Create New Team ")
                          ]),
                          _: 1
                        }, 8, ["href"])) : createCommentVNode("", true)
                      ], 64)) : createCommentVNode("", true)
                    ])) : createCommentVNode("", true),
                    createVNode("div", { class: "border-t border-gray-100" }),
                    createVNode("div", { class: "block px-4 pt-2 text-xs text-gray-400" }, " Manage Account "),
                    createVNode(_component_jet_dropdown_link, {
                      href: _ctx.route("profile.show")
                    }, {
                      default: withCtx(() => [
                        createTextVNode(" Account ")
                      ]),
                      _: 1
                    }, 8, ["href"]),
                    _ctx.$page.props.jetstream.hasApiFeatures ? (openBlock(), createBlock(_component_jet_dropdown_link, {
                      key: 2,
                      href: _ctx.route("api-tokens.index")
                    }, {
                      default: withCtx(() => [
                        createTextVNode(" API Tokens ")
                      ]),
                      _: 1
                    }, 8, ["href"])) : createCommentVNode("", true),
                    createVNode("div", { class: "border-t border-gray-100" }),
                    createVNode("form", {
                      onSubmit: withModifiers($options.logout, ["prevent"])
                    }, [
                      createVNode(_component_jet_dropdown_link, { as: "button" }, {
                        default: withCtx(() => [
                          createTextVNode(" Log Out ")
                        ]),
                        _: 1
                      })
                    ], 40, ["onSubmit"])
                  ]),
                  _: 1
                })
              ]),
              _: 1
            })
          ];
        }
      }),
      _: 1
    }, _parent));
  } else {
    _push(`<!---->`);
  }
  if (_ctx.$page.props.auth.user && !_ctx.$page.props.auth.user.first_name) {
    _push(ssrRenderComponent(_component_Menu, {
      as: "div",
      class: "ml-3 relative"
    }, {
      default: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(ssrRenderComponent(_component_MenuButton, { class: "inline-flex text-sm border-2 border-transparent rounded-full focus:outline-none focus:border-gray-300 transition" }, null, _parent2, _scopeId));
          _push2(`<div class="inline-flex"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_Link, {
            href: "/login",
            class: "px-3 py-2 whitespace-nowrap text-base font-medium text-gray-500 hover:text-gray-900"
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Login `);
              } else {
                return [
                  createTextVNode(" Login ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_Link, {
            href: "/register",
            type: "button",
            class: "inline-flex ml-3 items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md shadow-sm text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Register `);
              } else {
                return [
                  createTextVNode(" Register ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          return [
            createVNode(_component_MenuButton, { class: "inline-flex text-sm border-2 border-transparent rounded-full focus:outline-none focus:border-gray-300 transition" }),
            createVNode("div", { class: "inline-flex" }, [
              createVNode(_component_Link, {
                href: "/login",
                class: "px-3 py-2 whitespace-nowrap text-base font-medium text-gray-500 hover:text-gray-900"
              }, {
                default: withCtx(() => [
                  createTextVNode(" Login ")
                ]),
                _: 1
              }),
              createVNode(_component_Link, {
                href: "/register",
                type: "button",
                class: "inline-flex ml-3 items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md shadow-sm text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"
              }, {
                default: withCtx(() => [
                  createTextVNode(" Register ")
                ]),
                _: 1
              })
            ])
          ];
        }
      }),
      _: 1
    }, _parent));
  } else {
    _push(`<!---->`);
  }
  _push(`</div></div></div><main class="flex-1 relative overflow-y-hidden bg-white focus:outline-none">`);
  ssrRenderSlot(_ctx.$slots, "header", {}, null, _push, _parent);
  ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</main></div></div><!--]-->`);
}
const _sfc_setup$1Z = _sfc_main$1Z.setup;
_sfc_main$1Z.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Layouts/AppLayout.vue");
  return _sfc_setup$1Z ? _sfc_setup$1Z(props, ctx) : void 0;
};
const AppLayout = /* @__PURE__ */ _export_sfc(_sfc_main$1Z, [["ssrRender", _sfc_ssrRender$1Y]]);
const _sfc_main$1Y = {
  components: {
    ApiTokenManager,
    AppLayout
  },
  props: ["tokens", "availablePermissions", "defaultPermissions"]
};
function _sfc_ssrRender$1X(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_api_token_manager = resolveComponent("api-token-manager");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({ title: "API Tokens" }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white border-b"${_scopeId}><div class="px-12"${_scopeId}><div class="flex flex-nowrap justify-between py-6"${_scopeId}><h2 class="font-semibold text-xl text-gray-800 leading-tight"${_scopeId}> API Tokens </h2></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white border-b" }, [
            createVNode("div", { class: "px-12" }, [
              createVNode("div", { class: "flex flex-nowrap justify-between py-6" }, [
                createVNode("h2", { class: "font-semibold text-xl text-gray-800 leading-tight" }, " API Tokens ")
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}><div class="max-w-7xl mx-auto py-10 sm:px-6 lg:px-8"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_api_token_manager, {
          tokens: $props.tokens,
          "available-permissions": $props.availablePermissions,
          "default-permissions": $props.defaultPermissions
        }, null, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          createVNode("div", null, [
            createVNode("div", { class: "max-w-7xl mx-auto py-10 sm:px-6 lg:px-8" }, [
              createVNode(_component_api_token_manager, {
                tokens: $props.tokens,
                "available-permissions": $props.availablePermissions,
                "default-permissions": $props.defaultPermissions
              }, null, 8, ["tokens", "available-permissions", "default-permissions"])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1Y = _sfc_main$1Y.setup;
_sfc_main$1Y.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/API/Index.vue");
  return _sfc_setup$1Y ? _sfc_setup$1Y(props, ctx) : void 0;
};
const Index$4 = /* @__PURE__ */ _export_sfc(_sfc_main$1Y, [["ssrRender", _sfc_ssrRender$1X]]);
const __vite_glob_0_0 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Index$4
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1X = {
  components: {
    ChevronLeftIcon,
    ChevronRightIcon,
    Link
  },
  props: ["pages"],
  setup() {
  }
};
function _sfc_ssrRender$1W(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_ChevronRightIcon = resolveComponent("ChevronRightIcon");
  const _component_Link = resolveComponent("Link");
  _push(`<nav${ssrRenderAttrs(mergeProps({
    class: "hidden sm:flex",
    "aria-label": "Breadcrumb"
  }, _attrs))}><ol role="list" class="flex items-center space-x-4"><!--[-->`);
  ssrRenderList($props.pages, (page, index) => {
    _push(`<li><div class="flex items-center">`);
    if (index > 0) {
      _push(ssrRenderComponent(_component_ChevronRightIcon, {
        class: "flex-shrink-0 h-5 w-5 text-gray-400 mr-4",
        "aria-hidden": "true"
      }, null, _parent));
    } else {
      _push(`<!---->`);
    }
    _push(ssrRenderComponent(_component_Link, {
      href: _ctx.route(page.route, page.id),
      class: "text-sm font-medium text-gray-500 hover:text-gray-700",
      "aria-current": page.current ? "page" : void 0
    }, {
      default: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`${ssrInterpolate(page.name)}`);
        } else {
          return [
            createTextVNode(toDisplayString(page.name), 1)
          ];
        }
      }),
      _: 2
    }, _parent));
    _push(`</div></li>`);
  });
  _push(`<!--]--></ol></nav>`);
}
const _sfc_setup$1X = _sfc_main$1X.setup;
_sfc_main$1X.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/BreadCrumbs.vue");
  return _sfc_setup$1X ? _sfc_setup$1X(props, ctx) : void 0;
};
const BreadCrumbs = /* @__PURE__ */ _export_sfc(_sfc_main$1X, [["ssrRender", _sfc_ssrRender$1W]]);
const _sfc_main$1W = {
  props: {
    name: String
  }
};
function _sfc_ssrRender$1V(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  if ($props.name === "apple") {
    _push(`<svg${ssrRenderAttrs(mergeProps({
      xmlns: "http://www.w3.org/2000/svg",
      width: "100",
      height: "100",
      viewBox: "0 0 100 100"
    }, _attrs))}><g fill-rule="nonzero"><path d="M46.173 19.967C49.927-1.838 19.797-.233 14.538.21c-.429.035-.648.4-.483.8 2.004 4.825 14.168 31.66 32.118 18.957zm13.18 1.636c1.269-.891 1.35-1.614.047-2.453l-2.657-1.71c-.94-.607-1.685-.606-2.532.129-5.094 4.42-7.336 9.18-8.211 15.24 1.597.682 3.55.79 5.265.328 1.298-4.283 3.64-8.412 8.088-11.534z"></path><path d="M88.588 67.75c9.65-27.532-13.697-45.537-35.453-32.322-1.84 1.118-4.601 1.118-6.441 0-21.757-13.215-45.105 4.79-35.454 32.321 5.302 15.123 17.06 39.95 37.295 29.995.772-.38 1.986-.38 2.758 0 20.235 9.955 31.991-14.872 37.295-29.995z"></path></g></svg>`);
  } else if ($props.name === "book") {
    _push(`<svg${ssrRenderAttrs(mergeProps({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 20 20"
    }, _attrs))}><path d="M6 4H5a1 1 0 1 1 0-2h11V1a1 1 0 0 0-1-1H4a2 2 0 0 0-2 2v16c0 1.1.9 2 2 2h12a2 2 0 0 0 2-2V5a1 1 0 0 0-1-1h-7v8l-2-2-2 2V4z"></path></svg>`);
  } else if ($props.name === "cheveron-down") {
    _push(`<svg${ssrRenderAttrs(mergeProps({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 20 20"
    }, _attrs))}><path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z"></path></svg>`);
  } else if ($props.name === "cheveron-right") {
    _push(`<svg${ssrRenderAttrs(mergeProps({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 20 20"
    }, _attrs))}><polygon points="12.95 10.707 13.657 10 8 4.343 6.586 5.757 10.828 10 6.586 14.243 8 15.657 12.95 10.707"></polygon></svg>`);
  } else if ($props.name === "dashboard") {
    _push(`<svg${ssrRenderAttrs(mergeProps({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 20 20"
    }, _attrs))}><path d="M10 20a10 10 0 1 1 0-20 10 10 0 0 1 0 20zm-5.6-4.29a9.95 9.95 0 0 1 11.2 0 8 8 0 1 0-11.2 0zm6.12-7.64l3.02-3.02 1.41 1.41-3.02 3.02a2 2 0 1 1-1.41-1.41z"></path></svg>`);
  } else if ($props.name === "location") {
    _push(`<svg${ssrRenderAttrs(mergeProps({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 20 20"
    }, _attrs))}><path d="M10 20S3 10.87 3 7a7 7 0 1 1 14 0c0 3.87-7 13-7 13zm0-11a2 2 0 1 0 0-4 2 2 0 0 0 0 4z"></path></svg>`);
  } else if ($props.name === "office") {
    _push(`<svg${ssrRenderAttrs(mergeProps({
      xmlns: "http://www.w3.org/2000/svg",
      width: "100",
      height: "100",
      viewBox: "0 0 100 100"
    }, _attrs))}><path fill-rule="evenodd" d="M7 0h86v100H57.108V88.418H42.892V100H7V0zm9 64h11v15H16V64zm57 0h11v15H73V64zm-19 0h11v15H54V64zm-19 0h11v15H35V64zM16 37h11v15H16V37zm57 0h11v15H73V37zm-19 0h11v15H54V37zm-19 0h11v15H35V37zM16 11h11v15H16V11zm57 0h11v15H73V11zm-19 0h11v15H54V11zm-19 0h11v15H35V11z"></path></svg>`);
  } else if ($props.name === "printer") {
    _push(`<svg${ssrRenderAttrs(mergeProps({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 20 20"
    }, _attrs))}><path d="M4 16H0V6h20v10h-4v4H4v-4zm2-4v6h8v-6H6zM4 0h12v5H4V0zM2 8v2h2V8H2zm4 0v2h2V8H6z"></path></svg>`);
  } else if ($props.name === "shopping-cart") {
    _push(`<svg${ssrRenderAttrs(mergeProps({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 20 20"
    }, _attrs))}><path d="M4 2h16l-3 9H4a1 1 0 1 0 0 2h13v2H4a3 3 0 0 1 0-6h.33L3 5 2 2H0V0h3a1 1 0 0 1 1 1v1zm1 18a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm10 0a2 2 0 1 1 0-4 2 2 0 0 1 0 4z"></path></svg>`);
  } else if ($props.name === "store-front") {
    _push(`<svg${ssrRenderAttrs(mergeProps({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 20 20"
    }, _attrs))}><path d="M18 9.87V20H2V9.87a4.25 4.25 0 0 0 3-.38V14h10V9.5a4.26 4.26 0 0 0 3 .37zM3 0h4l-.67 6.03A3.43 3.43 0 0 1 3 9C1.34 9 .42 7.73.95 6.15L3 0zm5 0h4l.7 6.3c.17 1.5-.91 2.7-2.42 2.7h-.56A2.38 2.38 0 0 1 7.3 6.3L8 0zm5 0h4l2.05 6.15C19.58 7.73 18.65 9 17 9a3.42 3.42 0 0 1-3.33-2.97L13 0z"></path></svg>`);
  } else if ($props.name === "trash") {
    _push(`<svg${ssrRenderAttrs(mergeProps({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 20 20"
    }, _attrs))}><path d="M6 2l2-2h4l2 2h4v2H2V2h4zM3 6h14l-1 14H4L3 6zm5 2v10h1V8H8zm3 0v10h1V8h-1z"></path></svg>`);
  } else if ($props.name === "users") {
    _push(`<svg${ssrRenderAttrs(mergeProps({
      xmlns: "http://www.w3.org/2000/svg",
      class: "h-6 w-6",
      fill: "none",
      viewBox: "0 0 24 24",
      stroke: "currentColor"
    }, _attrs))}><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z"></path></svg>`);
  } else if ($props.name === "announcements") {
    _push(`<svg${ssrRenderAttrs(mergeProps({
      xmlns: "http://www.w3.org/2000/svg",
      class: "h-6 w-6",
      fill: "none",
      viewBox: "0 0 24 24",
      stroke: "currentColor"
    }, _attrs))}><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5.882V19.24a1.76 1.76 0 01-3.417.592l-2.147-6.15M18 13a3 3 0 100-6M5.436 13.683A4.001 4.001 0 017 6h1.832c4.1 0 7.625-1.234 9.168-3v14c-1.543-1.766-5.067-3-9.168-3H7a3.988 3.988 0 01-1.564-.317z"></path></svg>`);
  } else if ($props.name === "edit") {
    _push(`<svg${ssrRenderAttrs(mergeProps({
      xmlns: "http://www.w3.org/2000/svg",
      class: "w-6 h-6 text-gray-100",
      fill: "none",
      viewBox: "0 0 24 24",
      stroke: "currentColor"
    }, _attrs))}><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path></svg>`);
  } else if ($props.name === "delete") {
    _push(`<svg${ssrRenderAttrs(mergeProps({
      xmlns: "http://www.w3.org/2000/svg",
      class: "w-6 h-6 text-gray-100",
      fill: "none",
      viewBox: "0 0 24 24",
      stroke: "currentColor"
    }, _attrs))}><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path></svg>`);
  } else if ($props.name === "spectra") {
    _push(`<svg${ssrRenderAttrs(mergeProps({
      xmlns: "http://www.w3.org/2000/svg",
      class: "w-6 h-6 text-gray-100",
      fill: "none",
      viewBox: "0 0 24 24",
      stroke: "currentColor"
    }, _attrs))}><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path></svg>`);
  } else {
    _push(`<!---->`);
  }
}
const _sfc_setup$1W = _sfc_main$1W.setup;
_sfc_main$1W.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/Icon.vue");
  return _sfc_setup$1W ? _sfc_setup$1W(props, ctx) : void 0;
};
const Icon = /* @__PURE__ */ _export_sfc(_sfc_main$1W, [["ssrRender", _sfc_ssrRender$1V]]);
const _sfc_main$1V = {
  components: {
    Switch
  },
  props: {
    enabled: Boolean
  },
  emits: ["update:enabled"],
  computed: {
    proxyEnabled: {
      get() {
        return this.enabled;
      },
      set(val) {
        this.$emit("update:enabled", val);
      }
    }
  }
};
function _sfc_ssrRender$1U(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Switch = resolveComponent("Switch");
  _push(ssrRenderComponent(_component_Switch, mergeProps({
    modelValue: $options.proxyEnabled,
    "onUpdate:modelValue": ($event) => $options.proxyEnabled = $event,
    class: "flex-shrink-0 group relative rounded-full inline-flex items-center justify-center h-5 w-10 cursor-pointer focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-600"
  }, _attrs), {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<span class="sr-only"${_scopeId}>Use setting</span><span aria-hidden="true" class="pointer-events-none absolute bg-white w-full h-full rounded-md"${_scopeId}></span><span aria-hidden="true" class="${ssrRenderClass([
          $props.enabled ? "bg-green-200" : "bg-red-100",
          "pointer-events-none absolute h-4 w-9 mx-auto rounded-full transition-colors ease-in-out duration-200"
        ])}"${_scopeId}></span><span aria-hidden="true" class="${ssrRenderClass([
          $props.enabled ? "translate-x-5" : "translate-x-0",
          "pointer-events-none absolute left-0 inline-block h-5 w-5 border border-gray-200 rounded-full bg-gray-200 shadow transform ring-0 transition-transform ease-in-out duration-200"
        ])}"${_scopeId}></span>`);
      } else {
        return [
          createVNode("span", { class: "sr-only" }, "Use setting"),
          createVNode("span", {
            "aria-hidden": "true",
            class: "pointer-events-none absolute bg-white w-full h-full rounded-md"
          }),
          createVNode("span", {
            "aria-hidden": "true",
            class: [
              $props.enabled ? "bg-green-200" : "bg-red-100",
              "pointer-events-none absolute h-4 w-9 mx-auto rounded-full transition-colors ease-in-out duration-200"
            ]
          }, null, 2),
          createVNode("span", {
            "aria-hidden": "true",
            class: [
              $props.enabled ? "translate-x-5" : "translate-x-0",
              "pointer-events-none absolute left-0 inline-block h-5 w-5 border border-gray-200 rounded-full bg-gray-200 shadow transform ring-0 transition-transform ease-in-out duration-200"
            ]
          }, null, 2)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1V = _sfc_main$1V.setup;
_sfc_main$1V.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/ToggleButton.vue");
  return _sfc_setup$1V ? _sfc_setup$1V(props, ctx) : void 0;
};
const ToggleButton = /* @__PURE__ */ _export_sfc(_sfc_main$1V, [["ssrRender", _sfc_ssrRender$1U]]);
const main = "";
const _sfc_main$1U = {
  components: {
    Switch,
    SwitchDescription,
    SwitchGroup,
    SwitchLabel,
    AtSymbolIcon,
    CodeBracketIcon,
    LinkIcon,
    JetDialogModal,
    JetSecondaryButton,
    JetButton,
    Link,
    CheckCircleIcon: CheckCircleIcon$1,
    ChevronRightIcon,
    Datepicker,
    ToggleButton,
    JetInputError
  },
  props: [],
  data() {
    return {
      createAnnouncementForm: this.$inertia.form({
        _method: "POST",
        title: "",
        message: "",
        enabled: true,
        error_message: null,
        creator_id: null,
        start_time: /* @__PURE__ */ new Date(),
        end_time: this.setEndTime()
      }),
      createAnnouncementDialog: false
    };
  },
  methods: {
    setEndTime() {
      var start_time = /* @__PURE__ */ new Date();
      var end_time = /* @__PURE__ */ new Date();
      end_time.setDate(start_time.getDate() + 7);
      return end_time;
    },
    createAnnouncement() {
      this.createAnnouncementForm.creator_id = this.$page.props.auth.user.id;
      this.createAnnouncementForm.post(
        route("console.announcements.create"),
        {
          preserveScroll: true,
          onSuccess: () => {
            this.createAnnouncementDialog = false;
            this.createAnnouncementForm.reset();
          },
          onError: (err) => console.error(err)
        }
      );
    },
    toggleCreateAnnouncementDialog() {
      this.createAnnouncementDialog = !this.createAnnouncementDialog;
    },
    onCancel() {
      this.createAnnouncementDialog = false;
      this.createAnnouncementForm.clearErrors();
      this.$page.props.errors = new Object();
    }
  }
};
function _sfc_ssrRender$1T(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_dialog_modal = resolveComponent("jet-dialog-modal");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_toggle_button = resolveComponent("toggle-button");
  const _component_Datepicker = resolveComponent("Datepicker");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  const _component_jet_button = resolveComponent("jet-button");
  _push(ssrRenderComponent(_component_jet_dialog_modal, mergeProps({
    show: $data.createAnnouncementDialog,
    onClose: ($event) => $data.createAnnouncementDialog = false
  }, _attrs), {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` New Announcement `);
      } else {
        return [
          createTextVNode(" New Announcement ")
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="relative z-0 mt-1 rounded-lg cursor-pointer"${_scopeId}><div class="mt-6 grid grid-cols-1 gap-y-4 gap-x-4 sm:grid-cols-6"${_scopeId}><div class="sm:col-span-6"${_scopeId}><label for="name" class="block text-sm font-medium text-gray-700 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId}> Title </label><div class="mt-1 flex rounded-md shadow-sm"${_scopeId}><input id="name"${ssrRenderAttr("value", $data.createAnnouncementForm.title)} type="text" name="name" autocomplete="off" class="flex-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full min-w-0 rounded sm:text-sm border-gray-300"${_scopeId}></div>`);
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.createAnnouncementForm.errors.title,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="sm:col-span-6"${_scopeId}><label for="name" class="block text-sm font-medium text-gray-700 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId}> Message </label><div${_scopeId}><textarea id="description" name="description" placeholder="Type your message.." rows="3" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"${_scopeId}>${ssrInterpolate($data.createAnnouncementForm.message)}</textarea></div>`);
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.createAnnouncementForm.errors.message,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div><div class="py-2"${_scopeId}><label class="block text-sm font-medium text-gray-700, block text-sm font-medium text-gray-700"${_scopeId}> Status </label>`);
        _push2(ssrRenderComponent(_component_toggle_button, {
          enabled: $data.createAnnouncementForm.enabled,
          "onUpdate:enabled": ($event) => $data.createAnnouncementForm.enabled = $event
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="sm grid grid-cols-2 gap-4 pt-1"${_scopeId}><div${_scopeId}><label class="block text-sm font-medium text-gray-700, block text-sm font-medium text-gray-700 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId}> Start Time </label>`);
        _push2(ssrRenderComponent(_component_Datepicker, {
          modelValue: $data.createAnnouncementForm.start_time,
          "onUpdate:modelValue": ($event) => $data.createAnnouncementForm.start_time = $event
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.createAnnouncementForm.errors.start_time,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div${_scopeId}><label class="block text-sm font-medium text-gray-700, block text-sm font-medium text-gray-700 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId}> End Time </label>`);
        _push2(ssrRenderComponent(_component_Datepicker, {
          modelValue: $data.createAnnouncementForm.end_time,
          "onUpdate:modelValue": ($event) => $data.createAnnouncementForm.end_time = $event
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.createAnnouncementForm.errors.end_time,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "relative z-0 mt-1 rounded-lg cursor-pointer" }, [
            createVNode("div", { class: "mt-6 grid grid-cols-1 gap-y-4 gap-x-4 sm:grid-cols-6" }, [
              createVNode("div", { class: "sm:col-span-6" }, [
                createVNode("label", {
                  for: "name",
                  class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500"
                }, " Title "),
                createVNode("div", { class: "mt-1 flex rounded-md shadow-sm" }, [
                  withDirectives(createVNode("input", {
                    id: "name",
                    "onUpdate:modelValue": ($event) => $data.createAnnouncementForm.title = $event,
                    type: "text",
                    name: "name",
                    autocomplete: "off",
                    class: "flex-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full min-w-0 rounded sm:text-sm border-gray-300"
                  }, null, 8, ["onUpdate:modelValue"]), [
                    [vModelText, $data.createAnnouncementForm.title]
                  ])
                ]),
                createVNode(_component_jet_input_error, {
                  message: $data.createAnnouncementForm.errors.title,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              createVNode("div", { class: "sm:col-span-6" }, [
                createVNode("label", {
                  for: "name",
                  class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500"
                }, " Message "),
                createVNode("div", null, [
                  withDirectives(createVNode("textarea", {
                    id: "description",
                    "onUpdate:modelValue": ($event) => $data.createAnnouncementForm.message = $event,
                    name: "description",
                    placeholder: "Type your message..",
                    rows: "3",
                    class: "shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"
                  }, null, 8, ["onUpdate:modelValue"]), [
                    [vModelText, $data.createAnnouncementForm.message]
                  ])
                ]),
                createVNode(_component_jet_input_error, {
                  message: $data.createAnnouncementForm.errors.message,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ]),
            createVNode("div", { class: "py-2" }, [
              createVNode("label", { class: "block text-sm font-medium text-gray-700, block text-sm font-medium text-gray-700" }, " Status "),
              createVNode(_component_toggle_button, {
                enabled: $data.createAnnouncementForm.enabled,
                "onUpdate:enabled": ($event) => $data.createAnnouncementForm.enabled = $event
              }, null, 8, ["enabled", "onUpdate:enabled"])
            ]),
            createVNode("div", { class: "sm grid grid-cols-2 gap-4 pt-1" }, [
              createVNode("div", null, [
                createVNode("label", { class: "block text-sm font-medium text-gray-700, block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500" }, " Start Time "),
                createVNode(_component_Datepicker, {
                  modelValue: $data.createAnnouncementForm.start_time,
                  "onUpdate:modelValue": ($event) => $data.createAnnouncementForm.start_time = $event
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                createVNode(_component_jet_input_error, {
                  message: $data.createAnnouncementForm.errors.start_time,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              createVNode("div", null, [
                createVNode("label", { class: "block text-sm font-medium text-gray-700, block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500" }, " End Time "),
                createVNode(_component_Datepicker, {
                  modelValue: $data.createAnnouncementForm.end_time,
                  "onUpdate:modelValue": ($event) => $data.createAnnouncementForm.end_time = $event
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                createVNode(_component_jet_input_error, {
                  message: $data.createAnnouncementForm.errors.end_time,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ])
          ])
        ];
      }
    }),
    footer: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_secondary_button, { onClick: $options.onCancel }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_button, {
          class: ["ml-2", { "opacity-25": $data.createAnnouncementForm.processing }],
          disabled: $data.createAnnouncementForm.processing,
          onClick: $options.createAnnouncement
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Create `);
            } else {
              return [
                createTextVNode(" Create ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_secondary_button, { onClick: $options.onCancel }, {
            default: withCtx(() => [
              createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          createVNode(_component_jet_button, {
            class: ["ml-2", { "opacity-25": $data.createAnnouncementForm.processing }],
            disabled: $data.createAnnouncementForm.processing,
            onClick: $options.createAnnouncement
          }, {
            default: withCtx(() => [
              createTextVNode(" Create ")
            ]),
            _: 1
          }, 8, ["class", "disabled", "onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1U = _sfc_main$1U.setup;
_sfc_main$1U.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Announcement/Partials/Create.vue");
  return _sfc_setup$1U ? _sfc_setup$1U(props, ctx) : void 0;
};
const AnnouncementCreate = /* @__PURE__ */ _export_sfc(_sfc_main$1U, [["ssrRender", _sfc_ssrRender$1T]]);
const __vite_glob_0_3 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: AnnouncementCreate
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1T = {
  components: {
    Switch,
    SwitchDescription,
    SwitchGroup,
    SwitchLabel,
    AtSymbolIcon,
    CodeBracketIcon,
    LinkIcon,
    JetDialogModal,
    JetSecondaryButton,
    JetButton,
    Link,
    CheckCircleIcon: CheckCircleIcon$1,
    ChevronRightIcon,
    JetInputError,
    Datepicker,
    ToggleButton
  },
  props: [],
  data() {
    return {
      selectedAnnouncement: null,
      editAnnouncementForm: this.$inertia.form({
        _method: "POST",
        id: "",
        title: "",
        message: "",
        enabled: null,
        error_message: null,
        creator_id: null,
        start_time: null,
        end_time: null
      }),
      editAnnouncementDialog: false
    };
  },
  methods: {
    editAnnouncement() {
      this.editAnnouncementForm.put(
        route(
          "console.announcements.edit",
          this.editAnnouncementForm.id
        ),
        {
          preserveScroll: true,
          onSuccess: () => {
            this.editAnnouncementDialog = false;
            this.editAnnouncementForm.reset();
          },
          onError: (err) => console.error(err)
        }
      );
    },
    toggleEditAnnouncementDialog(announcement) {
      this.selectedAnnouncement = announcement;
      this.editAnnouncementForm.id = announcement.id;
      this.editAnnouncementForm.title = announcement.title;
      this.editAnnouncementForm.message = announcement.message;
      if (announcement.status == "active" || announcement.status == "Active")
        this.editAnnouncementForm.enabled = true;
      else
        this.editAnnouncementForm.enabled = false;
      this.editAnnouncementForm.start_time = announcement.start_time;
      this.editAnnouncementForm.end_time = announcement.end_time;
      this.editAnnouncementDialog = !this.editAnnouncementDialog;
    },
    onCancel() {
      this.editAnnouncementDialog = false;
      this.editAnnouncementForm.clearErrors();
      this.$page.props.errors = new Object();
    }
  }
};
function _sfc_ssrRender$1S(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_dialog_modal = resolveComponent("jet-dialog-modal");
  const _component_jet_validation_errors = resolveComponent("jet-validation-errors");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_toggle_button = resolveComponent("toggle-button");
  const _component_Datepicker = resolveComponent("Datepicker");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  const _component_jet_button = resolveComponent("jet-button");
  _push(ssrRenderComponent(_component_jet_dialog_modal, mergeProps({
    show: $data.editAnnouncementDialog,
    onClose: ($event) => $data.editAnnouncementDialog = false
  }, _attrs), {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Edit Announcement `);
      } else {
        return [
          createTextVNode(" Edit Announcement ")
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_validation_errors, { class: "mb-4" }, null, _parent2, _scopeId));
        _push2(`<div class="relative z-0 mt-1 rounded-lg cursor-pointer"${_scopeId}><div class="mt-6 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6"${_scopeId}><div class="sm:col-span-6"${_scopeId}><label for="name" class="block text-sm font-medium text-gray-700 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId}> Title </label><div class="mt-1 flex rounded-md shadow-sm"${_scopeId}><input id="name"${ssrRenderAttr("value", $data.editAnnouncementForm.title)} type="text" name="name" autocomplete="off" class="flex-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full min-w-0 rounded sm:text-sm border-gray-300"${_scopeId}></div>`);
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.editAnnouncementForm.errors.title,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="sm:col-span-6"${_scopeId}><label for="name" class="block text-sm font-medium text-gray-700 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId}> Message </label><div mt-1 flex rounded-md shadow-sm${_scopeId}><textarea id="description" name="description" placeholder="Message to the users.." rows="3" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"${_scopeId}>${ssrInterpolate($data.editAnnouncementForm.message)}</textarea></div>`);
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.editAnnouncementForm.errors.message,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`<div class="py-2"${_scopeId}><label class="block text-sm font-medium text-gray-700, block text-sm font-medium text-gray-700"${_scopeId}> Status </label>`);
        _push2(ssrRenderComponent(_component_toggle_button, {
          enabled: $data.editAnnouncementForm.enabled,
          "onUpdate:enabled": ($event) => $data.editAnnouncementForm.enabled = $event
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div><div class="sm grid grid-cols-2 gap-4 pt-4"${_scopeId}><div${_scopeId}><label class="block text-sm font-medium text-gray-700"${_scopeId}> Start Time </label>`);
        _push2(ssrRenderComponent(_component_Datepicker, {
          modelValue: $data.editAnnouncementForm.start_time,
          "onUpdate:modelValue": ($event) => $data.editAnnouncementForm.start_time = $event
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.editAnnouncementForm.errors.start_time,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div${_scopeId}><label class="block text-sm font-medium text-gray-700"${_scopeId}> End Time </label>`);
        _push2(ssrRenderComponent(_component_Datepicker, {
          modelValue: $data.editAnnouncementForm.end_time,
          "onUpdate:modelValue": ($event) => $data.editAnnouncementForm.end_time = $event
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.editAnnouncementForm.errors.end_time,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div>`);
      } else {
        return [
          createVNode(_component_jet_validation_errors, { class: "mb-4" }),
          createVNode("div", { class: "relative z-0 mt-1 rounded-lg cursor-pointer" }, [
            createVNode("div", { class: "mt-6 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6" }, [
              createVNode("div", { class: "sm:col-span-6" }, [
                createVNode("label", {
                  for: "name",
                  class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500"
                }, " Title "),
                createVNode("div", { class: "mt-1 flex rounded-md shadow-sm" }, [
                  withDirectives(createVNode("input", {
                    id: "name",
                    "onUpdate:modelValue": ($event) => $data.editAnnouncementForm.title = $event,
                    type: "text",
                    name: "name",
                    autocomplete: "off",
                    class: "flex-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full min-w-0 rounded sm:text-sm border-gray-300"
                  }, null, 8, ["onUpdate:modelValue"]), [
                    [vModelText, $data.editAnnouncementForm.title]
                  ])
                ]),
                createVNode(_component_jet_input_error, {
                  message: $data.editAnnouncementForm.errors.title,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              createVNode("div", { class: "sm:col-span-6" }, [
                createVNode("label", {
                  for: "name",
                  class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500"
                }, " Message "),
                createVNode("div", {
                  "mt-1": "",
                  flex: "",
                  "rounded-md": "",
                  "shadow-sm": ""
                }, [
                  withDirectives(createVNode("textarea", {
                    id: "description",
                    "onUpdate:modelValue": ($event) => $data.editAnnouncementForm.message = $event,
                    name: "description",
                    placeholder: "Message to the users..",
                    rows: "3",
                    class: "shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"
                  }, null, 8, ["onUpdate:modelValue"]), [
                    [vModelText, $data.editAnnouncementForm.message]
                  ])
                ]),
                createVNode(_component_jet_input_error, {
                  message: $data.editAnnouncementForm.errors.message,
                  class: "mt-2"
                }, null, 8, ["message"]),
                createVNode("div", { class: "py-2" }, [
                  createVNode("label", { class: "block text-sm font-medium text-gray-700, block text-sm font-medium text-gray-700" }, " Status "),
                  createVNode(_component_toggle_button, {
                    enabled: $data.editAnnouncementForm.enabled,
                    "onUpdate:enabled": ($event) => $data.editAnnouncementForm.enabled = $event
                  }, null, 8, ["enabled", "onUpdate:enabled"])
                ])
              ])
            ]),
            createVNode("div", { class: "sm grid grid-cols-2 gap-4 pt-4" }, [
              createVNode("div", null, [
                createVNode("label", { class: "block text-sm font-medium text-gray-700" }, " Start Time "),
                createVNode(_component_Datepicker, {
                  modelValue: $data.editAnnouncementForm.start_time,
                  "onUpdate:modelValue": ($event) => $data.editAnnouncementForm.start_time = $event
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                createVNode(_component_jet_input_error, {
                  message: $data.editAnnouncementForm.errors.start_time,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              createVNode("div", null, [
                createVNode("label", { class: "block text-sm font-medium text-gray-700" }, " End Time "),
                createVNode(_component_Datepicker, {
                  modelValue: $data.editAnnouncementForm.end_time,
                  "onUpdate:modelValue": ($event) => $data.editAnnouncementForm.end_time = $event
                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                createVNode(_component_jet_input_error, {
                  message: $data.editAnnouncementForm.errors.end_time,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ])
          ])
        ];
      }
    }),
    footer: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_secondary_button, { onClick: $options.onCancel }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_button, {
          class: ["ml-2", { "opacity-25": $data.editAnnouncementForm.processing }],
          disabled: $data.editAnnouncementForm.processing,
          onClick: $options.editAnnouncement
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Update `);
            } else {
              return [
                createTextVNode(" Update ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_secondary_button, { onClick: $options.onCancel }, {
            default: withCtx(() => [
              createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          createVNode(_component_jet_button, {
            class: ["ml-2", { "opacity-25": $data.editAnnouncementForm.processing }],
            disabled: $data.editAnnouncementForm.processing,
            onClick: $options.editAnnouncement
          }, {
            default: withCtx(() => [
              createTextVNode(" Update ")
            ]),
            _: 1
          }, 8, ["class", "disabled", "onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1T = _sfc_main$1T.setup;
_sfc_main$1T.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Announcement/Partials/Edit.vue");
  return _sfc_setup$1T ? _sfc_setup$1T(props, ctx) : void 0;
};
const AnnouncementEdit = /* @__PURE__ */ _export_sfc(_sfc_main$1T, [["ssrRender", _sfc_ssrRender$1S]]);
const __vite_glob_0_4 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: AnnouncementEdit
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1S = {
  components: {
    AppLayout,
    BreadCrumbs,
    Icon,
    AnnouncementCreate,
    AnnouncementEdit,
    JetConfirmationModal,
    JetDangerButton,
    JetSecondaryButton,
    JetDialogModal,
    ToggleButton
  },
  props: {
    announcements: Array,
    filters: Object
  },
  setup() {
    const announcementCreateElement = ref(null);
    const announcementEditElement = ref(null);
    const search = ref("");
    watch(search, (value) => {
      router$1.get(
        "announcements",
        { search: value },
        {
          preserveState: true,
          replace: true
        }
      );
    });
    return {
      announcementCreateElement,
      announcementEditElement,
      search
    };
  },
  data() {
    return {
      form: this.$inertia.form({}),
      confirmingAnnouncementDeletion: false,
      announcementId: null,
      pages: [
        { name: "Console", route: "console", current: false },
        {
          name: "Announcements",
          route: "console.announcements",
          current: true
        }
      ]
    };
  },
  methods: {
    reset() {
      this.search = null;
    },
    openAnnouncementCreateDialog() {
      this.announcementCreateElement.toggleCreateAnnouncementDialog();
    },
    openAnnouncementEditDialog(announcement) {
      this.announcementEditElement.toggleEditAnnouncementDialog(
        announcement
      );
    },
    deleteAnnouncement(id2) {
      this.form.delete(route("console.announcements.destroy", id2), {
        onSuccess: () => {
          this.closeModal();
          this.announcementId = null;
        },
        onError: (err) => console.error(err)
      });
    },
    confirmAnnouncementDeletion(id2) {
      this.announcementId = id2;
      this.confirmingAnnouncementDeletion = true;
    },
    closeModal() {
      this.confirmingAnnouncementDeletion = false;
      this.announcementId = null;
    }
  }
};
function _sfc_ssrRender$1R(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_bread_crumbs = resolveComponent("bread-crumbs");
  const _component_Button = resolveComponent("Button");
  const _component_icon = resolveComponent("icon");
  const _component_jet_dialog_modal = resolveComponent("jet-dialog-modal");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  const _component_jet_danger_button = resolveComponent("jet-danger-button");
  const _component_announcement_create = resolveComponent("announcement-create");
  const _component_announcement_edit = resolveComponent("announcement-edit");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({ title: "Announcements and Notifications" }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white border-b"${_scopeId}><div class="px-12"${_scopeId}><div class="flex flex-nowrap justify-between py-6"${_scopeId}><div${_scopeId}>`);
        _push2(ssrRenderComponent(_component_bread_crumbs, { pages: $data.pages }, null, _parent2, _scopeId));
        _push2(`<div class="mt-2 md:flex md:items-center md:justify-between"${_scopeId}><div class="flex-1 min-w-0"${_scopeId}><div class="flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest mt-3"${_scopeId}> Announcements </div></div></div></div></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white border-b" }, [
            createVNode("div", { class: "px-12" }, [
              createVNode("div", { class: "flex flex-nowrap justify-between py-6" }, [
                createVNode("div", null, [
                  createVNode(_component_bread_crumbs, { pages: $data.pages }, null, 8, ["pages"]),
                  createVNode("div", { class: "mt-2 md:flex md:items-center md:justify-between" }, [
                    createVNode("div", { class: "flex-1 min-w-0" }, [
                      createVNode("div", { class: "flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest mt-3" }, " Announcements ")
                    ])
                  ])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="py-12 px-10"${_scopeId}>`);
        if ($props.announcements.length > 0 || $setup.search != "") {
          _push2(`<span${_scopeId}><div class="mb-6 flex justify-between items-center"${_scopeId}><div class="flex items-center"${_scopeId}><div class="flex w-full bg-white shadow rounded"${_scopeId}><input${ssrRenderAttr("value", $setup.search)} class="relative w-full border-0 px-6 py-3 rounded-r focus:shadow-outline" autocomplete="off" type="text" name="search" placeholder="Search…"${_scopeId}></div><button class="ml-3 text-sm text-gray-500 hover:text-gray-700 focus:text-indigo-500" type="button"${_scopeId}> Reset </button></div>`);
          _push2(ssrRenderComponent(_component_Button, {
            class: "inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring focus:ring-gray-300 disabled:opacity-25 transition",
            type: "button",
            onClick: ($event) => $options.openAnnouncementCreateDialog()
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<span${_scopeId2}>Create</span>  <span class="hidden md:inline"${_scopeId2}>Announcement</span>`);
              } else {
                return [
                  createVNode("span", null, "Create"),
                  createTextVNode("  "),
                  createVNode("span", { class: "hidden md:inline" }, "Announcement")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div><div${_scopeId}><div class="bg-white rounded-md shadow overflow-x-auto"${_scopeId}><table class="divide-y divide-gray-200 w-full table-fixed"${_scopeId}><thead class="bg-gray-50"${_scopeId}><tr${_scopeId}><th colspan="3" scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"${_scopeId}> Title </th><th scope="col" class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider"${_scopeId}> Status </th><th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"${_scopeId}> Actions </th></tr></thead><tbody class="bg-white divide-y divide-gray-200"${_scopeId}><!--[-->`);
          ssrRenderList($props.announcements, (announcement) => {
            _push2(`<tr${_scopeId}><td colspan="3" class="py-4"${_scopeId}><div class="ml-4"${_scopeId}><h3 class="text-lg leading-6 font-medium text-gray-900"${_scopeId}>${ssrInterpolate(announcement.title)}</h3><p class="mt-1 mb-3 text-sm text-blue-gray-900 break-normal"${_scopeId}>${ssrInterpolate(announcement.message)}</p><label class="block text-sm mt-2 font-medium text-gray-500"${_scopeId}> Created by </label><p class="mt-1 text-md text-blue-gray-900"${_scopeId}>${ssrInterpolate(announcement.created_by)}</p><label class="block text-sm mt-2 font-medium text-gray-500"${_scopeId}> From </label><p class="mt-1 text-sm text-blue-gray-900"${_scopeId}>${ssrInterpolate(_ctx.formatDateTime(
              announcement.start_time
            ))}</p><label class="block text-sm mt-2 font-medium text-gray-500"${_scopeId}> To </label><p class="mt-1 text-sm text-blue-gray-900"${_scopeId}>${ssrInterpolate(_ctx.formatDateTime(
              announcement.end_time
            ))}</p></div></td><td class="px-5 py-4 text-center whitespace-nowrap"${_scopeId}>`);
            if (announcement.status == "active" || announcement.status == "Active") {
              _push2(`<span class="px-4 py-2 inline-flex text-md leading-5 font-semibold rounded-full bg-green-100 text-green-800"${_scopeId}> Active </span>`);
            } else {
              _push2(`<span class="px-4 py-2 inline-flex text-md leading-5 font-semibold rounded-full bg-red-100 text-green-800"${_scopeId}> Inactive </span>`);
            }
            _push2(`</td><td class="px-6 py-4 text-sm leading-5 text-gray-500 whitespace-no-wrap border-b border-gray-200"${_scopeId}><button type="button" class="inline-flex items-center p-1 border border-transparent rounded-md mr-2 shadow-sm text-white bg-gray-800 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-300"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_icon, { name: "edit" }, null, _parent2, _scopeId));
            _push2(`</button><button type="button" class="inline-flex items-center p-1 border border-transparent rounded-md shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_icon, { name: "delete" }, null, _parent2, _scopeId));
            _push2(`</button></td></tr>`);
          });
          _push2(`<!--]--></tbody></table>`);
          _push2(ssrRenderComponent(_component_jet_dialog_modal, {
            show: $data.confirmingAnnouncementDeletion,
            onClose: $options.closeModal
          }, {
            title: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Delete Announcement `);
              } else {
                return [
                  createTextVNode(" Delete Announcement ")
                ];
              }
            }),
            content: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Are you sure you want to delete this announcement? <div class="mt-4"${_scopeId2}></div>`);
              } else {
                return [
                  createTextVNode(" Are you sure you want to delete this announcement? "),
                  createVNode("div", { class: "mt-4" })
                ];
              }
            }),
            footer: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(ssrRenderComponent(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(` Cancel `);
                    } else {
                      return [
                        createTextVNode(" Cancel ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                _push3(ssrRenderComponent(_component_jet_danger_button, {
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  disabled: $data.form.processing,
                  onClick: ($event) => $options.deleteAnnouncement($data.announcementId)
                }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(` Delete Announcement `);
                    } else {
                      return [
                        createTextVNode(" Delete Announcement ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
              } else {
                return [
                  createVNode(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                    default: withCtx(() => [
                      createTextVNode(" Cancel ")
                    ]),
                    _: 1
                  }, 8, ["onClick"]),
                  createVNode(_component_jet_danger_button, {
                    class: ["ml-2", { "opacity-25": $data.form.processing }],
                    disabled: $data.form.processing,
                    onClick: ($event) => $options.deleteAnnouncement($data.announcementId)
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Delete Announcement ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled", "onClick"])
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div></div></span>`);
        } else {
          _push2(`<!---->`);
        }
        if ($props.announcements.length == 0 && $setup.search == "") {
          _push2(`<span${_scopeId}><button type="button" class="relative block w-full border-2 border-gray-300 border-dashed rounded-lg p-12 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"${_scopeId}><svg class="mx-auto h-12 w-12 text-gray-400" xmlns="http://www.w3.org/2000/svg" stroke="currentColor" fill="none" viewBox="0 0 48 48" aria-hidden="true"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 14v20c0 4.418 7.163 8 16 8 1.381 0 2.721-.087 4-.252M8 14c0 4.418 7.163 8 16 8s16-3.582 16-8M8 14c0-4.418 7.163-8 16-8s16 3.582 16 8m0 0v14m0-4c0 4.418-7.163 8-16 8S8 28.418 8 24m32 10v6m0 0v6m0-6h6m-6 0h-6"${_scopeId}></path></svg><span class="mt-2 block text-sm font-medium text-gray-900"${_scopeId}> Create a new announcement </span></button></span>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(ssrRenderComponent(_component_announcement_create, { ref: "announcementCreateElement" }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_announcement_edit, { ref: "announcementEditElement" }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "py-12 px-10" }, [
            $props.announcements.length > 0 || $setup.search != "" ? (openBlock(), createBlock("span", { key: 0 }, [
              createVNode("div", { class: "mb-6 flex justify-between items-center" }, [
                createVNode("div", { class: "flex items-center" }, [
                  createVNode("div", { class: "flex w-full bg-white shadow rounded" }, [
                    withDirectives(createVNode("input", {
                      "onUpdate:modelValue": ($event) => $setup.search = $event,
                      class: "relative w-full border-0 px-6 py-3 rounded-r focus:shadow-outline",
                      autocomplete: "off",
                      type: "text",
                      name: "search",
                      placeholder: "Search…"
                    }, null, 8, ["onUpdate:modelValue"]), [
                      [vModelText, $setup.search]
                    ])
                  ]),
                  createVNode("button", {
                    class: "ml-3 text-sm text-gray-500 hover:text-gray-700 focus:text-indigo-500",
                    type: "button",
                    onClick: ($event) => $options.reset()
                  }, " Reset ", 8, ["onClick"])
                ]),
                createVNode(_component_Button, {
                  class: "inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring focus:ring-gray-300 disabled:opacity-25 transition",
                  type: "button",
                  onClick: ($event) => $options.openAnnouncementCreateDialog()
                }, {
                  default: withCtx(() => [
                    createVNode("span", null, "Create"),
                    createTextVNode("  "),
                    createVNode("span", { class: "hidden md:inline" }, "Announcement")
                  ]),
                  _: 1
                }, 8, ["onClick"])
              ]),
              createVNode("div", null, [
                createVNode("div", { class: "bg-white rounded-md shadow overflow-x-auto" }, [
                  createVNode("table", { class: "divide-y divide-gray-200 w-full table-fixed" }, [
                    createVNode("thead", { class: "bg-gray-50" }, [
                      createVNode("tr", null, [
                        createVNode("th", {
                          colspan: "3",
                          scope: "col",
                          class: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                        }, " Title "),
                        createVNode("th", {
                          scope: "col",
                          class: "px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider"
                        }, " Status "),
                        createVNode("th", {
                          scope: "col",
                          class: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                        }, " Actions ")
                      ])
                    ]),
                    createVNode("tbody", { class: "bg-white divide-y divide-gray-200" }, [
                      (openBlock(true), createBlock(Fragment, null, renderList($props.announcements, (announcement) => {
                        return openBlock(), createBlock("tr", {
                          key: announcement.id
                        }, [
                          createVNode("td", {
                            colspan: "3",
                            class: "py-4"
                          }, [
                            createVNode("div", { class: "ml-4" }, [
                              createVNode("h3", { class: "text-lg leading-6 font-medium text-gray-900" }, toDisplayString(announcement.title), 1),
                              createVNode("p", { class: "mt-1 mb-3 text-sm text-blue-gray-900 break-normal" }, toDisplayString(announcement.message), 1),
                              createVNode("label", { class: "block text-sm mt-2 font-medium text-gray-500" }, " Created by "),
                              createVNode("p", { class: "mt-1 text-md text-blue-gray-900" }, toDisplayString(announcement.created_by), 1),
                              createVNode("label", { class: "block text-sm mt-2 font-medium text-gray-500" }, " From "),
                              createVNode("p", { class: "mt-1 text-sm text-blue-gray-900" }, toDisplayString(_ctx.formatDateTime(
                                announcement.start_time
                              )), 1),
                              createVNode("label", { class: "block text-sm mt-2 font-medium text-gray-500" }, " To "),
                              createVNode("p", { class: "mt-1 text-sm text-blue-gray-900" }, toDisplayString(_ctx.formatDateTime(
                                announcement.end_time
                              )), 1)
                            ])
                          ]),
                          createVNode("td", { class: "px-5 py-4 text-center whitespace-nowrap" }, [
                            announcement.status == "active" || announcement.status == "Active" ? (openBlock(), createBlock("span", {
                              key: 0,
                              class: "px-4 py-2 inline-flex text-md leading-5 font-semibold rounded-full bg-green-100 text-green-800"
                            }, " Active ")) : (openBlock(), createBlock("span", {
                              key: 1,
                              class: "px-4 py-2 inline-flex text-md leading-5 font-semibold rounded-full bg-red-100 text-green-800"
                            }, " Inactive "))
                          ]),
                          createVNode("td", { class: "px-6 py-4 text-sm leading-5 text-gray-500 whitespace-no-wrap border-b border-gray-200" }, [
                            createVNode("button", {
                              type: "button",
                              class: "inline-flex items-center p-1 border border-transparent rounded-md mr-2 shadow-sm text-white bg-gray-800 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-300",
                              onClick: ($event) => $options.openAnnouncementEditDialog(
                                announcement
                              )
                            }, [
                              createVNode(_component_icon, { name: "edit" })
                            ], 8, ["onClick"]),
                            createVNode("button", {
                              type: "button",
                              class: "inline-flex items-center p-1 border border-transparent rounded-md shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500",
                              onClick: ($event) => $options.confirmAnnouncementDeletion(
                                announcement.id
                              )
                            }, [
                              createVNode(_component_icon, { name: "delete" })
                            ], 8, ["onClick"])
                          ])
                        ]);
                      }), 128))
                    ])
                  ]),
                  createVNode(_component_jet_dialog_modal, {
                    show: $data.confirmingAnnouncementDeletion,
                    onClose: $options.closeModal
                  }, {
                    title: withCtx(() => [
                      createTextVNode(" Delete Announcement ")
                    ]),
                    content: withCtx(() => [
                      createTextVNode(" Are you sure you want to delete this announcement? "),
                      createVNode("div", { class: "mt-4" })
                    ]),
                    footer: withCtx(() => [
                      createVNode(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                        default: withCtx(() => [
                          createTextVNode(" Cancel ")
                        ]),
                        _: 1
                      }, 8, ["onClick"]),
                      createVNode(_component_jet_danger_button, {
                        class: ["ml-2", { "opacity-25": $data.form.processing }],
                        disabled: $data.form.processing,
                        onClick: ($event) => $options.deleteAnnouncement($data.announcementId)
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Delete Announcement ")
                        ]),
                        _: 1
                      }, 8, ["class", "disabled", "onClick"])
                    ]),
                    _: 1
                  }, 8, ["show", "onClose"])
                ])
              ])
            ])) : createCommentVNode("", true),
            $props.announcements.length == 0 && $setup.search == "" ? (openBlock(), createBlock("span", { key: 1 }, [
              createVNode("button", {
                type: "button",
                class: "relative block w-full border-2 border-gray-300 border-dashed rounded-lg p-12 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500",
                onClick: ($event) => $options.openAnnouncementCreateDialog()
              }, [
                (openBlock(), createBlock("svg", {
                  class: "mx-auto h-12 w-12 text-gray-400",
                  xmlns: "http://www.w3.org/2000/svg",
                  stroke: "currentColor",
                  fill: "none",
                  viewBox: "0 0 48 48",
                  "aria-hidden": "true"
                }, [
                  createVNode("path", {
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round",
                    "stroke-width": "2",
                    d: "M8 14v20c0 4.418 7.163 8 16 8 1.381 0 2.721-.087 4-.252M8 14c0 4.418 7.163 8 16 8s16-3.582 16-8M8 14c0-4.418 7.163-8 16-8s16 3.582 16 8m0 0v14m0-4c0 4.418-7.163 8-16 8S8 28.418 8 24m32 10v6m0 0v6m0-6h6m-6 0h-6"
                  })
                ])),
                createVNode("span", { class: "mt-2 block text-sm font-medium text-gray-900" }, " Create a new announcement ")
              ], 8, ["onClick"])
            ])) : createCommentVNode("", true),
            createVNode(_component_announcement_create, { ref: "announcementCreateElement" }, null, 512),
            createVNode(_component_announcement_edit, { ref: "announcementEditElement" }, null, 512)
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1S = _sfc_main$1S.setup;
_sfc_main$1S.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Announcement/Index.vue");
  return _sfc_setup$1S ? _sfc_setup$1S(props, ctx) : void 0;
};
const Index$3 = /* @__PURE__ */ _export_sfc(_sfc_main$1S, [["ssrRender", _sfc_ssrRender$1R]]);
const __vite_glob_0_2 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Index$3
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1R = {};
function _sfc_ssrRender$1Q(_ctx, _push, _parent, _attrs) {
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "min-h-screen flex flex-col sm:justify-center items-center pt-6 sm:pt-0 bg-gray-100" }, _attrs))}><div>`);
  ssrRenderSlot(_ctx.$slots, "logo", {}, null, _push, _parent);
  _push(`</div><div class="w-full sm:max-w-md mt-6 px-6 py-4 bg-white shadow-md overflow-hidden sm:rounded-lg">`);
  ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</div></div>`);
}
const _sfc_setup$1R = _sfc_main$1R.setup;
_sfc_main$1R.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/AuthenticationCard.vue");
  return _sfc_setup$1R ? _sfc_setup$1R(props, ctx) : void 0;
};
const JetAuthenticationCard = /* @__PURE__ */ _export_sfc(_sfc_main$1R, [["ssrRender", _sfc_ssrRender$1Q]]);
const _sfc_main$1Q = {
  components: {
    Link,
    JetApplicationLogo
  }
};
function _sfc_ssrRender$1P(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Link = resolveComponent("Link");
  const _component_jet_application_logo = resolveComponent("jet-application-logo");
  _push(ssrRenderComponent(_component_Link, mergeProps({ href: "/" }, _attrs), {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_application_logo, { class: "block w-auto" }, null, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_application_logo, { class: "block w-auto" })
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1Q = _sfc_main$1Q.setup;
_sfc_main$1Q.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/AuthenticationCardLogo.vue");
  return _sfc_setup$1Q ? _sfc_setup$1Q(props, ctx) : void 0;
};
const JetAuthenticationCardLogo = /* @__PURE__ */ _export_sfc(_sfc_main$1Q, [["ssrRender", _sfc_ssrRender$1P]]);
const _sfc_main$1P = {
  computed: {
    errors() {
      return this.$page.props.errors;
    },
    hasErrors() {
      return Object.keys(this.errors).length > 0;
    }
  }
};
function _sfc_ssrRender$1O(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  if ($options.hasErrors) {
    _push(`<div${ssrRenderAttrs(mergeProps({
      class: "bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative",
      role: "alert"
    }, _attrs))}><strong class="font-medium pb-0">Something went wrong.</strong><span class="block sm:inline"><ul class="mt-3 list-disc list-inside text-sm text-red-600"><!--[-->`);
    ssrRenderList($options.errors, (error, key) => {
      _push(`<li>${ssrInterpolate(error)}</li>`);
    });
    _push(`<!--]--></ul></span></div>`);
  } else {
    _push(`<!---->`);
  }
}
const _sfc_setup$1P = _sfc_main$1P.setup;
_sfc_main$1P.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/ValidationErrors.vue");
  return _sfc_setup$1P ? _sfc_setup$1P(props, ctx) : void 0;
};
const JetValidationErrors = /* @__PURE__ */ _export_sfc(_sfc_main$1P, [["ssrRender", _sfc_ssrRender$1O]]);
const _sfc_main$1O = {
  components: {
    Head,
    JetAuthenticationCard,
    JetAuthenticationCardLogo,
    JetButton,
    JetInput,
    JetLabel,
    JetValidationErrors
  },
  data() {
    return {
      form: this.$inertia.form({
        password: ""
      })
    };
  },
  methods: {
    submit() {
      this.form.post(this.route("password.confirm"), {
        onFinish: () => this.form.reset()
      });
    }
  }
};
function _sfc_ssrRender$1N(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = resolveComponent("Head");
  const _component_jet_authentication_card = resolveComponent("jet-authentication-card");
  const _component_jet_authentication_card_logo = resolveComponent("jet-authentication-card-logo");
  const _component_jet_validation_errors = resolveComponent("jet-validation-errors");
  const _component_jet_label = resolveComponent("jet-label");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_button = resolveComponent("jet-button");
  _push(`<!--[-->`);
  _push(ssrRenderComponent(_component_Head, { title: "Secure Area" }, null, _parent));
  _push(ssrRenderComponent(_component_jet_authentication_card, { class: "index_beams" }, {
    logo: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_authentication_card_logo)
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="mb-4 text-sm text-gray-600"${_scopeId}> This is a secure area of the application. Please confirm your password before continuing. </div>`);
        _push2(ssrRenderComponent(_component_jet_validation_errors, { class: "mb-4" }, null, _parent2, _scopeId));
        _push2(`<form${_scopeId}><div${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "password",
          value: "Password"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "password",
          modelValue: $data.form.password,
          "onUpdate:modelValue": ($event) => $data.form.password = $event,
          type: "password",
          class: "mt-1 block w-full",
          required: "",
          autocomplete: "current-password",
          autofocus: ""
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="flex justify-end mt-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_button, {
          class: ["ml-4", { "opacity-25": $data.form.processing }],
          disabled: $data.form.processing
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Confirm `);
            } else {
              return [
                createTextVNode(" Confirm ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></form>`);
      } else {
        return [
          createVNode("div", { class: "mb-4 text-sm text-gray-600" }, " This is a secure area of the application. Please confirm your password before continuing. "),
          createVNode(_component_jet_validation_errors, { class: "mb-4" }),
          createVNode("form", {
            onSubmit: withModifiers($options.submit, ["prevent"])
          }, [
            createVNode("div", null, [
              createVNode(_component_jet_label, {
                for: "password",
                value: "Password"
              }),
              createVNode(_component_jet_input, {
                id: "password",
                modelValue: $data.form.password,
                "onUpdate:modelValue": ($event) => $data.form.password = $event,
                type: "password",
                class: "mt-1 block w-full",
                required: "",
                autocomplete: "current-password",
                autofocus: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            createVNode("div", { class: "flex justify-end mt-4" }, [
              createVNode(_component_jet_button, {
                class: ["ml-4", { "opacity-25": $data.form.processing }],
                disabled: $data.form.processing
              }, {
                default: withCtx(() => [
                  createTextVNode(" Confirm ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ])
          ], 40, ["onSubmit"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$1O = _sfc_main$1O.setup;
_sfc_main$1O.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/ConfirmPassword.vue");
  return _sfc_setup$1O ? _sfc_setup$1O(props, ctx) : void 0;
};
const ConfirmPassword = /* @__PURE__ */ _export_sfc(_sfc_main$1O, [["ssrRender", _sfc_ssrRender$1N]]);
const __vite_glob_0_5 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ConfirmPassword
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1N = {
  components: {
    Head,
    JetAuthenticationCard,
    JetAuthenticationCardLogo,
    JetButton,
    JetInput,
    JetLabel,
    JetValidationErrors
  },
  props: {
    status: String
  },
  data() {
    return {
      form: this.$inertia.form({
        email: ""
      })
    };
  },
  methods: {
    submit() {
      this.form.post(this.route("password.email"));
    }
  }
};
function _sfc_ssrRender$1M(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = resolveComponent("Head");
  const _component_jet_authentication_card = resolveComponent("jet-authentication-card");
  const _component_jet_authentication_card_logo = resolveComponent("jet-authentication-card-logo");
  const _component_jet_validation_errors = resolveComponent("jet-validation-errors");
  const _component_jet_label = resolveComponent("jet-label");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_button = resolveComponent("jet-button");
  _push(`<!--[-->`);
  _push(ssrRenderComponent(_component_Head, { title: "Forgot Password" }, null, _parent));
  _push(ssrRenderComponent(_component_jet_authentication_card, { class: "index_beams" }, {
    logo: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_authentication_card_logo)
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="mb-4 text-sm text-gray-600"${_scopeId}> Forgot your password? No problem. Just let us know your email address and we will email you a password reset link that will allow you to choose a new one. </div>`);
        if ($props.status) {
          _push2(`<div class="mb-4 font-medium text-sm text-green-600"${_scopeId}>${ssrInterpolate($props.status)}</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(ssrRenderComponent(_component_jet_validation_errors, { class: "mb-4" }, null, _parent2, _scopeId));
        _push2(`<form${_scopeId}><div${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "email",
          value: "Email"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "email",
          modelValue: $data.form.email,
          "onUpdate:modelValue": ($event) => $data.form.email = $event,
          type: "email",
          class: "mt-1 block w-full",
          required: "",
          autofocus: ""
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="flex items-center justify-end mt-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_button, {
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Email Password Reset Link `);
            } else {
              return [
                createTextVNode(" Email Password Reset Link ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></form>`);
      } else {
        return [
          createVNode("div", { class: "mb-4 text-sm text-gray-600" }, " Forgot your password? No problem. Just let us know your email address and we will email you a password reset link that will allow you to choose a new one. "),
          $props.status ? (openBlock(), createBlock("div", {
            key: 0,
            class: "mb-4 font-medium text-sm text-green-600"
          }, toDisplayString($props.status), 1)) : createCommentVNode("", true),
          createVNode(_component_jet_validation_errors, { class: "mb-4" }),
          createVNode("form", {
            onSubmit: withModifiers($options.submit, ["prevent"])
          }, [
            createVNode("div", null, [
              createVNode(_component_jet_label, {
                for: "email",
                value: "Email"
              }),
              createVNode(_component_jet_input, {
                id: "email",
                modelValue: $data.form.email,
                "onUpdate:modelValue": ($event) => $data.form.email = $event,
                type: "email",
                class: "mt-1 block w-full",
                required: "",
                autofocus: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            createVNode("div", { class: "flex items-center justify-end mt-4" }, [
              createVNode(_component_jet_button, {
                class: { "opacity-25": $data.form.processing },
                disabled: $data.form.processing
              }, {
                default: withCtx(() => [
                  createTextVNode(" Email Password Reset Link ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ])
          ], 40, ["onSubmit"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$1N = _sfc_main$1N.setup;
_sfc_main$1N.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/ForgotPassword.vue");
  return _sfc_setup$1N ? _sfc_setup$1N(props, ctx) : void 0;
};
const ForgotPassword = /* @__PURE__ */ _export_sfc(_sfc_main$1N, [["ssrRender", _sfc_ssrRender$1M]]);
const __vite_glob_0_6 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ForgotPassword
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1M = {
  computed: {
    hasTwitterClientID() {
      return String(this.$page.props.twitter).toLowerCase() == "true";
    },
    hasGithubClientID() {
      return String(this.$page.props.github).toLowerCase() == "true";
    },
    hasOrcidClientID() {
      return String(this.$page.props.orcid).toLowerCase() == "true";
    },
    hasSingleSingOn() {
      if (this.hasTwitterClientID || this.hasGithubClientID || this.hasOrcidClientID) {
        return true;
      } else {
        return false;
      }
    }
  }
};
function _sfc_ssrRender$1L(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(mergeProps({
    style: $options.hasSingleSingOn ? null : { display: "none" },
    class: "mt-6"
  }, _attrs))}><div class="relative"><div class="absolute inset-0 flex items-center"><div class="w-full border-t border-gray-300"></div></div><div class="relative flex justify-center text-sm"><span class="px-2 bg-white text-gray-500"> Or continue with </span></div></div><div class="flex mt-3">`);
  if ($options.hasOrcidClientID) {
    _push(`<div class="flex-1 w-64 px-1"><a href="/auth/login/orcid" class="w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium hover:bg-gray-50"><span class="sr-only">Sign in with ORCID</span><img alt="ORCID logo" src="https://orcid.org/assets/vectors/orcid.logo.icon.svg" width="20" height="20"></a></div>`);
  } else {
    _push(`<!---->`);
  }
  if ($options.hasTwitterClientID) {
    _push(`<div class="flex-1 w-64 px-1"><a href="/auth/login/twitter" class="w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-sky-500 hover:bg-gray-50"><span class="sr-only">Sign in with Twitter</span><svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true"><svg style="${ssrRenderStyle({ "height": "20px" })}" role="img" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><title>Twitter</title><path d="M23.643 4.937c-.835.37-1.732.62-2.675.733.962-.576 1.7-1.49 2.048-2.578-.9.534-1.897.922-2.958 1.13-.85-.904-2.06-1.47-3.4-1.47-2.572 0-4.658 2.086-4.658 4.66 0 .364.042.718.12 1.06-3.873-.195-7.304-2.05-9.602-4.868-.4.69-.63 1.49-.63 2.342 0 1.616.823 3.043 2.072 3.878-.764-.025-1.482-.234-2.11-.583v.06c0 2.257 1.605 4.14 3.737 4.568-.392.106-.803.162-1.227.162-.3 0-.593-.028-.877-.082.593 1.85 2.313 3.198 4.352 3.234-1.595 1.25-3.604 1.995-5.786 1.995-.376 0-.747-.022-1.112-.065 2.062 1.323 4.51 2.093 7.14 2.093 8.57 0 13.255-7.098 13.255-13.254 0-.2-.005-.402-.014-.602.91-.658 1.7-1.477 2.323-2.41z"></path></svg></svg></a></div>`);
  } else {
    _push(`<!---->`);
  }
  if ($options.hasGithubClientID) {
    _push(`<div class="flex-1 w-32 px-1"><a href="/auth/login/github" class="w-full inline-flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium hover:bg-gray-50"><span class="sr-only">Sign in with GitHub</span><svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true"><path fill-rule="evenodd" d="M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z" clip-rule="evenodd"></path></svg></a></div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div></div>`);
}
const _sfc_setup$1M = _sfc_main$1M.setup;
_sfc_main$1M.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/App/SingleSignOn.vue");
  return _sfc_setup$1M ? _sfc_setup$1M(props, ctx) : void 0;
};
const SingleSignOn = /* @__PURE__ */ _export_sfc(_sfc_main$1M, [["ssrRender", _sfc_ssrRender$1L]]);
const _sfc_main$1L = {
  components: {
    Head,
    JetAuthenticationCard,
    JetAuthenticationCardLogo,
    JetButton,
    JetInput,
    JetCheckbox,
    JetLabel,
    JetValidationErrors,
    SingleSignOn,
    Link,
    AnnouncementBanner
  },
  props: {
    canResetPassword: Boolean,
    status: String
  },
  data() {
    return {
      form: this.$inertia.form({
        email: "",
        password: "",
        remember: false
      })
    };
  },
  methods: {
    submit() {
      this.form.transform((data) => ({
        ...data,
        remember: this.form.remember ? "on" : ""
      })).post(this.route("login"), {
        onFinish: () => this.form.reset("password")
      });
    }
  }
};
function _sfc_ssrRender$1K(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = resolveComponent("Head");
  const _component_announcement_banner = resolveComponent("announcement-banner");
  const _component_jet_authentication_card = resolveComponent("jet-authentication-card");
  const _component_jet_authentication_card_logo = resolveComponent("jet-authentication-card-logo");
  const _component_jet_validation_errors = resolveComponent("jet-validation-errors");
  const _component_jet_label = resolveComponent("jet-label");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_checkbox = resolveComponent("jet-checkbox");
  const _component_Link = resolveComponent("Link");
  const _component_jet_button = resolveComponent("jet-button");
  const _component_single_sign_on = resolveComponent("single-sign-on");
  _push(`<!--[-->`);
  _push(ssrRenderComponent(_component_Head, { title: "Log in" }, null, _parent));
  _push(ssrRenderComponent(_component_announcement_banner, null, null, _parent));
  _push(ssrRenderComponent(_component_jet_authentication_card, { class: "index_beams" }, {
    logo: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_authentication_card_logo)
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_validation_errors, { class: "mb-4" }, null, _parent2, _scopeId));
        if (_ctx.$page.props.flash.message) {
          _push2(`<div class="alert"${_scopeId}>${ssrInterpolate(_ctx.$page.props.flash.message)}</div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($props.status) {
          _push2(`<div class="mb-4 font-medium text-sm text-green-600"${_scopeId}>${ssrInterpolate($props.status)}</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<form${_scopeId}><div${_scopeId}>`);
        if (_ctx.$page.props.environment.toLowerCase() != "production") {
          _push2(`<div class="pb-4"${_scopeId}><div class="border border-teal-500 rounded px-4 py-3 mt-3 max-w-2xl text-sm text-gray-700 font-bold"${_scopeId}><p${_scopeId}> Warning: This site is for demonstration purpose only. You can test most of the nmrXiv features but DO NOT use the current site for your work. All the data stored here can be reset anytime. </p></div></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "email",
          value: "Email"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "email",
          modelValue: $data.form.email,
          "onUpdate:modelValue": ($event) => $data.form.email = $event,
          type: "email",
          class: "mt-1 block w-full",
          required: "",
          autofocus: ""
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="mt-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "password",
          value: "Password"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "password",
          modelValue: $data.form.password,
          "onUpdate:modelValue": ($event) => $data.form.password = $event,
          type: "password",
          class: "mt-1 block w-full",
          required: "",
          autocomplete: "current-password"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="flex items-center justify-between mt-4"${_scopeId}><div class="flex items-center"${_scopeId}><label class="flex items-center"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_checkbox, {
          checked: $data.form.remember,
          "onUpdate:checked": ($event) => $data.form.remember = $event,
          name: "remember"
        }, null, _parent2, _scopeId));
        _push2(`<span class="ml-2 text-sm text-gray-600"${_scopeId}>Remember me</span></label></div><div class="text-sm"${_scopeId}>`);
        if ($props.canResetPassword) {
          _push2(ssrRenderComponent(_component_Link, {
            href: _ctx.route("password.request"),
            class: "underline text-sm text-gray-600 hover:text-gray-900"
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Forgot your password? `);
              } else {
                return [
                  createTextVNode(" Forgot your password? ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div><div class="mt-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_button, {
          class: ["w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500", { "opacity-25": $data.form.processing }],
          disabled: $data.form.processing
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Log in `);
            } else {
              return [
                createTextVNode(" Log in ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div><div class="flex items-center justify-center mt-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_Link, {
          href: _ctx.route("register"),
          class: "underline text-sm text-gray-600 hover:text-gray-900"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Not registered? Register here `);
            } else {
              return [
                createTextVNode(" Not registered? Register here ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(ssrRenderComponent(_component_single_sign_on, null, null, _parent2, _scopeId));
        _push2(`</form>`);
      } else {
        return [
          createVNode(_component_jet_validation_errors, { class: "mb-4" }),
          _ctx.$page.props.flash.message ? (openBlock(), createBlock("div", {
            key: 0,
            class: "alert"
          }, toDisplayString(_ctx.$page.props.flash.message), 1)) : createCommentVNode("", true),
          $props.status ? (openBlock(), createBlock("div", {
            key: 1,
            class: "mb-4 font-medium text-sm text-green-600"
          }, toDisplayString($props.status), 1)) : createCommentVNode("", true),
          createVNode("form", {
            onSubmit: withModifiers($options.submit, ["prevent"])
          }, [
            createVNode("div", null, [
              _ctx.$page.props.environment.toLowerCase() != "production" ? (openBlock(), createBlock("div", {
                key: 0,
                class: "pb-4"
              }, [
                createVNode("div", { class: "border border-teal-500 rounded px-4 py-3 mt-3 max-w-2xl text-sm text-gray-700 font-bold" }, [
                  createVNode("p", null, " Warning: This site is for demonstration purpose only. You can test most of the nmrXiv features but DO NOT use the current site for your work. All the data stored here can be reset anytime. ")
                ])
              ])) : createCommentVNode("", true),
              createVNode(_component_jet_label, {
                for: "email",
                value: "Email"
              }),
              createVNode(_component_jet_input, {
                id: "email",
                modelValue: $data.form.email,
                "onUpdate:modelValue": ($event) => $data.form.email = $event,
                type: "email",
                class: "mt-1 block w-full",
                required: "",
                autofocus: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            createVNode("div", { class: "mt-4" }, [
              createVNode(_component_jet_label, {
                for: "password",
                value: "Password"
              }),
              createVNode(_component_jet_input, {
                id: "password",
                modelValue: $data.form.password,
                "onUpdate:modelValue": ($event) => $data.form.password = $event,
                type: "password",
                class: "mt-1 block w-full",
                required: "",
                autocomplete: "current-password"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            createVNode("div", { class: "flex items-center justify-between mt-4" }, [
              createVNode("div", { class: "flex items-center" }, [
                createVNode("label", { class: "flex items-center" }, [
                  createVNode(_component_jet_checkbox, {
                    checked: $data.form.remember,
                    "onUpdate:checked": ($event) => $data.form.remember = $event,
                    name: "remember"
                  }, null, 8, ["checked", "onUpdate:checked"]),
                  createVNode("span", { class: "ml-2 text-sm text-gray-600" }, "Remember me")
                ])
              ]),
              createVNode("div", { class: "text-sm" }, [
                $props.canResetPassword ? (openBlock(), createBlock(_component_Link, {
                  key: 0,
                  href: _ctx.route("password.request"),
                  class: "underline text-sm text-gray-600 hover:text-gray-900"
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Forgot your password? ")
                  ]),
                  _: 1
                }, 8, ["href"])) : createCommentVNode("", true)
              ])
            ]),
            createVNode("div", { class: "mt-4" }, [
              createVNode(_component_jet_button, {
                class: ["w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500", { "opacity-25": $data.form.processing }],
                disabled: $data.form.processing
              }, {
                default: withCtx(() => [
                  createTextVNode(" Log in ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ]),
            createVNode("div", { class: "flex items-center justify-center mt-4" }, [
              createVNode(_component_Link, {
                href: _ctx.route("register"),
                class: "underline text-sm text-gray-600 hover:text-gray-900"
              }, {
                default: withCtx(() => [
                  createTextVNode(" Not registered? Register here ")
                ]),
                _: 1
              }, 8, ["href"])
            ]),
            createVNode(_component_single_sign_on)
          ], 40, ["onSubmit"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$1L = _sfc_main$1L.setup;
_sfc_main$1L.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/Login.vue");
  return _sfc_setup$1L ? _sfc_setup$1L(props, ctx) : void 0;
};
const Login = /* @__PURE__ */ _export_sfc(_sfc_main$1L, [["ssrRender", _sfc_ssrRender$1K]]);
const __vite_glob_0_7 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Login
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1K = {
  props: {
    loading: Boolean
  }
};
function _sfc_ssrRender$1J(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<button${ssrRenderAttrs(mergeProps({
    disabled: $props.loading,
    class: "flex items-center"
  }, _attrs))}>`);
  if ($props.loading) {
    _push(`<span><svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-dark" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path> Loading </svg></span>`);
  } else {
    _push(`<!---->`);
  }
  ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</button>`);
}
const _sfc_setup$1K = _sfc_main$1K.setup;
_sfc_main$1K.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/LoadingButton.vue");
  return _sfc_setup$1K ? _sfc_setup$1K(props, ctx) : void 0;
};
const LoadingButton = /* @__PURE__ */ _export_sfc(_sfc_main$1K, [["ssrRender", _sfc_ssrRender$1J]]);
const _sfc_main$1J = {
  components: {
    JetSecondaryButton,
    JetDialogModal,
    LoadingButton
  },
  props: ["orcidId", "affiliation"],
  emits: ["update:orcidId", "update:affiliation"],
  data() {
    return {
      show: false,
      selectedOrcidId: this.orcidId,
      selectedAffiliation: this.affiliation,
      loading: false,
      orcidIdSearchResults: []
    };
  },
  methods: {
    findOrcidID(first_name, last_name) {
      this.orcidIdSearchResults = [];
      if (first_name && last_name) {
        this.loading = true;
        this.show = true;
        axios.get(this.$page.props.orcidSearchApi, {
          headers: {
            accept: "application/json"
          },
          params: {
            q: "given-names:" + first_name + " AND family-name:" + last_name
          }
        }).then((res) => {
          if (res.data && res.data.result.length > 0) {
            this.getPersonData(res.data.result);
          } else {
            this.loading = false;
          }
        }).catch((error) => {
          console.log(error);
        }).finally(() => {
        });
      }
    },
    getPersonData(results) {
      if (results) {
        var personData = {};
        var employmentdata = {};
        var element = {};
        var orcidId = "";
        this.orcidIdSearchResults = [];
        results.forEach((item) => {
          orcidId = item["orcid-identifier"] ? item["orcid-identifier"].path : null;
          if (orcidId) {
            let personDataAPI = this.$page.props.orcidPersonApi.replace(
              "{orcid_id}",
              orcidId
            );
            let employmentDataAPI = this.$page.props.orcidEmploymentApi.replace(
              "{orcid_id}",
              item["orcid-identifier"].path
            );
            const requestPersonData = axios.get(personDataAPI, {
              headers: {
                accept: "application/json"
              }
            });
            const requestEmploymentData = axios.get(
              employmentDataAPI,
              {
                headers: {
                  accept: "application/json"
                }
              }
            );
            axios.all([requestPersonData, requestEmploymentData]).then(
              axios.spread((...responses) => {
                personData = responses[0].data;
                employmentdata = responses[1].data;
              })
            ).catch((error) => {
              console.log(error);
            }).finally(() => {
              if (personData) {
                element.firstName = personData["name"] ? personData["name"]["given-names"].value : "";
                element.lastName = personData["name"] ? personData["name"]["family-name"].value : "";
                if (personData["emails"]) {
                  element.email = personData["emails"]["email"][0] ? personData["emails"]["email"][0].email : "";
                }
              }
              if (employmentdata) {
                if (employmentdata["affiliation-group"]) {
                  if (employmentdata["affiliation-group"][0]) {
                    if (employmentdata["affiliation-group"][0].summaries) {
                      element.employer = employmentdata["affiliation-group"][0].summaries[0] ? employmentdata["affiliation-group"][0].summaries[0]["employment-summary"].organization.name : "";
                    }
                  }
                }
              }
              element.orcidId = item["orcid-identifier"] ? item["orcid-identifier"].uri : "";
              this.orcidIdSearchResults.push(element);
              element = {};
              this.loading = false;
            });
          }
        });
      }
    },
    selectOrcidId(item) {
      this.selectedOrcidId = item.orcidId ? item.orcidId.substr(18, item.orcidId.length) : "";
      this.selectedAffiliation = item.employer ? item.employer : "";
      this.$emit("update:orcidId", this.selectedOrcidId);
      this.$emit("update:affiliation", this.selectedAffiliation);
      this.show = false;
    }
  }
};
function _sfc_ssrRender$1I(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_dialog_modal = resolveComponent("jet-dialog-modal");
  const _component_loading_button = resolveComponent("loading-button");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  _push(ssrRenderComponent(_component_jet_dialog_modal, mergeProps({
    show: $data.show,
    onClose: ($event) => $data.show = false
  }, _attrs), {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Select ORCID iD `);
      } else {
        return [
          createTextVNode(" Select ORCID iD ")
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($data.loading) {
          _push2(`<div class="sm:col-span-9 mt-4 align-centre"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_loading_button, { loading: $data.loading }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($data.orcidIdSearchResults.length == 0 && !$data.loading) {
          _push2(`<div class="sm:col-span-9 mt-4 align-centre text-red-500"${_scopeId}><p${_scopeId}>Something went wrong. Please enter the id manually.</p></div>`);
        } else {
          _push2(`<!---->`);
        }
        if (!$data.loading && $data.orcidIdSearchResults.length > 0) {
          _push2(`<div style="${ssrRenderStyle({ "min-height": "10vh", "max-height": "60vh" })}" class="overflow-auto p-1"${_scopeId}><!--[-->`);
          ssrRenderList($data.orcidIdSearchResults, (item) => {
            _push2(`<div class="relative flex items-start mt-2"${_scopeId}><div class="cursor-pointer flex-1 border rounded-md p-2 bg-white-200 hover:bg-gray-200"${_scopeId}><div class="text-gray-900"${_scopeId}><p class="text-sm font-medium text-teal-900"${_scopeId}>${ssrInterpolate(item.firstName)} ${ssrInterpolate(item.lastName)}</p>`);
            if (item.employer) {
              _push2(`<p class="text-xs text-gray-500 mt-1"${_scopeId}><b class="text-gray-500"${_scopeId}>Employer:</b> ${ssrInterpolate(item.employer)}</p>`);
            } else {
              _push2(`<!---->`);
            }
            if (item.email) {
              _push2(`<p class="text-xs text-gray-500 mt-1"${_scopeId}><b class="text-gray-500"${_scopeId}>Email:</b> ${ssrInterpolate(item.email)}</p>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`<div class="flex items-center text-xs text-gray-600 mt-1 underline"${_scopeId}><img alt="ORCID logo" src="https://orcid.org/assets/vectors/orcid.logo.icon.svg" width="15" height="15"${_scopeId}><p class="ml-1"${_scopeId}>${ssrInterpolate(item.orcidId)}</p></div></div></div></div>`);
          });
          _push2(`<!--]--></div>`);
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          $data.loading ? (openBlock(), createBlock("div", {
            key: 0,
            class: "sm:col-span-9 mt-4 align-centre"
          }, [
            createVNode(_component_loading_button, { loading: $data.loading }, null, 8, ["loading"])
          ])) : createCommentVNode("", true),
          $data.orcidIdSearchResults.length == 0 && !$data.loading ? (openBlock(), createBlock("div", {
            key: 1,
            class: "sm:col-span-9 mt-4 align-centre text-red-500"
          }, [
            createVNode("p", null, "Something went wrong. Please enter the id manually.")
          ])) : createCommentVNode("", true),
          !$data.loading && $data.orcidIdSearchResults.length > 0 ? (openBlock(), createBlock("div", {
            key: 2,
            style: { "min-height": "10vh", "max-height": "60vh" },
            class: "overflow-auto p-1"
          }, [
            (openBlock(true), createBlock(Fragment, null, renderList($data.orcidIdSearchResults, (item) => {
              return openBlock(), createBlock("div", {
                key: item.orcidId,
                class: "relative flex items-start mt-2"
              }, [
                createVNode("div", {
                  class: "cursor-pointer flex-1 border rounded-md p-2 bg-white-200 hover:bg-gray-200",
                  onClick: ($event) => $options.selectOrcidId(item)
                }, [
                  createVNode("div", { class: "text-gray-900" }, [
                    createVNode("p", { class: "text-sm font-medium text-teal-900" }, toDisplayString(item.firstName) + " " + toDisplayString(item.lastName), 1),
                    item.employer ? (openBlock(), createBlock("p", {
                      key: 0,
                      class: "text-xs text-gray-500 mt-1"
                    }, [
                      createVNode("b", { class: "text-gray-500" }, "Employer:"),
                      createTextVNode(" " + toDisplayString(item.employer), 1)
                    ])) : createCommentVNode("", true),
                    item.email ? (openBlock(), createBlock("p", {
                      key: 1,
                      class: "text-xs text-gray-500 mt-1"
                    }, [
                      createVNode("b", { class: "text-gray-500" }, "Email:"),
                      createTextVNode(" " + toDisplayString(item.email), 1)
                    ])) : createCommentVNode("", true),
                    createVNode("div", { class: "flex items-center text-xs text-gray-600 mt-1 underline" }, [
                      createVNode("img", {
                        alt: "ORCID logo",
                        src: "https://orcid.org/assets/vectors/orcid.logo.icon.svg",
                        width: "15",
                        height: "15"
                      }),
                      createVNode("p", { class: "ml-1" }, toDisplayString(item.orcidId), 1)
                    ])
                  ])
                ], 8, ["onClick"])
              ]);
            }), 128))
          ])) : createCommentVNode("", true)
        ];
      }
    }),
    footer: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.show = false
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_secondary_button, {
            onClick: ($event) => $data.show = false
          }, {
            default: withCtx(() => [
              createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1J = _sfc_main$1J.setup;
_sfc_main$1J.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/SelectOrcidId.vue");
  return _sfc_setup$1J ? _sfc_setup$1J(props, ctx) : void 0;
};
const SelectOrcidId = /* @__PURE__ */ _export_sfc(_sfc_main$1J, [["ssrRender", _sfc_ssrRender$1I]]);
const _sfc_main$1I = {
  components: {
    Head,
    JetAuthenticationCard,
    JetAuthenticationCardLogo,
    JetButton,
    JetInput,
    JetCheckbox,
    JetLabel,
    JetValidationErrors,
    Link,
    AnnouncementBanner,
    JetSecondaryButton,
    JetDialogModal,
    LoadingButton,
    JetInputError,
    SelectOrcidId,
    ref
  },
  setup() {
    const selectOrcidIdElement = ref(null);
    return {
      selectOrcidIdElement
    };
  },
  data() {
    return {
      form: this.$inertia.form({
        first_name: "",
        last_name: "",
        email: "",
        username: "",
        orcid_id: "",
        affiliation: "",
        password: "",
        password_confirmation: "",
        terms: false
      }),
      orcidIdSearchResults: [],
      showOrcidIdDialog: false,
      loading: false,
      error: {}
    };
  },
  methods: {
    findOrcidID() {
      this.error.orcid = "";
      if (this.form.first_name && this.form.last_name) {
        this.selectOrcidIdElement.findOrcidID(
          this.form.first_name,
          this.form.last_name
        );
      } else {
        this.error.orcid = "Please enter first name and last name";
      }
    },
    submit() {
      this.form.post(this.route("register"), {
        onFinish: () => this.form.reset("password", "password_confirmation")
      });
    }
  }
};
function _sfc_ssrRender$1H(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = resolveComponent("Head");
  const _component_announcement_banner = resolveComponent("announcement-banner");
  const _component_jet_authentication_card = resolveComponent("jet-authentication-card");
  const _component_jet_authentication_card_logo = resolveComponent("jet-authentication-card-logo");
  const _component_jet_validation_errors = resolveComponent("jet-validation-errors");
  const _component_jet_label = resolveComponent("jet-label");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_jet_checkbox = resolveComponent("jet-checkbox");
  const _component_Link = resolveComponent("Link");
  const _component_jet_button = resolveComponent("jet-button");
  const _component_select_orcid_id = resolveComponent("select-orcid-id");
  _push(`<!--[-->`);
  _push(ssrRenderComponent(_component_Head, { title: "Register" }, null, _parent));
  _push(ssrRenderComponent(_component_announcement_banner, null, null, _parent));
  _push(ssrRenderComponent(_component_jet_authentication_card, { class: "index_beams" }, {
    logo: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_authentication_card_logo)
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_validation_errors, { class: "mb-4" }, null, _parent2, _scopeId));
        _push2(`<form${_scopeId}><div${_scopeId}>`);
        if (_ctx.$page.props.environment.toLowerCase() != "production") {
          _push2(`<div class="pb-4"${_scopeId}><div class="border border-teal-500 rounded px-4 py-3 mt-3 max-w-2xl text-sm text-gray-700 font-bold"${_scopeId}><p${_scopeId}><span style="${ssrRenderStyle({ "color": "red" })}"${_scopeId}>Warning:</span> This site is for demonstration purpose only. You can test most of the nmrXiv features but DO NOT use the current site for your work. All the data stored here can be reset anytime. For real data please visit <a href="https://nmrxiv.org" target="_blank" style="${ssrRenderStyle({ "color": "teal" })}"${_scopeId}>nmrxiv.org.</a></p></div></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div><div class="mt-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          class: "after:content-['*'] after:ml-0.5 after:text-red-500",
          for: "first_name",
          value: "First Name"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "first_name",
          modelValue: $data.form.first_name,
          "onUpdate:modelValue": ($event) => $data.form.first_name = $event,
          type: "text",
          class: "mt-1 block w-full",
          required: "",
          autofocus: "",
          autocomplete: "first_name"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="mt-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          class: "after:content-['*'] after:ml-0.5 after:text-red-500",
          for: "last_name",
          value: "Last Name"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "last_name",
          name: "lastname",
          modelValue: $data.form.last_name,
          "onUpdate:modelValue": ($event) => $data.form.last_name = $event,
          type: "text",
          class: "mt-1 block w-full",
          required: "",
          autofocus: "",
          autocomplete: "last_name"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="mt-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          class: "after:content-['*'] after:ml-0.5 after:text-red-500",
          for: "email",
          value: "Email"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "email",
          modelValue: $data.form.email,
          "onUpdate:modelValue": ($event) => $data.form.email = $event,
          type: "email",
          class: "mt-1 block w-full",
          required: ""
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="mt-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          class: "after:content-['*'] after:ml-0.5 after:text-red-500",
          for: "username",
          value: "Username"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "username",
          modelValue: $data.form.username,
          "onUpdate:modelValue": ($event) => $data.form.username = $event,
          type: "text",
          class: "mt-1 block w-full",
          required: ""
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="mt-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          class: "after:content-['(optional)'] after:ml-0.5 after:text-gray-500",
          for: "orcid",
          value: "ORCID iD"
        }, null, _parent2, _scopeId));
        _push2(`<div class="mt-1 flex rounded-md shadow-sm"${_scopeId}><div class="relative flex items-stretch flex-grow focus-within:z-10"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "orcid",
          modelValue: $data.form.orcid_id,
          "onUpdate:modelValue": ($event) => $data.form.orcid_id = $event,
          type: "text",
          class: "rounded-l-md focus:ring-indigo-200 focus:border-indigo-200 block w-full rounded-none sm:text-medium border-gray-300"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="tooltip -ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500 cursor-pointer"${_scopeId}><img alt="ORCID logo" src="https://orcid.org/assets/vectors/orcid.logo.icon.svg" class="w-6"${_scopeId}><span class="bg-gray-900 text-center text-white px-2 py-1 shadow-lg rounded-md tooltiptextbottom"${_scopeId}>Click to find ORCID iD</span></div></div>`);
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.error.orcid,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="mt-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          class: "after:content-['*'] after:ml-0.5 after:text-red-500",
          for: "password",
          value: "Password"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "password",
          modelValue: $data.form.password,
          "onUpdate:modelValue": ($event) => $data.form.password = $event,
          type: "password",
          class: "mt-1 block w-full",
          required: "",
          autocomplete: "new-password"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="mt-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "password_confirmation",
          class: "after:content-['*'] after:ml-0.5 after:text-red-500",
          value: "Confirm Password"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "password_confirmation",
          modelValue: $data.form.password_confirmation,
          "onUpdate:modelValue": ($event) => $data.form.password_confirmation = $event,
          type: "password",
          class: "mt-1 block w-full",
          required: "",
          autocomplete: "new-password"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
        if (_ctx.$page.props.jetstream.hasTermsAndPrivacyPolicyFeature) {
          _push2(`<div class="mt-4"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_jet_label, { for: "terms" }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<div class="flex items-center"${_scopeId2}>`);
                _push3(ssrRenderComponent(_component_jet_checkbox, {
                  id: "terms",
                  checked: $data.form.terms,
                  "onUpdate:checked": ($event) => $data.form.terms = $event,
                  name: "terms"
                }, null, _parent3, _scopeId2));
                _push3(`<div class="ml-2"${_scopeId2}> I agree to the `);
                _push3(ssrRenderComponent(_component_Link, {
                  target: "_blank",
                  href: _ctx.route("terms.show"),
                  class: "underline text-sm text-gray-600 hover:text-gray-900"
                }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`Terms of Service`);
                    } else {
                      return [
                        createTextVNode("Terms of Service")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                _push3(` and `);
                _push3(ssrRenderComponent(_component_Link, {
                  target: "_blank",
                  href: _ctx.route("policy.show"),
                  class: "underline text-sm text-gray-600 hover:text-gray-900"
                }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`Privacy Policy`);
                    } else {
                      return [
                        createTextVNode("Privacy Policy")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                _push3(`</div></div>`);
              } else {
                return [
                  createVNode("div", { class: "flex items-center" }, [
                    createVNode(_component_jet_checkbox, {
                      id: "terms",
                      checked: $data.form.terms,
                      "onUpdate:checked": ($event) => $data.form.terms = $event,
                      name: "terms"
                    }, null, 8, ["checked", "onUpdate:checked"]),
                    createVNode("div", { class: "ml-2" }, [
                      createTextVNode(" I agree to the "),
                      createVNode(_component_Link, {
                        target: "_blank",
                        href: _ctx.route("terms.show"),
                        class: "underline text-sm text-gray-600 hover:text-gray-900"
                      }, {
                        default: withCtx(() => [
                          createTextVNode("Terms of Service")
                        ]),
                        _: 1
                      }, 8, ["href"]),
                      createTextVNode(" and "),
                      createVNode(_component_Link, {
                        target: "_blank",
                        href: _ctx.route("policy.show"),
                        class: "underline text-sm text-gray-600 hover:text-gray-900"
                      }, {
                        default: withCtx(() => [
                          createTextVNode("Privacy Policy")
                        ]),
                        _: 1
                      }, 8, ["href"])
                    ])
                  ])
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="flex items-center justify-end mt-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_button, {
          class: ["w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-black-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500", { "opacity-25": $data.form.processing }],
          disabled: $data.form.processing
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Register `);
            } else {
              return [
                createTextVNode(" Register ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div><div class="flex items-center justify-center mt-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_Link, {
          href: _ctx.route("login"),
          class: "underline text-sm text-gray-600 hover:text-gray-900"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Already registered? Login here `);
            } else {
              return [
                createTextVNode(" Already registered? Login here ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></form>`);
      } else {
        return [
          createVNode(_component_jet_validation_errors, { class: "mb-4" }),
          createVNode("form", {
            onSubmit: withModifiers($options.submit, ["prevent"])
          }, [
            createVNode("div", null, [
              _ctx.$page.props.environment.toLowerCase() != "production" ? (openBlock(), createBlock("div", {
                key: 0,
                class: "pb-4"
              }, [
                createVNode("div", { class: "border border-teal-500 rounded px-4 py-3 mt-3 max-w-2xl text-sm text-gray-700 font-bold" }, [
                  createVNode("p", null, [
                    createVNode("span", { style: { "color": "red" } }, "Warning:"),
                    createTextVNode(" This site is for demonstration purpose only. You can test most of the nmrXiv features but DO NOT use the current site for your work. All the data stored here can be reset anytime. For real data please visit "),
                    createVNode("a", {
                      href: "https://nmrxiv.org",
                      target: "_blank",
                      style: { "color": "teal" }
                    }, "nmrxiv.org.")
                  ])
                ])
              ])) : createCommentVNode("", true)
            ]),
            createVNode("div", { class: "mt-4" }, [
              createVNode(_component_jet_label, {
                class: "after:content-['*'] after:ml-0.5 after:text-red-500",
                for: "first_name",
                value: "First Name"
              }),
              createVNode(_component_jet_input, {
                id: "first_name",
                modelValue: $data.form.first_name,
                "onUpdate:modelValue": ($event) => $data.form.first_name = $event,
                type: "text",
                class: "mt-1 block w-full",
                required: "",
                autofocus: "",
                autocomplete: "first_name"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            createVNode("div", { class: "mt-4" }, [
              createVNode(_component_jet_label, {
                class: "after:content-['*'] after:ml-0.5 after:text-red-500",
                for: "last_name",
                value: "Last Name"
              }),
              createVNode(_component_jet_input, {
                id: "last_name",
                name: "lastname",
                modelValue: $data.form.last_name,
                "onUpdate:modelValue": ($event) => $data.form.last_name = $event,
                type: "text",
                class: "mt-1 block w-full",
                required: "",
                autofocus: "",
                autocomplete: "last_name"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            createVNode("div", { class: "mt-4" }, [
              createVNode(_component_jet_label, {
                class: "after:content-['*'] after:ml-0.5 after:text-red-500",
                for: "email",
                value: "Email"
              }),
              createVNode(_component_jet_input, {
                id: "email",
                modelValue: $data.form.email,
                "onUpdate:modelValue": ($event) => $data.form.email = $event,
                type: "email",
                class: "mt-1 block w-full",
                required: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            createVNode("div", { class: "mt-4" }, [
              createVNode(_component_jet_label, {
                class: "after:content-['*'] after:ml-0.5 after:text-red-500",
                for: "username",
                value: "Username"
              }),
              createVNode(_component_jet_input, {
                id: "username",
                modelValue: $data.form.username,
                "onUpdate:modelValue": ($event) => $data.form.username = $event,
                type: "text",
                class: "mt-1 block w-full",
                required: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            createVNode("div", { class: "mt-4" }, [
              createVNode(_component_jet_label, {
                class: "after:content-['(optional)'] after:ml-0.5 after:text-gray-500",
                for: "orcid",
                value: "ORCID iD"
              }),
              createVNode("div", { class: "mt-1 flex rounded-md shadow-sm" }, [
                createVNode("div", { class: "relative flex items-stretch flex-grow focus-within:z-10" }, [
                  createVNode(_component_jet_input, {
                    id: "orcid",
                    modelValue: $data.form.orcid_id,
                    "onUpdate:modelValue": ($event) => $data.form.orcid_id = $event,
                    type: "text",
                    class: "rounded-l-md focus:ring-indigo-200 focus:border-indigo-200 block w-full rounded-none sm:text-medium border-gray-300"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])
                ]),
                createVNode("div", {
                  class: "tooltip -ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500 cursor-pointer",
                  onClick: ($event) => $options.findOrcidID()
                }, [
                  createVNode("img", {
                    alt: "ORCID logo",
                    src: "https://orcid.org/assets/vectors/orcid.logo.icon.svg",
                    class: "w-6"
                  }),
                  createVNode("span", { class: "bg-gray-900 text-center text-white px-2 py-1 shadow-lg rounded-md tooltiptextbottom" }, "Click to find ORCID iD")
                ], 8, ["onClick"])
              ]),
              createVNode(_component_jet_input_error, {
                message: $data.error.orcid,
                class: "mt-2"
              }, null, 8, ["message"])
            ]),
            createVNode("div", { class: "mt-4" }, [
              createVNode(_component_jet_label, {
                class: "after:content-['*'] after:ml-0.5 after:text-red-500",
                for: "password",
                value: "Password"
              }),
              createVNode(_component_jet_input, {
                id: "password",
                modelValue: $data.form.password,
                "onUpdate:modelValue": ($event) => $data.form.password = $event,
                type: "password",
                class: "mt-1 block w-full",
                required: "",
                autocomplete: "new-password"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            createVNode("div", { class: "mt-4" }, [
              createVNode(_component_jet_label, {
                for: "password_confirmation",
                class: "after:content-['*'] after:ml-0.5 after:text-red-500",
                value: "Confirm Password"
              }),
              createVNode(_component_jet_input, {
                id: "password_confirmation",
                modelValue: $data.form.password_confirmation,
                "onUpdate:modelValue": ($event) => $data.form.password_confirmation = $event,
                type: "password",
                class: "mt-1 block w-full",
                required: "",
                autocomplete: "new-password"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            _ctx.$page.props.jetstream.hasTermsAndPrivacyPolicyFeature ? (openBlock(), createBlock("div", {
              key: 0,
              class: "mt-4"
            }, [
              createVNode(_component_jet_label, { for: "terms" }, {
                default: withCtx(() => [
                  createVNode("div", { class: "flex items-center" }, [
                    createVNode(_component_jet_checkbox, {
                      id: "terms",
                      checked: $data.form.terms,
                      "onUpdate:checked": ($event) => $data.form.terms = $event,
                      name: "terms"
                    }, null, 8, ["checked", "onUpdate:checked"]),
                    createVNode("div", { class: "ml-2" }, [
                      createTextVNode(" I agree to the "),
                      createVNode(_component_Link, {
                        target: "_blank",
                        href: _ctx.route("terms.show"),
                        class: "underline text-sm text-gray-600 hover:text-gray-900"
                      }, {
                        default: withCtx(() => [
                          createTextVNode("Terms of Service")
                        ]),
                        _: 1
                      }, 8, ["href"]),
                      createTextVNode(" and "),
                      createVNode(_component_Link, {
                        target: "_blank",
                        href: _ctx.route("policy.show"),
                        class: "underline text-sm text-gray-600 hover:text-gray-900"
                      }, {
                        default: withCtx(() => [
                          createTextVNode("Privacy Policy")
                        ]),
                        _: 1
                      }, 8, ["href"])
                    ])
                  ])
                ]),
                _: 1
              })
            ])) : createCommentVNode("", true),
            createVNode("div", { class: "flex items-center justify-end mt-4" }, [
              createVNode(_component_jet_button, {
                class: ["w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-black-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500", { "opacity-25": $data.form.processing }],
                disabled: $data.form.processing
              }, {
                default: withCtx(() => [
                  createTextVNode(" Register ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ]),
            createVNode("div", { class: "flex items-center justify-center mt-4" }, [
              createVNode(_component_Link, {
                href: _ctx.route("login"),
                class: "underline text-sm text-gray-600 hover:text-gray-900"
              }, {
                default: withCtx(() => [
                  createTextVNode(" Already registered? Login here ")
                ]),
                _: 1
              }, 8, ["href"])
            ])
          ], 40, ["onSubmit"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(ssrRenderComponent(_component_select_orcid_id, {
    ref: "selectOrcidIdElement",
    orcidId: $data.form.orcid_id,
    "onUpdate:orcidId": ($event) => $data.form.orcid_id = $event,
    affiliation: $data.form.affiliation,
    "onUpdate:affiliation": ($event) => $data.form.affiliation = $event
  }, null, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$1I = _sfc_main$1I.setup;
_sfc_main$1I.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/Register.vue");
  return _sfc_setup$1I ? _sfc_setup$1I(props, ctx) : void 0;
};
const Register = /* @__PURE__ */ _export_sfc(_sfc_main$1I, [["ssrRender", _sfc_ssrRender$1H]]);
const __vite_glob_0_8 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Register
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1H = {
  components: {
    Head,
    JetAuthenticationCard,
    JetAuthenticationCardLogo,
    JetButton,
    JetInput,
    JetLabel,
    JetValidationErrors
  },
  props: {
    email: String,
    token: String
  },
  data() {
    return {
      form: this.$inertia.form({
        token: this.token,
        email: this.email,
        password: "",
        password_confirmation: ""
      })
    };
  },
  methods: {
    submit() {
      this.form.post(this.route("password.update"), {
        onFinish: () => this.form.reset("password", "password_confirmation")
      });
    }
  }
};
function _sfc_ssrRender$1G(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = resolveComponent("Head");
  const _component_jet_authentication_card = resolveComponent("jet-authentication-card");
  const _component_jet_authentication_card_logo = resolveComponent("jet-authentication-card-logo");
  const _component_jet_validation_errors = resolveComponent("jet-validation-errors");
  const _component_jet_label = resolveComponent("jet-label");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_button = resolveComponent("jet-button");
  _push(`<!--[-->`);
  _push(ssrRenderComponent(_component_Head, { title: "Reset Password" }, null, _parent));
  _push(ssrRenderComponent(_component_jet_authentication_card, { class: "index_beams" }, {
    logo: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_authentication_card_logo)
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_validation_errors, { class: "mb-4" }, null, _parent2, _scopeId));
        _push2(`<form${_scopeId}><div${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "email",
          value: "Email"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "email",
          modelValue: $data.form.email,
          "onUpdate:modelValue": ($event) => $data.form.email = $event,
          type: "email",
          class: "mt-1 block w-full",
          required: "",
          autofocus: ""
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="mt-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "password",
          value: "Password"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "password",
          modelValue: $data.form.password,
          "onUpdate:modelValue": ($event) => $data.form.password = $event,
          type: "password",
          class: "mt-1 block w-full",
          required: "",
          autocomplete: "new-password"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="mt-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "password_confirmation",
          value: "Confirm Password"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "password_confirmation",
          modelValue: $data.form.password_confirmation,
          "onUpdate:modelValue": ($event) => $data.form.password_confirmation = $event,
          type: "password",
          class: "mt-1 block w-full",
          required: "",
          autocomplete: "new-password"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="flex items-center justify-end mt-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_button, {
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Reset Password `);
            } else {
              return [
                createTextVNode(" Reset Password ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></form>`);
      } else {
        return [
          createVNode(_component_jet_validation_errors, { class: "mb-4" }),
          createVNode("form", {
            onSubmit: withModifiers($options.submit, ["prevent"])
          }, [
            createVNode("div", null, [
              createVNode(_component_jet_label, {
                for: "email",
                value: "Email"
              }),
              createVNode(_component_jet_input, {
                id: "email",
                modelValue: $data.form.email,
                "onUpdate:modelValue": ($event) => $data.form.email = $event,
                type: "email",
                class: "mt-1 block w-full",
                required: "",
                autofocus: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            createVNode("div", { class: "mt-4" }, [
              createVNode(_component_jet_label, {
                for: "password",
                value: "Password"
              }),
              createVNode(_component_jet_input, {
                id: "password",
                modelValue: $data.form.password,
                "onUpdate:modelValue": ($event) => $data.form.password = $event,
                type: "password",
                class: "mt-1 block w-full",
                required: "",
                autocomplete: "new-password"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            createVNode("div", { class: "mt-4" }, [
              createVNode(_component_jet_label, {
                for: "password_confirmation",
                value: "Confirm Password"
              }),
              createVNode(_component_jet_input, {
                id: "password_confirmation",
                modelValue: $data.form.password_confirmation,
                "onUpdate:modelValue": ($event) => $data.form.password_confirmation = $event,
                type: "password",
                class: "mt-1 block w-full",
                required: "",
                autocomplete: "new-password"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            createVNode("div", { class: "flex items-center justify-end mt-4" }, [
              createVNode(_component_jet_button, {
                class: { "opacity-25": $data.form.processing },
                disabled: $data.form.processing
              }, {
                default: withCtx(() => [
                  createTextVNode(" Reset Password ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ])
          ], 40, ["onSubmit"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$1H = _sfc_main$1H.setup;
_sfc_main$1H.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/ResetPassword.vue");
  return _sfc_setup$1H ? _sfc_setup$1H(props, ctx) : void 0;
};
const ResetPassword = /* @__PURE__ */ _export_sfc(_sfc_main$1H, [["ssrRender", _sfc_ssrRender$1G]]);
const __vite_glob_0_9 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ResetPassword
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1G = {
  components: {
    Head,
    JetAuthenticationCard,
    JetAuthenticationCardLogo,
    JetButton,
    JetInput,
    JetLabel,
    JetValidationErrors
  },
  props: {
    email: String,
    expires: String,
    signature: String,
    user: Object
  },
  data() {
    return {
      form: this.$inertia.form({
        email: this.email,
        password: "",
        password_confirmation: ""
      })
    };
  },
  methods: {
    submit() {
      this.form.post(
        this.route("password.set", this.user.id) + "?expires=" + this.expires + "&signature=" + this.signature,
        {
          onFinish: () => this.form.reset("password", "password_confirmation")
        }
      );
    }
  }
};
function _sfc_ssrRender$1F(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = resolveComponent("Head");
  const _component_jet_authentication_card = resolveComponent("jet-authentication-card");
  const _component_jet_authentication_card_logo = resolveComponent("jet-authentication-card-logo");
  const _component_jet_validation_errors = resolveComponent("jet-validation-errors");
  const _component_jet_label = resolveComponent("jet-label");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_button = resolveComponent("jet-button");
  _push(`<!--[-->`);
  _push(ssrRenderComponent(_component_Head, { title: "Set Password" }, null, _parent));
  _push(ssrRenderComponent(_component_jet_authentication_card, { class: "index_beams" }, {
    logo: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_authentication_card_logo)
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_validation_errors, { class: "mb-4" }, null, _parent2, _scopeId));
        _push2(`<form${_scopeId}><div${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "email",
          value: "Email"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "email",
          modelValue: $data.form.email,
          "onUpdate:modelValue": ($event) => $data.form.email = $event,
          type: "email",
          class: "mt-1 block w-full",
          required: "",
          autofocus: ""
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="mt-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "password",
          value: "Password"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "password",
          modelValue: $data.form.password,
          "onUpdate:modelValue": ($event) => $data.form.password = $event,
          type: "password",
          class: "mt-1 block w-full",
          required: "",
          autocomplete: "new-password"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="mt-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "password_confirmation",
          value: "Confirm Password"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "password_confirmation",
          modelValue: $data.form.password_confirmation,
          "onUpdate:modelValue": ($event) => $data.form.password_confirmation = $event,
          type: "password",
          class: "mt-1 block w-full",
          required: "",
          autocomplete: "new-password"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="flex items-center justify-end mt-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_button, {
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Set Password `);
            } else {
              return [
                createTextVNode(" Set Password ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></form>`);
      } else {
        return [
          createVNode(_component_jet_validation_errors, { class: "mb-4" }),
          createVNode("form", {
            onSubmit: withModifiers($options.submit, ["prevent"])
          }, [
            createVNode("div", null, [
              createVNode(_component_jet_label, {
                for: "email",
                value: "Email"
              }),
              createVNode(_component_jet_input, {
                id: "email",
                modelValue: $data.form.email,
                "onUpdate:modelValue": ($event) => $data.form.email = $event,
                type: "email",
                class: "mt-1 block w-full",
                required: "",
                autofocus: ""
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            createVNode("div", { class: "mt-4" }, [
              createVNode(_component_jet_label, {
                for: "password",
                value: "Password"
              }),
              createVNode(_component_jet_input, {
                id: "password",
                modelValue: $data.form.password,
                "onUpdate:modelValue": ($event) => $data.form.password = $event,
                type: "password",
                class: "mt-1 block w-full",
                required: "",
                autocomplete: "new-password"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            createVNode("div", { class: "mt-4" }, [
              createVNode(_component_jet_label, {
                for: "password_confirmation",
                value: "Confirm Password"
              }),
              createVNode(_component_jet_input, {
                id: "password_confirmation",
                modelValue: $data.form.password_confirmation,
                "onUpdate:modelValue": ($event) => $data.form.password_confirmation = $event,
                type: "password",
                class: "mt-1 block w-full",
                required: "",
                autocomplete: "new-password"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            createVNode("div", { class: "flex items-center justify-end mt-4" }, [
              createVNode(_component_jet_button, {
                class: { "opacity-25": $data.form.processing },
                disabled: $data.form.processing
              }, {
                default: withCtx(() => [
                  createTextVNode(" Set Password ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ])
          ], 40, ["onSubmit"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$1G = _sfc_main$1G.setup;
_sfc_main$1G.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/SetPassword.vue");
  return _sfc_setup$1G ? _sfc_setup$1G(props, ctx) : void 0;
};
const SetPassword = /* @__PURE__ */ _export_sfc(_sfc_main$1G, [["ssrRender", _sfc_ssrRender$1F]]);
const __vite_glob_0_10 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: SetPassword
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1F = {
  components: {
    Head,
    JetAuthenticationCard,
    JetAuthenticationCardLogo,
    JetButton,
    JetInput,
    JetLabel,
    JetValidationErrors
  },
  data() {
    return {
      recovery: false,
      form: this.$inertia.form({
        code: "",
        recovery_code: ""
      })
    };
  },
  methods: {
    toggleRecovery() {
      this.recovery ^= true;
      this.$nextTick(() => {
        if (this.recovery) {
          this.$refs.recovery_code.focus();
          this.form.code = "";
        } else {
          this.$refs.code.focus();
          this.form.recovery_code = "";
        }
      });
    },
    submit() {
      this.form.post(this.route("two-factor.login"));
    }
  }
};
function _sfc_ssrRender$1E(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = resolveComponent("Head");
  const _component_jet_authentication_card = resolveComponent("jet-authentication-card");
  const _component_jet_authentication_card_logo = resolveComponent("jet-authentication-card-logo");
  const _component_jet_validation_errors = resolveComponent("jet-validation-errors");
  const _component_jet_label = resolveComponent("jet-label");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_button = resolveComponent("jet-button");
  _push(`<!--[-->`);
  _push(ssrRenderComponent(_component_Head, { title: "Two-factor Confirmation" }, null, _parent));
  _push(ssrRenderComponent(_component_jet_authentication_card, { class: "index_beams" }, {
    logo: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_authentication_card_logo)
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="mb-4 text-sm text-gray-600"${_scopeId}>`);
        if (!$data.recovery) {
          _push2(`<!--[--> Please confirm access to your account by entering the authentication code provided by your authenticator application. <!--]-->`);
        } else {
          _push2(`<!--[--> Please confirm access to your account by entering one of your emergency recovery codes. <!--]-->`);
        }
        _push2(`</div>`);
        _push2(ssrRenderComponent(_component_jet_validation_errors, { class: "mb-4" }, null, _parent2, _scopeId));
        _push2(`<form${_scopeId}>`);
        if (!$data.recovery) {
          _push2(`<div${_scopeId}>`);
          _push2(ssrRenderComponent(_component_jet_label, {
            for: "code",
            value: "Code"
          }, null, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_jet_input, {
            id: "code",
            ref: "code",
            modelValue: $data.form.code,
            "onUpdate:modelValue": ($event) => $data.form.code = $event,
            type: "text",
            inputmode: "numeric",
            class: "mt-1 block w-full",
            autofocus: "",
            autocomplete: "one-time-code"
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<div${_scopeId}>`);
          _push2(ssrRenderComponent(_component_jet_label, {
            for: "recovery_code",
            value: "Recovery Code"
          }, null, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_jet_input, {
            id: "recovery_code",
            ref: "recovery_code",
            modelValue: $data.form.recovery_code,
            "onUpdate:modelValue": ($event) => $data.form.recovery_code = $event,
            type: "text",
            class: "mt-1 block w-full",
            autocomplete: "one-time-code"
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
        }
        _push2(`<div class="flex items-center justify-end mt-4"${_scopeId}><button type="button" class="text-sm text-gray-600 hover:text-gray-900 underline cursor-pointer"${_scopeId}>`);
        if (!$data.recovery) {
          _push2(`<!--[--> Use a recovery code <!--]-->`);
        } else {
          _push2(`<!--[--> Use an authentication code <!--]-->`);
        }
        _push2(`</button>`);
        _push2(ssrRenderComponent(_component_jet_button, {
          class: ["ml-4", { "opacity-25": $data.form.processing }],
          disabled: $data.form.processing
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Log in `);
            } else {
              return [
                createTextVNode(" Log in ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></form>`);
      } else {
        return [
          createVNode("div", { class: "mb-4 text-sm text-gray-600" }, [
            !$data.recovery ? (openBlock(), createBlock(Fragment, { key: 0 }, [
              createTextVNode(" Please confirm access to your account by entering the authentication code provided by your authenticator application. ")
            ], 64)) : (openBlock(), createBlock(Fragment, { key: 1 }, [
              createTextVNode(" Please confirm access to your account by entering one of your emergency recovery codes. ")
            ], 64))
          ]),
          createVNode(_component_jet_validation_errors, { class: "mb-4" }),
          createVNode("form", {
            onSubmit: withModifiers($options.submit, ["prevent"])
          }, [
            !$data.recovery ? (openBlock(), createBlock("div", { key: 0 }, [
              createVNode(_component_jet_label, {
                for: "code",
                value: "Code"
              }),
              createVNode(_component_jet_input, {
                id: "code",
                ref: "code",
                modelValue: $data.form.code,
                "onUpdate:modelValue": ($event) => $data.form.code = $event,
                type: "text",
                inputmode: "numeric",
                class: "mt-1 block w-full",
                autofocus: "",
                autocomplete: "one-time-code"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ])) : (openBlock(), createBlock("div", { key: 1 }, [
              createVNode(_component_jet_label, {
                for: "recovery_code",
                value: "Recovery Code"
              }),
              createVNode(_component_jet_input, {
                id: "recovery_code",
                ref: "recovery_code",
                modelValue: $data.form.recovery_code,
                "onUpdate:modelValue": ($event) => $data.form.recovery_code = $event,
                type: "text",
                class: "mt-1 block w-full",
                autocomplete: "one-time-code"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ])),
            createVNode("div", { class: "flex items-center justify-end mt-4" }, [
              createVNode("button", {
                type: "button",
                class: "text-sm text-gray-600 hover:text-gray-900 underline cursor-pointer",
                onClick: withModifiers($options.toggleRecovery, ["prevent"])
              }, [
                !$data.recovery ? (openBlock(), createBlock(Fragment, { key: 0 }, [
                  createTextVNode(" Use a recovery code ")
                ], 64)) : (openBlock(), createBlock(Fragment, { key: 1 }, [
                  createTextVNode(" Use an authentication code ")
                ], 64))
              ], 8, ["onClick"]),
              createVNode(_component_jet_button, {
                class: ["ml-4", { "opacity-25": $data.form.processing }],
                disabled: $data.form.processing
              }, {
                default: withCtx(() => [
                  createTextVNode(" Log in ")
                ]),
                _: 1
              }, 8, ["class", "disabled"])
            ])
          ], 40, ["onSubmit"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$1F = _sfc_main$1F.setup;
_sfc_main$1F.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/TwoFactorChallenge.vue");
  return _sfc_setup$1F ? _sfc_setup$1F(props, ctx) : void 0;
};
const TwoFactorChallenge = /* @__PURE__ */ _export_sfc(_sfc_main$1F, [["ssrRender", _sfc_ssrRender$1E]]);
const __vite_glob_0_11 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: TwoFactorChallenge
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1E = {
  components: {
    Head,
    JetAuthenticationCard,
    JetAuthenticationCardLogo,
    JetButton,
    Link
  },
  props: {
    status: String
  },
  data() {
    return {
      form: this.$inertia.form({})
    };
  },
  computed: {
    verificationLinkSent() {
      return this.status === "verification-link-sent";
    }
  },
  methods: {
    submit() {
      this.form.post(this.route("verification.send"));
    }
  }
};
function _sfc_ssrRender$1D(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = resolveComponent("Head");
  const _component_jet_authentication_card = resolveComponent("jet-authentication-card");
  const _component_jet_authentication_card_logo = resolveComponent("jet-authentication-card-logo");
  const _component_jet_button = resolveComponent("jet-button");
  const _component_Link = resolveComponent("Link");
  _push(`<!--[-->`);
  _push(ssrRenderComponent(_component_Head, { title: "Email Verification" }, null, _parent));
  _push(ssrRenderComponent(_component_jet_authentication_card, { class: "index_beams" }, {
    logo: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_authentication_card_logo)
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="mb-4 text-sm text-gray-600"${_scopeId}> Thanks for signing up! Before getting started, could you verify your email address by clicking on the link we just emailed to you? If you didn&#39;t receive the email, we will gladly send you another. </div>`);
        if ($options.verificationLinkSent) {
          _push2(`<div class="mb-4 font-medium text-sm text-green-600"${_scopeId}> A new verification link has been sent to the email address you provided during registration. </div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<form${_scopeId}><div class="mt-4 flex items-center justify-between"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_button, {
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Resend Verification Email `);
            } else {
              return [
                createTextVNode(" Resend Verification Email ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_Link, {
          href: _ctx.route("logout"),
          method: "post",
          as: "button",
          class: "underline text-sm text-gray-600 hover:text-gray-900"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Log Out`);
            } else {
              return [
                createTextVNode("Log Out")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></form>`);
      } else {
        return [
          createVNode("div", { class: "mb-4 text-sm text-gray-600" }, " Thanks for signing up! Before getting started, could you verify your email address by clicking on the link we just emailed to you? If you didn't receive the email, we will gladly send you another. "),
          $options.verificationLinkSent ? (openBlock(), createBlock("div", {
            key: 0,
            class: "mb-4 font-medium text-sm text-green-600"
          }, " A new verification link has been sent to the email address you provided during registration. ")) : createCommentVNode("", true),
          createVNode("form", {
            onSubmit: withModifiers($options.submit, ["prevent"])
          }, [
            createVNode("div", { class: "mt-4 flex items-center justify-between" }, [
              createVNode(_component_jet_button, {
                class: { "opacity-25": $data.form.processing },
                disabled: $data.form.processing
              }, {
                default: withCtx(() => [
                  createTextVNode(" Resend Verification Email ")
                ]),
                _: 1
              }, 8, ["class", "disabled"]),
              createVNode(_component_Link, {
                href: _ctx.route("logout"),
                method: "post",
                as: "button",
                class: "underline text-sm text-gray-600 hover:text-gray-900"
              }, {
                default: withCtx(() => [
                  createTextVNode("Log Out")
                ]),
                _: 1
              }, 8, ["href"])
            ])
          ], 40, ["onSubmit"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$1E = _sfc_main$1E.setup;
_sfc_main$1E.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Auth/VerifyEmail.vue");
  return _sfc_setup$1E ? _sfc_setup$1E(props, ctx) : void 0;
};
const VerifyEmail = /* @__PURE__ */ _export_sfc(_sfc_main$1E, [["ssrRender", _sfc_ssrRender$1D]]);
const __vite_glob_0_12 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: VerifyEmail
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1D = {
  components: {
    Link,
    AppLayout,
    Icon
  },
  props: {
    heading: String,
    description: String,
    name: String,
    path: String
  }
};
function _sfc_ssrRender$1C(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_icon = resolveComponent("icon");
  const _component_Link = resolveComponent("Link");
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "relative group bg-white p-6 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-500" }, _attrs))}><div><span class="rounded-lg inline-flex p-3 bg-sky-50 text-sky-700 ring-4 ring-white">`);
  if ($props.name === "users") {
    _push(ssrRenderComponent(_component_icon, { name: "users" }, null, _parent));
  } else {
    _push(`<!---->`);
  }
  if ($props.name === "announcements") {
    _push(ssrRenderComponent(_component_icon, { name: "announcements" }, null, _parent));
  } else {
    _push(`<!---->`);
  }
  if ($props.name === "curation") {
    _push(ssrRenderComponent(_component_icon, { name: "spectra" }, null, _parent));
  } else {
    _push(`<!---->`);
  }
  _push(`</span></div><div class="mt-8"><h3 class="text-lg font-medium">`);
  _push(ssrRenderComponent(_component_Link, {
    href: _ctx.route($props.path),
    class: "focus:outline-none"
  }, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<span class="absolute inset-0" aria-hidden="true"${_scopeId}></span> ${ssrInterpolate($props.heading)}`);
      } else {
        return [
          createVNode("span", {
            class: "absolute inset-0",
            "aria-hidden": "true"
          }),
          createTextVNode(" " + toDisplayString($props.heading), 1)
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</h3><p class="mt-2 text-sm text-gray-500">${ssrInterpolate($props.description)}</p></div><span class="pointer-events-none absolute top-6 right-6 text-gray-300 group-hover:text-gray-400" aria-hidden="true"><svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24"><path d="M20 4h1a1 1 0 00-1-1v1zm-1 12a1 1 0 102 0h-2zM8 3a1 1 0 000 2V3zM3.293 19.293a1 1 0 101.414 1.414l-1.414-1.414zM19 4v12h2V4h-2zm1-1H8v2h12V3zm-.707.293l-16 16 1.414 1.414 16-16-1.414-1.414z"></path></svg></span></div>`);
}
const _sfc_setup$1D = _sfc_main$1D.setup;
_sfc_main$1D.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/Blocks.vue");
  return _sfc_setup$1D ? _sfc_setup$1D(props, ctx) : void 0;
};
const Blocks = /* @__PURE__ */ _export_sfc(_sfc_main$1D, [["ssrRender", _sfc_ssrRender$1C]]);
const _sfc_main$1C = {
  components: {
    Link,
    AppLayout,
    Blocks,
    EllipsisVerticalIcon,
    RectangleStackIcon
  }
};
function _sfc_ssrRender$1B(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_blocks = resolveComponent("blocks");
  const _component_EllipsisVerticalIcon = resolveComponent("EllipsisVerticalIcon");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({ title: "Console" }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white border-b"${_scopeId}><div class="px-12"${_scopeId}><div class="flex flex-nowrap justify-between py-6"${_scopeId}><div${_scopeId}><div class="flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest"${_scopeId}> Console </div></div><div${_scopeId}> </div></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white border-b" }, [
            createVNode("div", { class: "px-12" }, [
              createVNode("div", { class: "flex flex-nowrap justify-between py-6" }, [
                createVNode("div", null, [
                  createVNode("div", { class: "flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest" }, " Console ")
                ]),
                createVNode("div", null, " ")
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="py-12 px-10"${_scopeId}><div${_scopeId}><div class="rounded-lg bg-gray-200 overflow-hidden shadow divide-y divide-gray-200 sm:divide-y-0 sm:grid sm:grid-cols-2 sm:gap-px"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_blocks, {
          heading: "Users & Profiles",
          description: "Allows managing users including edit/view their permissions.",
          name: "users",
          path: "console.users"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_blocks, {
          heading: "Announcements",
          description: "Manage announcements.",
          name: "announcements",
          path: "console.announcements"
        }, null, _parent2, _scopeId));
        _push2(`<div class="relative group bg-white p-6"${_scopeId}><div${_scopeId}><span class="rounded-lg inline-flex p-3 bg-sky-50 text-sky-700 ring-4 ring-white"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_EllipsisVerticalIcon, {
          class: "h-5 w-5",
          "aria-hidden": "true"
        }, null, _parent2, _scopeId));
        _push2(`</span></div><div class="mt-8"${_scopeId}><h3 class="text-lg font-medium"${_scopeId}><a target="_blank" href="/horizon" class="focus:outline-none"${_scopeId}><span class="absolute inset-0" aria-hidden="true"${_scopeId}></span> Queues </a></h3><p class="mt-2 text-sm text-gray-500"${_scopeId}> Monitor queues and jobs status </p></div><span class="pointer-events-none absolute top-6 right-6 text-gray-300 group-hover:text-gray-400" aria-hidden="true"${_scopeId}><svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24"${_scopeId}><path d="M20 4h1a1 1 0 00-1-1v1zm-1 12a1 1 0 102 0h-2zM8 3a1 1 0 000 2V3zM3.293 19.293a1 1 0 101.414 1.414l-1.414-1.414zM19 4v12h2V4h-2zm1-1H8v2h12V3zm-.707.293l-16 16 1.414 1.414 16-16-1.414-1.414z"${_scopeId}></path></svg></span></div>`);
        _push2(ssrRenderComponent(_component_blocks, {
          heading: "Curation",
          description: "Manage spectra meta-data.",
          name: "curation",
          path: "console.spectra"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "py-12 px-10" }, [
            createVNode("div", null, [
              createVNode("div", { class: "rounded-lg bg-gray-200 overflow-hidden shadow divide-y divide-gray-200 sm:divide-y-0 sm:grid sm:grid-cols-2 sm:gap-px" }, [
                createVNode(_component_blocks, {
                  heading: "Users & Profiles",
                  description: "Allows managing users including edit/view their permissions.",
                  name: "users",
                  path: "console.users"
                }),
                createVNode(_component_blocks, {
                  heading: "Announcements",
                  description: "Manage announcements.",
                  name: "announcements",
                  path: "console.announcements"
                }),
                createVNode("div", { class: "relative group bg-white p-6" }, [
                  createVNode("div", null, [
                    createVNode("span", { class: "rounded-lg inline-flex p-3 bg-sky-50 text-sky-700 ring-4 ring-white" }, [
                      createVNode(_component_EllipsisVerticalIcon, {
                        class: "h-5 w-5",
                        "aria-hidden": "true"
                      })
                    ])
                  ]),
                  createVNode("div", { class: "mt-8" }, [
                    createVNode("h3", { class: "text-lg font-medium" }, [
                      createVNode("a", {
                        target: "_blank",
                        href: "/horizon",
                        class: "focus:outline-none"
                      }, [
                        createVNode("span", {
                          class: "absolute inset-0",
                          "aria-hidden": "true"
                        }),
                        createTextVNode(" Queues ")
                      ])
                    ]),
                    createVNode("p", { class: "mt-2 text-sm text-gray-500" }, " Monitor queues and jobs status ")
                  ]),
                  createVNode("span", {
                    class: "pointer-events-none absolute top-6 right-6 text-gray-300 group-hover:text-gray-400",
                    "aria-hidden": "true"
                  }, [
                    (openBlock(), createBlock("svg", {
                      class: "h-6 w-6",
                      xmlns: "http://www.w3.org/2000/svg",
                      fill: "currentColor",
                      viewBox: "0 0 24 24"
                    }, [
                      createVNode("path", { d: "M20 4h1a1 1 0 00-1-1v1zm-1 12a1 1 0 102 0h-2zM8 3a1 1 0 000 2V3zM3.293 19.293a1 1 0 101.414 1.414l-1.414-1.414zM19 4v12h2V4h-2zm1-1H8v2h12V3zm-.707.293l-16 16 1.414 1.414 16-16-1.414-1.414z" })
                    ]))
                  ])
                ]),
                createVNode(_component_blocks, {
                  heading: "Curation",
                  description: "Manage spectra meta-data.",
                  name: "curation",
                  path: "console.spectra"
                })
              ])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1C = _sfc_main$1C.setup;
_sfc_main$1C.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Console/Index.vue");
  return _sfc_setup$1C ? _sfc_setup$1C(props, ctx) : void 0;
};
const Index$2 = /* @__PURE__ */ _export_sfc(_sfc_main$1C, [["ssrRender", _sfc_ssrRender$1B]]);
const __vite_glob_0_13 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Index$2
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1B = {
  components: {
    Dropdown
  },
  props: {
    modelValue: String,
    maxWidth: {
      type: Number,
      default: 300
    }
  }
};
function _sfc_ssrRender$1A(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_dropdown = resolveComponent("dropdown");
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex items-center" }, _attrs))}><div class="flex w-full bg-white shadow rounded">`);
  _push(ssrRenderComponent(_component_dropdown, {
    "auto-close": false,
    class: "px-4 md:px-6 rounded-l border-r hover:bg-gray-100 focus:border-white focus:shadow-outline focus:z-10",
    placement: "bottom-start"
  }, {
    dropdown: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="mt-2 px-4 py-6 w-screen shadow-xl bg-white rounded" style="${ssrRenderStyle({ maxWidth: `${$props.maxWidth}px` })}"${_scopeId}>`);
        ssrRenderSlot(_ctx.$slots, "default", {}, null, _push2, _parent2, _scopeId);
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", {
            class: "mt-2 px-4 py-6 w-screen shadow-xl bg-white rounded",
            style: { maxWidth: `${$props.maxWidth}px` }
          }, [
            renderSlot(_ctx.$slots, "default")
          ], 4)
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex items-baseline"${_scopeId}><span class="text-gray-700 hidden md:inline"${_scopeId}>Filter</span><svg class="w-2 h-2 fill-gray-700 md:ml-2" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 961.243 599.998"${_scopeId}><path d="M239.998 239.999L0 0h961.243L721.246 240c-131.999 132-240.28 240-240.624 239.999-.345-.001-108.625-108.001-240.624-240z"${_scopeId}></path></svg></div>`);
      } else {
        return [
          createVNode("div", { class: "flex items-baseline" }, [
            createVNode("span", { class: "text-gray-700 hidden md:inline" }, "Filter"),
            (openBlock(), createBlock("svg", {
              class: "w-2 h-2 fill-gray-700 md:ml-2",
              xmlns: "http://www.w3.org/2000/svg",
              viewBox: "0 0 961.243 599.998"
            }, [
              createVNode("path", { d: "M239.998 239.999L0 0h961.243L721.246 240c-131.999 132-240.28 240-240.624 239.999-.345-.001-108.625-108.001-240.624-240z" })
            ]))
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
  _push(`<input class="relative w-full border-0 px-6 py-3 rounded-r focus:shadow-outline" autocomplete="off" type="text" name="search" placeholder="Search…"${ssrRenderAttr("value", $props.modelValue)}></div><button class="ml-3 text-sm text-gray-500 hover:text-gray-700 focus:text-indigo-500" type="button"> Reset </button></div>`);
}
const _sfc_setup$1B = _sfc_main$1B.setup;
_sfc_main$1B.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/SearchFilter.vue");
  return _sfc_setup$1B ? _sfc_setup$1B(props, ctx) : void 0;
};
const SearchFilter = /* @__PURE__ */ _export_sfc(_sfc_main$1B, [["ssrRender", _sfc_ssrRender$1A]]);
const _sfc_main$1A = {
  components: {
    AppLayout,
    SearchFilter,
    JetDialogModal,
    JetSecondaryButton,
    JetButton,
    Link,
    BreadCrumbs
  },
  props: {
    users: Array
  },
  data() {
    return {
      pages: [
        { name: "Console", route: "console", current: false },
        { name: "Curation", route: "console.spectra", current: true }
      ]
    };
  },
  watch: {},
  methods: {}
};
function _sfc_ssrRender$1z(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_bread_crumbs = resolveComponent("bread-crumbs");
  const _component_Link = resolveComponent("Link");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({ title: "Curation" }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white border-b"${_scopeId}><div class="px-12"${_scopeId}><div class="flex flex-nowrap justify-between py-6"${_scopeId}><div${_scopeId}>`);
        _push2(ssrRenderComponent(_component_bread_crumbs, { pages: $data.pages }, null, _parent2, _scopeId));
        _push2(`<div class="mt-2 md:flex md:items-center md:justify-between"${_scopeId}><div class="flex-1 min-w-0"${_scopeId}><div class="flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest mt-3"${_scopeId}> Curate Spectra Meta-data </div></div></div></div></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white border-b" }, [
            createVNode("div", { class: "px-12" }, [
              createVNode("div", { class: "flex flex-nowrap justify-between py-6" }, [
                createVNode("div", null, [
                  createVNode(_component_bread_crumbs, { pages: $data.pages }, null, 8, ["pages"]),
                  createVNode("div", { class: "mt-2 md:flex md:items-center md:justify-between" }, [
                    createVNode("div", { class: "flex-1 min-w-0" }, [
                      createVNode("div", { class: "flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest mt-3" }, " Curate Spectra Meta-data ")
                    ])
                  ])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="p-10"${_scopeId}><div class="border divide-y divide-gray-200 overflow-hidden rounded-lg bg-gray-200 shadow sm:grid sm:grid-cols-2 sm:gap-px sm:divide-y-0"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_Link, { href: "/admin/snapshots" }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div class="rounded-tl-lg rounded-tr-lg sm:rounded-tr-none group relative bg-white p-6"${_scopeId2}><div${_scopeId2}><span class="inline-flex rounded-lg p-3 bg-teal-50 text-teal-700 ring-4 ring-white"${_scopeId2}><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6"${_scopeId2}><path stroke-linecap="round" stroke-linejoin="round" d="M2.25 15.75l5.159-5.159a2.25 2.25 0 013.182 0l5.159 5.159m-1.5-1.5l1.409-1.409a2.25 2.25 0 013.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 001.5-1.5V6a1.5 1.5 0 00-1.5-1.5H3.75A1.5 1.5 0 002.25 6v12a1.5 1.5 0 001.5 1.5zm10.5-11.25h.008v.008h-.008V8.25zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z"${_scopeId2}></path></svg></span></div><div class="mt-8"${_scopeId2}><h3 class="text-base font-semibold leading-6 text-gray-900"${_scopeId2}><a class="focus:outline-none"${_scopeId2}><span class="absolute inset-0" aria-hidden="true"${_scopeId2}></span> Import spectra snapshots </a></h3><p class="mt-2 text-sm text-gray-500"${_scopeId2}> Imports missing spectra snapshots for spectra card previews </p></div><span class="pointer-events-none absolute right-6 top-6 text-gray-300 group-hover:text-gray-400" aria-hidden="true"${_scopeId2}><svg class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24"${_scopeId2}><path d="M20 4h1a1 1 0 00-1-1v1zm-1 12a1 1 0 102 0h-2zM8 3a1 1 0 000 2V3zM3.293 19.293a1 1 0 101.414 1.414l-1.414-1.414zM19 4v12h2V4h-2zm1-1H8v2h12V3zm-.707.293l-16 16 1.414 1.414 16-16-1.414-1.414z"${_scopeId2}></path></svg></span></div>`);
            } else {
              return [
                createVNode("div", { class: "rounded-tl-lg rounded-tr-lg sm:rounded-tr-none group relative bg-white p-6" }, [
                  createVNode("div", null, [
                    createVNode("span", { class: "inline-flex rounded-lg p-3 bg-teal-50 text-teal-700 ring-4 ring-white" }, [
                      (openBlock(), createBlock("svg", {
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        "stroke-width": "1.5",
                        stroke: "currentColor",
                        class: "w-6 h-6"
                      }, [
                        createVNode("path", {
                          "stroke-linecap": "round",
                          "stroke-linejoin": "round",
                          d: "M2.25 15.75l5.159-5.159a2.25 2.25 0 013.182 0l5.159 5.159m-1.5-1.5l1.409-1.409a2.25 2.25 0 013.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 001.5-1.5V6a1.5 1.5 0 00-1.5-1.5H3.75A1.5 1.5 0 002.25 6v12a1.5 1.5 0 001.5 1.5zm10.5-11.25h.008v.008h-.008V8.25zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z"
                        })
                      ]))
                    ])
                  ]),
                  createVNode("div", { class: "mt-8" }, [
                    createVNode("h3", { class: "text-base font-semibold leading-6 text-gray-900" }, [
                      createVNode("a", { class: "focus:outline-none" }, [
                        createVNode("span", {
                          class: "absolute inset-0",
                          "aria-hidden": "true"
                        }),
                        createTextVNode(" Import spectra snapshots ")
                      ])
                    ]),
                    createVNode("p", { class: "mt-2 text-sm text-gray-500" }, " Imports missing spectra snapshots for spectra card previews ")
                  ]),
                  createVNode("span", {
                    class: "pointer-events-none absolute right-6 top-6 text-gray-300 group-hover:text-gray-400",
                    "aria-hidden": "true"
                  }, [
                    (openBlock(), createBlock("svg", {
                      class: "h-6 w-6",
                      fill: "currentColor",
                      viewBox: "0 0 24 24"
                    }, [
                      createVNode("path", { d: "M20 4h1a1 1 0 00-1-1v1zm-1 12a1 1 0 102 0h-2zM8 3a1 1 0 000 2V3zM3.293 19.293a1 1 0 101.414 1.414l-1.414-1.414zM19 4v12h2V4h-2zm1-1H8v2h12V3zm-.707.293l-16 16 1.414 1.414 16-16-1.414-1.414z" })
                    ]))
                  ])
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          createVNode("div", { class: "p-10" }, [
            createVNode("div", { class: "border divide-y divide-gray-200 overflow-hidden rounded-lg bg-gray-200 shadow sm:grid sm:grid-cols-2 sm:gap-px sm:divide-y-0" }, [
              createVNode(_component_Link, { href: "/admin/snapshots" }, {
                default: withCtx(() => [
                  createVNode("div", { class: "rounded-tl-lg rounded-tr-lg sm:rounded-tr-none group relative bg-white p-6" }, [
                    createVNode("div", null, [
                      createVNode("span", { class: "inline-flex rounded-lg p-3 bg-teal-50 text-teal-700 ring-4 ring-white" }, [
                        (openBlock(), createBlock("svg", {
                          xmlns: "http://www.w3.org/2000/svg",
                          fill: "none",
                          viewBox: "0 0 24 24",
                          "stroke-width": "1.5",
                          stroke: "currentColor",
                          class: "w-6 h-6"
                        }, [
                          createVNode("path", {
                            "stroke-linecap": "round",
                            "stroke-linejoin": "round",
                            d: "M2.25 15.75l5.159-5.159a2.25 2.25 0 013.182 0l5.159 5.159m-1.5-1.5l1.409-1.409a2.25 2.25 0 013.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 001.5-1.5V6a1.5 1.5 0 00-1.5-1.5H3.75A1.5 1.5 0 002.25 6v12a1.5 1.5 0 001.5 1.5zm10.5-11.25h.008v.008h-.008V8.25zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z"
                          })
                        ]))
                      ])
                    ]),
                    createVNode("div", { class: "mt-8" }, [
                      createVNode("h3", { class: "text-base font-semibold leading-6 text-gray-900" }, [
                        createVNode("a", { class: "focus:outline-none" }, [
                          createVNode("span", {
                            class: "absolute inset-0",
                            "aria-hidden": "true"
                          }),
                          createTextVNode(" Import spectra snapshots ")
                        ])
                      ]),
                      createVNode("p", { class: "mt-2 text-sm text-gray-500" }, " Imports missing spectra snapshots for spectra card previews ")
                    ]),
                    createVNode("span", {
                      class: "pointer-events-none absolute right-6 top-6 text-gray-300 group-hover:text-gray-400",
                      "aria-hidden": "true"
                    }, [
                      (openBlock(), createBlock("svg", {
                        class: "h-6 w-6",
                        fill: "currentColor",
                        viewBox: "0 0 24 24"
                      }, [
                        createVNode("path", { d: "M20 4h1a1 1 0 00-1-1v1zm-1 12a1 1 0 102 0h-2zM8 3a1 1 0 000 2V3zM3.293 19.293a1 1 0 101.414 1.414l-1.414-1.414zM19 4v12h2V4h-2zm1-1H8v2h12V3zm-.707.293l-16 16 1.414 1.414 16-16-1.414-1.414z" })
                      ]))
                    ])
                  ])
                ]),
                _: 1
              })
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1A = _sfc_main$1A.setup;
_sfc_main$1A.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Console/Spectra/Index.vue");
  return _sfc_setup$1A ? _sfc_setup$1A(props, ctx) : void 0;
};
const Index$1 = /* @__PURE__ */ _export_sfc(_sfc_main$1A, [["ssrRender", _sfc_ssrRender$1z]]);
const __vite_glob_0_14 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Index$1
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1z = {
  components: {},
  props: {
    id: Number
  },
  emits: ["loading"],
  setup() {
  },
  data() {
    return {
      spectraError: null
    };
  },
  computed: {
    url() {
      return String(this.$page.props.url) ? String(this.$page.props.url) : "https://nmrxiv.org";
    },
    nmriumURL() {
      return this.$page.props.nmriumURL ? String(this.$page.props.nmriumURL + "&id=" + Math.random()) : "https://nmriumdev.nmrxiv.org?defaultEmptyMessage=''&workspace=embedded&id=" + Math.random();
    }
  },
  mounted() {
    this.registerEvents();
  },
  methods: {
    registerEvents() {
      const saveNMRiumUpdates = (e2) => {
        const { data, type } = e2.data;
        if (type == "nmr-wrapper:action-response") {
          if (e2.origin != "https://nmriumdev.nmrxiv.org" && e2.origin != "https://nmrium.nmrxiv.org") {
            return;
          }
          let actionType = data.type;
          if (actionType == "exportSpectraViewerAsBlob") {
            this.saveDSPreview(data.data);
          }
        }
        if (data && data.source == "data") {
          if (e2.origin != "https://nmriumdev.nmrxiv.org" && e2.origin != "https://nmrium.nmrxiv.org") {
            return;
          }
          if (type == "nmr-wrapper:error") {
            this.spectraError = e2.data;
            this.updateLoadingStatus(false);
            return;
          }
          let state = data.state;
          this.version = state.version;
          let actionType = state.data.actionType;
          if (type == "nmr-wrapper:data-change") {
            if (state.data.spectra.length > 0) {
              console.log(actionType);
              if (actionType == "INITIATE") {
                this.exportPreview();
                return;
              }
            }
          }
        }
      };
      if (!this.$props.eventRegistered) {
        window.addEventListener("message", saveNMRiumUpdates);
        this.$props.eventRegistered = true;
      } else {
        window.removeEventListener("message", saveNMRiumUpdates);
        this.$props.eventRegistered = false;
      }
    },
    exportPreview() {
      setTimeout(() => {
        const iframe = window.frames.snapshotNMRiumIframe;
        if (iframe) {
          let data = {
            type: "exportSpectraViewerAsBlob"
          };
          iframe.postMessage(
            {
              type: `nmr-wrapper:action-request`,
              data
            },
            "*"
          );
        }
      }, 1e3);
    },
    loadSpectra() {
      const iframe = window.frames.snapshotNMRiumIframe;
      this.spectraError = null;
      if (iframe) {
        axios.get("/dashboard/datasets/" + this.id + "/nmriumInfo").then((response) => {
          let nmrium_info = response.data;
          if (nmrium_info) {
            let data = {
              data: nmrium_info,
              type: "nmrium"
            };
            iframe.postMessage(
              { type: `nmr-wrapper:load`, data },
              "*"
            );
          } else {
            this.loadFromURLs(null);
          }
        });
      }
    },
    saveDSPreview(data) {
      if (this.id) {
        const reader = new FileReader();
        reader.addEventListener("loadend", () => {
          let svg = reader.result;
          axios.post("/dashboard/datasets/" + this.id + "/preview", {
            img: svg
          }).then((response) => {
            this.updateLoadingStatus(false, "dataset loaded");
          });
        });
        reader.readAsText(data.blob);
      }
    },
    updateLoadingStatus(status, message) {
      this.$emit("loading", {
        status,
        message
      });
    }
  }
};
function _sfc_ssrRender$1y(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "p-6" }, _attrs))}><iframe name="snapshotNMRiumIframe" frameborder="0" allowfullscreen class="rounded-md border" style="${ssrRenderStyle({ "width": "100%", "height": "75vh", "max-height": "600px" })}"${ssrRenderAttr("src", $options.nmriumURL)}></iframe></div>`);
}
const _sfc_setup$1z = _sfc_main$1z.setup;
_sfc_main$1z.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/SpectraSnapshot.vue");
  return _sfc_setup$1z ? _sfc_setup$1z(props, ctx) : void 0;
};
const SpectraSnapshot = /* @__PURE__ */ _export_sfc(_sfc_main$1z, [["ssrRender", _sfc_ssrRender$1y]]);
const _sfc_main$1y = {
  components: {
    AppLayout,
    SearchFilter,
    JetDialogModal,
    JetSecondaryButton,
    JetButton,
    Link,
    BreadCrumbs,
    SpectraSnapshot
  },
  props: {
    users: Array,
    datasets: Array
  },
  data() {
    return {
      currentId: null,
      pages: [
        { name: "Console", route: "console", current: false },
        { name: "Curation", route: "console.spectra", current: true },
        {
          name: "Spectra Snapshots",
          route: "console.spectra.snapshots",
          current: true
        }
      ],
      index: 0,
      autoImport: false
    };
  },
  watch: {},
  mounted() {
    if (this.datasets && this.autoImport) {
      this.currentId = this.datasets[this.index];
    }
  },
  methods: {
    status(e2) {
      if (!e2.status && e2.message == "dataset loaded") {
        if (this.autoImport) {
          this.index = this.index + 1;
          this.loadSpectra();
        }
      }
    },
    toggleAutoImport() {
      this.autoImport = !this.autoImport;
      if (this.autoImport) {
        this.loadSpectra();
      }
    },
    loadSpectra() {
      this.currentId = this.datasets[this.index];
      this.$refs.spectraEditorREF.loadSpectra();
    }
  }
};
function _sfc_ssrRender$1x(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_bread_crumbs = resolveComponent("bread-crumbs");
  const _component_SpectraSnapshot = resolveComponent("SpectraSnapshot");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({ title: "Spectra Snapshots" }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white border-b"${_scopeId}><div class="px-12"${_scopeId}><div class="flex flex-nowrap justify-between py-6"${_scopeId}><div${_scopeId}>`);
        _push2(ssrRenderComponent(_component_bread_crumbs, { pages: $data.pages }, null, _parent2, _scopeId));
        _push2(`<div class="mt-2 md:flex md:items-center md:justify-between"${_scopeId}><div class="flex-1 min-w-0"${_scopeId}><div class="flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest mt-3"${_scopeId}> Spectra SnapShots `);
        if ($data.currentId) {
          _push2(`<span${_scopeId}>(Spectra ID: ${ssrInterpolate($data.currentId)})</span>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div></div></div>`);
        if ($props.datasets.length > 0 && this.datasets.length >= this.index + 1) {
          _push2(`<div class="mx-auto flex max-w-2xl items-center justify-between gap-x-8 lg:mx-0 lg:max-w-none"${_scopeId}><div class="flex items-center gap-x-4 sm:gap-x-6"${_scopeId}><a class="text-sm font-semibold leading-6 text-gray-900 sm:block"${_scopeId}>${ssrInterpolate($data.index + 1)} / ${ssrInterpolate($props.datasets.length)}</a>`);
          if (!$data.autoImport) {
            _push2(`<a class="rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"${_scopeId}> Import </a>`);
          } else {
            _push2(`<a class="rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"${_scopeId}> Pause </a>`);
          }
          _push2(`</div></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white border-b" }, [
            createVNode("div", { class: "px-12" }, [
              createVNode("div", { class: "flex flex-nowrap justify-between py-6" }, [
                createVNode("div", null, [
                  createVNode(_component_bread_crumbs, { pages: $data.pages }, null, 8, ["pages"]),
                  createVNode("div", { class: "mt-2 md:flex md:items-center md:justify-between" }, [
                    createVNode("div", { class: "flex-1 min-w-0" }, [
                      createVNode("div", { class: "flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest mt-3" }, [
                        createTextVNode(" Spectra SnapShots "),
                        $data.currentId ? (openBlock(), createBlock("span", { key: 0 }, "(Spectra ID: " + toDisplayString($data.currentId) + ")", 1)) : createCommentVNode("", true)
                      ])
                    ])
                  ])
                ]),
                $props.datasets.length > 0 && this.datasets.length >= this.index + 1 ? (openBlock(), createBlock("div", {
                  key: 0,
                  class: "mx-auto flex max-w-2xl items-center justify-between gap-x-8 lg:mx-0 lg:max-w-none"
                }, [
                  createVNode("div", { class: "flex items-center gap-x-4 sm:gap-x-6" }, [
                    createVNode("a", { class: "text-sm font-semibold leading-6 text-gray-900 sm:block" }, toDisplayString($data.index + 1) + " / " + toDisplayString($props.datasets.length), 1),
                    !$data.autoImport ? (openBlock(), createBlock("a", {
                      key: 0,
                      onClick: $options.toggleAutoImport,
                      class: "rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
                    }, " Import ", 8, ["onClick"])) : (openBlock(), createBlock("a", {
                      key: 1,
                      onClick: $options.toggleAutoImport,
                      class: "rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
                    }, " Pause ", 8, ["onClick"]))
                  ])
                ])) : createCommentVNode("", true)
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($props.datasets.length > 0) {
          _push2(`<div${_scopeId}>`);
          if (this.datasets.length == this.index) {
            _push2(`<div class="p-10"${_scopeId}><button type="button" class="relative block w-full rounded-lg border-2 border-dashed border-gray-300 p-12 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"${_scopeId}><svg class="mx-auto h-12 w-12 text-green-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z"${_scopeId}></path></svg><span class="mt-2 block text-sm font-semibold text-gray-900"${_scopeId}>Import complete</span></button></div>`);
          } else {
            _push2(`<div${_scopeId}>`);
            if ($data.currentId) {
              _push2(`<div${_scopeId}>`);
              _push2(ssrRenderComponent(_component_SpectraSnapshot, {
                ref: "spectraEditorREF",
                id: $data.currentId,
                onLoading: $options.status
              }, null, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              _push2(`<!---->`);
            }
            if (!$data.autoImport) {
              _push2(`<div class="p-10"${_scopeId}><button type="button" class="relative block w-full rounded-lg border-2 border-dashed border-gray-300 p-12 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="mx-auto h-12 w-12 text-blue-400"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M3.75 12h16.5m-16.5 3.75h16.5M3.75 19.5h16.5M5.625 4.5h12.75a1.875 1.875 0 010 3.75H5.625a1.875 1.875 0 010-3.75z"${_scopeId}></path></svg><div class="mt-6"${_scopeId}><button type="button" class="inline-flex items-center rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"${_scopeId}><svg class="-ml-0.5 mr-1.5 h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"${_scopeId}><path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z"${_scopeId}></path></svg> Import </button></div></button></div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div>`);
          }
          _push2(`</div>`);
        } else {
          _push2(`<div class="p-10"${_scopeId}><button type="button" class="relative block w-full rounded-lg border-2 border-dashed border-gray-300 p-12 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"${_scopeId}><svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M2.25 15.75l5.159-5.159a2.25 2.25 0 013.182 0l5.159 5.159m-1.5-1.5l1.409-1.409a2.25 2.25 0 013.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 001.5-1.5V6a1.5 1.5 0 00-1.5-1.5H3.75A1.5 1.5 0 002.25 6v12a1.5 1.5 0 001.5 1.5zm10.5-11.25h.008v.008h-.008V8.25zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z"${_scopeId}></path></svg><span class="mt-2 block text-sm font-semibold text-gray-900"${_scopeId}>Nothing to import</span></button></div>`);
        }
      } else {
        return [
          $props.datasets.length > 0 ? (openBlock(), createBlock("div", { key: 0 }, [
            this.datasets.length == this.index ? (openBlock(), createBlock("div", {
              key: 0,
              class: "p-10"
            }, [
              createVNode("button", {
                type: "button",
                class: "relative block w-full rounded-lg border-2 border-dashed border-gray-300 p-12 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
              }, [
                (openBlock(), createBlock("svg", {
                  class: "mx-auto h-12 w-12 text-green-400",
                  xmlns: "http://www.w3.org/2000/svg",
                  fill: "none",
                  viewBox: "0 0 24 24",
                  "stroke-width": "1.5",
                  stroke: "currentColor"
                }, [
                  createVNode("path", {
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round",
                    d: "M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                  })
                ])),
                createVNode("span", { class: "mt-2 block text-sm font-semibold text-gray-900" }, "Import complete")
              ])
            ])) : (openBlock(), createBlock("div", { key: 1 }, [
              $data.currentId ? (openBlock(), createBlock("div", { key: 0 }, [
                createVNode(_component_SpectraSnapshot, {
                  ref: "spectraEditorREF",
                  id: $data.currentId,
                  onLoading: $options.status
                }, null, 8, ["id", "onLoading"])
              ])) : createCommentVNode("", true),
              !$data.autoImport ? (openBlock(), createBlock("div", {
                key: 1,
                class: "p-10"
              }, [
                createVNode("button", {
                  type: "button",
                  class: "relative block w-full rounded-lg border-2 border-dashed border-gray-300 p-12 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
                }, [
                  (openBlock(), createBlock("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    fill: "none",
                    viewBox: "0 0 24 24",
                    "stroke-width": "1.5",
                    stroke: "currentColor",
                    class: "mx-auto h-12 w-12 text-blue-400"
                  }, [
                    createVNode("path", {
                      "stroke-linecap": "round",
                      "stroke-linejoin": "round",
                      d: "M3.75 12h16.5m-16.5 3.75h16.5M3.75 19.5h16.5M5.625 4.5h12.75a1.875 1.875 0 010 3.75H5.625a1.875 1.875 0 010-3.75z"
                    })
                  ])),
                  createVNode("div", { class: "mt-6" }, [
                    createVNode("button", {
                      onClick: $options.toggleAutoImport,
                      type: "button",
                      class: "inline-flex items-center rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
                    }, [
                      (openBlock(), createBlock("svg", {
                        class: "-ml-0.5 mr-1.5 h-5 w-5",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true"
                      }, [
                        createVNode("path", { d: "M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z" })
                      ])),
                      createTextVNode(" Import ")
                    ], 8, ["onClick"])
                  ])
                ])
              ])) : createCommentVNode("", true)
            ]))
          ])) : (openBlock(), createBlock("div", {
            key: 1,
            class: "p-10"
          }, [
            createVNode("button", {
              type: "button",
              class: "relative block w-full rounded-lg border-2 border-dashed border-gray-300 p-12 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
            }, [
              (openBlock(), createBlock("svg", {
                class: "mx-auto h-12 w-12 text-gray-400",
                fill: "none",
                viewBox: "0 0 24 24",
                "stroke-width": "1.5",
                stroke: "currentColor",
                "aria-hidden": "true"
              }, [
                createVNode("path", {
                  "stroke-linecap": "round",
                  "stroke-linejoin": "round",
                  d: "M2.25 15.75l5.159-5.159a2.25 2.25 0 013.182 0l5.159 5.159m-1.5-1.5l1.409-1.409a2.25 2.25 0 013.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 001.5-1.5V6a1.5 1.5 0 00-1.5-1.5H3.75A1.5 1.5 0 002.25 6v12a1.5 1.5 0 001.5 1.5zm10.5-11.25h.008v.008h-.008V8.25zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z"
                })
              ])),
              createVNode("span", { class: "mt-2 block text-sm font-semibold text-gray-900" }, "Nothing to import")
            ])
          ]))
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1y = _sfc_main$1y.setup;
_sfc_main$1y.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Console/Spectra/Snapshot.vue");
  return _sfc_setup$1y ? _sfc_setup$1y(props, ctx) : void 0;
};
const Snapshot = /* @__PURE__ */ _export_sfc(_sfc_main$1y, [["ssrRender", _sfc_ssrRender$1x]]);
const __vite_glob_0_15 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Snapshot
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1x = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    SelectOrcidId
  },
  props: ["user"],
  data() {
    return {
      form: this.$inertia.form({
        _method: this.user ? "PUT" : "POST",
        first_name: this.user ? this.user.first_name : "",
        last_name: this.user ? this.user.last_name : "",
        email: this.user ? this.user.email : "",
        username: this.user ? this.user.username : "",
        orcid_id: this.user ? this.user.orcid_id : "",
        password: null,
        password_confirmation: null,
        terms: true,
        photo: null
      }),
      error: {},
      photoPreview: null
    };
  },
  methods: {
    findOrcidID() {
      this.error.orcid = "";
      if (this.form.first_name && this.form.last_name) {
        this.selectOrcidIdElement.findOrcidID(
          this.form.first_name,
          this.form.last_name
        );
      } else {
        this.error.orcid = "Please enter first name and last name";
      }
    },
    updateProfileInformation() {
      if (this.$refs.photo) {
        this.form.photo = this.$refs.photo.files[0];
      }
      if (this.user) {
        this.form.post(route("console.users.update", this.user.id), {
          errorBag: "updateProfileInformation",
          preserveScroll: true,
          onSuccess: () => this.clearPhotoFileInput()
        });
      } else {
        this.form.post(route("console.users.store"), {
          errorBag: "updateProfileInformation",
          preserveScroll: true,
          onSuccess: () => this.clearPhotoFileInput()
        });
      }
    },
    selectNewPhoto() {
      this.$refs.photo.click();
    },
    updatePhotoPreview() {
      const photo = this.$refs.photo.files[0];
      if (!photo)
        return;
      const reader = new FileReader();
      reader.onload = (e2) => {
        this.photoPreview = e2.target.result;
      };
      reader.readAsDataURL(photo);
    },
    deletePhoto() {
      this.$inertia.delete(route("users.destroy-photo", this.user.id), {
        preserveScroll: true,
        onSuccess: () => {
          this.photoPreview = null;
          this.clearPhotoFileInput();
        }
      });
    },
    clearPhotoFileInput() {
      var _a;
      if ((_a = this.$refs.photo) == null ? void 0 : _a.value) {
        this.$refs.photo.value = null;
      }
    },
    back() {
      window.history.back();
    }
  }
};
function _sfc_ssrRender$1w(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = resolveComponent("jet-form-section");
  const _component_jet_label = resolveComponent("jet-label");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_action_message = resolveComponent("jet-action-message");
  const _component_jet_button = resolveComponent("jet-button");
  _push(ssrRenderComponent(_component_jet_form_section, mergeProps({ onSubmitted: $options.updateProfileInformation }, _attrs), {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Profile Information `);
      } else {
        return [
          createTextVNode(" Profile Information ")
        ];
      }
    }),
    description: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Update user&#39;s profile information and email address. `);
      } else {
        return [
          createTextVNode(" Update user's profile information and email address. ")
        ];
      }
    }),
    form: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($props.user && _ctx.$page.props.jetstream.managesProfilePhotos) {
          _push2(`<div class="col-span-6 sm:col-span-4"${_scopeId}><input type="file" class="hidden"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_jet_label, {
            for: "photo",
            value: "Photo"
          }, null, _parent2, _scopeId));
          if ($props.user) {
            _push2(`<div style="${ssrRenderStyle(!$data.photoPreview ? null : { display: "none" })}" class="mt-2"${_scopeId}><img${ssrRenderAttr("src", $props.user.profile_photo_url)}${ssrRenderAttr("alt", $props.user.first_name)} class="rounded-full h-20 w-20 object-cover"${_scopeId}></div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`<div style="${ssrRenderStyle($data.photoPreview ? null : { display: "none" })}" class="mt-2"${_scopeId}><span class="block rounded-full w-20 h-20" style="${ssrRenderStyle(
            "background-size: cover; background-repeat: no-repeat; background-position: center center; background-image: url('" + $data.photoPreview + "');"
          )}"${_scopeId}></span></div>`);
          _push2(ssrRenderComponent(_component_jet_secondary_button, {
            class: "mt-2 mr-2",
            type: "button",
            onClick: $options.selectNewPhoto
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Select A New Photo `);
              } else {
                return [
                  createTextVNode(" Select A New Photo ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          if ($props.user && $props.user.profile_photo_url) {
            _push2(ssrRenderComponent(_component_jet_secondary_button, {
              type: "button",
              class: "mt-2",
              onClick: $options.deletePhoto
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Remove Photo `);
                } else {
                  return [
                    createTextVNode(" Remove Photo ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            _push2(`<!---->`);
          }
          _push2(ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.photo,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "first_name",
          value: "First Name"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "first_name",
          modelValue: $data.form.first_name,
          "onUpdate:modelValue": ($event) => $data.form.first_name = $event,
          type: "text",
          class: "mt-1 block w-full",
          autocomplete: "first_name"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.first_name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "last_name",
          value: "Last Name"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "last_name",
          modelValue: $data.form.last_name,
          "onUpdate:modelValue": ($event) => $data.form.last_name = $event,
          type: "text",
          class: "mt-1 block w-full",
          autocomplete: "last_name"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.last_name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "email",
          value: "Email"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "email",
          modelValue: $data.form.email,
          "onUpdate:modelValue": ($event) => $data.form.email = $event,
          type: "email",
          class: "mt-1 block w-full"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.email,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "username",
          value: "Username"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "username",
          modelValue: $data.form.username,
          "onUpdate:modelValue": ($event) => $data.form.username = $event,
          type: "text",
          class: "mt-1 block w-full",
          autocomplete: "username"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.username,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "orcid",
          value: "ORCID iD"
        }, null, _parent2, _scopeId));
        _push2(`<div class="mt-1 flex rounded-md shadow-sm"${_scopeId}><div class="relative flex items-stretch flex-grow focus-within:z-10"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "orcid",
          modelValue: $data.form.orcid_id,
          "onUpdate:modelValue": ($event) => $data.form.orcid_id = $event,
          type: "text",
          class: "rounded-l-md focus:ring-indigo-200 focus:border-indigo-200 block w-full rounded-none sm:text-medium border-gray-300"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="tooltip -ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500 cursor-pointer"${_scopeId}><button type="button" class=""${_scopeId}><img alt="ORCID logo" src="https://orcid.org/assets/vectors/orcid.logo.icon.svg" width="20" height="20"${_scopeId}></button><span class="bg-gray-900 text-center text-white px-2 py-1 shadow-lg rounded-md tooltiptextbottom"${_scopeId}>Click to find ORCID iD</span></div></div>`);
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.error.orcid,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
        if (!$props.user) {
          _push2(`<div class="col-span-6 sm:col-span-4"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_jet_label, {
            for: "password",
            value: "Password"
          }, null, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_jet_input, {
            id: "password",
            ref: "password",
            modelValue: $data.form.password,
            "onUpdate:modelValue": ($event) => $data.form.password = $event,
            type: "password",
            class: "mt-1 block w-full",
            autocomplete: "new-password"
          }, null, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.password,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        if (!$props.user) {
          _push2(`<div class="col-span-6 sm:col-span-4"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_jet_label, {
            for: "password_confirmation",
            value: "Confirm Password"
          }, null, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_jet_input, {
            id: "password_confirmation",
            modelValue: $data.form.password_confirmation,
            "onUpdate:modelValue": ($event) => $data.form.password_confirmation = $event,
            type: "password",
            class: "mt-1 block w-full",
            autocomplete: "new-password"
          }, null, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.password_confirmation,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          $props.user && _ctx.$page.props.jetstream.managesProfilePhotos ? (openBlock(), createBlock("div", {
            key: 0,
            class: "col-span-6 sm:col-span-4"
          }, [
            createVNode("input", {
              ref: "photo",
              type: "file",
              class: "hidden",
              onChange: $options.updatePhotoPreview
            }, null, 40, ["onChange"]),
            createVNode(_component_jet_label, {
              for: "photo",
              value: "Photo"
            }),
            $props.user ? withDirectives((openBlock(), createBlock("div", {
              key: 0,
              class: "mt-2"
            }, [
              createVNode("img", {
                src: $props.user.profile_photo_url,
                alt: $props.user.first_name,
                class: "rounded-full h-20 w-20 object-cover"
              }, null, 8, ["src", "alt"])
            ], 512)), [
              [vShow, !$data.photoPreview]
            ]) : createCommentVNode("", true),
            withDirectives(createVNode("div", { class: "mt-2" }, [
              createVNode("span", {
                class: "block rounded-full w-20 h-20",
                style: "background-size: cover; background-repeat: no-repeat; background-position: center center; background-image: url('" + $data.photoPreview + "');"
              }, null, 4)
            ], 512), [
              [vShow, $data.photoPreview]
            ]),
            createVNode(_component_jet_secondary_button, {
              class: "mt-2 mr-2",
              type: "button",
              onClick: withModifiers($options.selectNewPhoto, ["prevent"])
            }, {
              default: withCtx(() => [
                createTextVNode(" Select A New Photo ")
              ]),
              _: 1
            }, 8, ["onClick"]),
            $props.user && $props.user.profile_photo_url ? (openBlock(), createBlock(_component_jet_secondary_button, {
              key: 1,
              type: "button",
              class: "mt-2",
              onClick: withModifiers($options.deletePhoto, ["prevent"])
            }, {
              default: withCtx(() => [
                createTextVNode(" Remove Photo ")
              ]),
              _: 1
            }, 8, ["onClick"])) : createCommentVNode("", true),
            createVNode(_component_jet_input_error, {
              message: $data.form.errors.photo,
              class: "mt-2"
            }, null, 8, ["message"])
          ])) : createCommentVNode("", true),
          createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            createVNode(_component_jet_label, {
              for: "first_name",
              value: "First Name"
            }),
            createVNode(_component_jet_input, {
              id: "first_name",
              modelValue: $data.form.first_name,
              "onUpdate:modelValue": ($event) => $data.form.first_name = $event,
              type: "text",
              class: "mt-1 block w-full",
              autocomplete: "first_name"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            createVNode(_component_jet_input_error, {
              message: $data.form.errors.first_name,
              class: "mt-2"
            }, null, 8, ["message"])
          ]),
          createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            createVNode(_component_jet_label, {
              for: "last_name",
              value: "Last Name"
            }),
            createVNode(_component_jet_input, {
              id: "last_name",
              modelValue: $data.form.last_name,
              "onUpdate:modelValue": ($event) => $data.form.last_name = $event,
              type: "text",
              class: "mt-1 block w-full",
              autocomplete: "last_name"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            createVNode(_component_jet_input_error, {
              message: $data.form.errors.last_name,
              class: "mt-2"
            }, null, 8, ["message"])
          ]),
          createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            createVNode(_component_jet_label, {
              for: "email",
              value: "Email"
            }),
            createVNode(_component_jet_input, {
              id: "email",
              modelValue: $data.form.email,
              "onUpdate:modelValue": ($event) => $data.form.email = $event,
              type: "email",
              class: "mt-1 block w-full"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            createVNode(_component_jet_input_error, {
              message: $data.form.errors.email,
              class: "mt-2"
            }, null, 8, ["message"])
          ]),
          createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            createVNode(_component_jet_label, {
              for: "username",
              value: "Username"
            }),
            createVNode(_component_jet_input, {
              id: "username",
              modelValue: $data.form.username,
              "onUpdate:modelValue": ($event) => $data.form.username = $event,
              type: "text",
              class: "mt-1 block w-full",
              autocomplete: "username"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            createVNode(_component_jet_input_error, {
              message: $data.form.errors.username,
              class: "mt-2"
            }, null, 8, ["message"])
          ]),
          createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            createVNode(_component_jet_label, {
              for: "orcid",
              value: "ORCID iD"
            }),
            createVNode("div", { class: "mt-1 flex rounded-md shadow-sm" }, [
              createVNode("div", { class: "relative flex items-stretch flex-grow focus-within:z-10" }, [
                createVNode(_component_jet_input, {
                  id: "orcid",
                  modelValue: $data.form.orcid_id,
                  "onUpdate:modelValue": ($event) => $data.form.orcid_id = $event,
                  type: "text",
                  class: "rounded-l-md focus:ring-indigo-200 focus:border-indigo-200 block w-full rounded-none sm:text-medium border-gray-300"
                }, null, 8, ["modelValue", "onUpdate:modelValue"])
              ]),
              createVNode("div", {
                class: "tooltip -ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500 cursor-pointer",
                onClick: ($event) => $options.findOrcidID()
              }, [
                createVNode("button", {
                  type: "button",
                  class: ""
                }, [
                  createVNode("img", {
                    alt: "ORCID logo",
                    src: "https://orcid.org/assets/vectors/orcid.logo.icon.svg",
                    width: "20",
                    height: "20"
                  })
                ]),
                createVNode("span", { class: "bg-gray-900 text-center text-white px-2 py-1 shadow-lg rounded-md tooltiptextbottom" }, "Click to find ORCID iD")
              ], 8, ["onClick"])
            ]),
            createVNode(_component_jet_input_error, {
              message: $data.error.orcid,
              class: "mt-2"
            }, null, 8, ["message"])
          ]),
          !$props.user ? (openBlock(), createBlock("div", {
            key: 1,
            class: "col-span-6 sm:col-span-4"
          }, [
            createVNode(_component_jet_label, {
              for: "password",
              value: "Password"
            }),
            createVNode(_component_jet_input, {
              id: "password",
              ref: "password",
              modelValue: $data.form.password,
              "onUpdate:modelValue": ($event) => $data.form.password = $event,
              type: "password",
              class: "mt-1 block w-full",
              autocomplete: "new-password"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            createVNode(_component_jet_input_error, {
              message: $data.form.errors.password,
              class: "mt-2"
            }, null, 8, ["message"])
          ])) : createCommentVNode("", true),
          !$props.user ? (openBlock(), createBlock("div", {
            key: 2,
            class: "col-span-6 sm:col-span-4"
          }, [
            createVNode(_component_jet_label, {
              for: "password_confirmation",
              value: "Confirm Password"
            }),
            createVNode(_component_jet_input, {
              id: "password_confirmation",
              modelValue: $data.form.password_confirmation,
              "onUpdate:modelValue": ($event) => $data.form.password_confirmation = $event,
              type: "password",
              class: "mt-1 block w-full",
              autocomplete: "new-password"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            createVNode(_component_jet_input_error, {
              message: $data.form.errors.password_confirmation,
              class: "mt-2"
            }, null, 8, ["message"])
          ])) : createCommentVNode("", true)
        ];
      }
    }),
    actions: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_secondary_button, {
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing,
          onClick: $options.back
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_action_message, {
          on: $data.form.recentlySuccessful,
          class: "mr-3"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Saved. `);
            } else {
              return [
                createTextVNode(" Saved. ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_button, {
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Save `);
            } else {
              return [
                createTextVNode(" Save ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_secondary_button, {
            class: { "opacity-25": $data.form.processing },
            disabled: $data.form.processing,
            onClick: $options.back
          }, {
            default: withCtx(() => [
              createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["class", "disabled", "onClick"]),
          createVNode(_component_jet_action_message, {
            on: $data.form.recentlySuccessful,
            class: "mr-3"
          }, {
            default: withCtx(() => [
              createTextVNode(" Saved. ")
            ]),
            _: 1
          }, 8, ["on"]),
          createVNode(_component_jet_button, {
            class: { "opacity-25": $data.form.processing },
            disabled: $data.form.processing
          }, {
            default: withCtx(() => [
              createTextVNode(" Save ")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1x = _sfc_main$1x.setup;
_sfc_main$1x.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Console/Users/Partials/UserProfile.vue");
  return _sfc_setup$1x ? _sfc_setup$1x(props, ctx) : void 0;
};
const UserProfile = /* @__PURE__ */ _export_sfc(_sfc_main$1x, [["ssrRender", _sfc_ssrRender$1w]]);
const __vite_glob_0_20 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: UserProfile
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1w = {
  metaInfo() {
    return {
      title: `${this.form.first_name} ${this.form.last_name}`
    };
  },
  components: {
    AppLayout,
    BreadCrumbs,
    UserProfile
  },
  remember: "form",
  data() {
    return {
      pages: [
        { name: "Console", route: "console", current: false },
        { name: "Users", route: "console.users", current: false },
        {
          name: "Create User",
          route: "console.users.create",
          current: true
        }
      ]
    };
  },
  methods: {}
};
function _sfc_ssrRender$1v(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_bread_crumbs = resolveComponent("bread-crumbs");
  const _component_user_profile = resolveComponent("user-profile");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({ title: "Users & Permissions" }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white border-b"${_scopeId}><div class="px-12"${_scopeId}><div class="flex flex-nowrap justify-between py-6"${_scopeId}><div${_scopeId}>`);
        _push2(ssrRenderComponent(_component_bread_crumbs, { pages: $data.pages }, null, _parent2, _scopeId));
        _push2(`<div class="mt-2 md:flex md:items-center md:justify-between"${_scopeId}><div class="flex-1 min-w-0"${_scopeId}><div class="flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest mt-3"${_scopeId}> Add new user </div></div></div></div></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white border-b" }, [
            createVNode("div", { class: "px-12" }, [
              createVNode("div", { class: "flex flex-nowrap justify-between py-6" }, [
                createVNode("div", null, [
                  createVNode(_component_bread_crumbs, { pages: $data.pages }, null, 8, ["pages"]),
                  createVNode("div", { class: "mt-2 md:flex md:items-center md:justify-between" }, [
                    createVNode("div", { class: "flex-1 min-w-0" }, [
                      createVNode("div", { class: "flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest mt-3" }, " Add new user ")
                    ])
                  ])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-7xl mx-auto py-10 sm:px-6 lg:px-8"${_scopeId}><div${_scopeId}>`);
        _push2(ssrRenderComponent(_component_user_profile, { user: null }, null, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          createVNode("div", { class: "max-w-7xl mx-auto py-10 sm:px-6 lg:px-8" }, [
            createVNode("div", null, [
              createVNode(_component_user_profile, { user: null })
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1w = _sfc_main$1w.setup;
_sfc_main$1w.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Console/Users/Create.vue");
  return _sfc_setup$1w ? _sfc_setup$1w(props, ctx) : void 0;
};
const Create$2 = /* @__PURE__ */ _export_sfc(_sfc_main$1w, [["ssrRender", _sfc_ssrRender$1v]]);
const __vite_glob_0_16 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Create$2
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1v = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel
  },
  props: ["user"],
  data() {
    return {
      form: this.$inertia.form({
        password: "",
        password_confirmation: ""
      })
    };
  },
  methods: {
    updatePassword() {
      this.form.put(
        route("console.users.update-password", this.user.id),
        {
          errorBag: "updatePassword",
          preserveScroll: true,
          onSuccess: () => this.form.reset(),
          onError: () => {
            if (this.form.errors.password) {
              this.form.reset(
                "password",
                "password_confirmation"
              );
              this.$refs.password.focus();
            }
          }
        }
      );
    }
  }
};
function _sfc_ssrRender$1u(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = resolveComponent("jet-form-section");
  const _component_jet_label = resolveComponent("jet-label");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_jet_action_message = resolveComponent("jet-action-message");
  const _component_jet_button = resolveComponent("jet-button");
  _push(ssrRenderComponent(_component_jet_form_section, mergeProps({ onSubmitted: $options.updatePassword }, _attrs), {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Update Password `);
      } else {
        return [
          createTextVNode(" Update Password ")
        ];
      }
    }),
    description: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Ensure password is long, random password to stay secure. `);
      } else {
        return [
          createTextVNode(" Ensure password is long, random password to stay secure. ")
        ];
      }
    }),
    form: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "password",
          value: "New Password"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "password",
          ref: "password",
          modelValue: $data.form.password,
          "onUpdate:modelValue": ($event) => $data.form.password = $event,
          type: "password",
          class: "mt-1 block w-full",
          autocomplete: "new-password"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.password,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "password_confirmation",
          value: "Confirm Password"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "password_confirmation",
          modelValue: $data.form.password_confirmation,
          "onUpdate:modelValue": ($event) => $data.form.password_confirmation = $event,
          type: "password",
          class: "mt-1 block w-full",
          autocomplete: "new-password"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.password_confirmation,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            createVNode(_component_jet_label, {
              for: "password",
              value: "New Password"
            }),
            createVNode(_component_jet_input, {
              id: "password",
              ref: "password",
              modelValue: $data.form.password,
              "onUpdate:modelValue": ($event) => $data.form.password = $event,
              type: "password",
              class: "mt-1 block w-full",
              autocomplete: "new-password"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            createVNode(_component_jet_input_error, {
              message: $data.form.errors.password,
              class: "mt-2"
            }, null, 8, ["message"])
          ]),
          createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            createVNode(_component_jet_label, {
              for: "password_confirmation",
              value: "Confirm Password"
            }),
            createVNode(_component_jet_input, {
              id: "password_confirmation",
              modelValue: $data.form.password_confirmation,
              "onUpdate:modelValue": ($event) => $data.form.password_confirmation = $event,
              type: "password",
              class: "mt-1 block w-full",
              autocomplete: "new-password"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            createVNode(_component_jet_input_error, {
              message: $data.form.errors.password_confirmation,
              class: "mt-2"
            }, null, 8, ["message"])
          ])
        ];
      }
    }),
    actions: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_action_message, {
          on: $data.form.recentlySuccessful,
          class: "mr-3"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Saved. `);
            } else {
              return [
                createTextVNode(" Saved. ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_button, {
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Save `);
            } else {
              return [
                createTextVNode(" Save ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_action_message, {
            on: $data.form.recentlySuccessful,
            class: "mr-3"
          }, {
            default: withCtx(() => [
              createTextVNode(" Saved. ")
            ]),
            _: 1
          }, 8, ["on"]),
          createVNode(_component_jet_button, {
            class: { "opacity-25": $data.form.processing },
            disabled: $data.form.processing
          }, {
            default: withCtx(() => [
              createTextVNode(" Save ")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1v = _sfc_main$1v.setup;
_sfc_main$1v.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Console/Users/Partials/UserPassword.vue");
  return _sfc_setup$1v ? _sfc_setup$1v(props, ctx) : void 0;
};
const UserPassword = /* @__PURE__ */ _export_sfc(_sfc_main$1v, [["ssrRender", _sfc_ssrRender$1u]]);
const __vite_glob_0_19 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: UserPassword
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1u = {
  metaInfo() {
    return {
      title: `${this.form.first_name} ${this.form.last_name}`
    };
  },
  components: {
    UserProfile,
    UserPassword,
    AppLayout,
    BreadCrumbs
  },
  props: {
    edituser: Object
  },
  remember: "form",
  data() {
    return {
      pages: [
        { name: "Console", route: "console", current: false },
        { name: "Users", route: "console.users", current: false },
        {
          name: this.edituser.first_name + " " + this.edituser.last_name,
          route: "console.users.update",
          current: true,
          id: this.edituser.id
        }
      ]
    };
  },
  methods: {
    update() {
      this.form.post(
        this.route("console.users.update", this.edituser.id),
        {
          onSuccess: () => this.form.reset("password", "photo")
        }
      );
    }
  }
};
function _sfc_ssrRender$1t(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_bread_crumbs = resolveComponent("bread-crumbs");
  const _component_user_profile = resolveComponent("user-profile");
  const _component_user_password = resolveComponent("user-password");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({ title: "Users & Permissions" }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white border-b"${_scopeId}><div class="px-12"${_scopeId}><div class="flex flex-nowrap justify-between py-6"${_scopeId}><div${_scopeId}>`);
        _push2(ssrRenderComponent(_component_bread_crumbs, { pages: $data.pages }, null, _parent2, _scopeId));
        _push2(`<div class="mt-2 md:flex md:items-center md:justify-between"${_scopeId}><div class="flex-1 min-w-0"${_scopeId}><div class="flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest mt-3"${_scopeId}>${ssrInterpolate($props.edituser.first_name)} ${ssrInterpolate($props.edituser.last_name)}</div></div></div></div></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white border-b" }, [
            createVNode("div", { class: "px-12" }, [
              createVNode("div", { class: "flex flex-nowrap justify-between py-6" }, [
                createVNode("div", null, [
                  createVNode(_component_bread_crumbs, { pages: $data.pages }, null, 8, ["pages"]),
                  createVNode("div", { class: "mt-2 md:flex md:items-center md:justify-between" }, [
                    createVNode("div", { class: "flex-1 min-w-0" }, [
                      createVNode("div", { class: "flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest mt-3" }, toDisplayString($props.edituser.first_name) + " " + toDisplayString($props.edituser.last_name), 1)
                    ])
                  ])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-7xl mx-auto py-10 sm:px-6 lg:px-8"${_scopeId}><div${_scopeId}>`);
        _push2(ssrRenderComponent(_component_user_profile, { user: $props.edituser }, null, _parent2, _scopeId));
        _push2(`<div class="hidden sm:block"${_scopeId}><div class="py-8"${_scopeId}><div class="border-t border-gray-200"${_scopeId}></div></div></div>`);
        _push2(ssrRenderComponent(_component_user_password, { user: $props.edituser }, null, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          createVNode("div", { class: "max-w-7xl mx-auto py-10 sm:px-6 lg:px-8" }, [
            createVNode("div", null, [
              createVNode(_component_user_profile, { user: $props.edituser }, null, 8, ["user"]),
              createVNode("div", { class: "hidden sm:block" }, [
                createVNode("div", { class: "py-8" }, [
                  createVNode("div", { class: "border-t border-gray-200" })
                ])
              ]),
              createVNode(_component_user_password, { user: $props.edituser }, null, 8, ["user"])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1u = _sfc_main$1u.setup;
_sfc_main$1u.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Console/Users/Edit.vue");
  return _sfc_setup$1u ? _sfc_setup$1u(props, ctx) : void 0;
};
const Edit = /* @__PURE__ */ _export_sfc(_sfc_main$1u, [["ssrRender", _sfc_ssrRender$1t]]);
const __vite_glob_0_17 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Edit
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1t = {
  components: {
    AppLayout,
    SearchFilter,
    JetDialogModal,
    JetSecondaryButton,
    JetButton,
    Link,
    BreadCrumbs
  },
  props: {
    users: Array,
    filters: Object,
    roles: Array
  },
  data() {
    return {
      form: {
        search: this.filters.search,
        role: this.filters.role,
        trashed: this.filters.trashed
      },
      currentlyManagingRole: false,
      managingRoleFor: null,
      updateRoleForm: this.$inertia.form({
        role: null,
        error_message: null
      }),
      pages: [
        { name: "Console", route: "console", current: false },
        { name: "Users", route: "console.users", current: true }
      ]
    };
  },
  watch: {
    form: {
      handler: throttle(function() {
        let query = pickBy(this.form);
        this.$inertia.replace(
          this.route(
            "console.users",
            Object.keys(query).length ? query : { remember: "forget" }
          )
        );
      }, 150),
      deep: true
    }
  },
  methods: {
    reset() {
      this.form = mapValues(this.form, () => null);
    },
    manageRole(user) {
      this.updateRoleForm.error_message = null;
      if (user.role[0]) {
        this.updateRoleForm.role = user.role[0];
      } else {
        this.updateRoleForm.role = null;
      }
      this.managingRoleFor = user;
      this.currentlyManagingRole = true;
    },
    updateRole() {
      this.updateRoleForm.put(
        route("console.users.update-role", [this.managingRoleFor]),
        {
          preserveScroll: true,
          onSuccess: () => this.currentlyManagingRole = false,
          onError: (data) => {
            this.updateRoleForm.error_message = data.error_message;
          }
        }
      );
    }
  }
};
function _sfc_ssrRender$1s(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_bread_crumbs = resolveComponent("bread-crumbs");
  const _component_search_filter = resolveComponent("search-filter");
  const _component_Link = resolveComponent("Link");
  const _component_jet_dialog_modal = resolveComponent("jet-dialog-modal");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  const _component_jet_button = resolveComponent("jet-button");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({ title: "Users & Permissions" }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white border-b"${_scopeId}><div class="px-12"${_scopeId}><div class="flex flex-nowrap justify-between py-6"${_scopeId}><div${_scopeId}>`);
        _push2(ssrRenderComponent(_component_bread_crumbs, { pages: $data.pages }, null, _parent2, _scopeId));
        _push2(`<div class="mt-2 md:flex md:items-center md:justify-between"${_scopeId}><div class="flex-1 min-w-0"${_scopeId}><div class="flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest mt-3"${_scopeId}> Users &amp; Permissions </div></div></div></div></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white border-b" }, [
            createVNode("div", { class: "px-12" }, [
              createVNode("div", { class: "flex flex-nowrap justify-between py-6" }, [
                createVNode("div", null, [
                  createVNode(_component_bread_crumbs, { pages: $data.pages }, null, 8, ["pages"]),
                  createVNode("div", { class: "mt-2 md:flex md:items-center md:justify-between" }, [
                    createVNode("div", { class: "flex-1 min-w-0" }, [
                      createVNode("div", { class: "flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest mt-3" }, " Users & Permissions ")
                    ])
                  ])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="py-12 px-10"${_scopeId}><div class="mb-6 flex justify-between items-center"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_search_filter, {
          modelValue: $data.form.search,
          "onUpdate:modelValue": ($event) => $data.form.search = $event,
          class: "w-full max-w-md mr-4",
          onReset: $options.reset
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<label class="block text-sm font-medium text-gray-700"${_scopeId2}>Role:</label><select class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md"${_scopeId2}><option${ssrRenderAttr("value", null)}${ssrIncludeBooleanAttr(Array.isArray($data.form.role) ? ssrLooseContain($data.form.role, null) : ssrLooseEqual($data.form.role, null)) ? " selected" : ""}${_scopeId2}>-- no filter --</option><!--[-->`);
              ssrRenderList($props.roles, (role) => {
                _push3(`<option${ssrRenderAttr("value", role.name)}${ssrIncludeBooleanAttr($data.form.role == role.name) ? " selected" : ""}${_scopeId2}>${ssrInterpolate(role.name)}</option>`);
              });
              _push3(`<!--]--></select>`);
            } else {
              return [
                createVNode("label", { class: "block text-sm font-medium text-gray-700" }, "Role:"),
                withDirectives(createVNode("select", {
                  "onUpdate:modelValue": ($event) => $data.form.role = $event,
                  class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md"
                }, [
                  createVNode("option", { value: null }, "-- no filter --"),
                  (openBlock(true), createBlock(Fragment, null, renderList($props.roles, (role) => {
                    return openBlock(), createBlock("option", {
                      key: role.id,
                      value: role.name,
                      selected: $data.form.role == role.name
                    }, toDisplayString(role.name), 9, ["value", "selected"]);
                  }), 128))
                ], 8, ["onUpdate:modelValue"]), [
                  [vModelSelect, $data.form.role]
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_Link, {
          class: "inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring focus:ring-gray-300 disabled:opacity-25 transition",
          href: _ctx.route("console.users.create")
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<span${_scopeId2}>Create</span>  <span class="hidden md:inline"${_scopeId2}>User</span>`);
            } else {
              return [
                createVNode("span", null, "Create"),
                createTextVNode("  "),
                createVNode("span", { class: "hidden md:inline" }, "User")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div><div${_scopeId}><div class="bg-white rounded-md shadow overflow-x-auto"${_scopeId}><table class="min-w-full divide-y divide-gray-200"${_scopeId}><thead class="bg-gray-50"${_scopeId}><tr${_scopeId}><th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"${_scopeId}> Name </th><th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"${_scopeId}> Status </th><th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"${_scopeId}> Role </th><th scope="col" class="relative px-6 py-3"${_scopeId}><span class="sr-only"${_scopeId}>Edit</span></th></tr></thead><tbody class="bg-white divide-y divide-gray-200"${_scopeId}><!--[-->`);
        ssrRenderList($props.users, (user) => {
          _push2(`<tr${_scopeId}><td class="px-6 py-4 whitespace-nowrap"${_scopeId}><div class="flex items-center"${_scopeId}><div class="flex-shrink-0"${_scopeId}><img class="rounded-full h-10 w-10 object-cover"${ssrRenderAttr("src", user.profile_photo_url)} alt=""${_scopeId}></div><div class="ml-4"${_scopeId}><div class="text-sm font-medium text-gray-900"${_scopeId}>${ssrInterpolate(user.first_name)} ${ssrInterpolate(user.last_name)}</div><div class="text-sm text-gray-500"${_scopeId}>${ssrInterpolate(user.email)}</div><div class="text-sm text-teal-500"${_scopeId}>${ssrInterpolate(user.orcid_id)}</div></div></div></td><td class="px-6 py-4 whitespace-nowrap"${_scopeId}>`);
          if (user.verified_at) {
            _push2(`<span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800"${_scopeId}> Verified </span>`);
          } else {
            _push2(`<span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-green-800"${_scopeId}> Not verified </span>`);
          }
          _push2(`</td><td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500"${_scopeId}>`);
          if ($props.roles.length) {
            _push2(`<button class="ml-2 text-sm text-gray-400 underline"${_scopeId}><span class="px-2 inline-flex text-xs leading-5 font-semibold capitalize rounded-full bg-indigo-100 text-green-800"${_scopeId}>${ssrInterpolate(user.role[0] ? user.role[0] : "User")}</span></button>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</td><td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_Link, {
            href: _ctx.route("console.users.edit", user.id),
            class: "text-indigo-600 hover:text-indigo-900"
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`Edit`);
              } else {
                return [
                  createTextVNode("Edit")
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
          _push2(`</td><td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium"${_scopeId}>`);
          if (_ctx.$page.props.auth.user.id != user.id) {
            _push2(ssrRenderComponent(_component_Link, {
              href: _ctx.route(
                "console.users.impersonate",
                user.id
              ),
              class: "text-indigo-600 hover:text-indigo-900"
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`Impersonate <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 inline"${_scopeId2}><path stroke-linecap="round" stroke-linejoin="round" d="M15.042 21.672L13.684 16.6m0 0l-2.51 2.225.569-9.47 5.227 7.917-3.286-.672zm-7.518-.267A8.25 8.25 0 1120.25 10.5M8.288 14.212A5.25 5.25 0 1117.25 10.5"${_scopeId2}></path></svg>`);
                } else {
                  return [
                    createTextVNode("Impersonate "),
                    (openBlock(), createBlock("svg", {
                      xmlns: "http://www.w3.org/2000/svg",
                      fill: "none",
                      viewBox: "0 0 24 24",
                      "stroke-width": "1.5",
                      stroke: "currentColor",
                      class: "w-5 h-5 inline"
                    }, [
                      createVNode("path", {
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round",
                        d: "M15.042 21.672L13.684 16.6m0 0l-2.51 2.225.569-9.47 5.227 7.917-3.286-.672zm-7.518-.267A8.25 8.25 0 1120.25 10.5M8.288 14.212A5.25 5.25 0 1117.25 10.5"
                      })
                    ]))
                  ];
                }
              }),
              _: 2
            }, _parent2, _scopeId));
          } else {
            _push2(`<!---->`);
          }
          _push2(`</td></tr>`);
        });
        _push2(`<!--]--></tbody></table></div></div>`);
        _push2(ssrRenderComponent(_component_jet_dialog_modal, {
          show: $data.currentlyManagingRole,
          onClose: ($event) => $data.currentlyManagingRole = false
        }, {
          title: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Manage Role `);
            } else {
              return [
                createTextVNode(" Manage Role ")
              ];
            }
          }),
          content: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              if ($data.managingRoleFor) {
                _push3(`<div${_scopeId2}><div class="relative z-0 mt-1 border border-gray-200 rounded-lg cursor-pointer"${_scopeId2}><!--[-->`);
                ssrRenderList($props.roles, (role, i2) => {
                  _push3(`<button type="button" class="${ssrRenderClass([{
                    "border-t border-gray-200 rounded-t-none": i2 > 0,
                    "rounded-b-none": i2 !== Object.keys($props.roles).length - 1
                  }, "relative px-4 py-3 inline-flex w-full rounded-lg focus:z-10 focus:outline-none focus:border-blue-300 focus:ring focus:ring-blue-200"])}"${_scopeId2}><div class="${ssrRenderClass({
                    "opacity-50": $data.updateRoleForm.role && $data.updateRoleForm.role !== role.name
                  })}"${_scopeId2}><div class="flex items-center"${_scopeId2}><div class="${ssrRenderClass([{
                    "font-semibold": $data.updateRoleForm.role === role.key
                  }, "text-sm text-gray-600 capitalize"])}"${_scopeId2}>${ssrInterpolate(role.name)}</div>`);
                  if ($data.updateRoleForm.role === role.name) {
                    _push3(`<svg class="ml-2 h-5 w-5 text-green-400" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" stroke="currentColor" viewBox="0 0 24 24"${_scopeId2}><path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"${_scopeId2}></path></svg>`);
                  } else {
                    _push3(`<!---->`);
                  }
                  _push3(`</div><div class="mt-2 text-xs text-gray-600"${_scopeId2}>${ssrInterpolate(role.description)}</div></div></button>`);
                });
                _push3(`<!--]--></div>`);
                if ($data.updateRoleForm.error_message) {
                  _push3(`<div class="my-2"${_scopeId2}>${ssrInterpolate($data.updateRoleForm.error_message)}</div>`);
                } else {
                  _push3(`<!---->`);
                }
                _push3(`</div>`);
              } else {
                _push3(`<!---->`);
              }
            } else {
              return [
                $data.managingRoleFor ? (openBlock(), createBlock("div", { key: 0 }, [
                  createVNode("div", { class: "relative z-0 mt-1 border border-gray-200 rounded-lg cursor-pointer" }, [
                    (openBlock(true), createBlock(Fragment, null, renderList($props.roles, (role, i2) => {
                      return openBlock(), createBlock("button", {
                        key: role.key,
                        type: "button",
                        class: ["relative px-4 py-3 inline-flex w-full rounded-lg focus:z-10 focus:outline-none focus:border-blue-300 focus:ring focus:ring-blue-200", {
                          "border-t border-gray-200 rounded-t-none": i2 > 0,
                          "rounded-b-none": i2 !== Object.keys($props.roles).length - 1
                        }],
                        onClick: ($event) => $data.updateRoleForm.role = role.name
                      }, [
                        createVNode("div", {
                          class: {
                            "opacity-50": $data.updateRoleForm.role && $data.updateRoleForm.role !== role.name
                          }
                        }, [
                          createVNode("div", { class: "flex items-center" }, [
                            createVNode("div", {
                              class: ["text-sm text-gray-600 capitalize", {
                                "font-semibold": $data.updateRoleForm.role === role.key
                              }]
                            }, toDisplayString(role.name), 3),
                            $data.updateRoleForm.role === role.name ? (openBlock(), createBlock("svg", {
                              key: 0,
                              class: "ml-2 h-5 w-5 text-green-400",
                              fill: "none",
                              "stroke-linecap": "round",
                              "stroke-linejoin": "round",
                              "stroke-width": "2",
                              stroke: "currentColor",
                              viewBox: "0 0 24 24"
                            }, [
                              createVNode("path", { d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" })
                            ])) : createCommentVNode("", true)
                          ]),
                          createVNode("div", { class: "mt-2 text-xs text-gray-600" }, toDisplayString(role.description), 1)
                        ], 2)
                      ], 10, ["onClick"]);
                    }), 128))
                  ]),
                  $data.updateRoleForm.error_message ? (openBlock(), createBlock("div", {
                    key: 0,
                    class: "my-2"
                  }, toDisplayString($data.updateRoleForm.error_message), 1)) : createCommentVNode("", true)
                ])) : createCommentVNode("", true)
              ];
            }
          }),
          footer: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_jet_secondary_button, {
                onClick: ($event) => $data.currentlyManagingRole = false
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(ssrRenderComponent(_component_jet_button, {
                class: ["ml-2", { "opacity-25": $data.updateRoleForm.processing }],
                disabled: $data.updateRoleForm.processing,
                onClick: $options.updateRole
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Save `);
                  } else {
                    return [
                      createTextVNode(" Save ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                createVNode(_component_jet_secondary_button, {
                  onClick: ($event) => $data.currentlyManagingRole = false
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                createVNode(_component_jet_button, {
                  class: ["ml-2", { "opacity-25": $data.updateRoleForm.processing }],
                  disabled: $data.updateRoleForm.processing,
                  onClick: $options.updateRole
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Save ")
                  ]),
                  _: 1
                }, 8, ["class", "disabled", "onClick"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "py-12 px-10" }, [
            createVNode("div", { class: "mb-6 flex justify-between items-center" }, [
              createVNode(_component_search_filter, {
                modelValue: $data.form.search,
                "onUpdate:modelValue": ($event) => $data.form.search = $event,
                class: "w-full max-w-md mr-4",
                onReset: $options.reset
              }, {
                default: withCtx(() => [
                  createVNode("label", { class: "block text-sm font-medium text-gray-700" }, "Role:"),
                  withDirectives(createVNode("select", {
                    "onUpdate:modelValue": ($event) => $data.form.role = $event,
                    class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md"
                  }, [
                    createVNode("option", { value: null }, "-- no filter --"),
                    (openBlock(true), createBlock(Fragment, null, renderList($props.roles, (role) => {
                      return openBlock(), createBlock("option", {
                        key: role.id,
                        value: role.name,
                        selected: $data.form.role == role.name
                      }, toDisplayString(role.name), 9, ["value", "selected"]);
                    }), 128))
                  ], 8, ["onUpdate:modelValue"]), [
                    [vModelSelect, $data.form.role]
                  ])
                ]),
                _: 1
              }, 8, ["modelValue", "onUpdate:modelValue", "onReset"]),
              createVNode(_component_Link, {
                class: "inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring focus:ring-gray-300 disabled:opacity-25 transition",
                href: _ctx.route("console.users.create")
              }, {
                default: withCtx(() => [
                  createVNode("span", null, "Create"),
                  createTextVNode("  "),
                  createVNode("span", { class: "hidden md:inline" }, "User")
                ]),
                _: 1
              }, 8, ["href"])
            ]),
            createVNode("div", null, [
              createVNode("div", { class: "bg-white rounded-md shadow overflow-x-auto" }, [
                createVNode("table", { class: "min-w-full divide-y divide-gray-200" }, [
                  createVNode("thead", { class: "bg-gray-50" }, [
                    createVNode("tr", null, [
                      createVNode("th", {
                        scope: "col",
                        class: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                      }, " Name "),
                      createVNode("th", {
                        scope: "col",
                        class: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                      }, " Status "),
                      createVNode("th", {
                        scope: "col",
                        class: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                      }, " Role "),
                      createVNode("th", {
                        scope: "col",
                        class: "relative px-6 py-3"
                      }, [
                        createVNode("span", { class: "sr-only" }, "Edit")
                      ])
                    ])
                  ]),
                  createVNode("tbody", { class: "bg-white divide-y divide-gray-200" }, [
                    (openBlock(true), createBlock(Fragment, null, renderList($props.users, (user) => {
                      return openBlock(), createBlock("tr", {
                        key: user.email
                      }, [
                        createVNode("td", { class: "px-6 py-4 whitespace-nowrap" }, [
                          createVNode("div", { class: "flex items-center" }, [
                            createVNode("div", { class: "flex-shrink-0" }, [
                              createVNode("img", {
                                class: "rounded-full h-10 w-10 object-cover",
                                src: user.profile_photo_url,
                                alt: ""
                              }, null, 8, ["src"])
                            ]),
                            createVNode("div", { class: "ml-4" }, [
                              createVNode("div", { class: "text-sm font-medium text-gray-900" }, toDisplayString(user.first_name) + " " + toDisplayString(user.last_name), 1),
                              createVNode("div", { class: "text-sm text-gray-500" }, toDisplayString(user.email), 1),
                              createVNode("div", { class: "text-sm text-teal-500" }, toDisplayString(user.orcid_id), 1)
                            ])
                          ])
                        ]),
                        createVNode("td", { class: "px-6 py-4 whitespace-nowrap" }, [
                          user.verified_at ? (openBlock(), createBlock("span", {
                            key: 0,
                            class: "px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800"
                          }, " Verified ")) : (openBlock(), createBlock("span", {
                            key: 1,
                            class: "px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-green-800"
                          }, " Not verified "))
                        ]),
                        createVNode("td", { class: "px-6 py-4 whitespace-nowrap text-sm text-gray-500" }, [
                          $props.roles.length ? (openBlock(), createBlock("button", {
                            key: 0,
                            class: "ml-2 text-sm text-gray-400 underline",
                            onClick: ($event) => $options.manageRole(user)
                          }, [
                            createVNode("span", { class: "px-2 inline-flex text-xs leading-5 font-semibold capitalize rounded-full bg-indigo-100 text-green-800" }, toDisplayString(user.role[0] ? user.role[0] : "User"), 1)
                          ], 8, ["onClick"])) : createCommentVNode("", true)
                        ]),
                        createVNode("td", { class: "px-6 py-4 whitespace-nowrap text-right text-sm font-medium" }, [
                          createVNode(_component_Link, {
                            href: _ctx.route("console.users.edit", user.id),
                            class: "text-indigo-600 hover:text-indigo-900"
                          }, {
                            default: withCtx(() => [
                              createTextVNode("Edit")
                            ]),
                            _: 2
                          }, 1032, ["href"])
                        ]),
                        createVNode("td", { class: "px-6 py-4 whitespace-nowrap text-right text-sm font-medium" }, [
                          _ctx.$page.props.auth.user.id != user.id ? (openBlock(), createBlock(_component_Link, {
                            key: 0,
                            href: _ctx.route(
                              "console.users.impersonate",
                              user.id
                            ),
                            class: "text-indigo-600 hover:text-indigo-900"
                          }, {
                            default: withCtx(() => [
                              createTextVNode("Impersonate "),
                              (openBlock(), createBlock("svg", {
                                xmlns: "http://www.w3.org/2000/svg",
                                fill: "none",
                                viewBox: "0 0 24 24",
                                "stroke-width": "1.5",
                                stroke: "currentColor",
                                class: "w-5 h-5 inline"
                              }, [
                                createVNode("path", {
                                  "stroke-linecap": "round",
                                  "stroke-linejoin": "round",
                                  d: "M15.042 21.672L13.684 16.6m0 0l-2.51 2.225.569-9.47 5.227 7.917-3.286-.672zm-7.518-.267A8.25 8.25 0 1120.25 10.5M8.288 14.212A5.25 5.25 0 1117.25 10.5"
                                })
                              ]))
                            ]),
                            _: 2
                          }, 1032, ["href"])) : createCommentVNode("", true)
                        ])
                      ]);
                    }), 128))
                  ])
                ])
              ])
            ]),
            createVNode(_component_jet_dialog_modal, {
              show: $data.currentlyManagingRole,
              onClose: ($event) => $data.currentlyManagingRole = false
            }, {
              title: withCtx(() => [
                createTextVNode(" Manage Role ")
              ]),
              content: withCtx(() => [
                $data.managingRoleFor ? (openBlock(), createBlock("div", { key: 0 }, [
                  createVNode("div", { class: "relative z-0 mt-1 border border-gray-200 rounded-lg cursor-pointer" }, [
                    (openBlock(true), createBlock(Fragment, null, renderList($props.roles, (role, i2) => {
                      return openBlock(), createBlock("button", {
                        key: role.key,
                        type: "button",
                        class: ["relative px-4 py-3 inline-flex w-full rounded-lg focus:z-10 focus:outline-none focus:border-blue-300 focus:ring focus:ring-blue-200", {
                          "border-t border-gray-200 rounded-t-none": i2 > 0,
                          "rounded-b-none": i2 !== Object.keys($props.roles).length - 1
                        }],
                        onClick: ($event) => $data.updateRoleForm.role = role.name
                      }, [
                        createVNode("div", {
                          class: {
                            "opacity-50": $data.updateRoleForm.role && $data.updateRoleForm.role !== role.name
                          }
                        }, [
                          createVNode("div", { class: "flex items-center" }, [
                            createVNode("div", {
                              class: ["text-sm text-gray-600 capitalize", {
                                "font-semibold": $data.updateRoleForm.role === role.key
                              }]
                            }, toDisplayString(role.name), 3),
                            $data.updateRoleForm.role === role.name ? (openBlock(), createBlock("svg", {
                              key: 0,
                              class: "ml-2 h-5 w-5 text-green-400",
                              fill: "none",
                              "stroke-linecap": "round",
                              "stroke-linejoin": "round",
                              "stroke-width": "2",
                              stroke: "currentColor",
                              viewBox: "0 0 24 24"
                            }, [
                              createVNode("path", { d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" })
                            ])) : createCommentVNode("", true)
                          ]),
                          createVNode("div", { class: "mt-2 text-xs text-gray-600" }, toDisplayString(role.description), 1)
                        ], 2)
                      ], 10, ["onClick"]);
                    }), 128))
                  ]),
                  $data.updateRoleForm.error_message ? (openBlock(), createBlock("div", {
                    key: 0,
                    class: "my-2"
                  }, toDisplayString($data.updateRoleForm.error_message), 1)) : createCommentVNode("", true)
                ])) : createCommentVNode("", true)
              ]),
              footer: withCtx(() => [
                createVNode(_component_jet_secondary_button, {
                  onClick: ($event) => $data.currentlyManagingRole = false
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                createVNode(_component_jet_button, {
                  class: ["ml-2", { "opacity-25": $data.updateRoleForm.processing }],
                  disabled: $data.updateRoleForm.processing,
                  onClick: $options.updateRole
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Save ")
                  ]),
                  _: 1
                }, 8, ["class", "disabled", "onClick"])
              ]),
              _: 1
            }, 8, ["show", "onClose"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1t = _sfc_main$1t.setup;
_sfc_main$1t.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Console/Users/Index.vue");
  return _sfc_setup$1t ? _sfc_setup$1t(props, ctx) : void 0;
};
const Index = /* @__PURE__ */ _export_sfc(_sfc_main$1t, [["ssrRender", _sfc_ssrRender$1s]]);
const __vite_glob_0_18 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Index
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1s = {
  components: {
    Link,
    StarIcon: StarIcon$1
  },
  props: ["projects", "mode", "teamRole", "team"],
  setup() {
  },
  data() {
    return {};
  },
  methods: {
    openDatasetCreateDialog(data) {
      this.emitter.emit("openDatasetCreateDialog", data);
    },
    openProjectCreateDialog(data) {
      this.emitter.emit("openProjectCreateDialog", data);
    },
    getLink(project) {
      if (!project.is_public) {
        if (project.draft_id) {
          if (project.is_deleted) {
            return router$1.visit(
              this.route("dashboard.projects", [project.id])
            );
          } else {
            return router$1.visit(
              "/upload?draft_id=" + project.draft_id
            );
          }
        } else {
          alert(
            "Draft missing. Please contact us at info.nmrxiv@uni-jena.de."
          );
        }
      } else {
        return router$1.visit(
          this.route("dashboard.projects", [project.id])
        );
      }
    },
    getProjectSummaryLink(project) {
      return route("dashboard.projects", [project.id]);
    },
    getProjectSettingsLink(project) {
      return route("dashboard.project.settings", [project.id]);
    }
  }
};
function _sfc_ssrRender$1r(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_StarIcon = resolveComponent("StarIcon");
  _push(`<div${ssrRenderAttrs(_attrs)}><div class="flex items-baseline justify-between"><div id="tour-step-projects"><h2 class="text-lg">Projects</h2></div></div>`);
  if ($props.projects.length <= 0) {
    _push(`<span>`);
    if ($props.mode == "create" && _ctx.editableTeamRole) {
      _push(`<div class="mt-4"><div class="px-6 py-4 bg-white shadow-md rounded-lg"><div class="flex items-center"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="h-6 w-6"><path d="M3 6l9 4v12l-9-4V6zm14-3v2c0 1.1-2.24 2-5 2s-5-.9-5-2V3c0 1.1 2.24 2 5 2s5-.9 5-2z" class="fill-current text-gray-400"></path><polygon points="21 6 12 10 12 22 21 18" class="fill-current text-gray-600"></polygon></svg><div class="ml-3 font-semibold text-sm text-gray-600 uppercase tracking-wider"> Create Your First Project </div></div><div class="mt-3 max-w-2xl text-sm text-gray-700"> nmrXiv is organized around projects. Projects can contain as many samples as you wish and each sample receives its very own URL. To learn more, check out our documentation. </div></div></div>`);
    } else {
      _push(`<div>`);
      ssrRenderSlot(_ctx.$slots, "emptyText", {}, null, _push, _parent);
      _push(`</div>`);
    }
    _push(`</span>`);
  } else {
    _push(`<span><!--[-->`);
    ssrRenderList($props.projects, (project) => {
      _push(`<div class="mt-8 relative"><div class="absolute rotate-90 -left-16 top-1/3">`);
      if (project.is_public) {
        _push(`<span class="inline-flex bg-gray-100 px-4 items-center border-b border-l border-r rounded-b-md"><svg class="h-3 w-3 text-green-400 inline" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 64 64" width="512" height="512"><g id="globe"><path d="M53.85,47.85A27,27,0,0,1,24,57.8V56l3-3V49l4-4V42l4,4h5l2-2h8Z"></path><path d="M42,20.59v2.56L38.07,27H31l-5.36,5.26L31,37.51v5.06L27.44,39H22.86L16,32.11V24.2L11.8,20h-4A27,27,0,0,1,32,5a26.55,26.55,0,0,1,7.06.94L36,9H30v4l4,4h4.33Z"></path><path d="M32,60A28,28,0,1,1,60,32,28,28,0,0,1,32,60ZM32,6A26,26,0,1,0,58,32,26,26,0,0,0,32,6Z"></path></g></svg><span class="ml-2">Public</span></span>`);
      } else {
        _push(`<span class="inline-flex bg-red-100 px-4 items-center border-b border-l border-r rounded-b-md"><svg id="Capa_1" class="h-3 w-3 text-gray-400 inline" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 512 512" style="${ssrRenderStyle({ "enable-background": "new 0 0 512 512" })}" xml:space="preserve"><g><g><path d="M437.333,192h-32v-42.667C405.333,66.99,338.344,0,256,0S106.667,66.99,106.667,149.333V192h-32
    C68.771,192,64,196.771,64,202.667v266.667C64,492.865,83.135,512,106.667,512h298.667C428.865,512,448,492.865,448,469.333
    V202.667C448,196.771,443.229,192,437.333,192z M287.938,414.823c0.333,3.01-0.635,6.031-2.656,8.292
    c-2.021,2.26-4.917,3.552-7.948,3.552h-42.667c-3.031,0-5.927-1.292-7.948-3.552c-2.021-2.26-2.99-5.281-2.656-8.292l6.729-60.51
    c-10.927-7.948-17.458-20.521-17.458-34.313c0-23.531,19.135-42.667,42.667-42.667s42.667,19.135,42.667,42.667
    c0,13.792-6.531,26.365-17.458,34.313L287.938,414.823z M341.333,192H170.667v-42.667C170.667,102.281,208.948,64,256,64
    s85.333,38.281,85.333,85.333V192z"></path></g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g></svg><span class="ml-2">Private</span></span>`);
      }
      _push(`</div><a><div class="flex justify-between items-center bg-white shadow-md border rounded-lg px-6 py-8"><div class="flex-grow cursor-pointer"><div class="flex justify-between items-baseline"><div class="font-bold text-xl text-gray-600"><div class="flex items-center"><span class="cursor-pointer flex max-w-2xl break-words block"><span class="-ml-2 mr-1">`);
      _push(ssrRenderComponent(_component_StarIcon, {
        class: [
          project.is_bookmarked ? "text-yellow-400" : "text-gray-200",
          "h-6 w-6 flex-shrink-0 -ml-1 mr-1"
        ]
      }, null, _parent));
      _push(`</span>${ssrInterpolate(project.name)} `);
      if (project.draft_id != null && project.status == null) {
        _push(`<span class="ml-4 inline-flex items-center px-3 py-0.5 rounded-full text-sm font-medium bg-yellow-100 text-yellow-800"> Draft </span>`);
      } else {
        _push(`<!---->`);
      }
      if (project.status != null && project.status != "complete") {
        _push(`<span class="ml-4 inline-flex items-center px-3 py-0.5 rounded-full text-sm font-medium bg-blue-100 text-blue-800 capitalize">${ssrInterpolate(project.status)}</span>`);
      } else {
        _push(`<!---->`);
      }
      if (project.is_deleted != null && project.is_deleted) {
        _push(`<span class="ml-4 inline-flex items-center px-3 py-0.5 rounded-full text-sm font-medium bg-red-100 text-red-800 capitalize"> DELETED </span>`);
      } else {
        _push(`<!---->`);
      }
      if (project.is_archived != null && project.is_archived) {
        _push(`<span class="ml-4 inline-flex items-center px-3 py-0.5 rounded-full text-sm font-medium bg-yellow-100 text-red-800 capitalize"> ARCHIVED </span>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</span></div></div></div><div class="flex items-baseline mt-1"><span class="text-sm text-gray-600">`);
      if ($props.team && $props.team.id != project.team_id || project.owner_id != _ctx.$page.props.auth.user.id) {
        _push(`<div class="text-sm text-gray-600"><span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800"> Shared by: ${ssrInterpolate(project.owner ? project.owner.first_name : "")} ${ssrInterpolate(project.owner ? project.owner.last_name : "")}</span></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</span></div><div class="grid grid-cols-1"><div><dd class="text-xs text-gray-900 space-y-5 mt-1"><p><!--[-->`);
      ssrRenderList(project.tags, (tag) => {
        _push(`<span class="mt-1 inline-flex items-center rounded-full bg-gray-50 px-2 py-1 text-xs font-medium text-gray-600 ring-1 ring-inset ring-gray-500/10">${ssrInterpolate(tag.name["en"])}</span>`);
      });
      _push(`<!--]--></p></dd></div><div class="text-xs text-gray-400 pr-5 mb-1 mt-1 truncate ...">${ssrInterpolate(project.description)}</div><div class="text-xs mt-1 text-gray-400 pr-5"><span class="font-bold text-gray-600">Updated on</span> ${ssrInterpolate(_ctx.formatDate(project.updated_at))} · <span class="font-bold text-gray-600">Created on</span> ${ssrInterpolate(_ctx.formatDate(project.created_at))}</div>`);
      if (!project.is_public && project.is_published) {
        _push(`<span class="inline-flex items-center mt-2 px-3 py-0.5 rounded-full text-sm font-medium bg-yellow-100 text-red-800 capitalize"> PUBLISHED -  <b>Release date: ${ssrInterpolate(_ctx.formatDate(project.release_date))}</b></span>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div><div class="border-l cursor-pointer"><div class="tooltip"><a target="_blank"${ssrRenderAttr("href", $options.getProjectSummaryLink(project))} class="text-gray-500 hover:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-5 w-5 text-gray-600 ml-4"><path stroke-linecap="round" stroke-linejoin="round" d="M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25"></path></svg></a><span class="bg-gray-900 text-center text-white px-2 py-1 shadow-lg rounded-md tooltiptextbottom">Open project in the summary view</span></div>`);
      if (!project.is_public) {
        _push(`<div class="tooltip"><a target="_blank"${ssrRenderAttr("href", $options.getProjectSettingsLink(project))} class="text-gray-500 hover:text-gray-900"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-5 w-5 text-gray-600 ml-4"><path stroke-linecap="round" stroke-linejoin="round" d="M10.343 3.94c.09-.542.56-.94 1.11-.94h1.093c.55 0 1.02.398 1.11.94l.149.894c.07.424.384.764.78.93.398.164.855.142 1.205-.108l.737-.527a1.125 1.125 0 011.45.12l.773.774c.39.389.44 1.002.12 1.45l-.527.737c-.25.35-.272.806-.107 1.204.165.397.505.71.93.78l.893.15c.543.09.94.56.94 1.109v1.094c0 .55-.397 1.02-.94 1.11l-.893.149c-.425.07-.765.383-.93.78-.165.398-.143.854.107 1.204l.527.738c.32.447.269 1.06-.12 1.45l-.774.773a1.125 1.125 0 01-1.449.12l-.738-.527c-.35-.25-.806-.272-1.203-.107-.397.165-.71.505-.781.929l-.149.894c-.09.542-.56.94-1.11.94h-1.094c-.55 0-1.019-.398-1.11-.94l-.148-.894c-.071-.424-.384-.764-.781-.93-.398-.164-.854-.142-1.204.108l-.738.527c-.447.32-1.06.269-1.45-.12l-.773-.774a1.125 1.125 0 01-.12-1.45l.527-.737c.25-.35.273-.806.108-1.204-.165-.397-.505-.71-.93-.78l-.894-.15c-.542-.09-.94-.56-.94-1.109v-1.094c0-.55.398-1.02.94-1.11l.894-.149c.424-.07.765-.383.93-.78.165-.398.143-.854-.107-1.204l-.527-.738a1.125 1.125 0 01.12-1.45l.773-.773a1.125 1.125 0 011.45-.12l.737.527c.35.25.807.272 1.204.107.397-.165.71-.505.78-.929l.15-.894z"></path><path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path></svg></a><span class="bg-gray-900 text-center text-white px-2 py-1 shadow-lg rounded-md tooltiptextbottom">Open project settings view</span></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div></a></div>`);
    });
    _push(`<!--]--></span>`);
  }
  _push(`</div>`);
}
const _sfc_setup$1s = _sfc_main$1s.setup;
_sfc_main$1s.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Project/Index.vue");
  return _sfc_setup$1s ? _sfc_setup$1s(props, ctx) : void 0;
};
const TeamProjects = /* @__PURE__ */ _export_sfc(_sfc_main$1s, [["ssrRender", _sfc_ssrRender$1r]]);
const __vite_glob_0_29 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: TeamProjects
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1r = {
  components: {
    JetApplicationLogo,
    computed,
    ref,
    Combobox,
    ComboboxInput,
    ComboboxOptions,
    ComboboxOption,
    Dialog,
    DialogPanel,
    TransitionChild,
    TransitionRoot,
    MagnifyingGlassIcon,
    DocumentPlusIcon,
    FolderIcon,
    FolderPlusIcon,
    HashtagIcon,
    TagIcon,
    ArrowTopRightOnSquareIcon
  },
  props: [],
  data() {
    return {
      open: ref(false),
      steps: [
        { id: 1, name: "Step 1", href: "#", status: "current" },
        { id: 2, name: "Step 2", href: "#", status: "upcoming" },
        { id: 3, name: "Step 3", href: "#", status: "upcoming" },
        { id: 4, name: "Step 4", href: "#", status: "upcoming" }
      ]
    };
  },
  computed: {
    currentStep() {
      return this.steps.find((s2) => s2.status == "current").id;
    },
    mailFromAddress() {
      return String(this.$page.props.mailFromAddress);
    },
    mailTo() {
      return "mailto:" + String(this.$page.props.mailFromAddress);
    }
  },
  mounted() {
    if (!this.$page.props.auth.user.onboarded) {
      this.open = true;
    }
  },
  methods: {
    selectStep(id2) {
      this.steps.forEach((step) => {
        if (parseInt(step.id) < id2) {
          step.status = "complete";
        } else if (parseInt(step.id) == id2) {
          step.status = "current";
          this.$nextTick(() => {
            this.$refs.next.focus();
          });
        } else {
          step.status = "upcoming";
        }
      });
    },
    onboardingComplete() {
      this.open = false;
      axios$1.post("/onboarding/complete").then(() => {
        router$1.reload({
          only: ["user", "user.permissions", "user.roles"]
        });
      });
    },
    onboardAndStartTour() {
      this.onboardingComplete();
      this.$tours["appTour"].start();
    }
  }
};
function _sfc_ssrRender$1q(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_TransitionRoot = resolveComponent("TransitionRoot");
  const _component_Dialog = resolveComponent("Dialog");
  const _component_TransitionChild = resolveComponent("TransitionChild");
  const _component_DialogPanel = resolveComponent("DialogPanel");
  const _component_jet_application_logo = resolveComponent("jet-application-logo");
  const _component_ArrowTopRightOnSquareIcon = resolveComponent("ArrowTopRightOnSquareIcon");
  _push(ssrRenderComponent(_component_TransitionRoot, mergeProps({
    show: $data.open,
    as: "template",
    appear: ""
  }, _attrs), {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_Dialog, {
          as: "div",
          class: "relative z-10"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_TransitionChild, {
                as: "template",
                enter: "ease-out duration-300",
                "enter-from": "opacity-0",
                "enter-to": "opacity-100",
                leave: "ease-in duration-200",
                "leave-from": "opacity-100",
                "leave-to": "opacity-0"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<div class="fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity"${_scopeId3}></div>`);
                  } else {
                    return [
                      createVNode("div", { class: "fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity" })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`<div class="fixed inset-0 z-10 overflow-y-auto p-4 sm:p-6 md:p-20"${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_TransitionChild, {
                as: "template",
                enter: "ease-out duration-300",
                "enter-from": "opacity-0 scale-95",
                "enter-to": "opacity-100 scale-100",
                leave: "ease-in duration-200",
                "leave-from": "opacity-100 scale-100",
                "leave-to": "opacity-0 scale-95"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(ssrRenderComponent(_component_DialogPanel, { class: "mx-auto max-w-2xl transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all" }, {
                      default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`<div${_scopeId4}>`);
                          if ($options.currentStep == 1) {
                            _push5(`<div${_scopeId4}><section class="h-1/2 overflow-hidden bg-gray-50 overflow-hidden py-12"${_scopeId4}><div class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"${_scopeId4}><svg class="absolute top-full right-full transform translate-x-1/3 -translate-y-1/4 lg:translate-x-1/2 xl:-translate-y-1/2" width="404" height="404" fill="none" viewBox="0 0 404 404" role="img" aria-labelledby="svg-nmrxiv"${_scopeId4}><title id="svg-nmrxiv"${_scopeId4}> nmrxiv </title><defs${_scopeId4}><pattern id="ad119f34-7694-4c31-947f-5c9d249b21f3" x="0" y="0" width="20" height="20" patternUnits="userSpaceOnUse"${_scopeId4}><rect x="0" y="0" width="4" height="4" class="text-gray-200" fill="currentColor"${_scopeId4}></rect></pattern></defs><rect width="404" height="404" fill="url(#ad119f34-7694-4c31-947f-5c9d249b21f3)"${_scopeId4}></rect></svg><div class="relative"${_scopeId4}><div class="flex justify-center"${_scopeId4}>`);
                            _push5(ssrRenderComponent(_component_jet_application_logo, { class: "block h-14 w-auto" }, null, _parent5, _scopeId4));
                            _push5(`</div><blockquote class="mt-10"${_scopeId4}><div class="max-w-3xl mx-auto text-center text-xl leading-9 font-medium text-gray-900"${_scopeId4}><p class="mt-3 text-lg"${_scopeId4}> Welcome! <span class="text-xl"${_scopeId4}>nmr<b${_scopeId4}>Xiv</b></span> support scientists in their efforts to collect, store, process, analyse, disclose and re-use Nuclear Magnetic Resonance Spectroscopy research data. Ready to get started? </p></div></blockquote></div></div></section></div>`);
                          } else {
                            _push5(`<!---->`);
                          }
                          if ($options.currentStep == 2) {
                            _push5(`<div${_scopeId4}><section class="h-1/2 overflow-hidden py-12"${_scopeId4}><div class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"${_scopeId4}><svg class="absolute top-full right-full transform translate-x-1/3 -translate-y-1/4 lg:translate-x-1/2 xl:-translate-y-1/2" width="404" height="404" fill="none" viewBox="0 0 404 404" role="img" aria-labelledby="svg-nmrxiv"${_scopeId4}><title id="svg-nmrxiv"${_scopeId4}> nmrxiv </title><defs${_scopeId4}><pattern id="ad119f34-7694-4c31-947f-5c9d249b21f3" x="0" y="0" width="20" height="20" patternUnits="userSpaceOnUse"${_scopeId4}><rect x="0" y="0" width="4" height="4" class="text-gray-200" fill="currentColor"${_scopeId4}></rect></pattern></defs><rect width="404" height="404" fill="url(#ad119f34-7694-4c31-947f-5c9d249b21f3)"${_scopeId4}></rect></svg><div class="relative text-center"${_scopeId4}><blockquote class="mt-10"${_scopeId4}><div class="max-w-3xl mx-auto text-center text-xl leading-9 font-medium text-gray-900"${_scopeId4}><p class="mt-3 text-lg"${_scopeId4}><span class="text-xl"${_scopeId4}>nmr<b${_scopeId4}>Xiv</b></span> as a part of <a class="text-indigo-600 font-bold" href="https://nfdi4chem.de" target="_blank"${_scopeId4}>NFDI4Chem</a>, focuses on the implementation and adaptation of existing and new infrastructure, necessary to capture data early in the life cycle​ and to further manage, analyse and store associated information. Checkout <a class="text-indigo-600" target="_blank" href="https://www.chemotion.net/chemotionsaurus/index.html"${_scopeId4}>Chemotion</a> (Electronic Lab Notebook) or <a href="https://github.com/NFDI4Chem/nmrxiv-cli" class="text-indigo-600" target="_blank"${_scopeId4}>nmrXiv CLI </a>(Command Line Interface) for a seamless integration into your Lab infrastructure. </p></div></blockquote></div></div></section></div>`);
                          } else {
                            _push5(`<!---->`);
                          }
                          if ($options.currentStep == 3) {
                            _push5(`<div${_scopeId4}><section class="h-1/2 overflow-hidden py-12"${_scopeId4}><div class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"${_scopeId4}><svg class="absolute top-full right-full transform translate-x-1/3 -translate-y-1/4 lg:translate-x-1/2 xl:-translate-y-1/2" width="404" height="404" fill="none" viewBox="0 0 404 404" role="img" aria-labelledby="svg-nmrxiv"${_scopeId4}><title id="svg-nmrxiv"${_scopeId4}> nmrxiv </title><defs${_scopeId4}><pattern id="ad119f34-7694-4c31-947f-5c9d249b21f3" x="0" y="0" width="20" height="20" patternUnits="userSpaceOnUse"${_scopeId4}><rect x="0" y="0" width="4" height="4" class="text-gray-200" fill="currentColor"${_scopeId4}></rect></pattern></defs><rect width="404" height="404" fill="url(#ad119f34-7694-4c31-947f-5c9d249b21f3)"${_scopeId4}></rect></svg><div class="relative text-center"${_scopeId4}><p class="mt-3 text-lg"${_scopeId4}><span class="text-xl"${_scopeId4}>nmr<b${_scopeId4}>Xiv</b></span> is 100% open source, so you’re free to dig through the source to see exactly how it works. See something that needs to be improved? Just send us a request.<br${_scopeId4}><small${_scopeId4}>Chat bubble is on the bottom left corner or email us at <a${ssrRenderAttr("href", $options.mailTo)}${_scopeId4}>${ssrInterpolate($options.mailFromAddress)}</a></small></p><div class="mt-8"${_scopeId4}><div class="inline-flex"${_scopeId4}><a target="_blank" href="https://github.com/NFDI4Chem/nmrxiv" class="inline-flex mr-4 items-center justify-center px-5 py-3 border text-base font-medium rounded-md text-gray-900 bg-white hover:bg-gray-50"${_scopeId4}> Source code `);
                            _push5(ssrRenderComponent(_component_ArrowTopRightOnSquareIcon, {
                              class: "-mr-1 ml-3 h-5 w-5 text-gray-400",
                              "aria-hidden": "true"
                            }, null, _parent5, _scopeId4));
                            _push5(`</a><a target="_blank" href="https://docs.nmrxiv.org" class="inline-flex items-center justify-center px-5 py-3 border text-base font-medium rounded-md text-gray-900 bg-white hover:bg-gray-50"${_scopeId4}> Visit the docs `);
                            _push5(ssrRenderComponent(_component_ArrowTopRightOnSquareIcon, {
                              class: "-mr-1 ml-3 h-5 w-5 text-gray-400",
                              "aria-hidden": "true"
                            }, null, _parent5, _scopeId4));
                            _push5(`</a></div></div></div></div></section></div>`);
                          } else {
                            _push5(`<!---->`);
                          }
                          if ($options.currentStep == 4) {
                            _push5(`<div${_scopeId4}><div class="max-w-7xl mx-auto text-center py-12 px-4 sm:px-6 lg:py-16 lg:px-8"${_scopeId4}><h2 class="text-base font-semibold uppercase tracking-wider"${_scopeId4}> All set to get started! </h2><p class="my-2 font-bold tracking-tight sm:text-2xl"${_scopeId4}> Start uploading your spectral data today. </p><p${_scopeId4}> Click &quot;Get started&quot; and upload your data or if you want a guided tour of the dashboard press the &quot;Dashboard Tour&quot; button below. </p><div class="mt-8 flex justify-center"${_scopeId4}><div class="inline-flex rounded-md shadow"${_scopeId4}><a refs="next" class="cursor-pointer inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700"${_scopeId4}> Get started </a></div></div></div></div>`);
                          } else {
                            _push5(`<!---->`);
                          }
                          _push5(`<div class="grid grid-cols-4 gap-4"${_scopeId4}><div class="p-4 py-4"${_scopeId4}>`);
                          if ($options.currentStep != 1) {
                            _push5(`<button type="button" class="py-2 px-3 border rounded-md"${_scopeId4}><div class="flex flex-row align-middle"${_scopeId4}><svg class="w-5 mr-1" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"${_scopeId4}><path fill-rule="evenodd" d="M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z" clip-rule="evenodd"${_scopeId4}></path></svg><p class="ml-2"${_scopeId4}>Prev</p></div></button>`);
                          } else {
                            _push5(`<button type="button" class="py-2 px-3 border rounded-md"${_scopeId4}><div class="flex flex-row align-middle"${_scopeId4}><p class="mx-2"${_scopeId4}>Skip</p></div></button>`);
                          }
                          _push5(`</div><div class="col-span-2"${_scopeId4}><nav class="flex items-center justify-center p-4 py-6" aria-label="Progress"${_scopeId4}><p class="text-sm font-medium"${_scopeId4}> Step ${ssrInterpolate($data.steps.findIndex(
                            (step) => step.status === "current"
                          ) + 1)} of ${ssrInterpolate($data.steps.length)}</p><ol role="list" class="ml-8 flex items-center space-x-5"${_scopeId4}><!--[-->`);
                          ssrRenderList($data.steps, (step) => {
                            _push5(`<li${_scopeId4}><a class="cursor-pointer"${_scopeId4}>`);
                            if (step.status === "complete") {
                              _push5(`<span${ssrRenderAttr("href", step.href)} class="block w-2.5 h-2.5 bg-indigo-600 rounded-full hover:bg-indigo-600"${_scopeId4}><span class="sr-only"${_scopeId4}>${ssrInterpolate(step.name)}</span></span>`);
                            } else if (step.status === "current") {
                              _push5(`<span${ssrRenderAttr("href", step.href)} class="relative flex items-center justify-center" aria-current="step"${_scopeId4}><span class="absolute w-5 h-5 p-px flex" aria-hidden="true"${_scopeId4}><span class="w-full h-full rounded-full bg-indigo-200"${_scopeId4}></span></span><span class="relative block w-2.5 h-2.5 bg-indigo-600 rounded-full" aria-hidden="true"${_scopeId4}></span><span class="sr-only"${_scopeId4}>${ssrInterpolate(step.name)}</span></span>`);
                            } else {
                              _push5(`<span${ssrRenderAttr("href", step.href)} class="block w-2.5 h-2.5 bg-gray-200 rounded-full hover:bg-gray-400"${_scopeId4}><span class="sr-only"${_scopeId4}>${ssrInterpolate(step.name)}</span></span>`);
                            }
                            _push5(`</a></li>`);
                          });
                          _push5(`<!--]--></ol></nav></div><div class="p-4 py-4 text-right"${_scopeId4}>`);
                          if ($options.currentStep < $data.steps.length) {
                            _push5(`<div${_scopeId4}>`);
                            if ($options.currentStep == 1) {
                              _push5(`<div${_scopeId4}><button type="button" class="py-2 px-3 bg-indigo-600 text-white rounded-md" autofocus${_scopeId4}><div class="flex flex-row align-middle"${_scopeId4}><span class="mr-1"${_scopeId4}>Let&#39;s go</span><svg class="w-5 ml-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"${_scopeId4}><path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"${_scopeId4}></path></svg></div></button></div>`);
                            } else {
                              _push5(`<div${_scopeId4}><button type="button" class="py-2 px-3 bg-indigo-600 text-white rounded-md" autofocus${_scopeId4}><div class="flex flex-row align-middle"${_scopeId4}><span class="mr-1"${_scopeId4}>Next</span><svg class="w-5 ml-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"${_scopeId4}><path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"${_scopeId4}></path></svg></div></button></div>`);
                            }
                            _push5(`</div>`);
                          } else {
                            _push5(`<!---->`);
                          }
                          _push5(`</div></div></div>`);
                        } else {
                          return [
                            createVNode("div", null, [
                              $options.currentStep == 1 ? (openBlock(), createBlock("div", { key: 0 }, [
                                createVNode("section", { class: "h-1/2 overflow-hidden bg-gray-50 overflow-hidden py-12" }, [
                                  createVNode("div", { class: "relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" }, [
                                    (openBlock(), createBlock("svg", {
                                      class: "absolute top-full right-full transform translate-x-1/3 -translate-y-1/4 lg:translate-x-1/2 xl:-translate-y-1/2",
                                      width: "404",
                                      height: "404",
                                      fill: "none",
                                      viewBox: "0 0 404 404",
                                      role: "img",
                                      "aria-labelledby": "svg-nmrxiv"
                                    }, [
                                      createVNode("title", { id: "svg-nmrxiv" }, " nmrxiv "),
                                      createVNode("defs", null, [
                                        createVNode("pattern", {
                                          id: "ad119f34-7694-4c31-947f-5c9d249b21f3",
                                          x: "0",
                                          y: "0",
                                          width: "20",
                                          height: "20",
                                          patternUnits: "userSpaceOnUse"
                                        }, [
                                          createVNode("rect", {
                                            x: "0",
                                            y: "0",
                                            width: "4",
                                            height: "4",
                                            class: "text-gray-200",
                                            fill: "currentColor"
                                          })
                                        ])
                                      ]),
                                      createVNode("rect", {
                                        width: "404",
                                        height: "404",
                                        fill: "url(#ad119f34-7694-4c31-947f-5c9d249b21f3)"
                                      })
                                    ])),
                                    createVNode("div", { class: "relative" }, [
                                      createVNode("div", { class: "flex justify-center" }, [
                                        createVNode(_component_jet_application_logo, { class: "block h-14 w-auto" })
                                      ]),
                                      createVNode("blockquote", { class: "mt-10" }, [
                                        createVNode("div", { class: "max-w-3xl mx-auto text-center text-xl leading-9 font-medium text-gray-900" }, [
                                          createVNode("p", { class: "mt-3 text-lg" }, [
                                            createTextVNode(" Welcome! "),
                                            createVNode("span", { class: "text-xl" }, [
                                              createTextVNode("nmr"),
                                              createVNode("b", null, "Xiv")
                                            ]),
                                            createTextVNode(" support scientists in their efforts to collect, store, process, analyse, disclose and re-use Nuclear Magnetic Resonance Spectroscopy research data. Ready to get started? ")
                                          ])
                                        ])
                                      ])
                                    ])
                                  ])
                                ])
                              ])) : createCommentVNode("", true),
                              $options.currentStep == 2 ? (openBlock(), createBlock("div", { key: 1 }, [
                                createVNode("section", { class: "h-1/2 overflow-hidden py-12" }, [
                                  createVNode("div", { class: "relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" }, [
                                    (openBlock(), createBlock("svg", {
                                      class: "absolute top-full right-full transform translate-x-1/3 -translate-y-1/4 lg:translate-x-1/2 xl:-translate-y-1/2",
                                      width: "404",
                                      height: "404",
                                      fill: "none",
                                      viewBox: "0 0 404 404",
                                      role: "img",
                                      "aria-labelledby": "svg-nmrxiv"
                                    }, [
                                      createVNode("title", { id: "svg-nmrxiv" }, " nmrxiv "),
                                      createVNode("defs", null, [
                                        createVNode("pattern", {
                                          id: "ad119f34-7694-4c31-947f-5c9d249b21f3",
                                          x: "0",
                                          y: "0",
                                          width: "20",
                                          height: "20",
                                          patternUnits: "userSpaceOnUse"
                                        }, [
                                          createVNode("rect", {
                                            x: "0",
                                            y: "0",
                                            width: "4",
                                            height: "4",
                                            class: "text-gray-200",
                                            fill: "currentColor"
                                          })
                                        ])
                                      ]),
                                      createVNode("rect", {
                                        width: "404",
                                        height: "404",
                                        fill: "url(#ad119f34-7694-4c31-947f-5c9d249b21f3)"
                                      })
                                    ])),
                                    createVNode("div", { class: "relative text-center" }, [
                                      createVNode("blockquote", { class: "mt-10" }, [
                                        createVNode("div", { class: "max-w-3xl mx-auto text-center text-xl leading-9 font-medium text-gray-900" }, [
                                          createVNode("p", { class: "mt-3 text-lg" }, [
                                            createVNode("span", { class: "text-xl" }, [
                                              createTextVNode("nmr"),
                                              createVNode("b", null, "Xiv")
                                            ]),
                                            createTextVNode(" as a part of "),
                                            createVNode("a", {
                                              class: "text-indigo-600 font-bold",
                                              href: "https://nfdi4chem.de",
                                              target: "_blank"
                                            }, "NFDI4Chem"),
                                            createTextVNode(", focuses on the implementation and adaptation of existing and new infrastructure, necessary to capture data early in the life cycle​ and to further manage, analyse and store associated information. Checkout "),
                                            createVNode("a", {
                                              class: "text-indigo-600",
                                              target: "_blank",
                                              href: "https://www.chemotion.net/chemotionsaurus/index.html"
                                            }, "Chemotion"),
                                            createTextVNode(" (Electronic Lab Notebook) or "),
                                            createVNode("a", {
                                              href: "https://github.com/NFDI4Chem/nmrxiv-cli",
                                              class: "text-indigo-600",
                                              target: "_blank"
                                            }, "nmrXiv CLI "),
                                            createTextVNode("(Command Line Interface) for a seamless integration into your Lab infrastructure. ")
                                          ])
                                        ])
                                      ])
                                    ])
                                  ])
                                ])
                              ])) : createCommentVNode("", true),
                              $options.currentStep == 3 ? (openBlock(), createBlock("div", { key: 2 }, [
                                createVNode("section", { class: "h-1/2 overflow-hidden py-12" }, [
                                  createVNode("div", { class: "relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" }, [
                                    (openBlock(), createBlock("svg", {
                                      class: "absolute top-full right-full transform translate-x-1/3 -translate-y-1/4 lg:translate-x-1/2 xl:-translate-y-1/2",
                                      width: "404",
                                      height: "404",
                                      fill: "none",
                                      viewBox: "0 0 404 404",
                                      role: "img",
                                      "aria-labelledby": "svg-nmrxiv"
                                    }, [
                                      createVNode("title", { id: "svg-nmrxiv" }, " nmrxiv "),
                                      createVNode("defs", null, [
                                        createVNode("pattern", {
                                          id: "ad119f34-7694-4c31-947f-5c9d249b21f3",
                                          x: "0",
                                          y: "0",
                                          width: "20",
                                          height: "20",
                                          patternUnits: "userSpaceOnUse"
                                        }, [
                                          createVNode("rect", {
                                            x: "0",
                                            y: "0",
                                            width: "4",
                                            height: "4",
                                            class: "text-gray-200",
                                            fill: "currentColor"
                                          })
                                        ])
                                      ]),
                                      createVNode("rect", {
                                        width: "404",
                                        height: "404",
                                        fill: "url(#ad119f34-7694-4c31-947f-5c9d249b21f3)"
                                      })
                                    ])),
                                    createVNode("div", { class: "relative text-center" }, [
                                      createVNode("p", { class: "mt-3 text-lg" }, [
                                        createVNode("span", { class: "text-xl" }, [
                                          createTextVNode("nmr"),
                                          createVNode("b", null, "Xiv")
                                        ]),
                                        createTextVNode(" is 100% open source, so you’re free to dig through the source to see exactly how it works. See something that needs to be improved? Just send us a request."),
                                        createVNode("br"),
                                        createVNode("small", null, [
                                          createTextVNode("Chat bubble is on the bottom left corner or email us at "),
                                          createVNode("a", { href: $options.mailTo }, toDisplayString($options.mailFromAddress), 9, ["href"])
                                        ])
                                      ]),
                                      createVNode("div", { class: "mt-8" }, [
                                        createVNode("div", { class: "inline-flex" }, [
                                          createVNode("a", {
                                            target: "_blank",
                                            href: "https://github.com/NFDI4Chem/nmrxiv",
                                            class: "inline-flex mr-4 items-center justify-center px-5 py-3 border text-base font-medium rounded-md text-gray-900 bg-white hover:bg-gray-50"
                                          }, [
                                            createTextVNode(" Source code "),
                                            createVNode(_component_ArrowTopRightOnSquareIcon, {
                                              class: "-mr-1 ml-3 h-5 w-5 text-gray-400",
                                              "aria-hidden": "true"
                                            })
                                          ]),
                                          createVNode("a", {
                                            target: "_blank",
                                            href: "https://docs.nmrxiv.org",
                                            class: "inline-flex items-center justify-center px-5 py-3 border text-base font-medium rounded-md text-gray-900 bg-white hover:bg-gray-50"
                                          }, [
                                            createTextVNode(" Visit the docs "),
                                            createVNode(_component_ArrowTopRightOnSquareIcon, {
                                              class: "-mr-1 ml-3 h-5 w-5 text-gray-400",
                                              "aria-hidden": "true"
                                            })
                                          ])
                                        ])
                                      ])
                                    ])
                                  ])
                                ])
                              ])) : createCommentVNode("", true),
                              $options.currentStep == 4 ? (openBlock(), createBlock("div", { key: 3 }, [
                                createVNode("div", { class: "max-w-7xl mx-auto text-center py-12 px-4 sm:px-6 lg:py-16 lg:px-8" }, [
                                  createVNode("h2", { class: "text-base font-semibold uppercase tracking-wider" }, " All set to get started! "),
                                  createVNode("p", { class: "my-2 font-bold tracking-tight sm:text-2xl" }, " Start uploading your spectral data today. "),
                                  createVNode("p", null, ' Click "Get started" and upload your data or if you want a guided tour of the dashboard press the "Dashboard Tour" button below. '),
                                  createVNode("div", { class: "mt-8 flex justify-center" }, [
                                    createVNode("div", { class: "inline-flex rounded-md shadow" }, [
                                      createVNode("a", {
                                        refs: "next",
                                        class: "cursor-pointer inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700",
                                        onClick: $options.onboardingComplete
                                      }, " Get started ", 8, ["onClick"])
                                    ])
                                  ])
                                ])
                              ])) : createCommentVNode("", true),
                              createVNode("div", { class: "grid grid-cols-4 gap-4" }, [
                                createVNode("div", { class: "p-4 py-4" }, [
                                  $options.currentStep != 1 ? (openBlock(), createBlock("button", {
                                    key: 0,
                                    type: "button",
                                    class: "py-2 px-3 border rounded-md",
                                    onClick: ($event) => $options.selectStep($options.currentStep - 1)
                                  }, [
                                    createVNode("div", { class: "flex flex-row align-middle" }, [
                                      (openBlock(), createBlock("svg", {
                                        class: "w-5 mr-1",
                                        fill: "currentColor",
                                        viewBox: "0 0 20 20",
                                        xmlns: "http://www.w3.org/2000/svg"
                                      }, [
                                        createVNode("path", {
                                          "fill-rule": "evenodd",
                                          d: "M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z",
                                          "clip-rule": "evenodd"
                                        })
                                      ])),
                                      createVNode("p", { class: "ml-2" }, "Prev")
                                    ])
                                  ], 8, ["onClick"])) : (openBlock(), createBlock("button", {
                                    key: 1,
                                    type: "button",
                                    class: "py-2 px-3 border rounded-md",
                                    onClick: $options.onboardingComplete
                                  }, [
                                    createVNode("div", { class: "flex flex-row align-middle" }, [
                                      createVNode("p", { class: "mx-2" }, "Skip")
                                    ])
                                  ], 8, ["onClick"]))
                                ]),
                                createVNode("div", { class: "col-span-2" }, [
                                  createVNode("nav", {
                                    class: "flex items-center justify-center p-4 py-6",
                                    "aria-label": "Progress"
                                  }, [
                                    createVNode("p", { class: "text-sm font-medium" }, " Step " + toDisplayString($data.steps.findIndex(
                                      (step) => step.status === "current"
                                    ) + 1) + " of " + toDisplayString($data.steps.length), 1),
                                    createVNode("ol", {
                                      role: "list",
                                      class: "ml-8 flex items-center space-x-5"
                                    }, [
                                      (openBlock(true), createBlock(Fragment, null, renderList($data.steps, (step) => {
                                        return openBlock(), createBlock("li", {
                                          key: step.name
                                        }, [
                                          createVNode("a", {
                                            class: "cursor-pointer",
                                            onClick: ($event) => $options.selectStep(step.id)
                                          }, [
                                            step.status === "complete" ? (openBlock(), createBlock("span", {
                                              key: 0,
                                              href: step.href,
                                              class: "block w-2.5 h-2.5 bg-indigo-600 rounded-full hover:bg-indigo-600"
                                            }, [
                                              createVNode("span", { class: "sr-only" }, toDisplayString(step.name), 1)
                                            ], 8, ["href"])) : step.status === "current" ? (openBlock(), createBlock("span", {
                                              key: 1,
                                              href: step.href,
                                              class: "relative flex items-center justify-center",
                                              "aria-current": "step"
                                            }, [
                                              createVNode("span", {
                                                class: "absolute w-5 h-5 p-px flex",
                                                "aria-hidden": "true"
                                              }, [
                                                createVNode("span", { class: "w-full h-full rounded-full bg-indigo-200" })
                                              ]),
                                              createVNode("span", {
                                                class: "relative block w-2.5 h-2.5 bg-indigo-600 rounded-full",
                                                "aria-hidden": "true"
                                              }),
                                              createVNode("span", { class: "sr-only" }, toDisplayString(step.name), 1)
                                            ], 8, ["href"])) : (openBlock(), createBlock("span", {
                                              key: 2,
                                              href: step.href,
                                              class: "block w-2.5 h-2.5 bg-gray-200 rounded-full hover:bg-gray-400"
                                            }, [
                                              createVNode("span", { class: "sr-only" }, toDisplayString(step.name), 1)
                                            ], 8, ["href"]))
                                          ], 8, ["onClick"])
                                        ]);
                                      }), 128))
                                    ])
                                  ])
                                ]),
                                createVNode("div", { class: "p-4 py-4 text-right" }, [
                                  $options.currentStep < $data.steps.length ? (openBlock(), createBlock("div", { key: 0 }, [
                                    $options.currentStep == 1 ? (openBlock(), createBlock("div", { key: 0 }, [
                                      createVNode("button", {
                                        type: "button",
                                        class: "py-2 px-3 bg-indigo-600 text-white rounded-md",
                                        autofocus: "",
                                        onClick: ($event) => $options.selectStep($options.currentStep + 1)
                                      }, [
                                        createVNode("div", { class: "flex flex-row align-middle" }, [
                                          createVNode("span", { class: "mr-1" }, "Let's go"),
                                          (openBlock(), createBlock("svg", {
                                            class: "w-5 ml-2",
                                            fill: "currentColor",
                                            viewBox: "0 0 20 20",
                                            xmlns: "http://www.w3.org/2000/svg"
                                          }, [
                                            createVNode("path", {
                                              "fill-rule": "evenodd",
                                              d: "M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z",
                                              "clip-rule": "evenodd"
                                            })
                                          ]))
                                        ])
                                      ], 8, ["onClick"])
                                    ])) : (openBlock(), createBlock("div", { key: 1 }, [
                                      createVNode("button", {
                                        ref: "next",
                                        type: "button",
                                        class: "py-2 px-3 bg-indigo-600 text-white rounded-md",
                                        autofocus: "",
                                        onClick: ($event) => $options.selectStep($options.currentStep + 1)
                                      }, [
                                        createVNode("div", { class: "flex flex-row align-middle" }, [
                                          createVNode("span", { class: "mr-1" }, "Next"),
                                          (openBlock(), createBlock("svg", {
                                            class: "w-5 ml-2",
                                            fill: "currentColor",
                                            viewBox: "0 0 20 20",
                                            xmlns: "http://www.w3.org/2000/svg"
                                          }, [
                                            createVNode("path", {
                                              "fill-rule": "evenodd",
                                              d: "M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z",
                                              "clip-rule": "evenodd"
                                            })
                                          ]))
                                        ])
                                      ], 8, ["onClick"])
                                    ]))
                                  ])) : createCommentVNode("", true)
                                ])
                              ])
                            ])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                  } else {
                    return [
                      createVNode(_component_DialogPanel, { class: "mx-auto max-w-2xl transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all" }, {
                        default: withCtx(() => [
                          createVNode("div", null, [
                            $options.currentStep == 1 ? (openBlock(), createBlock("div", { key: 0 }, [
                              createVNode("section", { class: "h-1/2 overflow-hidden bg-gray-50 overflow-hidden py-12" }, [
                                createVNode("div", { class: "relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" }, [
                                  (openBlock(), createBlock("svg", {
                                    class: "absolute top-full right-full transform translate-x-1/3 -translate-y-1/4 lg:translate-x-1/2 xl:-translate-y-1/2",
                                    width: "404",
                                    height: "404",
                                    fill: "none",
                                    viewBox: "0 0 404 404",
                                    role: "img",
                                    "aria-labelledby": "svg-nmrxiv"
                                  }, [
                                    createVNode("title", { id: "svg-nmrxiv" }, " nmrxiv "),
                                    createVNode("defs", null, [
                                      createVNode("pattern", {
                                        id: "ad119f34-7694-4c31-947f-5c9d249b21f3",
                                        x: "0",
                                        y: "0",
                                        width: "20",
                                        height: "20",
                                        patternUnits: "userSpaceOnUse"
                                      }, [
                                        createVNode("rect", {
                                          x: "0",
                                          y: "0",
                                          width: "4",
                                          height: "4",
                                          class: "text-gray-200",
                                          fill: "currentColor"
                                        })
                                      ])
                                    ]),
                                    createVNode("rect", {
                                      width: "404",
                                      height: "404",
                                      fill: "url(#ad119f34-7694-4c31-947f-5c9d249b21f3)"
                                    })
                                  ])),
                                  createVNode("div", { class: "relative" }, [
                                    createVNode("div", { class: "flex justify-center" }, [
                                      createVNode(_component_jet_application_logo, { class: "block h-14 w-auto" })
                                    ]),
                                    createVNode("blockquote", { class: "mt-10" }, [
                                      createVNode("div", { class: "max-w-3xl mx-auto text-center text-xl leading-9 font-medium text-gray-900" }, [
                                        createVNode("p", { class: "mt-3 text-lg" }, [
                                          createTextVNode(" Welcome! "),
                                          createVNode("span", { class: "text-xl" }, [
                                            createTextVNode("nmr"),
                                            createVNode("b", null, "Xiv")
                                          ]),
                                          createTextVNode(" support scientists in their efforts to collect, store, process, analyse, disclose and re-use Nuclear Magnetic Resonance Spectroscopy research data. Ready to get started? ")
                                        ])
                                      ])
                                    ])
                                  ])
                                ])
                              ])
                            ])) : createCommentVNode("", true),
                            $options.currentStep == 2 ? (openBlock(), createBlock("div", { key: 1 }, [
                              createVNode("section", { class: "h-1/2 overflow-hidden py-12" }, [
                                createVNode("div", { class: "relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" }, [
                                  (openBlock(), createBlock("svg", {
                                    class: "absolute top-full right-full transform translate-x-1/3 -translate-y-1/4 lg:translate-x-1/2 xl:-translate-y-1/2",
                                    width: "404",
                                    height: "404",
                                    fill: "none",
                                    viewBox: "0 0 404 404",
                                    role: "img",
                                    "aria-labelledby": "svg-nmrxiv"
                                  }, [
                                    createVNode("title", { id: "svg-nmrxiv" }, " nmrxiv "),
                                    createVNode("defs", null, [
                                      createVNode("pattern", {
                                        id: "ad119f34-7694-4c31-947f-5c9d249b21f3",
                                        x: "0",
                                        y: "0",
                                        width: "20",
                                        height: "20",
                                        patternUnits: "userSpaceOnUse"
                                      }, [
                                        createVNode("rect", {
                                          x: "0",
                                          y: "0",
                                          width: "4",
                                          height: "4",
                                          class: "text-gray-200",
                                          fill: "currentColor"
                                        })
                                      ])
                                    ]),
                                    createVNode("rect", {
                                      width: "404",
                                      height: "404",
                                      fill: "url(#ad119f34-7694-4c31-947f-5c9d249b21f3)"
                                    })
                                  ])),
                                  createVNode("div", { class: "relative text-center" }, [
                                    createVNode("blockquote", { class: "mt-10" }, [
                                      createVNode("div", { class: "max-w-3xl mx-auto text-center text-xl leading-9 font-medium text-gray-900" }, [
                                        createVNode("p", { class: "mt-3 text-lg" }, [
                                          createVNode("span", { class: "text-xl" }, [
                                            createTextVNode("nmr"),
                                            createVNode("b", null, "Xiv")
                                          ]),
                                          createTextVNode(" as a part of "),
                                          createVNode("a", {
                                            class: "text-indigo-600 font-bold",
                                            href: "https://nfdi4chem.de",
                                            target: "_blank"
                                          }, "NFDI4Chem"),
                                          createTextVNode(", focuses on the implementation and adaptation of existing and new infrastructure, necessary to capture data early in the life cycle​ and to further manage, analyse and store associated information. Checkout "),
                                          createVNode("a", {
                                            class: "text-indigo-600",
                                            target: "_blank",
                                            href: "https://www.chemotion.net/chemotionsaurus/index.html"
                                          }, "Chemotion"),
                                          createTextVNode(" (Electronic Lab Notebook) or "),
                                          createVNode("a", {
                                            href: "https://github.com/NFDI4Chem/nmrxiv-cli",
                                            class: "text-indigo-600",
                                            target: "_blank"
                                          }, "nmrXiv CLI "),
                                          createTextVNode("(Command Line Interface) for a seamless integration into your Lab infrastructure. ")
                                        ])
                                      ])
                                    ])
                                  ])
                                ])
                              ])
                            ])) : createCommentVNode("", true),
                            $options.currentStep == 3 ? (openBlock(), createBlock("div", { key: 2 }, [
                              createVNode("section", { class: "h-1/2 overflow-hidden py-12" }, [
                                createVNode("div", { class: "relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" }, [
                                  (openBlock(), createBlock("svg", {
                                    class: "absolute top-full right-full transform translate-x-1/3 -translate-y-1/4 lg:translate-x-1/2 xl:-translate-y-1/2",
                                    width: "404",
                                    height: "404",
                                    fill: "none",
                                    viewBox: "0 0 404 404",
                                    role: "img",
                                    "aria-labelledby": "svg-nmrxiv"
                                  }, [
                                    createVNode("title", { id: "svg-nmrxiv" }, " nmrxiv "),
                                    createVNode("defs", null, [
                                      createVNode("pattern", {
                                        id: "ad119f34-7694-4c31-947f-5c9d249b21f3",
                                        x: "0",
                                        y: "0",
                                        width: "20",
                                        height: "20",
                                        patternUnits: "userSpaceOnUse"
                                      }, [
                                        createVNode("rect", {
                                          x: "0",
                                          y: "0",
                                          width: "4",
                                          height: "4",
                                          class: "text-gray-200",
                                          fill: "currentColor"
                                        })
                                      ])
                                    ]),
                                    createVNode("rect", {
                                      width: "404",
                                      height: "404",
                                      fill: "url(#ad119f34-7694-4c31-947f-5c9d249b21f3)"
                                    })
                                  ])),
                                  createVNode("div", { class: "relative text-center" }, [
                                    createVNode("p", { class: "mt-3 text-lg" }, [
                                      createVNode("span", { class: "text-xl" }, [
                                        createTextVNode("nmr"),
                                        createVNode("b", null, "Xiv")
                                      ]),
                                      createTextVNode(" is 100% open source, so you’re free to dig through the source to see exactly how it works. See something that needs to be improved? Just send us a request."),
                                      createVNode("br"),
                                      createVNode("small", null, [
                                        createTextVNode("Chat bubble is on the bottom left corner or email us at "),
                                        createVNode("a", { href: $options.mailTo }, toDisplayString($options.mailFromAddress), 9, ["href"])
                                      ])
                                    ]),
                                    createVNode("div", { class: "mt-8" }, [
                                      createVNode("div", { class: "inline-flex" }, [
                                        createVNode("a", {
                                          target: "_blank",
                                          href: "https://github.com/NFDI4Chem/nmrxiv",
                                          class: "inline-flex mr-4 items-center justify-center px-5 py-3 border text-base font-medium rounded-md text-gray-900 bg-white hover:bg-gray-50"
                                        }, [
                                          createTextVNode(" Source code "),
                                          createVNode(_component_ArrowTopRightOnSquareIcon, {
                                            class: "-mr-1 ml-3 h-5 w-5 text-gray-400",
                                            "aria-hidden": "true"
                                          })
                                        ]),
                                        createVNode("a", {
                                          target: "_blank",
                                          href: "https://docs.nmrxiv.org",
                                          class: "inline-flex items-center justify-center px-5 py-3 border text-base font-medium rounded-md text-gray-900 bg-white hover:bg-gray-50"
                                        }, [
                                          createTextVNode(" Visit the docs "),
                                          createVNode(_component_ArrowTopRightOnSquareIcon, {
                                            class: "-mr-1 ml-3 h-5 w-5 text-gray-400",
                                            "aria-hidden": "true"
                                          })
                                        ])
                                      ])
                                    ])
                                  ])
                                ])
                              ])
                            ])) : createCommentVNode("", true),
                            $options.currentStep == 4 ? (openBlock(), createBlock("div", { key: 3 }, [
                              createVNode("div", { class: "max-w-7xl mx-auto text-center py-12 px-4 sm:px-6 lg:py-16 lg:px-8" }, [
                                createVNode("h2", { class: "text-base font-semibold uppercase tracking-wider" }, " All set to get started! "),
                                createVNode("p", { class: "my-2 font-bold tracking-tight sm:text-2xl" }, " Start uploading your spectral data today. "),
                                createVNode("p", null, ' Click "Get started" and upload your data or if you want a guided tour of the dashboard press the "Dashboard Tour" button below. '),
                                createVNode("div", { class: "mt-8 flex justify-center" }, [
                                  createVNode("div", { class: "inline-flex rounded-md shadow" }, [
                                    createVNode("a", {
                                      refs: "next",
                                      class: "cursor-pointer inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700",
                                      onClick: $options.onboardingComplete
                                    }, " Get started ", 8, ["onClick"])
                                  ])
                                ])
                              ])
                            ])) : createCommentVNode("", true),
                            createVNode("div", { class: "grid grid-cols-4 gap-4" }, [
                              createVNode("div", { class: "p-4 py-4" }, [
                                $options.currentStep != 1 ? (openBlock(), createBlock("button", {
                                  key: 0,
                                  type: "button",
                                  class: "py-2 px-3 border rounded-md",
                                  onClick: ($event) => $options.selectStep($options.currentStep - 1)
                                }, [
                                  createVNode("div", { class: "flex flex-row align-middle" }, [
                                    (openBlock(), createBlock("svg", {
                                      class: "w-5 mr-1",
                                      fill: "currentColor",
                                      viewBox: "0 0 20 20",
                                      xmlns: "http://www.w3.org/2000/svg"
                                    }, [
                                      createVNode("path", {
                                        "fill-rule": "evenodd",
                                        d: "M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z",
                                        "clip-rule": "evenodd"
                                      })
                                    ])),
                                    createVNode("p", { class: "ml-2" }, "Prev")
                                  ])
                                ], 8, ["onClick"])) : (openBlock(), createBlock("button", {
                                  key: 1,
                                  type: "button",
                                  class: "py-2 px-3 border rounded-md",
                                  onClick: $options.onboardingComplete
                                }, [
                                  createVNode("div", { class: "flex flex-row align-middle" }, [
                                    createVNode("p", { class: "mx-2" }, "Skip")
                                  ])
                                ], 8, ["onClick"]))
                              ]),
                              createVNode("div", { class: "col-span-2" }, [
                                createVNode("nav", {
                                  class: "flex items-center justify-center p-4 py-6",
                                  "aria-label": "Progress"
                                }, [
                                  createVNode("p", { class: "text-sm font-medium" }, " Step " + toDisplayString($data.steps.findIndex(
                                    (step) => step.status === "current"
                                  ) + 1) + " of " + toDisplayString($data.steps.length), 1),
                                  createVNode("ol", {
                                    role: "list",
                                    class: "ml-8 flex items-center space-x-5"
                                  }, [
                                    (openBlock(true), createBlock(Fragment, null, renderList($data.steps, (step) => {
                                      return openBlock(), createBlock("li", {
                                        key: step.name
                                      }, [
                                        createVNode("a", {
                                          class: "cursor-pointer",
                                          onClick: ($event) => $options.selectStep(step.id)
                                        }, [
                                          step.status === "complete" ? (openBlock(), createBlock("span", {
                                            key: 0,
                                            href: step.href,
                                            class: "block w-2.5 h-2.5 bg-indigo-600 rounded-full hover:bg-indigo-600"
                                          }, [
                                            createVNode("span", { class: "sr-only" }, toDisplayString(step.name), 1)
                                          ], 8, ["href"])) : step.status === "current" ? (openBlock(), createBlock("span", {
                                            key: 1,
                                            href: step.href,
                                            class: "relative flex items-center justify-center",
                                            "aria-current": "step"
                                          }, [
                                            createVNode("span", {
                                              class: "absolute w-5 h-5 p-px flex",
                                              "aria-hidden": "true"
                                            }, [
                                              createVNode("span", { class: "w-full h-full rounded-full bg-indigo-200" })
                                            ]),
                                            createVNode("span", {
                                              class: "relative block w-2.5 h-2.5 bg-indigo-600 rounded-full",
                                              "aria-hidden": "true"
                                            }),
                                            createVNode("span", { class: "sr-only" }, toDisplayString(step.name), 1)
                                          ], 8, ["href"])) : (openBlock(), createBlock("span", {
                                            key: 2,
                                            href: step.href,
                                            class: "block w-2.5 h-2.5 bg-gray-200 rounded-full hover:bg-gray-400"
                                          }, [
                                            createVNode("span", { class: "sr-only" }, toDisplayString(step.name), 1)
                                          ], 8, ["href"]))
                                        ], 8, ["onClick"])
                                      ]);
                                    }), 128))
                                  ])
                                ])
                              ]),
                              createVNode("div", { class: "p-4 py-4 text-right" }, [
                                $options.currentStep < $data.steps.length ? (openBlock(), createBlock("div", { key: 0 }, [
                                  $options.currentStep == 1 ? (openBlock(), createBlock("div", { key: 0 }, [
                                    createVNode("button", {
                                      type: "button",
                                      class: "py-2 px-3 bg-indigo-600 text-white rounded-md",
                                      autofocus: "",
                                      onClick: ($event) => $options.selectStep($options.currentStep + 1)
                                    }, [
                                      createVNode("div", { class: "flex flex-row align-middle" }, [
                                        createVNode("span", { class: "mr-1" }, "Let's go"),
                                        (openBlock(), createBlock("svg", {
                                          class: "w-5 ml-2",
                                          fill: "currentColor",
                                          viewBox: "0 0 20 20",
                                          xmlns: "http://www.w3.org/2000/svg"
                                        }, [
                                          createVNode("path", {
                                            "fill-rule": "evenodd",
                                            d: "M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z",
                                            "clip-rule": "evenodd"
                                          })
                                        ]))
                                      ])
                                    ], 8, ["onClick"])
                                  ])) : (openBlock(), createBlock("div", { key: 1 }, [
                                    createVNode("button", {
                                      ref: "next",
                                      type: "button",
                                      class: "py-2 px-3 bg-indigo-600 text-white rounded-md",
                                      autofocus: "",
                                      onClick: ($event) => $options.selectStep($options.currentStep + 1)
                                    }, [
                                      createVNode("div", { class: "flex flex-row align-middle" }, [
                                        createVNode("span", { class: "mr-1" }, "Next"),
                                        (openBlock(), createBlock("svg", {
                                          class: "w-5 ml-2",
                                          fill: "currentColor",
                                          viewBox: "0 0 20 20",
                                          xmlns: "http://www.w3.org/2000/svg"
                                        }, [
                                          createVNode("path", {
                                            "fill-rule": "evenodd",
                                            d: "M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z",
                                            "clip-rule": "evenodd"
                                          })
                                        ]))
                                      ])
                                    ], 8, ["onClick"])
                                  ]))
                                ])) : createCommentVNode("", true)
                              ])
                            ])
                          ])
                        ]),
                        _: 1
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</div>`);
            } else {
              return [
                createVNode(_component_TransitionChild, {
                  as: "template",
                  enter: "ease-out duration-300",
                  "enter-from": "opacity-0",
                  "enter-to": "opacity-100",
                  leave: "ease-in duration-200",
                  "leave-from": "opacity-100",
                  "leave-to": "opacity-0"
                }, {
                  default: withCtx(() => [
                    createVNode("div", { class: "fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity" })
                  ]),
                  _: 1
                }),
                createVNode("div", { class: "fixed inset-0 z-10 overflow-y-auto p-4 sm:p-6 md:p-20" }, [
                  createVNode(_component_TransitionChild, {
                    as: "template",
                    enter: "ease-out duration-300",
                    "enter-from": "opacity-0 scale-95",
                    "enter-to": "opacity-100 scale-100",
                    leave: "ease-in duration-200",
                    "leave-from": "opacity-100 scale-100",
                    "leave-to": "opacity-0 scale-95"
                  }, {
                    default: withCtx(() => [
                      createVNode(_component_DialogPanel, { class: "mx-auto max-w-2xl transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all" }, {
                        default: withCtx(() => [
                          createVNode("div", null, [
                            $options.currentStep == 1 ? (openBlock(), createBlock("div", { key: 0 }, [
                              createVNode("section", { class: "h-1/2 overflow-hidden bg-gray-50 overflow-hidden py-12" }, [
                                createVNode("div", { class: "relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" }, [
                                  (openBlock(), createBlock("svg", {
                                    class: "absolute top-full right-full transform translate-x-1/3 -translate-y-1/4 lg:translate-x-1/2 xl:-translate-y-1/2",
                                    width: "404",
                                    height: "404",
                                    fill: "none",
                                    viewBox: "0 0 404 404",
                                    role: "img",
                                    "aria-labelledby": "svg-nmrxiv"
                                  }, [
                                    createVNode("title", { id: "svg-nmrxiv" }, " nmrxiv "),
                                    createVNode("defs", null, [
                                      createVNode("pattern", {
                                        id: "ad119f34-7694-4c31-947f-5c9d249b21f3",
                                        x: "0",
                                        y: "0",
                                        width: "20",
                                        height: "20",
                                        patternUnits: "userSpaceOnUse"
                                      }, [
                                        createVNode("rect", {
                                          x: "0",
                                          y: "0",
                                          width: "4",
                                          height: "4",
                                          class: "text-gray-200",
                                          fill: "currentColor"
                                        })
                                      ])
                                    ]),
                                    createVNode("rect", {
                                      width: "404",
                                      height: "404",
                                      fill: "url(#ad119f34-7694-4c31-947f-5c9d249b21f3)"
                                    })
                                  ])),
                                  createVNode("div", { class: "relative" }, [
                                    createVNode("div", { class: "flex justify-center" }, [
                                      createVNode(_component_jet_application_logo, { class: "block h-14 w-auto" })
                                    ]),
                                    createVNode("blockquote", { class: "mt-10" }, [
                                      createVNode("div", { class: "max-w-3xl mx-auto text-center text-xl leading-9 font-medium text-gray-900" }, [
                                        createVNode("p", { class: "mt-3 text-lg" }, [
                                          createTextVNode(" Welcome! "),
                                          createVNode("span", { class: "text-xl" }, [
                                            createTextVNode("nmr"),
                                            createVNode("b", null, "Xiv")
                                          ]),
                                          createTextVNode(" support scientists in their efforts to collect, store, process, analyse, disclose and re-use Nuclear Magnetic Resonance Spectroscopy research data. Ready to get started? ")
                                        ])
                                      ])
                                    ])
                                  ])
                                ])
                              ])
                            ])) : createCommentVNode("", true),
                            $options.currentStep == 2 ? (openBlock(), createBlock("div", { key: 1 }, [
                              createVNode("section", { class: "h-1/2 overflow-hidden py-12" }, [
                                createVNode("div", { class: "relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" }, [
                                  (openBlock(), createBlock("svg", {
                                    class: "absolute top-full right-full transform translate-x-1/3 -translate-y-1/4 lg:translate-x-1/2 xl:-translate-y-1/2",
                                    width: "404",
                                    height: "404",
                                    fill: "none",
                                    viewBox: "0 0 404 404",
                                    role: "img",
                                    "aria-labelledby": "svg-nmrxiv"
                                  }, [
                                    createVNode("title", { id: "svg-nmrxiv" }, " nmrxiv "),
                                    createVNode("defs", null, [
                                      createVNode("pattern", {
                                        id: "ad119f34-7694-4c31-947f-5c9d249b21f3",
                                        x: "0",
                                        y: "0",
                                        width: "20",
                                        height: "20",
                                        patternUnits: "userSpaceOnUse"
                                      }, [
                                        createVNode("rect", {
                                          x: "0",
                                          y: "0",
                                          width: "4",
                                          height: "4",
                                          class: "text-gray-200",
                                          fill: "currentColor"
                                        })
                                      ])
                                    ]),
                                    createVNode("rect", {
                                      width: "404",
                                      height: "404",
                                      fill: "url(#ad119f34-7694-4c31-947f-5c9d249b21f3)"
                                    })
                                  ])),
                                  createVNode("div", { class: "relative text-center" }, [
                                    createVNode("blockquote", { class: "mt-10" }, [
                                      createVNode("div", { class: "max-w-3xl mx-auto text-center text-xl leading-9 font-medium text-gray-900" }, [
                                        createVNode("p", { class: "mt-3 text-lg" }, [
                                          createVNode("span", { class: "text-xl" }, [
                                            createTextVNode("nmr"),
                                            createVNode("b", null, "Xiv")
                                          ]),
                                          createTextVNode(" as a part of "),
                                          createVNode("a", {
                                            class: "text-indigo-600 font-bold",
                                            href: "https://nfdi4chem.de",
                                            target: "_blank"
                                          }, "NFDI4Chem"),
                                          createTextVNode(", focuses on the implementation and adaptation of existing and new infrastructure, necessary to capture data early in the life cycle​ and to further manage, analyse and store associated information. Checkout "),
                                          createVNode("a", {
                                            class: "text-indigo-600",
                                            target: "_blank",
                                            href: "https://www.chemotion.net/chemotionsaurus/index.html"
                                          }, "Chemotion"),
                                          createTextVNode(" (Electronic Lab Notebook) or "),
                                          createVNode("a", {
                                            href: "https://github.com/NFDI4Chem/nmrxiv-cli",
                                            class: "text-indigo-600",
                                            target: "_blank"
                                          }, "nmrXiv CLI "),
                                          createTextVNode("(Command Line Interface) for a seamless integration into your Lab infrastructure. ")
                                        ])
                                      ])
                                    ])
                                  ])
                                ])
                              ])
                            ])) : createCommentVNode("", true),
                            $options.currentStep == 3 ? (openBlock(), createBlock("div", { key: 2 }, [
                              createVNode("section", { class: "h-1/2 overflow-hidden py-12" }, [
                                createVNode("div", { class: "relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" }, [
                                  (openBlock(), createBlock("svg", {
                                    class: "absolute top-full right-full transform translate-x-1/3 -translate-y-1/4 lg:translate-x-1/2 xl:-translate-y-1/2",
                                    width: "404",
                                    height: "404",
                                    fill: "none",
                                    viewBox: "0 0 404 404",
                                    role: "img",
                                    "aria-labelledby": "svg-nmrxiv"
                                  }, [
                                    createVNode("title", { id: "svg-nmrxiv" }, " nmrxiv "),
                                    createVNode("defs", null, [
                                      createVNode("pattern", {
                                        id: "ad119f34-7694-4c31-947f-5c9d249b21f3",
                                        x: "0",
                                        y: "0",
                                        width: "20",
                                        height: "20",
                                        patternUnits: "userSpaceOnUse"
                                      }, [
                                        createVNode("rect", {
                                          x: "0",
                                          y: "0",
                                          width: "4",
                                          height: "4",
                                          class: "text-gray-200",
                                          fill: "currentColor"
                                        })
                                      ])
                                    ]),
                                    createVNode("rect", {
                                      width: "404",
                                      height: "404",
                                      fill: "url(#ad119f34-7694-4c31-947f-5c9d249b21f3)"
                                    })
                                  ])),
                                  createVNode("div", { class: "relative text-center" }, [
                                    createVNode("p", { class: "mt-3 text-lg" }, [
                                      createVNode("span", { class: "text-xl" }, [
                                        createTextVNode("nmr"),
                                        createVNode("b", null, "Xiv")
                                      ]),
                                      createTextVNode(" is 100% open source, so you’re free to dig through the source to see exactly how it works. See something that needs to be improved? Just send us a request."),
                                      createVNode("br"),
                                      createVNode("small", null, [
                                        createTextVNode("Chat bubble is on the bottom left corner or email us at "),
                                        createVNode("a", { href: $options.mailTo }, toDisplayString($options.mailFromAddress), 9, ["href"])
                                      ])
                                    ]),
                                    createVNode("div", { class: "mt-8" }, [
                                      createVNode("div", { class: "inline-flex" }, [
                                        createVNode("a", {
                                          target: "_blank",
                                          href: "https://github.com/NFDI4Chem/nmrxiv",
                                          class: "inline-flex mr-4 items-center justify-center px-5 py-3 border text-base font-medium rounded-md text-gray-900 bg-white hover:bg-gray-50"
                                        }, [
                                          createTextVNode(" Source code "),
                                          createVNode(_component_ArrowTopRightOnSquareIcon, {
                                            class: "-mr-1 ml-3 h-5 w-5 text-gray-400",
                                            "aria-hidden": "true"
                                          })
                                        ]),
                                        createVNode("a", {
                                          target: "_blank",
                                          href: "https://docs.nmrxiv.org",
                                          class: "inline-flex items-center justify-center px-5 py-3 border text-base font-medium rounded-md text-gray-900 bg-white hover:bg-gray-50"
                                        }, [
                                          createTextVNode(" Visit the docs "),
                                          createVNode(_component_ArrowTopRightOnSquareIcon, {
                                            class: "-mr-1 ml-3 h-5 w-5 text-gray-400",
                                            "aria-hidden": "true"
                                          })
                                        ])
                                      ])
                                    ])
                                  ])
                                ])
                              ])
                            ])) : createCommentVNode("", true),
                            $options.currentStep == 4 ? (openBlock(), createBlock("div", { key: 3 }, [
                              createVNode("div", { class: "max-w-7xl mx-auto text-center py-12 px-4 sm:px-6 lg:py-16 lg:px-8" }, [
                                createVNode("h2", { class: "text-base font-semibold uppercase tracking-wider" }, " All set to get started! "),
                                createVNode("p", { class: "my-2 font-bold tracking-tight sm:text-2xl" }, " Start uploading your spectral data today. "),
                                createVNode("p", null, ' Click "Get started" and upload your data or if you want a guided tour of the dashboard press the "Dashboard Tour" button below. '),
                                createVNode("div", { class: "mt-8 flex justify-center" }, [
                                  createVNode("div", { class: "inline-flex rounded-md shadow" }, [
                                    createVNode("a", {
                                      refs: "next",
                                      class: "cursor-pointer inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700",
                                      onClick: $options.onboardingComplete
                                    }, " Get started ", 8, ["onClick"])
                                  ])
                                ])
                              ])
                            ])) : createCommentVNode("", true),
                            createVNode("div", { class: "grid grid-cols-4 gap-4" }, [
                              createVNode("div", { class: "p-4 py-4" }, [
                                $options.currentStep != 1 ? (openBlock(), createBlock("button", {
                                  key: 0,
                                  type: "button",
                                  class: "py-2 px-3 border rounded-md",
                                  onClick: ($event) => $options.selectStep($options.currentStep - 1)
                                }, [
                                  createVNode("div", { class: "flex flex-row align-middle" }, [
                                    (openBlock(), createBlock("svg", {
                                      class: "w-5 mr-1",
                                      fill: "currentColor",
                                      viewBox: "0 0 20 20",
                                      xmlns: "http://www.w3.org/2000/svg"
                                    }, [
                                      createVNode("path", {
                                        "fill-rule": "evenodd",
                                        d: "M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z",
                                        "clip-rule": "evenodd"
                                      })
                                    ])),
                                    createVNode("p", { class: "ml-2" }, "Prev")
                                  ])
                                ], 8, ["onClick"])) : (openBlock(), createBlock("button", {
                                  key: 1,
                                  type: "button",
                                  class: "py-2 px-3 border rounded-md",
                                  onClick: $options.onboardingComplete
                                }, [
                                  createVNode("div", { class: "flex flex-row align-middle" }, [
                                    createVNode("p", { class: "mx-2" }, "Skip")
                                  ])
                                ], 8, ["onClick"]))
                              ]),
                              createVNode("div", { class: "col-span-2" }, [
                                createVNode("nav", {
                                  class: "flex items-center justify-center p-4 py-6",
                                  "aria-label": "Progress"
                                }, [
                                  createVNode("p", { class: "text-sm font-medium" }, " Step " + toDisplayString($data.steps.findIndex(
                                    (step) => step.status === "current"
                                  ) + 1) + " of " + toDisplayString($data.steps.length), 1),
                                  createVNode("ol", {
                                    role: "list",
                                    class: "ml-8 flex items-center space-x-5"
                                  }, [
                                    (openBlock(true), createBlock(Fragment, null, renderList($data.steps, (step) => {
                                      return openBlock(), createBlock("li", {
                                        key: step.name
                                      }, [
                                        createVNode("a", {
                                          class: "cursor-pointer",
                                          onClick: ($event) => $options.selectStep(step.id)
                                        }, [
                                          step.status === "complete" ? (openBlock(), createBlock("span", {
                                            key: 0,
                                            href: step.href,
                                            class: "block w-2.5 h-2.5 bg-indigo-600 rounded-full hover:bg-indigo-600"
                                          }, [
                                            createVNode("span", { class: "sr-only" }, toDisplayString(step.name), 1)
                                          ], 8, ["href"])) : step.status === "current" ? (openBlock(), createBlock("span", {
                                            key: 1,
                                            href: step.href,
                                            class: "relative flex items-center justify-center",
                                            "aria-current": "step"
                                          }, [
                                            createVNode("span", {
                                              class: "absolute w-5 h-5 p-px flex",
                                              "aria-hidden": "true"
                                            }, [
                                              createVNode("span", { class: "w-full h-full rounded-full bg-indigo-200" })
                                            ]),
                                            createVNode("span", {
                                              class: "relative block w-2.5 h-2.5 bg-indigo-600 rounded-full",
                                              "aria-hidden": "true"
                                            }),
                                            createVNode("span", { class: "sr-only" }, toDisplayString(step.name), 1)
                                          ], 8, ["href"])) : (openBlock(), createBlock("span", {
                                            key: 2,
                                            href: step.href,
                                            class: "block w-2.5 h-2.5 bg-gray-200 rounded-full hover:bg-gray-400"
                                          }, [
                                            createVNode("span", { class: "sr-only" }, toDisplayString(step.name), 1)
                                          ], 8, ["href"]))
                                        ], 8, ["onClick"])
                                      ]);
                                    }), 128))
                                  ])
                                ])
                              ]),
                              createVNode("div", { class: "p-4 py-4 text-right" }, [
                                $options.currentStep < $data.steps.length ? (openBlock(), createBlock("div", { key: 0 }, [
                                  $options.currentStep == 1 ? (openBlock(), createBlock("div", { key: 0 }, [
                                    createVNode("button", {
                                      type: "button",
                                      class: "py-2 px-3 bg-indigo-600 text-white rounded-md",
                                      autofocus: "",
                                      onClick: ($event) => $options.selectStep($options.currentStep + 1)
                                    }, [
                                      createVNode("div", { class: "flex flex-row align-middle" }, [
                                        createVNode("span", { class: "mr-1" }, "Let's go"),
                                        (openBlock(), createBlock("svg", {
                                          class: "w-5 ml-2",
                                          fill: "currentColor",
                                          viewBox: "0 0 20 20",
                                          xmlns: "http://www.w3.org/2000/svg"
                                        }, [
                                          createVNode("path", {
                                            "fill-rule": "evenodd",
                                            d: "M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z",
                                            "clip-rule": "evenodd"
                                          })
                                        ]))
                                      ])
                                    ], 8, ["onClick"])
                                  ])) : (openBlock(), createBlock("div", { key: 1 }, [
                                    createVNode("button", {
                                      ref: "next",
                                      type: "button",
                                      class: "py-2 px-3 bg-indigo-600 text-white rounded-md",
                                      autofocus: "",
                                      onClick: ($event) => $options.selectStep($options.currentStep + 1)
                                    }, [
                                      createVNode("div", { class: "flex flex-row align-middle" }, [
                                        createVNode("span", { class: "mr-1" }, "Next"),
                                        (openBlock(), createBlock("svg", {
                                          class: "w-5 ml-2",
                                          fill: "currentColor",
                                          viewBox: "0 0 20 20",
                                          xmlns: "http://www.w3.org/2000/svg"
                                        }, [
                                          createVNode("path", {
                                            "fill-rule": "evenodd",
                                            d: "M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z",
                                            "clip-rule": "evenodd"
                                          })
                                        ]))
                                      ])
                                    ], 8, ["onClick"])
                                  ]))
                                ])) : createCommentVNode("", true)
                              ])
                            ])
                          ])
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  })
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_Dialog, {
            as: "div",
            class: "relative z-10"
          }, {
            default: withCtx(() => [
              createVNode(_component_TransitionChild, {
                as: "template",
                enter: "ease-out duration-300",
                "enter-from": "opacity-0",
                "enter-to": "opacity-100",
                leave: "ease-in duration-200",
                "leave-from": "opacity-100",
                "leave-to": "opacity-0"
              }, {
                default: withCtx(() => [
                  createVNode("div", { class: "fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity" })
                ]),
                _: 1
              }),
              createVNode("div", { class: "fixed inset-0 z-10 overflow-y-auto p-4 sm:p-6 md:p-20" }, [
                createVNode(_component_TransitionChild, {
                  as: "template",
                  enter: "ease-out duration-300",
                  "enter-from": "opacity-0 scale-95",
                  "enter-to": "opacity-100 scale-100",
                  leave: "ease-in duration-200",
                  "leave-from": "opacity-100 scale-100",
                  "leave-to": "opacity-0 scale-95"
                }, {
                  default: withCtx(() => [
                    createVNode(_component_DialogPanel, { class: "mx-auto max-w-2xl transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all" }, {
                      default: withCtx(() => [
                        createVNode("div", null, [
                          $options.currentStep == 1 ? (openBlock(), createBlock("div", { key: 0 }, [
                            createVNode("section", { class: "h-1/2 overflow-hidden bg-gray-50 overflow-hidden py-12" }, [
                              createVNode("div", { class: "relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" }, [
                                (openBlock(), createBlock("svg", {
                                  class: "absolute top-full right-full transform translate-x-1/3 -translate-y-1/4 lg:translate-x-1/2 xl:-translate-y-1/2",
                                  width: "404",
                                  height: "404",
                                  fill: "none",
                                  viewBox: "0 0 404 404",
                                  role: "img",
                                  "aria-labelledby": "svg-nmrxiv"
                                }, [
                                  createVNode("title", { id: "svg-nmrxiv" }, " nmrxiv "),
                                  createVNode("defs", null, [
                                    createVNode("pattern", {
                                      id: "ad119f34-7694-4c31-947f-5c9d249b21f3",
                                      x: "0",
                                      y: "0",
                                      width: "20",
                                      height: "20",
                                      patternUnits: "userSpaceOnUse"
                                    }, [
                                      createVNode("rect", {
                                        x: "0",
                                        y: "0",
                                        width: "4",
                                        height: "4",
                                        class: "text-gray-200",
                                        fill: "currentColor"
                                      })
                                    ])
                                  ]),
                                  createVNode("rect", {
                                    width: "404",
                                    height: "404",
                                    fill: "url(#ad119f34-7694-4c31-947f-5c9d249b21f3)"
                                  })
                                ])),
                                createVNode("div", { class: "relative" }, [
                                  createVNode("div", { class: "flex justify-center" }, [
                                    createVNode(_component_jet_application_logo, { class: "block h-14 w-auto" })
                                  ]),
                                  createVNode("blockquote", { class: "mt-10" }, [
                                    createVNode("div", { class: "max-w-3xl mx-auto text-center text-xl leading-9 font-medium text-gray-900" }, [
                                      createVNode("p", { class: "mt-3 text-lg" }, [
                                        createTextVNode(" Welcome! "),
                                        createVNode("span", { class: "text-xl" }, [
                                          createTextVNode("nmr"),
                                          createVNode("b", null, "Xiv")
                                        ]),
                                        createTextVNode(" support scientists in their efforts to collect, store, process, analyse, disclose and re-use Nuclear Magnetic Resonance Spectroscopy research data. Ready to get started? ")
                                      ])
                                    ])
                                  ])
                                ])
                              ])
                            ])
                          ])) : createCommentVNode("", true),
                          $options.currentStep == 2 ? (openBlock(), createBlock("div", { key: 1 }, [
                            createVNode("section", { class: "h-1/2 overflow-hidden py-12" }, [
                              createVNode("div", { class: "relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" }, [
                                (openBlock(), createBlock("svg", {
                                  class: "absolute top-full right-full transform translate-x-1/3 -translate-y-1/4 lg:translate-x-1/2 xl:-translate-y-1/2",
                                  width: "404",
                                  height: "404",
                                  fill: "none",
                                  viewBox: "0 0 404 404",
                                  role: "img",
                                  "aria-labelledby": "svg-nmrxiv"
                                }, [
                                  createVNode("title", { id: "svg-nmrxiv" }, " nmrxiv "),
                                  createVNode("defs", null, [
                                    createVNode("pattern", {
                                      id: "ad119f34-7694-4c31-947f-5c9d249b21f3",
                                      x: "0",
                                      y: "0",
                                      width: "20",
                                      height: "20",
                                      patternUnits: "userSpaceOnUse"
                                    }, [
                                      createVNode("rect", {
                                        x: "0",
                                        y: "0",
                                        width: "4",
                                        height: "4",
                                        class: "text-gray-200",
                                        fill: "currentColor"
                                      })
                                    ])
                                  ]),
                                  createVNode("rect", {
                                    width: "404",
                                    height: "404",
                                    fill: "url(#ad119f34-7694-4c31-947f-5c9d249b21f3)"
                                  })
                                ])),
                                createVNode("div", { class: "relative text-center" }, [
                                  createVNode("blockquote", { class: "mt-10" }, [
                                    createVNode("div", { class: "max-w-3xl mx-auto text-center text-xl leading-9 font-medium text-gray-900" }, [
                                      createVNode("p", { class: "mt-3 text-lg" }, [
                                        createVNode("span", { class: "text-xl" }, [
                                          createTextVNode("nmr"),
                                          createVNode("b", null, "Xiv")
                                        ]),
                                        createTextVNode(" as a part of "),
                                        createVNode("a", {
                                          class: "text-indigo-600 font-bold",
                                          href: "https://nfdi4chem.de",
                                          target: "_blank"
                                        }, "NFDI4Chem"),
                                        createTextVNode(", focuses on the implementation and adaptation of existing and new infrastructure, necessary to capture data early in the life cycle​ and to further manage, analyse and store associated information. Checkout "),
                                        createVNode("a", {
                                          class: "text-indigo-600",
                                          target: "_blank",
                                          href: "https://www.chemotion.net/chemotionsaurus/index.html"
                                        }, "Chemotion"),
                                        createTextVNode(" (Electronic Lab Notebook) or "),
                                        createVNode("a", {
                                          href: "https://github.com/NFDI4Chem/nmrxiv-cli",
                                          class: "text-indigo-600",
                                          target: "_blank"
                                        }, "nmrXiv CLI "),
                                        createTextVNode("(Command Line Interface) for a seamless integration into your Lab infrastructure. ")
                                      ])
                                    ])
                                  ])
                                ])
                              ])
                            ])
                          ])) : createCommentVNode("", true),
                          $options.currentStep == 3 ? (openBlock(), createBlock("div", { key: 2 }, [
                            createVNode("section", { class: "h-1/2 overflow-hidden py-12" }, [
                              createVNode("div", { class: "relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" }, [
                                (openBlock(), createBlock("svg", {
                                  class: "absolute top-full right-full transform translate-x-1/3 -translate-y-1/4 lg:translate-x-1/2 xl:-translate-y-1/2",
                                  width: "404",
                                  height: "404",
                                  fill: "none",
                                  viewBox: "0 0 404 404",
                                  role: "img",
                                  "aria-labelledby": "svg-nmrxiv"
                                }, [
                                  createVNode("title", { id: "svg-nmrxiv" }, " nmrxiv "),
                                  createVNode("defs", null, [
                                    createVNode("pattern", {
                                      id: "ad119f34-7694-4c31-947f-5c9d249b21f3",
                                      x: "0",
                                      y: "0",
                                      width: "20",
                                      height: "20",
                                      patternUnits: "userSpaceOnUse"
                                    }, [
                                      createVNode("rect", {
                                        x: "0",
                                        y: "0",
                                        width: "4",
                                        height: "4",
                                        class: "text-gray-200",
                                        fill: "currentColor"
                                      })
                                    ])
                                  ]),
                                  createVNode("rect", {
                                    width: "404",
                                    height: "404",
                                    fill: "url(#ad119f34-7694-4c31-947f-5c9d249b21f3)"
                                  })
                                ])),
                                createVNode("div", { class: "relative text-center" }, [
                                  createVNode("p", { class: "mt-3 text-lg" }, [
                                    createVNode("span", { class: "text-xl" }, [
                                      createTextVNode("nmr"),
                                      createVNode("b", null, "Xiv")
                                    ]),
                                    createTextVNode(" is 100% open source, so you’re free to dig through the source to see exactly how it works. See something that needs to be improved? Just send us a request."),
                                    createVNode("br"),
                                    createVNode("small", null, [
                                      createTextVNode("Chat bubble is on the bottom left corner or email us at "),
                                      createVNode("a", { href: $options.mailTo }, toDisplayString($options.mailFromAddress), 9, ["href"])
                                    ])
                                  ]),
                                  createVNode("div", { class: "mt-8" }, [
                                    createVNode("div", { class: "inline-flex" }, [
                                      createVNode("a", {
                                        target: "_blank",
                                        href: "https://github.com/NFDI4Chem/nmrxiv",
                                        class: "inline-flex mr-4 items-center justify-center px-5 py-3 border text-base font-medium rounded-md text-gray-900 bg-white hover:bg-gray-50"
                                      }, [
                                        createTextVNode(" Source code "),
                                        createVNode(_component_ArrowTopRightOnSquareIcon, {
                                          class: "-mr-1 ml-3 h-5 w-5 text-gray-400",
                                          "aria-hidden": "true"
                                        })
                                      ]),
                                      createVNode("a", {
                                        target: "_blank",
                                        href: "https://docs.nmrxiv.org",
                                        class: "inline-flex items-center justify-center px-5 py-3 border text-base font-medium rounded-md text-gray-900 bg-white hover:bg-gray-50"
                                      }, [
                                        createTextVNode(" Visit the docs "),
                                        createVNode(_component_ArrowTopRightOnSquareIcon, {
                                          class: "-mr-1 ml-3 h-5 w-5 text-gray-400",
                                          "aria-hidden": "true"
                                        })
                                      ])
                                    ])
                                  ])
                                ])
                              ])
                            ])
                          ])) : createCommentVNode("", true),
                          $options.currentStep == 4 ? (openBlock(), createBlock("div", { key: 3 }, [
                            createVNode("div", { class: "max-w-7xl mx-auto text-center py-12 px-4 sm:px-6 lg:py-16 lg:px-8" }, [
                              createVNode("h2", { class: "text-base font-semibold uppercase tracking-wider" }, " All set to get started! "),
                              createVNode("p", { class: "my-2 font-bold tracking-tight sm:text-2xl" }, " Start uploading your spectral data today. "),
                              createVNode("p", null, ' Click "Get started" and upload your data or if you want a guided tour of the dashboard press the "Dashboard Tour" button below. '),
                              createVNode("div", { class: "mt-8 flex justify-center" }, [
                                createVNode("div", { class: "inline-flex rounded-md shadow" }, [
                                  createVNode("a", {
                                    refs: "next",
                                    class: "cursor-pointer inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700",
                                    onClick: $options.onboardingComplete
                                  }, " Get started ", 8, ["onClick"])
                                ])
                              ])
                            ])
                          ])) : createCommentVNode("", true),
                          createVNode("div", { class: "grid grid-cols-4 gap-4" }, [
                            createVNode("div", { class: "p-4 py-4" }, [
                              $options.currentStep != 1 ? (openBlock(), createBlock("button", {
                                key: 0,
                                type: "button",
                                class: "py-2 px-3 border rounded-md",
                                onClick: ($event) => $options.selectStep($options.currentStep - 1)
                              }, [
                                createVNode("div", { class: "flex flex-row align-middle" }, [
                                  (openBlock(), createBlock("svg", {
                                    class: "w-5 mr-1",
                                    fill: "currentColor",
                                    viewBox: "0 0 20 20",
                                    xmlns: "http://www.w3.org/2000/svg"
                                  }, [
                                    createVNode("path", {
                                      "fill-rule": "evenodd",
                                      d: "M7.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l2.293 2.293a1 1 0 010 1.414z",
                                      "clip-rule": "evenodd"
                                    })
                                  ])),
                                  createVNode("p", { class: "ml-2" }, "Prev")
                                ])
                              ], 8, ["onClick"])) : (openBlock(), createBlock("button", {
                                key: 1,
                                type: "button",
                                class: "py-2 px-3 border rounded-md",
                                onClick: $options.onboardingComplete
                              }, [
                                createVNode("div", { class: "flex flex-row align-middle" }, [
                                  createVNode("p", { class: "mx-2" }, "Skip")
                                ])
                              ], 8, ["onClick"]))
                            ]),
                            createVNode("div", { class: "col-span-2" }, [
                              createVNode("nav", {
                                class: "flex items-center justify-center p-4 py-6",
                                "aria-label": "Progress"
                              }, [
                                createVNode("p", { class: "text-sm font-medium" }, " Step " + toDisplayString($data.steps.findIndex(
                                  (step) => step.status === "current"
                                ) + 1) + " of " + toDisplayString($data.steps.length), 1),
                                createVNode("ol", {
                                  role: "list",
                                  class: "ml-8 flex items-center space-x-5"
                                }, [
                                  (openBlock(true), createBlock(Fragment, null, renderList($data.steps, (step) => {
                                    return openBlock(), createBlock("li", {
                                      key: step.name
                                    }, [
                                      createVNode("a", {
                                        class: "cursor-pointer",
                                        onClick: ($event) => $options.selectStep(step.id)
                                      }, [
                                        step.status === "complete" ? (openBlock(), createBlock("span", {
                                          key: 0,
                                          href: step.href,
                                          class: "block w-2.5 h-2.5 bg-indigo-600 rounded-full hover:bg-indigo-600"
                                        }, [
                                          createVNode("span", { class: "sr-only" }, toDisplayString(step.name), 1)
                                        ], 8, ["href"])) : step.status === "current" ? (openBlock(), createBlock("span", {
                                          key: 1,
                                          href: step.href,
                                          class: "relative flex items-center justify-center",
                                          "aria-current": "step"
                                        }, [
                                          createVNode("span", {
                                            class: "absolute w-5 h-5 p-px flex",
                                            "aria-hidden": "true"
                                          }, [
                                            createVNode("span", { class: "w-full h-full rounded-full bg-indigo-200" })
                                          ]),
                                          createVNode("span", {
                                            class: "relative block w-2.5 h-2.5 bg-indigo-600 rounded-full",
                                            "aria-hidden": "true"
                                          }),
                                          createVNode("span", { class: "sr-only" }, toDisplayString(step.name), 1)
                                        ], 8, ["href"])) : (openBlock(), createBlock("span", {
                                          key: 2,
                                          href: step.href,
                                          class: "block w-2.5 h-2.5 bg-gray-200 rounded-full hover:bg-gray-400"
                                        }, [
                                          createVNode("span", { class: "sr-only" }, toDisplayString(step.name), 1)
                                        ], 8, ["href"]))
                                      ], 8, ["onClick"])
                                    ]);
                                  }), 128))
                                ])
                              ])
                            ]),
                            createVNode("div", { class: "p-4 py-4 text-right" }, [
                              $options.currentStep < $data.steps.length ? (openBlock(), createBlock("div", { key: 0 }, [
                                $options.currentStep == 1 ? (openBlock(), createBlock("div", { key: 0 }, [
                                  createVNode("button", {
                                    type: "button",
                                    class: "py-2 px-3 bg-indigo-600 text-white rounded-md",
                                    autofocus: "",
                                    onClick: ($event) => $options.selectStep($options.currentStep + 1)
                                  }, [
                                    createVNode("div", { class: "flex flex-row align-middle" }, [
                                      createVNode("span", { class: "mr-1" }, "Let's go"),
                                      (openBlock(), createBlock("svg", {
                                        class: "w-5 ml-2",
                                        fill: "currentColor",
                                        viewBox: "0 0 20 20",
                                        xmlns: "http://www.w3.org/2000/svg"
                                      }, [
                                        createVNode("path", {
                                          "fill-rule": "evenodd",
                                          d: "M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z",
                                          "clip-rule": "evenodd"
                                        })
                                      ]))
                                    ])
                                  ], 8, ["onClick"])
                                ])) : (openBlock(), createBlock("div", { key: 1 }, [
                                  createVNode("button", {
                                    ref: "next",
                                    type: "button",
                                    class: "py-2 px-3 bg-indigo-600 text-white rounded-md",
                                    autofocus: "",
                                    onClick: ($event) => $options.selectStep($options.currentStep + 1)
                                  }, [
                                    createVNode("div", { class: "flex flex-row align-middle" }, [
                                      createVNode("span", { class: "mr-1" }, "Next"),
                                      (openBlock(), createBlock("svg", {
                                        class: "w-5 ml-2",
                                        fill: "currentColor",
                                        viewBox: "0 0 20 20",
                                        xmlns: "http://www.w3.org/2000/svg"
                                      }, [
                                        createVNode("path", {
                                          "fill-rule": "evenodd",
                                          d: "M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z",
                                          "clip-rule": "evenodd"
                                        })
                                      ]))
                                    ])
                                  ], 8, ["onClick"])
                                ]))
                              ])) : createCommentVNode("", true)
                            ])
                          ])
                        ])
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                })
              ])
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1r = _sfc_main$1r.setup;
_sfc_main$1r.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/App/Onboarding.vue");
  return _sfc_setup$1r ? _sfc_setup$1r(props, ctx) : void 0;
};
const Onboarding = /* @__PURE__ */ _export_sfc(_sfc_main$1r, [["ssrRender", _sfc_ssrRender$1q]]);
const { meta, u: u$1 } = useMagicKeys();
const _sfc_main$1q = {
  components: {
    AppLayout,
    computed,
    TeamProjects,
    Create: Create$3,
    Onboarding,
    Link
  },
  props: ["user", "team", "projects", "teamRole", "filters"],
  setup() {
    const app = getCurrentInstance();
    const openDatasetCreateDialog = (data) => {
      app.appContext.config.globalProperties.emitter.emit(
        "openDatasetCreateDialog",
        data
      );
    };
    watchEffect(() => {
      if (meta.value && u$1.value) {
        openDatasetCreateDialog({
          draft_id: null
        });
      }
    });
    return {
      openDatasetCreateDialog
    };
  },
  computed: {
    mailFromAddress() {
      return String(this.$page.props.mailFromAddress);
    },
    mailTo() {
      return "mailto:" + String(this.$page.props.mailFromAddress);
    }
  },
  mounted() {
    if (this.filters.action == "submission") {
      this.emitter.emit("openDatasetCreateDialog", {
        draft_id: this.filters.draft_id
      });
    }
  }
};
function _sfc_ssrRender$1p(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_Link = resolveComponent("Link");
  const _component_team_projects = resolveComponent("team-projects");
  const _component_create = resolveComponent("create");
  const _component_onboarding = resolveComponent("onboarding");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({ title: "Dashboard" }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white border-b"${_scopeId}><div class="px-12"${_scopeId}><div class="flex flex-nowrap justify-between py-6"${_scopeId}><div${_scopeId}><div class="flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest"${_scopeId}>`);
        if ($props.team.personal_team) {
          _push2(`<div${_scopeId}>Your</div>`);
        } else {
          _push2(`<div${_scopeId}>${ssrInterpolate($props.user.current_team.name)}</div>`);
        }
        _push2(`  Dashboard </div>`);
        if ($props.team.users) {
          _push2(`<div class="flex mt-3 flex-row-reverse justify-end"${_scopeId}><!--[-->`);
          ssrRenderList($props.team.users, (user) => {
            _push2(`<img class="w-8 h-8 -mr-2 rounded-full border-2 border-white"${ssrRenderAttr("src", user.profile_photo_url)}${ssrRenderAttr("alt", user.name)}${_scopeId}>`);
          });
          _push2(`<!--]--><img class="w-8 h-8 -mr-2 rounded-full border-2 border-white"${ssrRenderAttr("src", $props.team.owner.profile_photo_url)}${ssrRenderAttr("alt", $props.team.owner.name)}${_scopeId}></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div>`);
        if (!$props.team.personal_team) {
          _push2(`<div${_scopeId}>`);
          _push2(ssrRenderComponent(_component_Link, {
            href: "/teams/" + $props.user.current_team.id,
            class: "text-sm text-gray-800 font-bold"
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Team Settings `);
              } else {
                return [
                  createTextVNode(" Team Settings ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white border-b" }, [
            createVNode("div", { class: "px-12" }, [
              createVNode("div", { class: "flex flex-nowrap justify-between py-6" }, [
                createVNode("div", null, [
                  createVNode("div", { class: "flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest" }, [
                    $props.team.personal_team ? (openBlock(), createBlock("div", { key: 0 }, "Your")) : (openBlock(), createBlock("div", { key: 1 }, toDisplayString($props.user.current_team.name), 1)),
                    createTextVNode("  Dashboard ")
                  ]),
                  $props.team.users ? (openBlock(), createBlock("div", {
                    key: 0,
                    class: "flex mt-3 flex-row-reverse justify-end"
                  }, [
                    (openBlock(true), createBlock(Fragment, null, renderList($props.team.users, (user) => {
                      return openBlock(), createBlock("img", {
                        key: user.id,
                        class: "w-8 h-8 -mr-2 rounded-full border-2 border-white",
                        src: user.profile_photo_url,
                        alt: user.name
                      }, null, 8, ["src", "alt"]);
                    }), 128)),
                    createVNode("img", {
                      class: "w-8 h-8 -mr-2 rounded-full border-2 border-white",
                      src: $props.team.owner.profile_photo_url,
                      alt: $props.team.owner.name
                    }, null, 8, ["src", "alt"])
                  ])) : createCommentVNode("", true)
                ]),
                !$props.team.personal_team ? (openBlock(), createBlock("div", { key: 0 }, [
                  createVNode(_component_Link, {
                    href: "/teams/" + $props.user.current_team.id,
                    class: "text-sm text-gray-800 font-bold"
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Team Settings ")
                    ]),
                    _: 1
                  }, 8, ["href"])
                ])) : createCommentVNode("", true)
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($props.projects.length > 0) {
          _push2(`<div class="px-12 py-8 mx-auto max-w-4xl"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_team_projects, {
            team: $props.team,
            "team-role": $props.teamRole,
            mode: "create",
            projects: $props.projects
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<div${_scopeId}><div class="max-w-lg my-6 py-6 mx-auto"${_scopeId}><div class="text-center"${_scopeId}><svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true"${_scopeId}><path vector-effect="non-scaling-stroke" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"${_scopeId}></path></svg><h3 class="mt-2 text-md font-medium text-gray-900"${_scopeId}> You have no <b${_scopeId}>projects</b> or <b${_scopeId}>samples</b> yet </h3>`);
          if (_ctx.editableTeamRole) {
            _push2(`<div class="mt-2"${_scopeId}><p class="mb-1 text-sm text-gray-500"${_scopeId}> Get started by uploading your data. </p>`);
            _push2(ssrRenderComponent(_component_create, {
              class: "mt-5",
              mode: "button"
            }, null, _parent2, _scopeId));
            _push2(`<span class="float-center text-xs cursor-pointer hover:text-blue-700 mt-2"${_scopeId}><a href="https://docs.nmrxiv.org/submission-guides/submission-process.html" target="_blank"${_scopeId}>Need Help? </a></span></div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div></div></div>`);
        }
        _push2(`<div class="px-12 py-8 mx-auto max-w-4xl"${_scopeId}><ul role="list" class="mt-6 border-b border-gray-200 divide-y divide-gray-200"${_scopeId}><li${_scopeId}><div class="relative group py-4 flex items-start space-x-3"${_scopeId}><div class="flex-shrink-0"${_scopeId}><span class="inline-flex items-center justify-center h-10 w-10 rounded-lg bg-pink-500"${_scopeId}><svg class="h-6 w-6 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M11 5.882V19.24a1.76 1.76 0 01-3.417.592l-2.147-6.15M18 13a3 3 0 100-6M5.436 13.683A4.001 4.001 0 017 6h1.832c4.1 0 7.625-1.234 9.168-3v14c-1.543-1.766-5.067-3-9.168-3H7a3.988 3.988 0 01-1.564-.317z"${_scopeId}></path></svg></span></div><div class="min-w-0 flex-1"${_scopeId}><div class="text-sm font-medium text-gray-900"${_scopeId}><a id="tour-step-submission-guide" href="https://docs.nmrxiv.org/introduction/intro" target="_blank"${_scopeId}><span class="absolute inset-0" aria-hidden="true"${_scopeId}></span> Get started! How to use nmrXiv? </a></div><p class="text-sm text-gray-500"${_scopeId}> Documentation for using nmrXiv. Explore, learn and archive NMR datasets. </p></div><div class="flex-shrink-0 self-center"${_scopeId}><svg class="h-5 w-5 text-gray-400 group-hover:text-gray-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"${_scopeId}><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"${_scopeId}></path></svg></div></div></li><li${_scopeId}><div class="relative group py-4 flex items-start space-x-3"${_scopeId}><div class="flex-shrink-0"${_scopeId}><span class="inline-flex items-center justify-center h-10 w-10 rounded-lg bg-purple-500"${_scopeId}><svg class="h-6 w-6 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"${_scopeId}></path></svg></span></div><div class="min-w-0 flex-1"${_scopeId}><div class="text-sm font-medium text-gray-900"${_scopeId}><a id="tour-step-api" href="https://docs.nmrxiv.org/developer-guides/api.html" target="_blank"${_scopeId}><span class="absolute inset-0" aria-hidden="true"${_scopeId}></span> Public API Documentation </a></div><p class="text-sm text-gray-500"${_scopeId}> Search, interact and download NMR Datasets as a part of your software or your data science workflow. </p></div><div class="flex-shrink-0 self-center"${_scopeId}><svg class="h-5 w-5 text-gray-400 group-hover:text-gray-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"${_scopeId}><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"${_scopeId}></path></svg></div></div></li><li${_scopeId}><div class="relative group py-4 flex items-start space-x-3"${_scopeId}><div class="flex-shrink-0"${_scopeId}><span class="inline-flex items-center justify-center h-10 w-10 rounded-lg bg-yellow-500"${_scopeId}><svg class="h-6 w-6 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"${_scopeId}></path></svg></span></div><div class="min-w-0 flex-1"${_scopeId}><div class="text-sm font-medium text-gray-900"${_scopeId}><a id="tour-step-spectra-challenge" href="/"${_scopeId}><span class="absolute inset-0" aria-hidden="true"${_scopeId}></span> Challenges </a></div><p class="text-sm text-gray-500"${_scopeId}> Structure elucidation challenges are designed for researchers at all different stages of their careers. </p></div><div class="flex-shrink-0 self-center"${_scopeId}><svg class="h-5 w-5 text-gray-400 group-hover:text-gray-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"${_scopeId}><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"${_scopeId}></path></svg></div></div></li></ul><div class="mt-6 flex"${_scopeId}><a id="tour-step-get-in-touch"${ssrRenderAttr("href", $options.mailTo)} class="text-sm font-medium text-indigo-600 hover:text-indigo-500"${_scopeId}>Or get in touch<span aria-hidden="true"${_scopeId}> →</span></a></div></div>`);
        _push2(ssrRenderComponent(_component_onboarding, null, null, _parent2, _scopeId));
      } else {
        return [
          $props.projects.length > 0 ? (openBlock(), createBlock("div", {
            key: 0,
            class: "px-12 py-8 mx-auto max-w-4xl"
          }, [
            createVNode(_component_team_projects, {
              team: $props.team,
              "team-role": $props.teamRole,
              mode: "create",
              projects: $props.projects
            }, null, 8, ["team", "team-role", "projects"])
          ])) : (openBlock(), createBlock("div", { key: 1 }, [
            createVNode("div", { class: "max-w-lg my-6 py-6 mx-auto" }, [
              createVNode("div", { class: "text-center" }, [
                (openBlock(), createBlock("svg", {
                  class: "mx-auto h-12 w-12 text-gray-400",
                  fill: "none",
                  viewBox: "0 0 24 24",
                  stroke: "currentColor",
                  "aria-hidden": "true"
                }, [
                  createVNode("path", {
                    "vector-effect": "non-scaling-stroke",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round",
                    "stroke-width": "2",
                    d: "M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"
                  })
                ])),
                createVNode("h3", { class: "mt-2 text-md font-medium text-gray-900" }, [
                  createTextVNode(" You have no "),
                  createVNode("b", null, "projects"),
                  createTextVNode(" or "),
                  createVNode("b", null, "samples"),
                  createTextVNode(" yet ")
                ]),
                _ctx.editableTeamRole ? (openBlock(), createBlock("div", {
                  key: 0,
                  class: "mt-2"
                }, [
                  createVNode("p", { class: "mb-1 text-sm text-gray-500" }, " Get started by uploading your data. "),
                  createVNode(_component_create, {
                    class: "mt-5",
                    mode: "button"
                  }),
                  createVNode("span", { class: "float-center text-xs cursor-pointer hover:text-blue-700 mt-2" }, [
                    createVNode("a", {
                      href: "https://docs.nmrxiv.org/submission-guides/submission-process.html",
                      target: "_blank"
                    }, "Need Help? ")
                  ])
                ])) : createCommentVNode("", true)
              ])
            ])
          ])),
          createVNode("div", { class: "px-12 py-8 mx-auto max-w-4xl" }, [
            createVNode("ul", {
              role: "list",
              class: "mt-6 border-b border-gray-200 divide-y divide-gray-200"
            }, [
              createVNode("li", null, [
                createVNode("div", { class: "relative group py-4 flex items-start space-x-3" }, [
                  createVNode("div", { class: "flex-shrink-0" }, [
                    createVNode("span", { class: "inline-flex items-center justify-center h-10 w-10 rounded-lg bg-pink-500" }, [
                      (openBlock(), createBlock("svg", {
                        class: "h-6 w-6 text-white",
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        "stroke-width": "2",
                        stroke: "currentColor",
                        "aria-hidden": "true"
                      }, [
                        createVNode("path", {
                          "stroke-linecap": "round",
                          "stroke-linejoin": "round",
                          d: "M11 5.882V19.24a1.76 1.76 0 01-3.417.592l-2.147-6.15M18 13a3 3 0 100-6M5.436 13.683A4.001 4.001 0 017 6h1.832c4.1 0 7.625-1.234 9.168-3v14c-1.543-1.766-5.067-3-9.168-3H7a3.988 3.988 0 01-1.564-.317z"
                        })
                      ]))
                    ])
                  ]),
                  createVNode("div", { class: "min-w-0 flex-1" }, [
                    createVNode("div", { class: "text-sm font-medium text-gray-900" }, [
                      createVNode("a", {
                        id: "tour-step-submission-guide",
                        href: "https://docs.nmrxiv.org/introduction/intro",
                        target: "_blank"
                      }, [
                        createVNode("span", {
                          class: "absolute inset-0",
                          "aria-hidden": "true"
                        }),
                        createTextVNode(" Get started! How to use nmrXiv? ")
                      ])
                    ]),
                    createVNode("p", { class: "text-sm text-gray-500" }, " Documentation for using nmrXiv. Explore, learn and archive NMR datasets. ")
                  ]),
                  createVNode("div", { class: "flex-shrink-0 self-center" }, [
                    (openBlock(), createBlock("svg", {
                      class: "h-5 w-5 text-gray-400 group-hover:text-gray-500",
                      xmlns: "http://www.w3.org/2000/svg",
                      viewBox: "0 0 20 20",
                      fill: "currentColor",
                      "aria-hidden": "true"
                    }, [
                      createVNode("path", {
                        "fill-rule": "evenodd",
                        d: "M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z",
                        "clip-rule": "evenodd"
                      })
                    ]))
                  ])
                ])
              ]),
              createVNode("li", null, [
                createVNode("div", { class: "relative group py-4 flex items-start space-x-3" }, [
                  createVNode("div", { class: "flex-shrink-0" }, [
                    createVNode("span", { class: "inline-flex items-center justify-center h-10 w-10 rounded-lg bg-purple-500" }, [
                      (openBlock(), createBlock("svg", {
                        class: "h-6 w-6 text-white",
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        "stroke-width": "2",
                        stroke: "currentColor",
                        "aria-hidden": "true"
                      }, [
                        createVNode("path", {
                          "stroke-linecap": "round",
                          "stroke-linejoin": "round",
                          d: "M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                        })
                      ]))
                    ])
                  ]),
                  createVNode("div", { class: "min-w-0 flex-1" }, [
                    createVNode("div", { class: "text-sm font-medium text-gray-900" }, [
                      createVNode("a", {
                        id: "tour-step-api",
                        href: "https://docs.nmrxiv.org/developer-guides/api.html",
                        target: "_blank"
                      }, [
                        createVNode("span", {
                          class: "absolute inset-0",
                          "aria-hidden": "true"
                        }),
                        createTextVNode(" Public API Documentation ")
                      ])
                    ]),
                    createVNode("p", { class: "text-sm text-gray-500" }, " Search, interact and download NMR Datasets as a part of your software or your data science workflow. ")
                  ]),
                  createVNode("div", { class: "flex-shrink-0 self-center" }, [
                    (openBlock(), createBlock("svg", {
                      class: "h-5 w-5 text-gray-400 group-hover:text-gray-500",
                      xmlns: "http://www.w3.org/2000/svg",
                      viewBox: "0 0 20 20",
                      fill: "currentColor",
                      "aria-hidden": "true"
                    }, [
                      createVNode("path", {
                        "fill-rule": "evenodd",
                        d: "M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z",
                        "clip-rule": "evenodd"
                      })
                    ]))
                  ])
                ])
              ]),
              createVNode("li", null, [
                createVNode("div", { class: "relative group py-4 flex items-start space-x-3" }, [
                  createVNode("div", { class: "flex-shrink-0" }, [
                    createVNode("span", { class: "inline-flex items-center justify-center h-10 w-10 rounded-lg bg-yellow-500" }, [
                      (openBlock(), createBlock("svg", {
                        class: "h-6 w-6 text-white",
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        "stroke-width": "2",
                        stroke: "currentColor",
                        "aria-hidden": "true"
                      }, [
                        createVNode("path", {
                          "stroke-linecap": "round",
                          "stroke-linejoin": "round",
                          d: "M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                        })
                      ]))
                    ])
                  ]),
                  createVNode("div", { class: "min-w-0 flex-1" }, [
                    createVNode("div", { class: "text-sm font-medium text-gray-900" }, [
                      createVNode("a", {
                        id: "tour-step-spectra-challenge",
                        href: "/"
                      }, [
                        createVNode("span", {
                          class: "absolute inset-0",
                          "aria-hidden": "true"
                        }),
                        createTextVNode(" Challenges ")
                      ])
                    ]),
                    createVNode("p", { class: "text-sm text-gray-500" }, " Structure elucidation challenges are designed for researchers at all different stages of their careers. ")
                  ]),
                  createVNode("div", { class: "flex-shrink-0 self-center" }, [
                    (openBlock(), createBlock("svg", {
                      class: "h-5 w-5 text-gray-400 group-hover:text-gray-500",
                      xmlns: "http://www.w3.org/2000/svg",
                      viewBox: "0 0 20 20",
                      fill: "currentColor",
                      "aria-hidden": "true"
                    }, [
                      createVNode("path", {
                        "fill-rule": "evenodd",
                        d: "M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z",
                        "clip-rule": "evenodd"
                      })
                    ]))
                  ])
                ])
              ])
            ]),
            createVNode("div", { class: "mt-6 flex" }, [
              createVNode("a", {
                id: "tour-step-get-in-touch",
                href: $options.mailTo,
                class: "text-sm font-medium text-indigo-600 hover:text-indigo-500"
              }, [
                createTextVNode("Or get in touch"),
                createVNode("span", { "aria-hidden": "true" }, " →")
              ], 8, ["href"])
            ])
          ]),
          createVNode(_component_onboarding)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1q = _sfc_main$1q.setup;
_sfc_main$1q.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Dashboard.vue");
  return _sfc_setup$1q ? _sfc_setup$1q(props, ctx) : void 0;
};
const Dashboard = /* @__PURE__ */ _export_sfc(_sfc_main$1q, [["ssrRender", _sfc_ssrRender$1p]]);
const __vite_glob_0_21 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Dashboard
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1p = {
  components: {
    Head,
    JetAuthenticationCardLogo
  },
  props: ["policy"]
};
function _sfc_ssrRender$1o(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = resolveComponent("Head");
  const _component_jet_authentication_card_logo = resolveComponent("jet-authentication-card-logo");
  _push(`<!--[-->`);
  _push(ssrRenderComponent(_component_Head, { title: "Privacy Policy" }, null, _parent));
  _push(`<div class="font-sans text-gray-900 antialiased"><div class="pt-4 bg-gray-100 index_beams"><div class="min-h-screen flex flex-col items-center pt-6 sm:pt-0"><div>`);
  _push(ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent));
  _push(`</div><div class="w-full sm:max-w-2xl mt-6 p-6 bg-white shadow-md overflow-hidden sm:rounded-lg prose mb-4">${$props.policy}</div></div></div></div><!--]-->`);
}
const _sfc_setup$1p = _sfc_main$1p.setup;
_sfc_main$1p.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/PrivacyPolicy.vue");
  return _sfc_setup$1p ? _sfc_setup$1p(props, ctx) : void 0;
};
const PrivacyPolicy = /* @__PURE__ */ _export_sfc(_sfc_main$1p, [["ssrRender", _sfc_ssrRender$1o]]);
const __vite_glob_0_22 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: PrivacyPolicy
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1o = {
  components: {
    JetActionSection,
    JetDangerButton,
    JetDialogModal,
    JetInput,
    JetInputError,
    JetSecondaryButton
  },
  data() {
    return {
      confirmingUserDeletion: false,
      form: this.$inertia.form({
        password: ""
      })
    };
  },
  methods: {
    confirmUserDeletion() {
      this.confirmingUserDeletion = true;
      setTimeout(() => this.$refs.password.focus(), 250);
    },
    deleteUser() {
      this.form.delete(route("current-user.destroy"), {
        preserveScroll: true,
        onSuccess: () => this.closeModal(),
        onError: () => this.$refs.password.focus(),
        onFinish: () => this.form.reset()
      });
    },
    closeModal() {
      this.confirmingUserDeletion = false;
      this.form.reset();
    }
  }
};
function _sfc_ssrRender$1n(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = resolveComponent("jet-action-section");
  const _component_jet_danger_button = resolveComponent("jet-danger-button");
  const _component_jet_dialog_modal = resolveComponent("jet-dialog-modal");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  _push(ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete Account `);
      } else {
        return [
          createTextVNode(" Delete Account ")
        ];
      }
    }),
    description: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Permanently delete your account. `);
      } else {
        return [
          createTextVNode(" Permanently delete your account. ")
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> Once your account is deleted, all of its resources and data will be permanently deleted. Before deleting your account, please download any data or information that you wish to retain. </div><div class="mt-5"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_danger_button, { onClick: $options.confirmUserDeletion }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Account `);
            } else {
              return [
                createTextVNode(" Delete Account ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(ssrRenderComponent(_component_jet_dialog_modal, {
          show: $data.confirmingUserDeletion,
          onClose: $options.closeModal
        }, {
          title: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Account `);
            } else {
              return [
                createTextVNode(" Delete Account ")
              ];
            }
          }),
          content: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Are you sure you want to delete your account? Once your account is deleted, all of its resources and data will be permanently deleted. Please enter your password to confirm you would like to permanently delete your account. <div class="mt-4"${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_jet_input, {
                ref: "password",
                modelValue: $data.form.password,
                "onUpdate:modelValue": ($event) => $data.form.password = $event,
                type: "password",
                class: "mt-1 block w-3/4",
                placeholder: "Password",
                onKeyup: $options.deleteUser
              }, null, _parent3, _scopeId2));
              _push3(ssrRenderComponent(_component_jet_input_error, {
                message: $data.form.errors.password,
                class: "mt-2"
              }, null, _parent3, _scopeId2));
              _push3(`</div>`);
            } else {
              return [
                createTextVNode(" Are you sure you want to delete your account? Once your account is deleted, all of its resources and data will be permanently deleted. Please enter your password to confirm you would like to permanently delete your account. "),
                createVNode("div", { class: "mt-4" }, [
                  createVNode(_component_jet_input, {
                    ref: "password",
                    modelValue: $data.form.password,
                    "onUpdate:modelValue": ($event) => $data.form.password = $event,
                    type: "password",
                    class: "mt-1 block w-3/4",
                    placeholder: "Password",
                    onKeyup: withKeys($options.deleteUser, ["enter"])
                  }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
                  createVNode(_component_jet_input_error, {
                    message: $data.form.errors.password,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ])
              ];
            }
          }),
          footer: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(ssrRenderComponent(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                disabled: $data.form.processing,
                onClick: $options.deleteUser
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Delete Account `);
                  } else {
                    return [
                      createTextVNode(" Delete Account ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                createVNode(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                  default: withCtx(() => [
                    createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                createVNode(_component_jet_danger_button, {
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  disabled: $data.form.processing,
                  onClick: $options.deleteUser
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Delete Account ")
                  ]),
                  _: 1
                }, 8, ["class", "disabled", "onClick"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Once your account is deleted, all of its resources and data will be permanently deleted. Before deleting your account, please download any data or information that you wish to retain. "),
          createVNode("div", { class: "mt-5" }, [
            createVNode(_component_jet_danger_button, { onClick: $options.confirmUserDeletion }, {
              default: withCtx(() => [
                createTextVNode(" Delete Account ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ]),
          createVNode(_component_jet_dialog_modal, {
            show: $data.confirmingUserDeletion,
            onClose: $options.closeModal
          }, {
            title: withCtx(() => [
              createTextVNode(" Delete Account ")
            ]),
            content: withCtx(() => [
              createTextVNode(" Are you sure you want to delete your account? Once your account is deleted, all of its resources and data will be permanently deleted. Please enter your password to confirm you would like to permanently delete your account. "),
              createVNode("div", { class: "mt-4" }, [
                createVNode(_component_jet_input, {
                  ref: "password",
                  modelValue: $data.form.password,
                  "onUpdate:modelValue": ($event) => $data.form.password = $event,
                  type: "password",
                  class: "mt-1 block w-3/4",
                  placeholder: "Password",
                  onKeyup: withKeys($options.deleteUser, ["enter"])
                }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
                createVNode(_component_jet_input_error, {
                  message: $data.form.errors.password,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ]),
            footer: withCtx(() => [
              createVNode(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                default: withCtx(() => [
                  createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              createVNode(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                disabled: $data.form.processing,
                onClick: $options.deleteUser
              }, {
                default: withCtx(() => [
                  createTextVNode(" Delete Account ")
                ]),
                _: 1
              }, 8, ["class", "disabled", "onClick"])
            ]),
            _: 1
          }, 8, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1o = _sfc_main$1o.setup;
_sfc_main$1o.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Partials/DeleteUserForm.vue");
  return _sfc_setup$1o ? _sfc_setup$1o(props, ctx) : void 0;
};
const DeleteUserForm = /* @__PURE__ */ _export_sfc(_sfc_main$1o, [["ssrRender", _sfc_ssrRender$1n]]);
const __vite_glob_0_23 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: DeleteUserForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1n = {
  components: {
    JetActionMessage,
    JetActionSection,
    JetButton,
    JetDialogModal,
    JetInput,
    JetInputError,
    JetSecondaryButton
  },
  props: ["sessions"],
  data() {
    return {
      confirmingLogout: false,
      form: this.$inertia.form({
        password: ""
      })
    };
  },
  methods: {
    confirmLogout() {
      this.confirmingLogout = true;
      setTimeout(() => this.$refs.password.focus(), 250);
    },
    logoutOtherBrowserSessions() {
      this.form.delete(route("other-browser-sessions.destroy"), {
        preserveScroll: true,
        onSuccess: () => this.closeModal(),
        onError: () => this.$refs.password.focus(),
        onFinish: () => this.form.reset()
      });
    },
    closeModal() {
      this.confirmingLogout = false;
      this.form.reset();
    }
  }
};
function _sfc_ssrRender$1m(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = resolveComponent("jet-action-section");
  const _component_jet_button = resolveComponent("jet-button");
  const _component_jet_action_message = resolveComponent("jet-action-message");
  const _component_jet_dialog_modal = resolveComponent("jet-dialog-modal");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  _push(ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Browser Sessions `);
      } else {
        return [
          createTextVNode(" Browser Sessions ")
        ];
      }
    }),
    description: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Manage and log out your active sessions on other browsers and devices. `);
      } else {
        return [
          createTextVNode(" Manage and log out your active sessions on other browsers and devices. ")
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> If necessary, you may log out of all of your other browser sessions across all of your devices. Some of your recent sessions are listed below; however, this list may not be exhaustive. If you feel your account has been compromised, you should also update your password. </div>`);
        if ($props.sessions.length > 0) {
          _push2(`<div class="mt-5 space-y-6"${_scopeId}><!--[-->`);
          ssrRenderList($props.sessions, (session, i2) => {
            _push2(`<div class="flex items-center"${_scopeId}><div${_scopeId}>`);
            if (session.agent.is_desktop) {
              _push2(`<svg fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" stroke="currentColor" class="w-8 h-8 text-gray-500"${_scopeId}><path d="M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"${_scopeId}></path></svg>`);
            } else {
              _push2(`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round" class="w-8 h-8 text-gray-500"${_scopeId}><path d="M0 0h24v24H0z" stroke="none"${_scopeId}></path><rect x="7" y="4" width="10" height="16" rx="1"${_scopeId}></rect><path d="M11 5h2M12 17v.01"${_scopeId}></path></svg>`);
            }
            _push2(`</div><div class="ml-3"${_scopeId}><div class="text-sm text-gray-600"${_scopeId}>${ssrInterpolate(session.agent.platform)} - ${ssrInterpolate(session.agent.browser)}</div><div${_scopeId}><div class="text-xs text-gray-500"${_scopeId}>${ssrInterpolate(session.ip_address)}, `);
            if (session.is_current_device) {
              _push2(`<span class="text-green-500 font-semibold"${_scopeId}>This device</span>`);
            } else {
              _push2(`<span${_scopeId}>Last active ${ssrInterpolate(session.last_active)}</span>`);
            }
            _push2(`</div></div></div></div>`);
          });
          _push2(`<!--]--></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="flex items-center mt-5"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_button, { onClick: $options.confirmLogout }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Log Out Other Browser Sessions `);
            } else {
              return [
                createTextVNode(" Log Out Other Browser Sessions ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_action_message, {
          on: $data.form.recentlySuccessful,
          class: "ml-3"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Done. `);
            } else {
              return [
                createTextVNode(" Done. ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(ssrRenderComponent(_component_jet_dialog_modal, {
          show: $data.confirmingLogout,
          onClose: $options.closeModal
        }, {
          title: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Log Out Other Browser Sessions `);
            } else {
              return [
                createTextVNode(" Log Out Other Browser Sessions ")
              ];
            }
          }),
          content: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Please enter your password to confirm you would like to log out of your other browser sessions across all of your devices. <div class="mt-4"${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_jet_input, {
                ref: "password",
                modelValue: $data.form.password,
                "onUpdate:modelValue": ($event) => $data.form.password = $event,
                type: "password",
                class: "mt-1 block w-3/4",
                placeholder: "Password",
                onKeyup: $options.logoutOtherBrowserSessions
              }, null, _parent3, _scopeId2));
              _push3(ssrRenderComponent(_component_jet_input_error, {
                message: $data.form.errors.password,
                class: "mt-2"
              }, null, _parent3, _scopeId2));
              _push3(`</div>`);
            } else {
              return [
                createTextVNode(" Please enter your password to confirm you would like to log out of your other browser sessions across all of your devices. "),
                createVNode("div", { class: "mt-4" }, [
                  createVNode(_component_jet_input, {
                    ref: "password",
                    modelValue: $data.form.password,
                    "onUpdate:modelValue": ($event) => $data.form.password = $event,
                    type: "password",
                    class: "mt-1 block w-3/4",
                    placeholder: "Password",
                    onKeyup: withKeys($options.logoutOtherBrowserSessions, ["enter"])
                  }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
                  createVNode(_component_jet_input_error, {
                    message: $data.form.errors.password,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ])
              ];
            }
          }),
          footer: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(ssrRenderComponent(_component_jet_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                disabled: $data.form.processing,
                onClick: $options.logoutOtherBrowserSessions
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Log Out Other Browser Sessions `);
                  } else {
                    return [
                      createTextVNode(" Log Out Other Browser Sessions ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                createVNode(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                  default: withCtx(() => [
                    createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                createVNode(_component_jet_button, {
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  disabled: $data.form.processing,
                  onClick: $options.logoutOtherBrowserSessions
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Log Out Other Browser Sessions ")
                  ]),
                  _: 1
                }, 8, ["class", "disabled", "onClick"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " If necessary, you may log out of all of your other browser sessions across all of your devices. Some of your recent sessions are listed below; however, this list may not be exhaustive. If you feel your account has been compromised, you should also update your password. "),
          $props.sessions.length > 0 ? (openBlock(), createBlock("div", {
            key: 0,
            class: "mt-5 space-y-6"
          }, [
            (openBlock(true), createBlock(Fragment, null, renderList($props.sessions, (session, i2) => {
              return openBlock(), createBlock("div", {
                key: i2,
                class: "flex items-center"
              }, [
                createVNode("div", null, [
                  session.agent.is_desktop ? (openBlock(), createBlock("svg", {
                    key: 0,
                    fill: "none",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round",
                    "stroke-width": "2",
                    viewBox: "0 0 24 24",
                    stroke: "currentColor",
                    class: "w-8 h-8 text-gray-500"
                  }, [
                    createVNode("path", { d: "M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" })
                  ])) : (openBlock(), createBlock("svg", {
                    key: 1,
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 24 24",
                    "stroke-width": "2",
                    stroke: "currentColor",
                    fill: "none",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round",
                    class: "w-8 h-8 text-gray-500"
                  }, [
                    createVNode("path", {
                      d: "M0 0h24v24H0z",
                      stroke: "none"
                    }),
                    createVNode("rect", {
                      x: "7",
                      y: "4",
                      width: "10",
                      height: "16",
                      rx: "1"
                    }),
                    createVNode("path", { d: "M11 5h2M12 17v.01" })
                  ]))
                ]),
                createVNode("div", { class: "ml-3" }, [
                  createVNode("div", { class: "text-sm text-gray-600" }, toDisplayString(session.agent.platform) + " - " + toDisplayString(session.agent.browser), 1),
                  createVNode("div", null, [
                    createVNode("div", { class: "text-xs text-gray-500" }, [
                      createTextVNode(toDisplayString(session.ip_address) + ", ", 1),
                      session.is_current_device ? (openBlock(), createBlock("span", {
                        key: 0,
                        class: "text-green-500 font-semibold"
                      }, "This device")) : (openBlock(), createBlock("span", { key: 1 }, "Last active " + toDisplayString(session.last_active), 1))
                    ])
                  ])
                ])
              ]);
            }), 128))
          ])) : createCommentVNode("", true),
          createVNode("div", { class: "flex items-center mt-5" }, [
            createVNode(_component_jet_button, { onClick: $options.confirmLogout }, {
              default: withCtx(() => [
                createTextVNode(" Log Out Other Browser Sessions ")
              ]),
              _: 1
            }, 8, ["onClick"]),
            createVNode(_component_jet_action_message, {
              on: $data.form.recentlySuccessful,
              class: "ml-3"
            }, {
              default: withCtx(() => [
                createTextVNode(" Done. ")
              ]),
              _: 1
            }, 8, ["on"])
          ]),
          createVNode(_component_jet_dialog_modal, {
            show: $data.confirmingLogout,
            onClose: $options.closeModal
          }, {
            title: withCtx(() => [
              createTextVNode(" Log Out Other Browser Sessions ")
            ]),
            content: withCtx(() => [
              createTextVNode(" Please enter your password to confirm you would like to log out of your other browser sessions across all of your devices. "),
              createVNode("div", { class: "mt-4" }, [
                createVNode(_component_jet_input, {
                  ref: "password",
                  modelValue: $data.form.password,
                  "onUpdate:modelValue": ($event) => $data.form.password = $event,
                  type: "password",
                  class: "mt-1 block w-3/4",
                  placeholder: "Password",
                  onKeyup: withKeys($options.logoutOtherBrowserSessions, ["enter"])
                }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
                createVNode(_component_jet_input_error, {
                  message: $data.form.errors.password,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ]),
            footer: withCtx(() => [
              createVNode(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                default: withCtx(() => [
                  createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              createVNode(_component_jet_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                disabled: $data.form.processing,
                onClick: $options.logoutOtherBrowserSessions
              }, {
                default: withCtx(() => [
                  createTextVNode(" Log Out Other Browser Sessions ")
                ]),
                _: 1
              }, 8, ["class", "disabled", "onClick"])
            ]),
            _: 1
          }, 8, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1n = _sfc_main$1n.setup;
_sfc_main$1n.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Partials/LogoutOtherBrowserSessionsForm.vue");
  return _sfc_setup$1n ? _sfc_setup$1n(props, ctx) : void 0;
};
const LogoutOtherBrowserSessionsForm = /* @__PURE__ */ _export_sfc(_sfc_main$1n, [["ssrRender", _sfc_ssrRender$1m]]);
const __vite_glob_0_24 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: LogoutOtherBrowserSessionsForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1m = {
  components: {
    JetButton,
    JetDialogModal,
    JetInput,
    JetInputError,
    JetSecondaryButton
  },
  props: {
    title: {
      default: "Confirm Password"
    },
    content: {
      default: "For your security, please confirm your password to continue."
    },
    button: {
      default: "Confirm"
    }
  },
  emits: ["confirmed"],
  data() {
    return {
      confirmingPassword: false,
      form: {
        password: "",
        error: ""
      }
    };
  },
  methods: {
    startConfirmingPassword() {
      axios.get(route("password.confirmation")).then((response) => {
        if (response.data.confirmed) {
          this.$emit("confirmed");
        } else {
          this.confirmingPassword = true;
          setTimeout(() => this.$refs.password.focus(), 250);
        }
      });
    },
    confirmPassword() {
      this.form.processing = true;
      axios.post(route("password.confirm"), {
        password: this.form.password
      }).then(() => {
        this.form.processing = false;
        this.closeModal();
        this.$nextTick(() => this.$emit("confirmed"));
      }).catch((error) => {
        this.form.processing = false;
        this.form.error = error.response.data.errors.password[0];
        this.$refs.password.focus();
      });
    },
    closeModal() {
      this.confirmingPassword = false;
      this.form.password = "";
      this.form.error = "";
    }
  }
};
function _sfc_ssrRender$1l(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_dialog_modal = resolveComponent("jet-dialog-modal");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  const _component_jet_button = resolveComponent("jet-button");
  _push(`<span${ssrRenderAttrs(_attrs)}><span>`);
  ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</span>`);
  _push(ssrRenderComponent(_component_jet_dialog_modal, {
    show: $data.confirmingPassword,
    onClose: $options.closeModal
  }, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${ssrInterpolate($props.title)}`);
      } else {
        return [
          createTextVNode(toDisplayString($props.title), 1)
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${ssrInterpolate($props.content)} <div class="mt-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_input, {
          ref: "password",
          modelValue: $data.form.password,
          "onUpdate:modelValue": ($event) => $data.form.password = $event,
          type: "password",
          class: "mt-1 block w-3/4",
          placeholder: "Password",
          onKeyup: $options.confirmPassword
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.error,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          createTextVNode(toDisplayString($props.content) + " ", 1),
          createVNode("div", { class: "mt-4" }, [
            createVNode(_component_jet_input, {
              ref: "password",
              modelValue: $data.form.password,
              "onUpdate:modelValue": ($event) => $data.form.password = $event,
              type: "password",
              class: "mt-1 block w-3/4",
              placeholder: "Password",
              onKeyup: withKeys($options.confirmPassword, ["enter"])
            }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
            createVNode(_component_jet_input_error, {
              message: $data.form.error,
              class: "mt-2"
            }, null, 8, ["message"])
          ])
        ];
      }
    }),
    footer: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_secondary_button, { onClick: $options.closeModal }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_button, {
          class: ["ml-2", { "opacity-25": $data.form.processing }],
          disabled: $data.form.processing,
          onClick: $options.confirmPassword
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`${ssrInterpolate($props.button)}`);
            } else {
              return [
                createTextVNode(toDisplayString($props.button), 1)
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_secondary_button, { onClick: $options.closeModal }, {
            default: withCtx(() => [
              createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          createVNode(_component_jet_button, {
            class: ["ml-2", { "opacity-25": $data.form.processing }],
            disabled: $data.form.processing,
            onClick: $options.confirmPassword
          }, {
            default: withCtx(() => [
              createTextVNode(toDisplayString($props.button), 1)
            ]),
            _: 1
          }, 8, ["class", "disabled", "onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</span>`);
}
const _sfc_setup$1m = _sfc_main$1m.setup;
_sfc_main$1m.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/ConfirmsPassword.vue");
  return _sfc_setup$1m ? _sfc_setup$1m(props, ctx) : void 0;
};
const JetConfirmsPassword = /* @__PURE__ */ _export_sfc(_sfc_main$1m, [["ssrRender", _sfc_ssrRender$1l]]);
const _sfc_main$1l = {
  components: {
    JetActionSection,
    JetButton,
    JetConfirmsPassword,
    JetDangerButton,
    JetSecondaryButton
  },
  data() {
    return {
      enabling: false,
      disabling: false,
      qrCode: null,
      recoveryCodes: []
    };
  },
  computed: {
    twoFactorEnabled() {
      return !this.enabling && this.$page.props.auth.user.two_factor_enabled;
    }
  },
  methods: {
    enableTwoFactorAuthentication() {
      this.enabling = true;
      this.$inertia.post(
        "/user/two-factor-authentication",
        {},
        {
          preserveScroll: true,
          onSuccess: () => Promise.all([
            this.showQrCode(),
            this.showRecoveryCodes()
          ]),
          onFinish: () => this.enabling = false
        }
      );
    },
    showQrCode() {
      return axios.get("/user/two-factor-qr-code").then((response) => {
        this.qrCode = response.data.svg;
      });
    },
    showRecoveryCodes() {
      return axios.get("/user/two-factor-recovery-codes").then((response) => {
        this.recoveryCodes = response.data;
      });
    },
    regenerateRecoveryCodes() {
      axios.post("/user/two-factor-recovery-codes").then((response) => {
        this.showRecoveryCodes();
      });
    },
    disableTwoFactorAuthentication() {
      this.disabling = true;
      this.$inertia.delete("/user/two-factor-authentication", {
        preserveScroll: true,
        onSuccess: () => this.disabling = false
      });
    }
  }
};
function _sfc_ssrRender$1k(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = resolveComponent("jet-action-section");
  const _component_jet_confirms_password = resolveComponent("jet-confirms-password");
  const _component_jet_button = resolveComponent("jet-button");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  const _component_jet_danger_button = resolveComponent("jet-danger-button");
  _push(ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Two Factor Authentication `);
      } else {
        return [
          createTextVNode(" Two Factor Authentication ")
        ];
      }
    }),
    description: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Add additional security to your account using two factor authentication. `);
      } else {
        return [
          createTextVNode(" Add additional security to your account using two factor authentication. ")
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($options.twoFactorEnabled) {
          _push2(`<h3 class="text-lg font-medium text-gray-900"${_scopeId}> You have enabled two factor authentication. </h3>`);
        } else {
          _push2(`<h3 class="text-lg font-medium text-gray-900"${_scopeId}> You have not enabled two factor authentication. </h3>`);
        }
        _push2(`<div class="mt-3 max-w-xl text-sm text-gray-600"${_scopeId}><p${_scopeId}> When two factor authentication is enabled, you will be prompted for a secure, random token during authentication. You may retrieve this token from your phone&#39;s Google Authenticator application. </p></div>`);
        if ($options.twoFactorEnabled) {
          _push2(`<div${_scopeId}>`);
          if ($data.qrCode) {
            _push2(`<div${_scopeId}><div class="mt-4 max-w-xl text-sm text-gray-600"${_scopeId}><p class="font-semibold"${_scopeId}> Two factor authentication is now enabled. Scan the following QR code using your phone&#39;s authenticator application. </p></div><div class="mt-4"${_scopeId}>${$data.qrCode}</div></div>`);
          } else {
            _push2(`<!---->`);
          }
          if ($data.recoveryCodes.length > 0) {
            _push2(`<div${_scopeId}><div class="mt-4 max-w-xl text-sm text-gray-600"${_scopeId}><p class="font-semibold"${_scopeId}> Store these recovery codes in a secure password manager. They can be used to recover access to your account if your two factor authentication device is lost. </p></div><div class="grid gap-1 max-w-xl mt-4 px-4 py-4 font-mono text-sm bg-gray-100 rounded-lg"${_scopeId}><!--[-->`);
            ssrRenderList($data.recoveryCodes, (code) => {
              _push2(`<div${_scopeId}>${ssrInterpolate(code)}</div>`);
            });
            _push2(`<!--]--></div></div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="mt-5"${_scopeId}>`);
        if (!$options.twoFactorEnabled) {
          _push2(`<div${_scopeId}>`);
          _push2(ssrRenderComponent(_component_jet_confirms_password, { onConfirmed: $options.enableTwoFactorAuthentication }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(ssrRenderComponent(_component_jet_button, {
                  type: "button",
                  class: { "opacity-25": $data.enabling },
                  disabled: $data.enabling
                }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(` Enable `);
                    } else {
                      return [
                        createTextVNode(" Enable ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
              } else {
                return [
                  createVNode(_component_jet_button, {
                    type: "button",
                    class: { "opacity-25": $data.enabling },
                    disabled: $data.enabling
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Enable ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"])
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<div${_scopeId}>`);
          _push2(ssrRenderComponent(_component_jet_confirms_password, { onConfirmed: $options.regenerateRecoveryCodes }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                if ($data.recoveryCodes.length > 0) {
                  _push3(ssrRenderComponent(_component_jet_secondary_button, { class: "mr-3" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Regenerate Recovery Codes `);
                      } else {
                        return [
                          createTextVNode(" Regenerate Recovery Codes ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  _push3(`<!---->`);
                }
              } else {
                return [
                  $data.recoveryCodes.length > 0 ? (openBlock(), createBlock(_component_jet_secondary_button, {
                    key: 0,
                    class: "mr-3"
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Regenerate Recovery Codes ")
                    ]),
                    _: 1
                  })) : createCommentVNode("", true)
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_jet_confirms_password, { onConfirmed: $options.showRecoveryCodes }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                if ($data.recoveryCodes.length === 0) {
                  _push3(ssrRenderComponent(_component_jet_secondary_button, { class: "mr-3" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Show Recovery Codes `);
                      } else {
                        return [
                          createTextVNode(" Show Recovery Codes ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  _push3(`<!---->`);
                }
              } else {
                return [
                  $data.recoveryCodes.length === 0 ? (openBlock(), createBlock(_component_jet_secondary_button, {
                    key: 0,
                    class: "mr-3"
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Show Recovery Codes ")
                    ]),
                    _: 1
                  })) : createCommentVNode("", true)
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_jet_confirms_password, { onConfirmed: $options.disableTwoFactorAuthentication }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(ssrRenderComponent(_component_jet_danger_button, {
                  class: { "opacity-25": $data.disabling },
                  disabled: $data.disabling
                }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(` Disable `);
                    } else {
                      return [
                        createTextVNode(" Disable ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
              } else {
                return [
                  createVNode(_component_jet_danger_button, {
                    class: { "opacity-25": $data.disabling },
                    disabled: $data.disabling
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Disable ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"])
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div>`);
        }
        _push2(`</div>`);
      } else {
        return [
          $options.twoFactorEnabled ? (openBlock(), createBlock("h3", {
            key: 0,
            class: "text-lg font-medium text-gray-900"
          }, " You have enabled two factor authentication. ")) : (openBlock(), createBlock("h3", {
            key: 1,
            class: "text-lg font-medium text-gray-900"
          }, " You have not enabled two factor authentication. ")),
          createVNode("div", { class: "mt-3 max-w-xl text-sm text-gray-600" }, [
            createVNode("p", null, " When two factor authentication is enabled, you will be prompted for a secure, random token during authentication. You may retrieve this token from your phone's Google Authenticator application. ")
          ]),
          $options.twoFactorEnabled ? (openBlock(), createBlock("div", { key: 2 }, [
            $data.qrCode ? (openBlock(), createBlock("div", { key: 0 }, [
              createVNode("div", { class: "mt-4 max-w-xl text-sm text-gray-600" }, [
                createVNode("p", { class: "font-semibold" }, " Two factor authentication is now enabled. Scan the following QR code using your phone's authenticator application. ")
              ]),
              createVNode("div", {
                class: "mt-4",
                innerHTML: $data.qrCode
              }, null, 8, ["innerHTML"])
            ])) : createCommentVNode("", true),
            $data.recoveryCodes.length > 0 ? (openBlock(), createBlock("div", { key: 1 }, [
              createVNode("div", { class: "mt-4 max-w-xl text-sm text-gray-600" }, [
                createVNode("p", { class: "font-semibold" }, " Store these recovery codes in a secure password manager. They can be used to recover access to your account if your two factor authentication device is lost. ")
              ]),
              createVNode("div", { class: "grid gap-1 max-w-xl mt-4 px-4 py-4 font-mono text-sm bg-gray-100 rounded-lg" }, [
                (openBlock(true), createBlock(Fragment, null, renderList($data.recoveryCodes, (code) => {
                  return openBlock(), createBlock("div", { key: code }, toDisplayString(code), 1);
                }), 128))
              ])
            ])) : createCommentVNode("", true)
          ])) : createCommentVNode("", true),
          createVNode("div", { class: "mt-5" }, [
            !$options.twoFactorEnabled ? (openBlock(), createBlock("div", { key: 0 }, [
              createVNode(_component_jet_confirms_password, { onConfirmed: $options.enableTwoFactorAuthentication }, {
                default: withCtx(() => [
                  createVNode(_component_jet_button, {
                    type: "button",
                    class: { "opacity-25": $data.enabling },
                    disabled: $data.enabling
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Enable ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"])
                ]),
                _: 1
              }, 8, ["onConfirmed"])
            ])) : (openBlock(), createBlock("div", { key: 1 }, [
              createVNode(_component_jet_confirms_password, { onConfirmed: $options.regenerateRecoveryCodes }, {
                default: withCtx(() => [
                  $data.recoveryCodes.length > 0 ? (openBlock(), createBlock(_component_jet_secondary_button, {
                    key: 0,
                    class: "mr-3"
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Regenerate Recovery Codes ")
                    ]),
                    _: 1
                  })) : createCommentVNode("", true)
                ]),
                _: 1
              }, 8, ["onConfirmed"]),
              createVNode(_component_jet_confirms_password, { onConfirmed: $options.showRecoveryCodes }, {
                default: withCtx(() => [
                  $data.recoveryCodes.length === 0 ? (openBlock(), createBlock(_component_jet_secondary_button, {
                    key: 0,
                    class: "mr-3"
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Show Recovery Codes ")
                    ]),
                    _: 1
                  })) : createCommentVNode("", true)
                ]),
                _: 1
              }, 8, ["onConfirmed"]),
              createVNode(_component_jet_confirms_password, { onConfirmed: $options.disableTwoFactorAuthentication }, {
                default: withCtx(() => [
                  createVNode(_component_jet_danger_button, {
                    class: { "opacity-25": $data.disabling },
                    disabled: $data.disabling
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Disable ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled"])
                ]),
                _: 1
              }, 8, ["onConfirmed"])
            ]))
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1l = _sfc_main$1l.setup;
_sfc_main$1l.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Partials/TwoFactorAuthenticationForm.vue");
  return _sfc_setup$1l ? _sfc_setup$1l(props, ctx) : void 0;
};
const TwoFactorAuthenticationForm = /* @__PURE__ */ _export_sfc(_sfc_main$1l, [["ssrRender", _sfc_ssrRender$1k]]);
const __vite_glob_0_25 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: TwoFactorAuthenticationForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1k = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel
  },
  data() {
    return {
      form: this.$inertia.form({
        current_password: "",
        password: "",
        password_confirmation: ""
      })
    };
  },
  methods: {
    updatePassword() {
      this.form.put(route("user-password.update"), {
        errorBag: "updatePassword",
        preserveScroll: true,
        onSuccess: () => this.form.reset(),
        onError: () => {
          if (this.form.errors.password) {
            this.form.reset("password", "password_confirmation");
            this.$refs.password.focus();
          }
          if (this.form.errors.current_password) {
            this.form.reset("current_password");
            this.$refs.current_password.focus();
          }
        }
      });
    }
  }
};
function _sfc_ssrRender$1j(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = resolveComponent("jet-form-section");
  const _component_jet_label = resolveComponent("jet-label");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_jet_action_message = resolveComponent("jet-action-message");
  const _component_jet_button = resolveComponent("jet-button");
  _push(ssrRenderComponent(_component_jet_form_section, mergeProps({ onSubmitted: $options.updatePassword }, _attrs), {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Update Password `);
      } else {
        return [
          createTextVNode(" Update Password ")
        ];
      }
    }),
    description: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Ensure your account is using a long, random password to stay secure. `);
      } else {
        return [
          createTextVNode(" Ensure your account is using a long, random password to stay secure. ")
        ];
      }
    }),
    form: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "current_password",
          value: "Current Password"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "current_password",
          ref: "current_password",
          modelValue: $data.form.current_password,
          "onUpdate:modelValue": ($event) => $data.form.current_password = $event,
          type: "password",
          class: "mt-1 block w-full",
          autocomplete: "current-password"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.current_password,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "password",
          value: "New Password"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "password",
          ref: "password",
          modelValue: $data.form.password,
          "onUpdate:modelValue": ($event) => $data.form.password = $event,
          type: "password",
          class: "mt-1 block w-full",
          autocomplete: "new-password"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.password,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "password_confirmation",
          value: "Confirm Password"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "password_confirmation",
          modelValue: $data.form.password_confirmation,
          "onUpdate:modelValue": ($event) => $data.form.password_confirmation = $event,
          type: "password",
          class: "mt-1 block w-full",
          autocomplete: "new-password"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.password_confirmation,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            createVNode(_component_jet_label, {
              for: "current_password",
              value: "Current Password"
            }),
            createVNode(_component_jet_input, {
              id: "current_password",
              ref: "current_password",
              modelValue: $data.form.current_password,
              "onUpdate:modelValue": ($event) => $data.form.current_password = $event,
              type: "password",
              class: "mt-1 block w-full",
              autocomplete: "current-password"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            createVNode(_component_jet_input_error, {
              message: $data.form.errors.current_password,
              class: "mt-2"
            }, null, 8, ["message"])
          ]),
          createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            createVNode(_component_jet_label, {
              for: "password",
              value: "New Password"
            }),
            createVNode(_component_jet_input, {
              id: "password",
              ref: "password",
              modelValue: $data.form.password,
              "onUpdate:modelValue": ($event) => $data.form.password = $event,
              type: "password",
              class: "mt-1 block w-full",
              autocomplete: "new-password"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            createVNode(_component_jet_input_error, {
              message: $data.form.errors.password,
              class: "mt-2"
            }, null, 8, ["message"])
          ]),
          createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            createVNode(_component_jet_label, {
              for: "password_confirmation",
              value: "Confirm Password"
            }),
            createVNode(_component_jet_input, {
              id: "password_confirmation",
              modelValue: $data.form.password_confirmation,
              "onUpdate:modelValue": ($event) => $data.form.password_confirmation = $event,
              type: "password",
              class: "mt-1 block w-full",
              autocomplete: "new-password"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            createVNode(_component_jet_input_error, {
              message: $data.form.errors.password_confirmation,
              class: "mt-2"
            }, null, 8, ["message"])
          ])
        ];
      }
    }),
    actions: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_action_message, {
          on: $data.form.recentlySuccessful,
          class: "mr-3"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Saved. `);
            } else {
              return [
                createTextVNode(" Saved. ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_button, {
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Save `);
            } else {
              return [
                createTextVNode(" Save ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_action_message, {
            on: $data.form.recentlySuccessful,
            class: "mr-3"
          }, {
            default: withCtx(() => [
              createTextVNode(" Saved. ")
            ]),
            _: 1
          }, 8, ["on"]),
          createVNode(_component_jet_button, {
            class: { "opacity-25": $data.form.processing },
            disabled: $data.form.processing
          }, {
            default: withCtx(() => [
              createTextVNode(" Save ")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1k = _sfc_main$1k.setup;
_sfc_main$1k.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Partials/UpdatePasswordForm.vue");
  return _sfc_setup$1k ? _sfc_setup$1k(props, ctx) : void 0;
};
const UpdatePasswordForm = /* @__PURE__ */ _export_sfc(_sfc_main$1k, [["ssrRender", _sfc_ssrRender$1j]]);
const __vite_glob_0_26 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: UpdatePasswordForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1j = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    SelectOrcidId
  },
  props: ["user"],
  setup() {
    const selectOrcidIdElement = ref(null);
    return {
      selectOrcidIdElement
    };
  },
  data() {
    return {
      form: this.$inertia.form({
        _method: "PUT",
        first_name: this.user.first_name,
        last_name: this.user.last_name,
        email: this.user.email,
        username: this.user.username,
        orcid_id: this.user.orcid_id,
        affiliation: this.user.affiliation,
        photo: null
      }),
      error: {},
      photoPreview: null
    };
  },
  methods: {
    findOrcidID() {
      this.error.orcid = "";
      if (this.form.first_name && this.form.last_name) {
        this.selectOrcidIdElement.findOrcidID(
          this.form.first_name,
          this.form.last_name
        );
      } else {
        this.error.orcid = "Please enter first name and last name";
      }
    },
    updateProfileInformation() {
      if (this.$refs.photo) {
        this.form.photo = this.$refs.photo.files[0];
      }
      this.form.post(route("user-profile-information.update"), {
        errorBag: "updateProfileInformation",
        preserveScroll: true,
        onSuccess: () => this.clearPhotoFileInput()
      });
    },
    selectNewPhoto() {
      this.$refs.photo.click();
    },
    updatePhotoPreview() {
      const photo = this.$refs.photo.files[0];
      if (!photo)
        return;
      const reader = new FileReader();
      reader.onload = (e2) => {
        this.photoPreview = e2.target.result;
      };
      reader.readAsDataURL(photo);
    },
    deletePhoto() {
      this.$inertia.delete(route("current-user-photo.destroy"), {
        preserveScroll: true,
        onSuccess: () => {
          this.photoPreview = null;
          this.clearPhotoFileInput();
        }
      });
    },
    clearPhotoFileInput() {
      var _a;
      if ((_a = this.$refs.photo) == null ? void 0 : _a.value) {
        this.$refs.photo.value = null;
      }
    }
  }
};
function _sfc_ssrRender$1i(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = resolveComponent("jet-form-section");
  const _component_jet_label = resolveComponent("jet-label");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_action_message = resolveComponent("jet-action-message");
  const _component_jet_button = resolveComponent("jet-button");
  const _component_select_orcid_id = resolveComponent("select-orcid-id");
  _push(`<div${ssrRenderAttrs(_attrs)}>`);
  _push(ssrRenderComponent(_component_jet_form_section, { onSubmitted: $options.updateProfileInformation }, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Profile Information `);
      } else {
        return [
          createTextVNode(" Profile Information ")
        ];
      }
    }),
    description: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Update your account&#39;s profile information and email address. `);
      } else {
        return [
          createTextVNode(" Update your account's profile information and email address. ")
        ];
      }
    }),
    form: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if (_ctx.$page.props.jetstream.managesProfilePhotos) {
          _push2(`<div class="col-span-6 sm:col-span-4"${_scopeId}><input type="file" class="hidden"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_jet_label, {
            for: "photo",
            value: "Photo"
          }, null, _parent2, _scopeId));
          _push2(`<div style="${ssrRenderStyle(!$data.photoPreview ? null : { display: "none" })}" class="mt-2"${_scopeId}><img${ssrRenderAttr("src", $props.user.profile_photo_url)}${ssrRenderAttr("alt", $props.user.first_name + " " + $props.user.last_name)} class="rounded-full ring ring-gray-100 h-20 w-20 object-cover"${_scopeId}></div><div style="${ssrRenderStyle($data.photoPreview ? null : { display: "none" })}" class="mt-2"${_scopeId}><span class="block rounded-full w-20 h-20" style="${ssrRenderStyle(
            "background-size: cover; background-repeat: no-repeat; background-position: center center; background-image: url('" + $data.photoPreview + "');"
          )}"${_scopeId}></span></div>`);
          _push2(ssrRenderComponent(_component_jet_secondary_button, {
            class: "mt-2 mr-2",
            type: "button",
            onClick: $options.selectNewPhoto
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Select A New Photo `);
              } else {
                return [
                  createTextVNode(" Select A New Photo ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          if ($props.user.profile_photo_path) {
            _push2(ssrRenderComponent(_component_jet_secondary_button, {
              type: "button",
              class: "mt-2",
              onClick: $options.deletePhoto
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Remove Photo `);
                } else {
                  return [
                    createTextVNode(" Remove Photo ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            _push2(`<!---->`);
          }
          _push2(ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.photo,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "first_name",
          value: "First Name"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "first_name",
          modelValue: $data.form.first_name,
          "onUpdate:modelValue": ($event) => $data.form.first_name = $event,
          type: "text",
          class: "mt-1 block w-full",
          autocomplete: "first_name"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.first_name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "last_name",
          value: "Last Name"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "last_name",
          modelValue: $data.form.last_name,
          "onUpdate:modelValue": ($event) => $data.form.last_name = $event,
          type: "text",
          class: "mt-1 block w-full",
          autocomplete: "last_name"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.last_name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "email",
          value: "Email"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "email",
          modelValue: $data.form.email,
          "onUpdate:modelValue": ($event) => $data.form.email = $event,
          type: "email",
          class: "mt-1 block w-full"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.email,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "username",
          value: "Username"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "username",
          modelValue: $data.form.username,
          "onUpdate:modelValue": ($event) => $data.form.username = $event,
          type: "text",
          class: "mt-1 block w-full",
          autocomplete: "username"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.username,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "orcid",
          value: "ORCID iD"
        }, null, _parent2, _scopeId));
        _push2(`<div class="mt-1 flex rounded-md shadow-sm"${_scopeId}><div class="relative flex items-stretch flex-grow focus-within:z-10"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "orcid",
          modelValue: $data.form.orcid_id,
          "onUpdate:modelValue": ($event) => $data.form.orcid_id = $event,
          type: "text",
          class: "rounded-l-md focus:ring-indigo-200 focus:border-indigo-200 block w-full rounded-none sm:text-medium border-gray-300"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="tooltip -ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500 cursor-pointer"${_scopeId}><img alt="ORCID logo" src="https://orcid.org/assets/vectors/orcid.logo.icon.svg" class="w-6 h-6"${_scopeId}><span class="bg-gray-900 text-center text-white px-2 py-1 shadow-lg rounded-md tooltiptextbottom"${_scopeId}>Click to find ORCID iD</span></div></div>`);
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.error.orcid,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "affiliation",
          value: "Affiliation"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "affiliation",
          modelValue: $data.form.affiliation,
          "onUpdate:modelValue": ($event) => $data.form.affiliation = $event,
          type: "text",
          class: "mt-1 block w-full",
          autocomplete: "affiliation"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.affiliation,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          _ctx.$page.props.jetstream.managesProfilePhotos ? (openBlock(), createBlock("div", {
            key: 0,
            class: "col-span-6 sm:col-span-4"
          }, [
            createVNode("input", {
              ref: "photo",
              type: "file",
              class: "hidden",
              onChange: $options.updatePhotoPreview
            }, null, 40, ["onChange"]),
            createVNode(_component_jet_label, {
              for: "photo",
              value: "Photo"
            }),
            withDirectives(createVNode("div", { class: "mt-2" }, [
              createVNode("img", {
                src: $props.user.profile_photo_url,
                alt: $props.user.first_name + " " + $props.user.last_name,
                class: "rounded-full ring ring-gray-100 h-20 w-20 object-cover"
              }, null, 8, ["src", "alt"])
            ], 512), [
              [vShow, !$data.photoPreview]
            ]),
            withDirectives(createVNode("div", { class: "mt-2" }, [
              createVNode("span", {
                class: "block rounded-full w-20 h-20",
                style: "background-size: cover; background-repeat: no-repeat; background-position: center center; background-image: url('" + $data.photoPreview + "');"
              }, null, 4)
            ], 512), [
              [vShow, $data.photoPreview]
            ]),
            createVNode(_component_jet_secondary_button, {
              class: "mt-2 mr-2",
              type: "button",
              onClick: withModifiers($options.selectNewPhoto, ["prevent"])
            }, {
              default: withCtx(() => [
                createTextVNode(" Select A New Photo ")
              ]),
              _: 1
            }, 8, ["onClick"]),
            $props.user.profile_photo_path ? (openBlock(), createBlock(_component_jet_secondary_button, {
              key: 0,
              type: "button",
              class: "mt-2",
              onClick: withModifiers($options.deletePhoto, ["prevent"])
            }, {
              default: withCtx(() => [
                createTextVNode(" Remove Photo ")
              ]),
              _: 1
            }, 8, ["onClick"])) : createCommentVNode("", true),
            createVNode(_component_jet_input_error, {
              message: $data.form.errors.photo,
              class: "mt-2"
            }, null, 8, ["message"])
          ])) : createCommentVNode("", true),
          createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            createVNode(_component_jet_label, {
              for: "first_name",
              value: "First Name"
            }),
            createVNode(_component_jet_input, {
              id: "first_name",
              modelValue: $data.form.first_name,
              "onUpdate:modelValue": ($event) => $data.form.first_name = $event,
              type: "text",
              class: "mt-1 block w-full",
              autocomplete: "first_name"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            createVNode(_component_jet_input_error, {
              message: $data.form.errors.first_name,
              class: "mt-2"
            }, null, 8, ["message"])
          ]),
          createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            createVNode(_component_jet_label, {
              for: "last_name",
              value: "Last Name"
            }),
            createVNode(_component_jet_input, {
              id: "last_name",
              modelValue: $data.form.last_name,
              "onUpdate:modelValue": ($event) => $data.form.last_name = $event,
              type: "text",
              class: "mt-1 block w-full",
              autocomplete: "last_name"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            createVNode(_component_jet_input_error, {
              message: $data.form.errors.last_name,
              class: "mt-2"
            }, null, 8, ["message"])
          ]),
          createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            createVNode(_component_jet_label, {
              for: "email",
              value: "Email"
            }),
            createVNode(_component_jet_input, {
              id: "email",
              modelValue: $data.form.email,
              "onUpdate:modelValue": ($event) => $data.form.email = $event,
              type: "email",
              class: "mt-1 block w-full"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            createVNode(_component_jet_input_error, {
              message: $data.form.errors.email,
              class: "mt-2"
            }, null, 8, ["message"])
          ]),
          createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            createVNode(_component_jet_label, {
              for: "username",
              value: "Username"
            }),
            createVNode(_component_jet_input, {
              id: "username",
              modelValue: $data.form.username,
              "onUpdate:modelValue": ($event) => $data.form.username = $event,
              type: "text",
              class: "mt-1 block w-full",
              autocomplete: "username"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            createVNode(_component_jet_input_error, {
              message: $data.form.errors.username,
              class: "mt-2"
            }, null, 8, ["message"])
          ]),
          createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            createVNode(_component_jet_label, {
              for: "orcid",
              value: "ORCID iD"
            }),
            createVNode("div", { class: "mt-1 flex rounded-md shadow-sm" }, [
              createVNode("div", { class: "relative flex items-stretch flex-grow focus-within:z-10" }, [
                createVNode(_component_jet_input, {
                  id: "orcid",
                  modelValue: $data.form.orcid_id,
                  "onUpdate:modelValue": ($event) => $data.form.orcid_id = $event,
                  type: "text",
                  class: "rounded-l-md focus:ring-indigo-200 focus:border-indigo-200 block w-full rounded-none sm:text-medium border-gray-300"
                }, null, 8, ["modelValue", "onUpdate:modelValue"])
              ]),
              createVNode("div", {
                class: "tooltip -ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500 cursor-pointer",
                onClick: $options.findOrcidID
              }, [
                createVNode("img", {
                  alt: "ORCID logo",
                  src: "https://orcid.org/assets/vectors/orcid.logo.icon.svg",
                  class: "w-6 h-6"
                }),
                createVNode("span", { class: "bg-gray-900 text-center text-white px-2 py-1 shadow-lg rounded-md tooltiptextbottom" }, "Click to find ORCID iD")
              ], 8, ["onClick"])
            ]),
            createVNode(_component_jet_input_error, {
              message: $data.error.orcid,
              class: "mt-2"
            }, null, 8, ["message"])
          ]),
          createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            createVNode(_component_jet_label, {
              for: "affiliation",
              value: "Affiliation"
            }),
            createVNode(_component_jet_input, {
              id: "affiliation",
              modelValue: $data.form.affiliation,
              "onUpdate:modelValue": ($event) => $data.form.affiliation = $event,
              type: "text",
              class: "mt-1 block w-full",
              autocomplete: "affiliation"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            createVNode(_component_jet_input_error, {
              message: $data.form.errors.affiliation,
              class: "mt-2"
            }, null, 8, ["message"])
          ])
        ];
      }
    }),
    actions: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_action_message, {
          on: $data.form.recentlySuccessful,
          class: "mr-3"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Saved. `);
            } else {
              return [
                createTextVNode(" Saved. ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_button, {
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Save `);
            } else {
              return [
                createTextVNode(" Save ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_action_message, {
            on: $data.form.recentlySuccessful,
            class: "mr-3"
          }, {
            default: withCtx(() => [
              createTextVNode(" Saved. ")
            ]),
            _: 1
          }, 8, ["on"]),
          createVNode(_component_jet_button, {
            class: { "opacity-25": $data.form.processing },
            disabled: $data.form.processing
          }, {
            default: withCtx(() => [
              createTextVNode(" Save ")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(ssrRenderComponent(_component_select_orcid_id, {
    ref: "selectOrcidIdElement",
    orcidId: $data.form.orcid_id,
    "onUpdate:orcidId": ($event) => $data.form.orcid_id = $event,
    affiliation: $data.form.affiliation,
    "onUpdate:affiliation": ($event) => $data.form.affiliation = $event
  }, null, _parent));
  _push(`</div>`);
}
const _sfc_setup$1j = _sfc_main$1j.setup;
_sfc_main$1j.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Partials/UpdateProfileInformationForm.vue");
  return _sfc_setup$1j ? _sfc_setup$1j(props, ctx) : void 0;
};
const UpdateProfileInformationForm = /* @__PURE__ */ _export_sfc(_sfc_main$1j, [["ssrRender", _sfc_ssrRender$1i]]);
const __vite_glob_0_27 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: UpdateProfileInformationForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1i = {
  components: {
    AppLayout,
    DeleteUserForm,
    JetSectionBorder,
    LogoutOtherBrowserSessionsForm,
    TwoFactorAuthenticationForm,
    UpdatePasswordForm,
    UpdateProfileInformationForm
  },
  props: ["sessions"]
};
function _sfc_ssrRender$1h(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_update_profile_information_form = resolveComponent("update-profile-information-form");
  const _component_jet_section_border = resolveComponent("jet-section-border");
  const _component_update_password_form = resolveComponent("update-password-form");
  const _component_two_factor_authentication_form = resolveComponent("two-factor-authentication-form");
  const _component_logout_other_browser_sessions_form = resolveComponent("logout-other-browser-sessions-form");
  const _component_delete_user_form = resolveComponent("delete-user-form");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({ title: "Profile" }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white border-b"${_scopeId}><div class="px-12"${_scopeId}><div class="flex flex-nowrap justify-between py-6"${_scopeId}><h2 class="font-semibold text-xl text-gray-800 leading-tight"${_scopeId}> Account </h2></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white border-b" }, [
            createVNode("div", { class: "px-12" }, [
              createVNode("div", { class: "flex flex-nowrap justify-between py-6" }, [
                createVNode("h2", { class: "font-semibold text-xl text-gray-800 leading-tight" }, " Account ")
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}><div class="max-w-7xl mx-auto py-10 sm:px-6 lg:px-8"${_scopeId}>`);
        if (_ctx.$page.props.jetstream.canUpdateProfileInformation) {
          _push2(`<div${_scopeId}>`);
          _push2(ssrRenderComponent(_component_update_profile_information_form, {
            user: _ctx.$page.props.auth.user
          }, null, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_jet_section_border, null, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        if (_ctx.$page.props.jetstream.canUpdatePassword) {
          _push2(`<div${_scopeId}>`);
          _push2(ssrRenderComponent(_component_update_password_form, { class: "mt-10 sm:mt-0" }, null, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_jet_section_border, null, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        if (_ctx.$page.props.jetstream.canManageTwoFactorAuthentication) {
          _push2(`<div${_scopeId}>`);
          _push2(ssrRenderComponent(_component_two_factor_authentication_form, { class: "mt-10 sm:mt-0" }, null, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_jet_section_border, null, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(ssrRenderComponent(_component_logout_other_browser_sessions_form, {
          sessions: $props.sessions,
          class: "mt-10 sm:mt-0"
        }, null, _parent2, _scopeId));
        if (_ctx.$page.props.jetstream.hasAccountDeletionFeatures) {
          _push2(`<!--[-->`);
          _push2(ssrRenderComponent(_component_jet_section_border, null, null, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_delete_user_form, { class: "mt-10 sm:mt-0" }, null, _parent2, _scopeId));
          _push2(`<!--]-->`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div>`);
      } else {
        return [
          createVNode("div", null, [
            createVNode("div", { class: "max-w-7xl mx-auto py-10 sm:px-6 lg:px-8" }, [
              _ctx.$page.props.jetstream.canUpdateProfileInformation ? (openBlock(), createBlock("div", { key: 0 }, [
                createVNode(_component_update_profile_information_form, {
                  user: _ctx.$page.props.auth.user
                }, null, 8, ["user"]),
                createVNode(_component_jet_section_border)
              ])) : createCommentVNode("", true),
              _ctx.$page.props.jetstream.canUpdatePassword ? (openBlock(), createBlock("div", { key: 1 }, [
                createVNode(_component_update_password_form, { class: "mt-10 sm:mt-0" }),
                createVNode(_component_jet_section_border)
              ])) : createCommentVNode("", true),
              _ctx.$page.props.jetstream.canManageTwoFactorAuthentication ? (openBlock(), createBlock("div", { key: 2 }, [
                createVNode(_component_two_factor_authentication_form, { class: "mt-10 sm:mt-0" }),
                createVNode(_component_jet_section_border)
              ])) : createCommentVNode("", true),
              createVNode(_component_logout_other_browser_sessions_form, {
                sessions: $props.sessions,
                class: "mt-10 sm:mt-0"
              }, null, 8, ["sessions"]),
              _ctx.$page.props.jetstream.hasAccountDeletionFeatures ? (openBlock(), createBlock(Fragment, { key: 3 }, [
                createVNode(_component_jet_section_border),
                createVNode(_component_delete_user_form, { class: "mt-10 sm:mt-0" })
              ], 64)) : createCommentVNode("", true)
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1i = _sfc_main$1i.setup;
_sfc_main$1i.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Profile/Show.vue");
  return _sfc_setup$1i ? _sfc_setup$1i(props, ctx) : void 0;
};
const Show$4 = /* @__PURE__ */ _export_sfc(_sfc_main$1i, [["ssrRender", _sfc_ssrRender$1h]]);
const __vite_glob_0_28 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Show$4
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1h = {
  components: {
    Dialog,
    DialogOverlay,
    TransitionChild,
    TransitionRoot,
    HeartIcon,
    PencilIcon,
    PlusSmallIcon,
    XMarkIcon
  },
  props: ["study", "project"],
  data() {
    return {
      open: false,
      audit: []
    };
  },
  updated() {
    this.fetchActivity(this.project);
  },
  methods: {
    toggleDetails() {
      this.open = !this.open;
    },
    fetchActivity(entity) {
      axios.get(route("dashboard.project.activity", entity.id)).then((res) => {
        this.audit = res.data.audit;
      });
    }
  }
};
function _sfc_ssrRender$1g(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_TransitionRoot = resolveComponent("TransitionRoot");
  const _component_Dialog = resolveComponent("Dialog");
  const _component_TransitionChild = resolveComponent("TransitionChild");
  const _component_DialogOverlay = resolveComponent("DialogOverlay");
  const _component_XMarkIcon = resolveComponent("XMarkIcon");
  _push(ssrRenderComponent(_component_TransitionRoot, mergeProps({
    as: "template",
    show: $data.open
  }, _attrs), {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_Dialog, {
          as: "div",
          class: "fixed inset-0 overflow-hidden z-50",
          onClose: ($event) => $data.open = false
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div class="absolute inset-0 overflow-hidden"${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_TransitionChild, {
                as: "template",
                enter: "ease-in-out duration-500",
                "enter-from": "opacity-0",
                "enter-to": "opacity-100",
                leave: "ease-in-out duration-500",
                "leave-from": "opacity-100",
                "leave-to": "opacity-0"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(ssrRenderComponent(_component_DialogOverlay, { class: "absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity" }, null, _parent4, _scopeId3));
                  } else {
                    return [
                      createVNode(_component_DialogOverlay, { class: "absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity" })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`<div class="fixed inset-y-0 right-0 pl-10 max-w-full flex"${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_TransitionChild, {
                as: "template",
                enter: "transform transition ease-in-out duration-500 sm:duration-700",
                "enter-from": "translate-x-full",
                "enter-to": "translate-x-0",
                leave: "transform transition ease-in-out duration-500 sm:duration-700",
                "leave-from": "translate-x-0",
                "leave-to": "translate-x-full"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<div class="relative w-96"${_scopeId3}>`);
                    _push4(ssrRenderComponent(_component_TransitionChild, {
                      as: "template",
                      enter: "ease-in-out duration-500",
                      "enter-from": "opacity-0",
                      "enter-to": "opacity-100",
                      leave: "ease-in-out duration-500",
                      "leave-from": "opacity-100",
                      "leave-to": "opacity-0"
                    }, {
                      default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`<div class="absolute top-0 left-0 -ml-8 pt-4 pr-2 flex sm:-ml-10 sm:pr-4"${_scopeId4}><button type="button" class="rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white"${_scopeId4}><span class="sr-only"${_scopeId4}>Close panel</span>`);
                          _push5(ssrRenderComponent(_component_XMarkIcon, {
                            class: "h-6 w-6",
                            "aria-hidden": "true"
                          }, null, _parent5, _scopeId4));
                          _push5(`</button></div>`);
                        } else {
                          return [
                            createVNode("div", { class: "absolute top-0 left-0 -ml-8 pt-4 pr-2 flex sm:-ml-10 sm:pr-4" }, [
                              createVNode("button", {
                                type: "button",
                                class: "rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white",
                                onClick: ($event) => $data.open = false
                              }, [
                                createVNode("span", { class: "sr-only" }, "Close panel"),
                                createVNode(_component_XMarkIcon, {
                                  class: "h-6 w-6",
                                  "aria-hidden": "true"
                                })
                              ], 8, ["onClick"])
                            ])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(`<div class="h-full bg-white p-8 overflow-y-auto"${_scopeId3}><div class="pb-16 space-y-6"${_scopeId3}><div${_scopeId3}><div class="mt-0 flex items-start justify-between"${_scopeId3}><div class="grid grid-cols-1 pt-1 text-left pt-1"${_scopeId3}><div class="text-xs italic text-gray-600 pr-5"${_scopeId3}><span class="text-gray-400"${_scopeId3}>Last updated on</span> ${ssrInterpolate(_ctx.formatDateTime(
                      $props.project.updated_at
                    ))}</div><div class="text-xs italic mt-1 text-gray-600 pr-5"${_scopeId3}><span class="text-gray-400"${_scopeId3}>Created on</span> ${ssrInterpolate(_ctx.formatDateTime(
                      $props.project.created_at
                    ))}</div></div></div></div><div${_scopeId3}><div${_scopeId3}><h2 id="timeline-title" class="text-lg font-medium text-gray-900"${_scopeId3}> Activity </h2><div class="mt-6 flow-root"${_scopeId3}><ul role="list" class="-mb-8"${_scopeId3}><!--[-->`);
                    ssrRenderList($data.audit, (log) => {
                      _push4(`<li${_scopeId3}><div class="relative pb-8"${_scopeId3}><span class="absolute top-4 left-4 -ml-px h-full w-0.5 bg-gray-200" aria-hidden="true"${_scopeId3}></span><div class="relative flex space-x-3"${_scopeId3}><div${_scopeId3}><img${ssrRenderAttr(
                        "src",
                        log.user.profile_photo_url
                      )}${ssrRenderAttr(
                        "alt",
                        log.user.first_name + " " + log.user.last_name
                      )} class="h-8 w-8 rounded-full bg-gray-400 flex items-center justify-center ring-8 ring-white object-cover"${_scopeId3}></div><div class="min-w-0 flex-1 pt-1.5 flex justify-between space-x-4"${_scopeId3}><div${_scopeId3}><a class="font-medium text-gray-900"${_scopeId3}>${ssrInterpolate(log.user.first_name)} ${ssrInterpolate(log.user.last_name)}</a><p class="text-sm text-gray-500"${_scopeId3}>${ssrInterpolate(log.event)}  <a class="font-medium text-gray-900"${_scopeId3}>`);
                      if (log.event == "created" || log.event == "deleted") {
                        _push4(`<span${_scopeId3}>${ssrInterpolate(log.auditable_type.replace(
                          "App\\Models\\",
                          ""
                        ))}</span>`);
                      } else {
                        _push4(`<!---->`);
                      }
                      if (log.event == "updated") {
                        _push4(`<span${_scopeId3}><!--[-->`);
                        ssrRenderList(Object.keys(
                          log.new_values
                        ), (property, $index) => {
                          _push4(`<span${_scopeId3}>`);
                          if ($index > 0) {
                            _push4(`<span${_scopeId3}>,</span>`);
                          } else {
                            _push4(`<!---->`);
                          }
                          _push4(` ${ssrInterpolate(property)}</span>`);
                        });
                        _push4(`<!--]--></span>`);
                      } else {
                        _push4(`<!---->`);
                      }
                      _push4(`</a></p><small${_scopeId3}><time${_scopeId3}>${ssrInterpolate(_ctx.formatDateTime(
                        log.created_at
                      ))}</time></small></div></div></div></div></li>`);
                    });
                    _push4(`<!--]--></ul></div></div></div></div>`);
                    if ($data.audit.length) {
                      _push4(`<small class="text-gray-500"${_scopeId3}><i${_scopeId3}>No logs before <br${_scopeId3}>${ssrInterpolate(_ctx.formatDateTime(
                        $data.audit[$data.audit.length - 1]["created_at"]
                      ))}</i></small>`);
                    } else {
                      _push4(`<!---->`);
                    }
                    _push4(`</div></div>`);
                  } else {
                    return [
                      createVNode("div", { class: "relative w-96" }, [
                        createVNode(_component_TransitionChild, {
                          as: "template",
                          enter: "ease-in-out duration-500",
                          "enter-from": "opacity-0",
                          "enter-to": "opacity-100",
                          leave: "ease-in-out duration-500",
                          "leave-from": "opacity-100",
                          "leave-to": "opacity-0"
                        }, {
                          default: withCtx(() => [
                            createVNode("div", { class: "absolute top-0 left-0 -ml-8 pt-4 pr-2 flex sm:-ml-10 sm:pr-4" }, [
                              createVNode("button", {
                                type: "button",
                                class: "rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white",
                                onClick: ($event) => $data.open = false
                              }, [
                                createVNode("span", { class: "sr-only" }, "Close panel"),
                                createVNode(_component_XMarkIcon, {
                                  class: "h-6 w-6",
                                  "aria-hidden": "true"
                                })
                              ], 8, ["onClick"])
                            ])
                          ]),
                          _: 1
                        }),
                        createVNode("div", { class: "h-full bg-white p-8 overflow-y-auto" }, [
                          createVNode("div", { class: "pb-16 space-y-6" }, [
                            createVNode("div", null, [
                              createVNode("div", { class: "mt-0 flex items-start justify-between" }, [
                                createVNode("div", { class: "grid grid-cols-1 pt-1 text-left pt-1" }, [
                                  createVNode("div", { class: "text-xs italic text-gray-600 pr-5" }, [
                                    createVNode("span", { class: "text-gray-400" }, "Last updated on"),
                                    createTextVNode(" " + toDisplayString(_ctx.formatDateTime(
                                      $props.project.updated_at
                                    )), 1)
                                  ]),
                                  createVNode("div", { class: "text-xs italic mt-1 text-gray-600 pr-5" }, [
                                    createVNode("span", { class: "text-gray-400" }, "Created on"),
                                    createTextVNode(" " + toDisplayString(_ctx.formatDateTime(
                                      $props.project.created_at
                                    )), 1)
                                  ])
                                ])
                              ])
                            ]),
                            createVNode("div", null, [
                              createVNode("div", null, [
                                createVNode("h2", {
                                  id: "timeline-title",
                                  class: "text-lg font-medium text-gray-900"
                                }, " Activity "),
                                createVNode("div", { class: "mt-6 flow-root" }, [
                                  createVNode("ul", {
                                    role: "list",
                                    class: "-mb-8"
                                  }, [
                                    (openBlock(true), createBlock(Fragment, null, renderList($data.audit, (log) => {
                                      return openBlock(), createBlock("li", {
                                        key: log.auditable_id
                                      }, [
                                        createVNode("div", { class: "relative pb-8" }, [
                                          createVNode("span", {
                                            class: "absolute top-4 left-4 -ml-px h-full w-0.5 bg-gray-200",
                                            "aria-hidden": "true"
                                          }),
                                          createVNode("div", { class: "relative flex space-x-3" }, [
                                            createVNode("div", null, [
                                              createVNode("img", {
                                                src: log.user.profile_photo_url,
                                                alt: log.user.first_name + " " + log.user.last_name,
                                                class: "h-8 w-8 rounded-full bg-gray-400 flex items-center justify-center ring-8 ring-white object-cover"
                                              }, null, 8, ["src", "alt"])
                                            ]),
                                            createVNode("div", { class: "min-w-0 flex-1 pt-1.5 flex justify-between space-x-4" }, [
                                              createVNode("div", null, [
                                                createVNode("a", { class: "font-medium text-gray-900" }, toDisplayString(log.user.first_name) + " " + toDisplayString(log.user.last_name), 1),
                                                createVNode("p", { class: "text-sm text-gray-500" }, [
                                                  createTextVNode(toDisplayString(log.event) + "  ", 1),
                                                  createVNode("a", { class: "font-medium text-gray-900" }, [
                                                    log.event == "created" || log.event == "deleted" ? (openBlock(), createBlock("span", { key: 0 }, toDisplayString(log.auditable_type.replace(
                                                      "App\\Models\\",
                                                      ""
                                                    )), 1)) : createCommentVNode("", true),
                                                    log.event == "updated" ? (openBlock(), createBlock("span", { key: 1 }, [
                                                      (openBlock(true), createBlock(Fragment, null, renderList(Object.keys(
                                                        log.new_values
                                                      ), (property, $index) => {
                                                        return openBlock(), createBlock("span", {
                                                          key: property
                                                        }, [
                                                          $index > 0 ? (openBlock(), createBlock("span", { key: 0 }, ",")) : createCommentVNode("", true),
                                                          createTextVNode(" " + toDisplayString(property), 1)
                                                        ]);
                                                      }), 128))
                                                    ])) : createCommentVNode("", true)
                                                  ])
                                                ]),
                                                createVNode("small", null, [
                                                  createVNode("time", null, toDisplayString(_ctx.formatDateTime(
                                                    log.created_at
                                                  )), 1)
                                                ])
                                              ])
                                            ])
                                          ])
                                        ])
                                      ]);
                                    }), 128))
                                  ])
                                ])
                              ])
                            ])
                          ]),
                          $data.audit.length ? (openBlock(), createBlock("small", {
                            key: 0,
                            class: "text-gray-500"
                          }, [
                            createVNode("i", null, [
                              createTextVNode("No logs before "),
                              createVNode("br"),
                              createTextVNode(toDisplayString(_ctx.formatDateTime(
                                $data.audit[$data.audit.length - 1]["created_at"]
                              )), 1)
                            ])
                          ])) : createCommentVNode("", true)
                        ])
                      ])
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</div></div>`);
            } else {
              return [
                createVNode("div", { class: "absolute inset-0 overflow-hidden" }, [
                  createVNode(_component_TransitionChild, {
                    as: "template",
                    enter: "ease-in-out duration-500",
                    "enter-from": "opacity-0",
                    "enter-to": "opacity-100",
                    leave: "ease-in-out duration-500",
                    "leave-from": "opacity-100",
                    "leave-to": "opacity-0"
                  }, {
                    default: withCtx(() => [
                      createVNode(_component_DialogOverlay, { class: "absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity" })
                    ]),
                    _: 1
                  }),
                  createVNode("div", { class: "fixed inset-y-0 right-0 pl-10 max-w-full flex" }, [
                    createVNode(_component_TransitionChild, {
                      as: "template",
                      enter: "transform transition ease-in-out duration-500 sm:duration-700",
                      "enter-from": "translate-x-full",
                      "enter-to": "translate-x-0",
                      leave: "transform transition ease-in-out duration-500 sm:duration-700",
                      "leave-from": "translate-x-0",
                      "leave-to": "translate-x-full"
                    }, {
                      default: withCtx(() => [
                        createVNode("div", { class: "relative w-96" }, [
                          createVNode(_component_TransitionChild, {
                            as: "template",
                            enter: "ease-in-out duration-500",
                            "enter-from": "opacity-0",
                            "enter-to": "opacity-100",
                            leave: "ease-in-out duration-500",
                            "leave-from": "opacity-100",
                            "leave-to": "opacity-0"
                          }, {
                            default: withCtx(() => [
                              createVNode("div", { class: "absolute top-0 left-0 -ml-8 pt-4 pr-2 flex sm:-ml-10 sm:pr-4" }, [
                                createVNode("button", {
                                  type: "button",
                                  class: "rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white",
                                  onClick: ($event) => $data.open = false
                                }, [
                                  createVNode("span", { class: "sr-only" }, "Close panel"),
                                  createVNode(_component_XMarkIcon, {
                                    class: "h-6 w-6",
                                    "aria-hidden": "true"
                                  })
                                ], 8, ["onClick"])
                              ])
                            ]),
                            _: 1
                          }),
                          createVNode("div", { class: "h-full bg-white p-8 overflow-y-auto" }, [
                            createVNode("div", { class: "pb-16 space-y-6" }, [
                              createVNode("div", null, [
                                createVNode("div", { class: "mt-0 flex items-start justify-between" }, [
                                  createVNode("div", { class: "grid grid-cols-1 pt-1 text-left pt-1" }, [
                                    createVNode("div", { class: "text-xs italic text-gray-600 pr-5" }, [
                                      createVNode("span", { class: "text-gray-400" }, "Last updated on"),
                                      createTextVNode(" " + toDisplayString(_ctx.formatDateTime(
                                        $props.project.updated_at
                                      )), 1)
                                    ]),
                                    createVNode("div", { class: "text-xs italic mt-1 text-gray-600 pr-5" }, [
                                      createVNode("span", { class: "text-gray-400" }, "Created on"),
                                      createTextVNode(" " + toDisplayString(_ctx.formatDateTime(
                                        $props.project.created_at
                                      )), 1)
                                    ])
                                  ])
                                ])
                              ]),
                              createVNode("div", null, [
                                createVNode("div", null, [
                                  createVNode("h2", {
                                    id: "timeline-title",
                                    class: "text-lg font-medium text-gray-900"
                                  }, " Activity "),
                                  createVNode("div", { class: "mt-6 flow-root" }, [
                                    createVNode("ul", {
                                      role: "list",
                                      class: "-mb-8"
                                    }, [
                                      (openBlock(true), createBlock(Fragment, null, renderList($data.audit, (log) => {
                                        return openBlock(), createBlock("li", {
                                          key: log.auditable_id
                                        }, [
                                          createVNode("div", { class: "relative pb-8" }, [
                                            createVNode("span", {
                                              class: "absolute top-4 left-4 -ml-px h-full w-0.5 bg-gray-200",
                                              "aria-hidden": "true"
                                            }),
                                            createVNode("div", { class: "relative flex space-x-3" }, [
                                              createVNode("div", null, [
                                                createVNode("img", {
                                                  src: log.user.profile_photo_url,
                                                  alt: log.user.first_name + " " + log.user.last_name,
                                                  class: "h-8 w-8 rounded-full bg-gray-400 flex items-center justify-center ring-8 ring-white object-cover"
                                                }, null, 8, ["src", "alt"])
                                              ]),
                                              createVNode("div", { class: "min-w-0 flex-1 pt-1.5 flex justify-between space-x-4" }, [
                                                createVNode("div", null, [
                                                  createVNode("a", { class: "font-medium text-gray-900" }, toDisplayString(log.user.first_name) + " " + toDisplayString(log.user.last_name), 1),
                                                  createVNode("p", { class: "text-sm text-gray-500" }, [
                                                    createTextVNode(toDisplayString(log.event) + "  ", 1),
                                                    createVNode("a", { class: "font-medium text-gray-900" }, [
                                                      log.event == "created" || log.event == "deleted" ? (openBlock(), createBlock("span", { key: 0 }, toDisplayString(log.auditable_type.replace(
                                                        "App\\Models\\",
                                                        ""
                                                      )), 1)) : createCommentVNode("", true),
                                                      log.event == "updated" ? (openBlock(), createBlock("span", { key: 1 }, [
                                                        (openBlock(true), createBlock(Fragment, null, renderList(Object.keys(
                                                          log.new_values
                                                        ), (property, $index) => {
                                                          return openBlock(), createBlock("span", {
                                                            key: property
                                                          }, [
                                                            $index > 0 ? (openBlock(), createBlock("span", { key: 0 }, ",")) : createCommentVNode("", true),
                                                            createTextVNode(" " + toDisplayString(property), 1)
                                                          ]);
                                                        }), 128))
                                                      ])) : createCommentVNode("", true)
                                                    ])
                                                  ]),
                                                  createVNode("small", null, [
                                                    createVNode("time", null, toDisplayString(_ctx.formatDateTime(
                                                      log.created_at
                                                    )), 1)
                                                  ])
                                                ])
                                              ])
                                            ])
                                          ])
                                        ]);
                                      }), 128))
                                    ])
                                  ])
                                ])
                              ])
                            ]),
                            $data.audit.length ? (openBlock(), createBlock("small", {
                              key: 0,
                              class: "text-gray-500"
                            }, [
                              createVNode("i", null, [
                                createTextVNode("No logs before "),
                                createVNode("br"),
                                createTextVNode(toDisplayString(_ctx.formatDateTime(
                                  $data.audit[$data.audit.length - 1]["created_at"]
                                )), 1)
                              ])
                            ])) : createCommentVNode("", true)
                          ])
                        ])
                      ]),
                      _: 1
                    })
                  ])
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_Dialog, {
            as: "div",
            class: "fixed inset-0 overflow-hidden z-50",
            onClose: ($event) => $data.open = false
          }, {
            default: withCtx(() => [
              createVNode("div", { class: "absolute inset-0 overflow-hidden" }, [
                createVNode(_component_TransitionChild, {
                  as: "template",
                  enter: "ease-in-out duration-500",
                  "enter-from": "opacity-0",
                  "enter-to": "opacity-100",
                  leave: "ease-in-out duration-500",
                  "leave-from": "opacity-100",
                  "leave-to": "opacity-0"
                }, {
                  default: withCtx(() => [
                    createVNode(_component_DialogOverlay, { class: "absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity" })
                  ]),
                  _: 1
                }),
                createVNode("div", { class: "fixed inset-y-0 right-0 pl-10 max-w-full flex" }, [
                  createVNode(_component_TransitionChild, {
                    as: "template",
                    enter: "transform transition ease-in-out duration-500 sm:duration-700",
                    "enter-from": "translate-x-full",
                    "enter-to": "translate-x-0",
                    leave: "transform transition ease-in-out duration-500 sm:duration-700",
                    "leave-from": "translate-x-0",
                    "leave-to": "translate-x-full"
                  }, {
                    default: withCtx(() => [
                      createVNode("div", { class: "relative w-96" }, [
                        createVNode(_component_TransitionChild, {
                          as: "template",
                          enter: "ease-in-out duration-500",
                          "enter-from": "opacity-0",
                          "enter-to": "opacity-100",
                          leave: "ease-in-out duration-500",
                          "leave-from": "opacity-100",
                          "leave-to": "opacity-0"
                        }, {
                          default: withCtx(() => [
                            createVNode("div", { class: "absolute top-0 left-0 -ml-8 pt-4 pr-2 flex sm:-ml-10 sm:pr-4" }, [
                              createVNode("button", {
                                type: "button",
                                class: "rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white",
                                onClick: ($event) => $data.open = false
                              }, [
                                createVNode("span", { class: "sr-only" }, "Close panel"),
                                createVNode(_component_XMarkIcon, {
                                  class: "h-6 w-6",
                                  "aria-hidden": "true"
                                })
                              ], 8, ["onClick"])
                            ])
                          ]),
                          _: 1
                        }),
                        createVNode("div", { class: "h-full bg-white p-8 overflow-y-auto" }, [
                          createVNode("div", { class: "pb-16 space-y-6" }, [
                            createVNode("div", null, [
                              createVNode("div", { class: "mt-0 flex items-start justify-between" }, [
                                createVNode("div", { class: "grid grid-cols-1 pt-1 text-left pt-1" }, [
                                  createVNode("div", { class: "text-xs italic text-gray-600 pr-5" }, [
                                    createVNode("span", { class: "text-gray-400" }, "Last updated on"),
                                    createTextVNode(" " + toDisplayString(_ctx.formatDateTime(
                                      $props.project.updated_at
                                    )), 1)
                                  ]),
                                  createVNode("div", { class: "text-xs italic mt-1 text-gray-600 pr-5" }, [
                                    createVNode("span", { class: "text-gray-400" }, "Created on"),
                                    createTextVNode(" " + toDisplayString(_ctx.formatDateTime(
                                      $props.project.created_at
                                    )), 1)
                                  ])
                                ])
                              ])
                            ]),
                            createVNode("div", null, [
                              createVNode("div", null, [
                                createVNode("h2", {
                                  id: "timeline-title",
                                  class: "text-lg font-medium text-gray-900"
                                }, " Activity "),
                                createVNode("div", { class: "mt-6 flow-root" }, [
                                  createVNode("ul", {
                                    role: "list",
                                    class: "-mb-8"
                                  }, [
                                    (openBlock(true), createBlock(Fragment, null, renderList($data.audit, (log) => {
                                      return openBlock(), createBlock("li", {
                                        key: log.auditable_id
                                      }, [
                                        createVNode("div", { class: "relative pb-8" }, [
                                          createVNode("span", {
                                            class: "absolute top-4 left-4 -ml-px h-full w-0.5 bg-gray-200",
                                            "aria-hidden": "true"
                                          }),
                                          createVNode("div", { class: "relative flex space-x-3" }, [
                                            createVNode("div", null, [
                                              createVNode("img", {
                                                src: log.user.profile_photo_url,
                                                alt: log.user.first_name + " " + log.user.last_name,
                                                class: "h-8 w-8 rounded-full bg-gray-400 flex items-center justify-center ring-8 ring-white object-cover"
                                              }, null, 8, ["src", "alt"])
                                            ]),
                                            createVNode("div", { class: "min-w-0 flex-1 pt-1.5 flex justify-between space-x-4" }, [
                                              createVNode("div", null, [
                                                createVNode("a", { class: "font-medium text-gray-900" }, toDisplayString(log.user.first_name) + " " + toDisplayString(log.user.last_name), 1),
                                                createVNode("p", { class: "text-sm text-gray-500" }, [
                                                  createTextVNode(toDisplayString(log.event) + "  ", 1),
                                                  createVNode("a", { class: "font-medium text-gray-900" }, [
                                                    log.event == "created" || log.event == "deleted" ? (openBlock(), createBlock("span", { key: 0 }, toDisplayString(log.auditable_type.replace(
                                                      "App\\Models\\",
                                                      ""
                                                    )), 1)) : createCommentVNode("", true),
                                                    log.event == "updated" ? (openBlock(), createBlock("span", { key: 1 }, [
                                                      (openBlock(true), createBlock(Fragment, null, renderList(Object.keys(
                                                        log.new_values
                                                      ), (property, $index) => {
                                                        return openBlock(), createBlock("span", {
                                                          key: property
                                                        }, [
                                                          $index > 0 ? (openBlock(), createBlock("span", { key: 0 }, ",")) : createCommentVNode("", true),
                                                          createTextVNode(" " + toDisplayString(property), 1)
                                                        ]);
                                                      }), 128))
                                                    ])) : createCommentVNode("", true)
                                                  ])
                                                ]),
                                                createVNode("small", null, [
                                                  createVNode("time", null, toDisplayString(_ctx.formatDateTime(
                                                    log.created_at
                                                  )), 1)
                                                ])
                                              ])
                                            ])
                                          ])
                                        ])
                                      ]);
                                    }), 128))
                                  ])
                                ])
                              ])
                            ])
                          ]),
                          $data.audit.length ? (openBlock(), createBlock("small", {
                            key: 0,
                            class: "text-gray-500"
                          }, [
                            createVNode("i", null, [
                              createTextVNode("No logs before "),
                              createVNode("br"),
                              createTextVNode(toDisplayString(_ctx.formatDateTime(
                                $data.audit[$data.audit.length - 1]["created_at"]
                              )), 1)
                            ])
                          ])) : createCommentVNode("", true)
                        ])
                      ])
                    ]),
                    _: 1
                  })
                ])
              ])
            ]),
            _: 1
          }, 8, ["onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1h = _sfc_main$1h.setup;
_sfc_main$1h.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Project/Partials/Activity.vue");
  return _sfc_setup$1h ? _sfc_setup$1h(props, ctx) : void 0;
};
const ProjectActivity = /* @__PURE__ */ _export_sfc(_sfc_main$1h, [["ssrRender", _sfc_ssrRender$1g]]);
const __vite_glob_0_30 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ProjectActivity
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1g = {
  components: {
    JetActionSection,
    JetDangerButton,
    JetDialogModal,
    JetInput,
    JetInputError,
    JetSecondaryButton,
    LoadingButton,
    Link
  },
  props: ["project"],
  data() {
    return {
      loading: false,
      confirmingProjectArchival: false,
      confirmingProjectArchivalWithoutPassword: false,
      form: this.$inertia.form({
        password: ""
      }),
      hasPassword: false
    };
  },
  methods: {
    confirmProjectDeletion() {
      this.loading = true;
      this.confirmingProjectArchival = true;
      axios.get(route("auth.checkPassword", this.project.id)).then((res) => {
        this.hasPassword = res.data.hasPassword;
      }).finally(() => {
        this.loading = false;
      });
    },
    archiveProject() {
      this.form.put(
        route("dashboard.project.toggle-archive", this.project.id),
        {
          preserveScroll: true,
          onSuccess: () => this.closeModal(),
          onError: () => this.$refs.password.focus(),
          onFinish: () => this.form.reset()
        }
      );
    },
    closeModal() {
      this.confirmingProjectArchival = false;
      this.confirmingProjectArchivalWithoutPassword = false;
      this.form.reset();
    }
  }
};
function _sfc_ssrRender$1f(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = resolveComponent("jet-action-section");
  const _component_jet_danger_button = resolveComponent("jet-danger-button");
  const _component_jet_dialog_modal = resolveComponent("jet-dialog-modal");
  const _component_loading_button = resolveComponent("loading-button");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  _push(ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Archive Project `);
      } else {
        return [
          createTextVNode(" Archive Project ")
        ];
      }
    }),
    description: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Would you like to deprecate your project. `);
      } else {
        return [
          createTextVNode(" Would you like to deprecate your project. ")
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> Once your project is archived, all of its resources and data will be permanently uneditable and unversionable. A message will be displayed indicating that the project is archived and no further updates are expected. </div><div class="mt-5"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_danger_button, { onClick: $options.confirmProjectDeletion }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Archive Project `);
            } else {
              return [
                createTextVNode(" Archive Project ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(ssrRenderComponent(_component_jet_dialog_modal, {
          show: $data.confirmingProjectArchival,
          onClose: $options.closeModal
        }, createSlots({
          title: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Archive Project `);
            } else {
              return [
                createTextVNode(" Archive Project ")
              ];
            }
          }),
          content: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_loading_button, { loading: $data.loading }, null, _parent3, _scopeId2));
              if (!$data.loading) {
                _push3(`<!--[-->`);
                if ($data.hasPassword) {
                  _push3(`<span${_scopeId2}> Are you sure you want to archive your project? Once your project is archived, all of its resources and data will be permanently archived. Please enter your password to confirm you would like to permanently archive your project. <div class="mt-4"${_scopeId2}>`);
                  _push3(ssrRenderComponent(_component_jet_input, {
                    ref: "password",
                    modelValue: $data.form.password,
                    "onUpdate:modelValue": ($event) => $data.form.password = $event,
                    type: "password",
                    class: "mt-1 block w-3/4",
                    placeholder: "Password",
                    onKeyup: $options.archiveProject
                  }, null, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_component_jet_input_error, {
                    message: $data.form.errors.password,
                    class: "mt-2"
                  }, null, _parent3, _scopeId2));
                  _push3(`</div></span>`);
                } else {
                  _push3(`<span${_scopeId2}> You need to set your password first before deleting the project. </span>`);
                }
                _push3(`<!--]-->`);
              } else {
                _push3(`<!---->`);
              }
            } else {
              return [
                createVNode(_component_loading_button, { loading: $data.loading }, null, 8, ["loading"]),
                !$data.loading ? (openBlock(), createBlock(Fragment, { key: 0 }, [
                  $data.hasPassword ? (openBlock(), createBlock("span", { key: 0 }, [
                    createTextVNode(" Are you sure you want to archive your project? Once your project is archived, all of its resources and data will be permanently archived. Please enter your password to confirm you would like to permanently archive your project. "),
                    createVNode("div", { class: "mt-4" }, [
                      createVNode(_component_jet_input, {
                        ref: "password",
                        modelValue: $data.form.password,
                        "onUpdate:modelValue": ($event) => $data.form.password = $event,
                        type: "password",
                        class: "mt-1 block w-3/4",
                        placeholder: "Password",
                        onKeyup: withKeys($options.archiveProject, ["enter"])
                      }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
                      createVNode(_component_jet_input_error, {
                        message: $data.form.errors.password,
                        class: "mt-2"
                      }, null, 8, ["message"])
                    ])
                  ])) : (openBlock(), createBlock("span", { key: 1 }, " You need to set your password first before deleting the project. "))
                ], 64)) : createCommentVNode("", true)
              ];
            }
          }),
          _: 2
        }, [
          !$data.loading ? {
            name: "footer",
            fn: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(ssrRenderComponent(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(` Cancel `);
                    } else {
                      return [
                        createTextVNode(" Cancel ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                if ($data.hasPassword) {
                  _push3(ssrRenderComponent(_component_jet_danger_button, {
                    class: ["ml-2", { "opacity-25": $data.form.processing }],
                    disabled: $data.form.processing,
                    onClick: $options.archiveProject
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Archive Project `);
                      } else {
                        return [
                          createTextVNode(" Archive Project ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  _push3(`<!---->`);
                }
              } else {
                return [
                  createVNode(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                    default: withCtx(() => [
                      createTextVNode(" Cancel ")
                    ]),
                    _: 1
                  }, 8, ["onClick"]),
                  $data.hasPassword ? (openBlock(), createBlock(_component_jet_danger_button, {
                    key: 0,
                    class: ["ml-2", { "opacity-25": $data.form.processing }],
                    disabled: $data.form.processing,
                    onClick: $options.archiveProject
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Archive Project ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled", "onClick"])) : createCommentVNode("", true)
                ];
              }
            }),
            key: "0"
          } : void 0
        ]), _parent2, _scopeId));
      } else {
        return [
          createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Once your project is archived, all of its resources and data will be permanently uneditable and unversionable. A message will be displayed indicating that the project is archived and no further updates are expected. "),
          createVNode("div", { class: "mt-5" }, [
            createVNode(_component_jet_danger_button, { onClick: $options.confirmProjectDeletion }, {
              default: withCtx(() => [
                createTextVNode(" Archive Project ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ]),
          createVNode(_component_jet_dialog_modal, {
            show: $data.confirmingProjectArchival,
            onClose: $options.closeModal
          }, createSlots({
            title: withCtx(() => [
              createTextVNode(" Archive Project ")
            ]),
            content: withCtx(() => [
              createVNode(_component_loading_button, { loading: $data.loading }, null, 8, ["loading"]),
              !$data.loading ? (openBlock(), createBlock(Fragment, { key: 0 }, [
                $data.hasPassword ? (openBlock(), createBlock("span", { key: 0 }, [
                  createTextVNode(" Are you sure you want to archive your project? Once your project is archived, all of its resources and data will be permanently archived. Please enter your password to confirm you would like to permanently archive your project. "),
                  createVNode("div", { class: "mt-4" }, [
                    createVNode(_component_jet_input, {
                      ref: "password",
                      modelValue: $data.form.password,
                      "onUpdate:modelValue": ($event) => $data.form.password = $event,
                      type: "password",
                      class: "mt-1 block w-3/4",
                      placeholder: "Password",
                      onKeyup: withKeys($options.archiveProject, ["enter"])
                    }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
                    createVNode(_component_jet_input_error, {
                      message: $data.form.errors.password,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ])
                ])) : (openBlock(), createBlock("span", { key: 1 }, " You need to set your password first before deleting the project. "))
              ], 64)) : createCommentVNode("", true)
            ]),
            _: 2
          }, [
            !$data.loading ? {
              name: "footer",
              fn: withCtx(() => [
                createVNode(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                  default: withCtx(() => [
                    createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                $data.hasPassword ? (openBlock(), createBlock(_component_jet_danger_button, {
                  key: 0,
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  disabled: $data.form.processing,
                  onClick: $options.archiveProject
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Archive Project ")
                  ]),
                  _: 1
                }, 8, ["class", "disabled", "onClick"])) : createCommentVNode("", true)
              ]),
              key: "0"
            } : void 0
          ]), 1032, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1g = _sfc_main$1g.setup;
_sfc_main$1g.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Project/Partials/Archive.vue");
  return _sfc_setup$1g ? _sfc_setup$1g(props, ctx) : void 0;
};
const ProjectArchive = /* @__PURE__ */ _export_sfc(_sfc_main$1g, [["ssrRender", _sfc_ssrRender$1f]]);
const __vite_glob_0_31 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ProjectArchive
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1f = {
  components: {
    Tab,
    TabGroup,
    TabList,
    TabPanel,
    TabPanels,
    Switch,
    SwitchDescription,
    SwitchGroup,
    SwitchLabel,
    AtSymbolIcon,
    CodeBracketIcon,
    LinkIcon,
    JetDialogModal,
    JetSecondaryButton,
    JetButton,
    Link,
    CheckCircleIcon: CheckCircleIcon$1,
    ChevronRightIcon,
    JetInputError,
    SelectRich
  },
  props: [],
  data() {
    return {
      createProjectForm: this.$inertia.form({
        _method: "POST",
        name: "",
        description: "",
        error_message: null,
        team_id: null,
        owner_id: null,
        color: null,
        starred: null,
        is_public: ref(false),
        license: null
      }),
      createProjectDialog: false,
      licenses: []
    };
  },
  mounted() {
    const initialise = () => {
      this.toggleCreateProjectDialog();
    };
    this.emitter.all.set("openProjectCreateDialog", [initialise]);
  },
  methods: {
    createProject() {
      this.createProjectForm.owner_id = this.$page.props.auth.user.id;
      this.createProjectForm.team_id = this.$page.props.auth.user.current_team.id;
      this.createProjectForm.post(route("dashboard.project.create"), {
        preserveScroll: true,
        onSuccess: () => {
          this.createProjectDialog = false;
          this.createProjectForm.reset();
        },
        onError: (err) => console.error(err)
      });
    },
    toggleCreateProjectDialog() {
      this.createProjectDialog = !this.createProjectDialog;
      this.createProjectForm.clearErrors();
      if (this.$page.props.licenses) {
        this.licenses = this.$page.props.licenses;
      } else {
        axios$1.get(route("licenses")).then((res) => {
          this.licenses = res.data;
          this.$page.props.licenses = res.data;
        });
      }
    }
  }
};
function _sfc_ssrRender$1e(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_dialog_modal = resolveComponent("jet-dialog-modal");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_TabGroup = resolveComponent("TabGroup");
  const _component_TabList = resolveComponent("TabList");
  const _component_Tab = resolveComponent("Tab");
  const _component_TabPanels = resolveComponent("TabPanels");
  const _component_TabPanel = resolveComponent("TabPanel");
  const _component_SwitchGroup = resolveComponent("SwitchGroup");
  const _component_Switch = resolveComponent("Switch");
  const _component_SwitchLabel = resolveComponent("SwitchLabel");
  const _component_SwitchDescription = resolveComponent("SwitchDescription");
  const _component_select_rich = resolveComponent("select-rich");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  const _component_jet_button = resolveComponent("jet-button");
  _push(ssrRenderComponent(_component_jet_dialog_modal, mergeProps({
    show: $data.createProjectDialog,
    onClose: ($event) => $data.createProjectDialog = false
  }, _attrs), {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` New Project `);
      } else {
        return [
          createTextVNode(" New Project ")
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="relative z-0 mt-1 rounded-lg cursor-pointer"${_scopeId}><div class="mt-6 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6"${_scopeId}><div class="sm:col-span-6"${_scopeId}><label for="name" class="block text-sm font-medium text-gray-700 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId}> Name </label><div class="mt-1 flex rounded-md shadow-sm"${_scopeId}><input id="name"${ssrRenderAttr("value", $data.createProjectForm.name)} type="text" name="name" autocomplete="off" class="flex-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full min-w-0 rounded sm:text-sm border-gray-300"${_scopeId}></div>`);
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.createProjectForm.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="sm:col-span-6"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_TabGroup, null, {
          default: withCtx(({ $selectedIndex }, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_TabList, { class: "flex items-center" }, {
                default: withCtx((_2, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(ssrRenderComponent(_component_Tab, {
                      as: "template",
                      class: "after:content-['*'] after:ml-0.5 after:text-red-500"
                    }, {
                      default: withCtx(({ selected }, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`<button class="${ssrRenderClass([
                            selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                            "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                          ])}"${_scopeId4}> Write </button>`);
                        } else {
                          return [
                            createVNode("button", {
                              class: [
                                selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                              ]
                            }, " Write ", 2)
                          ];
                        }
                      }),
                      _: 2
                    }, _parent4, _scopeId3));
                    _push4(ssrRenderComponent(_component_Tab, { as: "template" }, {
                      default: withCtx(({ selected }, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`<button class="${ssrRenderClass([
                            selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                            "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                          ])}"${_scopeId4}> Preview </button>`);
                        } else {
                          return [
                            createVNode("button", {
                              class: [
                                selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                              ]
                            }, " Preview ", 2)
                          ];
                        }
                      }),
                      _: 2
                    }, _parent4, _scopeId3));
                  } else {
                    return [
                      createVNode(_component_Tab, {
                        as: "template",
                        class: "after:content-['*'] after:ml-0.5 after:text-red-500"
                      }, {
                        default: withCtx(({ selected }) => [
                          createVNode("button", {
                            class: [
                              selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                              "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                            ]
                          }, " Write ", 2)
                        ]),
                        _: 1
                      }),
                      createVNode(_component_Tab, { as: "template" }, {
                        default: withCtx(({ selected }) => [
                          createVNode("button", {
                            class: [
                              selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                              "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                            ]
                          }, " Preview ", 2)
                        ]),
                        _: 1
                      })
                    ];
                  }
                }),
                _: 2
              }, _parent3, _scopeId2));
              _push3(ssrRenderComponent(_component_TabPanels, { class: "mt-2" }, {
                default: withCtx((_2, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(ssrRenderComponent(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                      default: withCtx((_3, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`<label for="comment" class="sr-only"${_scopeId4}>Comment</label><div${_scopeId4}><textarea id="description" name="description" placeholder="Describe this project in atleast 20 characters." rows="3" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"${_scopeId4}>${ssrInterpolate(
                            $data.createProjectForm.description
                          )}</textarea></div>`);
                        } else {
                          return [
                            createVNode("label", {
                              for: "comment",
                              class: "sr-only"
                            }, "Comment"),
                            createVNode("div", null, [
                              withDirectives(createVNode("textarea", {
                                id: "description",
                                "onUpdate:modelValue": ($event) => $data.createProjectForm.description = $event,
                                name: "description",
                                placeholder: "Describe this project in atleast 20 characters.",
                                rows: "3",
                                class: "shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"
                              }, null, 8, ["onUpdate:modelValue"]), [
                                [
                                  vModelText,
                                  $data.createProjectForm.description
                                ]
                              ])
                            ])
                          ];
                        }
                      }),
                      _: 2
                    }, _parent4, _scopeId3));
                    _push4(ssrRenderComponent(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                      default: withCtx((_3, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`<div class="border-b"${_scopeId4}><div class="mx-px mt-px px-3 pt-2 pb-12"${_scopeId4}>`);
                          if ($data.createProjectForm.description == "") {
                            _push5(`<span class="text-gray-400 text-sm font-medium"${_scopeId4}> Nothing to preview </span>`);
                          } else {
                            _push5(`<span${_scopeId4}><div class="prose"${_scopeId4}>${_ctx.md(
                              $data.createProjectForm.description
                            )}</div></span>`);
                          }
                          _push5(`</div></div>`);
                        } else {
                          return [
                            createVNode("div", { class: "border-b" }, [
                              createVNode("div", { class: "mx-px mt-px px-3 pt-2 pb-12" }, [
                                $data.createProjectForm.description == "" ? (openBlock(), createBlock("span", {
                                  key: 0,
                                  class: "text-gray-400 text-sm font-medium"
                                }, " Nothing to preview ")) : (openBlock(), createBlock("span", { key: 1 }, [
                                  createVNode("div", {
                                    class: "prose",
                                    innerHTML: _ctx.md(
                                      $data.createProjectForm.description
                                    )
                                  }, null, 8, ["innerHTML"])
                                ]))
                              ])
                            ])
                          ];
                        }
                      }),
                      _: 2
                    }, _parent4, _scopeId3));
                  } else {
                    return [
                      createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                        default: withCtx(() => [
                          createVNode("label", {
                            for: "comment",
                            class: "sr-only"
                          }, "Comment"),
                          createVNode("div", null, [
                            withDirectives(createVNode("textarea", {
                              id: "description",
                              "onUpdate:modelValue": ($event) => $data.createProjectForm.description = $event,
                              name: "description",
                              placeholder: "Describe this project in atleast 20 characters.",
                              rows: "3",
                              class: "shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"
                            }, null, 8, ["onUpdate:modelValue"]), [
                              [
                                vModelText,
                                $data.createProjectForm.description
                              ]
                            ])
                          ])
                        ]),
                        _: 1
                      }),
                      createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                        default: withCtx(() => [
                          createVNode("div", { class: "border-b" }, [
                            createVNode("div", { class: "mx-px mt-px px-3 pt-2 pb-12" }, [
                              $data.createProjectForm.description == "" ? (openBlock(), createBlock("span", {
                                key: 0,
                                class: "text-gray-400 text-sm font-medium"
                              }, " Nothing to preview ")) : (openBlock(), createBlock("span", { key: 1 }, [
                                createVNode("div", {
                                  class: "prose",
                                  innerHTML: _ctx.md(
                                    $data.createProjectForm.description
                                  )
                                }, null, 8, ["innerHTML"])
                              ]))
                            ])
                          ])
                        ]),
                        _: 1
                      })
                    ];
                  }
                }),
                _: 2
              }, _parent3, _scopeId2));
            } else {
              return [
                createVNode(_component_TabList, { class: "flex items-center" }, {
                  default: withCtx(() => [
                    createVNode(_component_Tab, {
                      as: "template",
                      class: "after:content-['*'] after:ml-0.5 after:text-red-500"
                    }, {
                      default: withCtx(({ selected }) => [
                        createVNode("button", {
                          class: [
                            selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                            "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                          ]
                        }, " Write ", 2)
                      ]),
                      _: 1
                    }),
                    createVNode(_component_Tab, { as: "template" }, {
                      default: withCtx(({ selected }) => [
                        createVNode("button", {
                          class: [
                            selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                            "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                          ]
                        }, " Preview ", 2)
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                }),
                createVNode(_component_TabPanels, { class: "mt-2" }, {
                  default: withCtx(() => [
                    createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                      default: withCtx(() => [
                        createVNode("label", {
                          for: "comment",
                          class: "sr-only"
                        }, "Comment"),
                        createVNode("div", null, [
                          withDirectives(createVNode("textarea", {
                            id: "description",
                            "onUpdate:modelValue": ($event) => $data.createProjectForm.description = $event,
                            name: "description",
                            placeholder: "Describe this project in atleast 20 characters.",
                            rows: "3",
                            class: "shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"
                          }, null, 8, ["onUpdate:modelValue"]), [
                            [
                              vModelText,
                              $data.createProjectForm.description
                            ]
                          ])
                        ])
                      ]),
                      _: 1
                    }),
                    createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                      default: withCtx(() => [
                        createVNode("div", { class: "border-b" }, [
                          createVNode("div", { class: "mx-px mt-px px-3 pt-2 pb-12" }, [
                            $data.createProjectForm.description == "" ? (openBlock(), createBlock("span", {
                              key: 0,
                              class: "text-gray-400 text-sm font-medium"
                            }, " Nothing to preview ")) : (openBlock(), createBlock("span", { key: 1 }, [
                              createVNode("div", {
                                class: "prose",
                                innerHTML: _ctx.md(
                                  $data.createProjectForm.description
                                )
                              }, null, 8, ["innerHTML"])
                            ]))
                          ])
                        ])
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.createProjectForm.errors.description,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`<label class="block text-sm font-medium text-gray-700"${_scopeId}><small${_scopeId}><svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-markdown v-align-bottom inline"${_scopeId}><path fill-rule="evenodd" d="M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z"${_scopeId}></path></svg> Styling with Markdown is <span${_scopeId}>supported</span></small></label></div><div class="sm:col-span-6"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_SwitchGroup, {
          as: "div",
          class: "flex items-center"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_Switch, {
                modelValue: $data.createProjectForm.is_public,
                "onUpdate:modelValue": ($event) => $data.createProjectForm.is_public = $event,
                class: [
                  $data.createProjectForm.is_public ? "bg-green-600" : "bg-gray-200",
                  "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                ]
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<span class="${ssrRenderClass([
                      $data.createProjectForm.is_public ? "translate-x-5" : "translate-x-0",
                      "pointer-events-none relative inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                    ])}"${_scopeId3}><span class="${ssrRenderClass([
                      $data.createProjectForm.is_public ? "opacity-0 ease-out duration-100" : "opacity-100 ease-in duration-200",
                      "absolute inset-0 h-full w-full flex items-center justify-center transition-opacity"
                    ])}" aria-hidden="true"${_scopeId3}><svg id="Capa_1" class="h-3 w-3 text-gray-400 inline" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 512 512" style="${ssrRenderStyle({ "enable-background": "new 0 0 512\n                                                    512" })}" xml:space="preserve"${_scopeId3}><g${_scopeId3}><g${_scopeId3}><path d="M437.333,192h-32v-42.667C405.333,66.99,338.344,0,256,0S106.667,66.99,106.667,149.333V192h-32
                                                C68.771,192,64,196.771,64,202.667v266.667C64,492.865,83.135,512,106.667,512h298.667C428.865,512,448,492.865,448,469.333
                                                V202.667C448,196.771,443.229,192,437.333,192z M287.938,414.823c0.333,3.01-0.635,6.031-2.656,8.292
                                                c-2.021,2.26-4.917,3.552-7.948,3.552h-42.667c-3.031,0-5.927-1.292-7.948-3.552c-2.021-2.26-2.99-5.281-2.656-8.292l6.729-60.51
                                                c-10.927-7.948-17.458-20.521-17.458-34.313c0-23.531,19.135-42.667,42.667-42.667s42.667,19.135,42.667,42.667
                                                c0,13.792-6.531,26.365-17.458,34.313L287.938,414.823z M341.333,192H170.667v-42.667C170.667,102.281,208.948,64,256,64
                                                s85.333,38.281,85.333,85.333V192z"${_scopeId3}></path></g></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g></svg></span><span class="${ssrRenderClass([
                      $data.createProjectForm.is_public ? "opacity-100 ease-in duration-200" : "opacity-0 ease-out duration-100",
                      "absolute inset-0 h-full w-full flex items-center justify-center transition-opacity"
                    ])}" aria-hidden="true"${_scopeId3}><svg class="h-3 w-3 text-green-400 inline" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 64 64" width="512" height="512"${_scopeId3}><g id="globe"${_scopeId3}><path d="M53.85,47.85A27,27,0,0,1,24,57.8V56l3-3V49l4-4V42l4,4h5l2-2h8Z"${_scopeId3}></path><path d="M42,20.59v2.56L38.07,27H31l-5.36,5.26L31,37.51v5.06L27.44,39H22.86L16,32.11V24.2L11.8,20h-4A27,27,0,0,1,32,5a26.55,26.55,0,0,1,7.06.94L36,9H30v4l4,4h4.33Z"${_scopeId3}></path><path d="M32,60A28,28,0,1,1,60,32,28,28,0,0,1,32,60ZM32,6A26,26,0,1,0,58,32,26,26,0,0,0,32,6Z"${_scopeId3}></path></g></svg></span></span>`);
                  } else {
                    return [
                      createVNode("span", {
                        class: [
                          $data.createProjectForm.is_public ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none relative inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                        ]
                      }, [
                        createVNode("span", {
                          class: [
                            $data.createProjectForm.is_public ? "opacity-0 ease-out duration-100" : "opacity-100 ease-in duration-200",
                            "absolute inset-0 h-full w-full flex items-center justify-center transition-opacity"
                          ],
                          "aria-hidden": "true"
                        }, [
                          (openBlock(), createBlock("svg", {
                            id: "Capa_1",
                            class: "h-3 w-3 text-gray-400 inline",
                            version: "1.1",
                            xmlns: "http://www.w3.org/2000/svg",
                            "xmlns:xlink": "http://www.w3.org/1999/xlink",
                            x: "0px",
                            y: "0px",
                            viewBox: "0 0 512 512",
                            style: { "enable-background": "new 0 0 512\n                                                    512" },
                            "xml:space": "preserve"
                          }, [
                            createVNode("g", null, [
                              createVNode("g", null, [
                                createVNode("path", { d: "M437.333,192h-32v-42.667C405.333,66.99,338.344,0,256,0S106.667,66.99,106.667,149.333V192h-32\n                                                C68.771,192,64,196.771,64,202.667v266.667C64,492.865,83.135,512,106.667,512h298.667C428.865,512,448,492.865,448,469.333\n                                                V202.667C448,196.771,443.229,192,437.333,192z M287.938,414.823c0.333,3.01-0.635,6.031-2.656,8.292\n                                                c-2.021,2.26-4.917,3.552-7.948,3.552h-42.667c-3.031,0-5.927-1.292-7.948-3.552c-2.021-2.26-2.99-5.281-2.656-8.292l6.729-60.51\n                                                c-10.927-7.948-17.458-20.521-17.458-34.313c0-23.531,19.135-42.667,42.667-42.667s42.667,19.135,42.667,42.667\n                                                c0,13.792-6.531,26.365-17.458,34.313L287.938,414.823z M341.333,192H170.667v-42.667C170.667,102.281,208.948,64,256,64\n                                                s85.333,38.281,85.333,85.333V192z" })
                              ])
                            ]),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g")
                          ]))
                        ], 2),
                        createVNode("span", {
                          class: [
                            $data.createProjectForm.is_public ? "opacity-100 ease-in duration-200" : "opacity-0 ease-out duration-100",
                            "absolute inset-0 h-full w-full flex items-center justify-center transition-opacity"
                          ],
                          "aria-hidden": "true"
                        }, [
                          (openBlock(), createBlock("svg", {
                            class: "h-3 w-3 text-green-400 inline",
                            xmlns: "http://www.w3.org/2000/svg",
                            viewBox: "0 0 64 64",
                            width: "512",
                            height: "512"
                          }, [
                            createVNode("g", { id: "globe" }, [
                              createVNode("path", { d: "M53.85,47.85A27,27,0,0,1,24,57.8V56l3-3V49l4-4V42l4,4h5l2-2h8Z" }),
                              createVNode("path", { d: "M42,20.59v2.56L38.07,27H31l-5.36,5.26L31,37.51v5.06L27.44,39H22.86L16,32.11V24.2L11.8,20h-4A27,27,0,0,1,32,5a26.55,26.55,0,0,1,7.06.94L36,9H30v4l4,4h4.33Z" }),
                              createVNode("path", { d: "M32,60A28,28,0,1,1,60,32,28,28,0,0,1,32,60ZM32,6A26,26,0,1,0,58,32,26,26,0,0,0,32,6Z" })
                            ])
                          ]))
                        ], 2)
                      ], 2)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`<span class="flex-grow flex ml-4 flex-col"${_scopeId2}>`);
              if (!$data.createProjectForm.is_public) {
                _push3(`<span${_scopeId2}>`);
                _push3(ssrRenderComponent(_component_SwitchLabel, {
                  as: "span",
                  class: "text-sm font-medium text-gray-900",
                  passive: ""
                }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(` Private`);
                    } else {
                      return [
                        createTextVNode(" Private")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                _push3(`<br${_scopeId2}>`);
                _push3(ssrRenderComponent(_component_SwitchDescription, {
                  as: "div",
                  class: "text-xs text-gray-500 leading-none pr-4"
                }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`Visibility of the project only, not the underlying studies`);
                    } else {
                      return [
                        createTextVNode("Visibility of the project only, not the underlying studies")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                _push3(`</span>`);
              } else {
                _push3(`<span${_scopeId2}>`);
                _push3(ssrRenderComponent(_component_SwitchLabel, {
                  as: "span",
                  class: "text-sm font-medium text-gray-900",
                  passive: ""
                }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`Public`);
                    } else {
                      return [
                        createTextVNode("Public")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                _push3(`<br${_scopeId2}>`);
                _push3(ssrRenderComponent(_component_SwitchDescription, {
                  as: "div",
                  class: "text-xs text-gray-500 leading-none pr-4"
                }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`Visibility of the project only, not the underlying studies`);
                    } else {
                      return [
                        createTextVNode("Visibility of the project only, not the underlying studies")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                _push3(`</span>`);
              }
              _push3(`</span>`);
            } else {
              return [
                createVNode(_component_Switch, {
                  modelValue: $data.createProjectForm.is_public,
                  "onUpdate:modelValue": ($event) => $data.createProjectForm.is_public = $event,
                  class: [
                    $data.createProjectForm.is_public ? "bg-green-600" : "bg-gray-200",
                    "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                  ]
                }, {
                  default: withCtx(() => [
                    createVNode("span", {
                      class: [
                        $data.createProjectForm.is_public ? "translate-x-5" : "translate-x-0",
                        "pointer-events-none relative inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                      ]
                    }, [
                      createVNode("span", {
                        class: [
                          $data.createProjectForm.is_public ? "opacity-0 ease-out duration-100" : "opacity-100 ease-in duration-200",
                          "absolute inset-0 h-full w-full flex items-center justify-center transition-opacity"
                        ],
                        "aria-hidden": "true"
                      }, [
                        (openBlock(), createBlock("svg", {
                          id: "Capa_1",
                          class: "h-3 w-3 text-gray-400 inline",
                          version: "1.1",
                          xmlns: "http://www.w3.org/2000/svg",
                          "xmlns:xlink": "http://www.w3.org/1999/xlink",
                          x: "0px",
                          y: "0px",
                          viewBox: "0 0 512 512",
                          style: { "enable-background": "new 0 0 512\n                                                    512" },
                          "xml:space": "preserve"
                        }, [
                          createVNode("g", null, [
                            createVNode("g", null, [
                              createVNode("path", { d: "M437.333,192h-32v-42.667C405.333,66.99,338.344,0,256,0S106.667,66.99,106.667,149.333V192h-32\n                                                C68.771,192,64,196.771,64,202.667v266.667C64,492.865,83.135,512,106.667,512h298.667C428.865,512,448,492.865,448,469.333\n                                                V202.667C448,196.771,443.229,192,437.333,192z M287.938,414.823c0.333,3.01-0.635,6.031-2.656,8.292\n                                                c-2.021,2.26-4.917,3.552-7.948,3.552h-42.667c-3.031,0-5.927-1.292-7.948-3.552c-2.021-2.26-2.99-5.281-2.656-8.292l6.729-60.51\n                                                c-10.927-7.948-17.458-20.521-17.458-34.313c0-23.531,19.135-42.667,42.667-42.667s42.667,19.135,42.667,42.667\n                                                c0,13.792-6.531,26.365-17.458,34.313L287.938,414.823z M341.333,192H170.667v-42.667C170.667,102.281,208.948,64,256,64\n                                                s85.333,38.281,85.333,85.333V192z" })
                            ])
                          ]),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g")
                        ]))
                      ], 2),
                      createVNode("span", {
                        class: [
                          $data.createProjectForm.is_public ? "opacity-100 ease-in duration-200" : "opacity-0 ease-out duration-100",
                          "absolute inset-0 h-full w-full flex items-center justify-center transition-opacity"
                        ],
                        "aria-hidden": "true"
                      }, [
                        (openBlock(), createBlock("svg", {
                          class: "h-3 w-3 text-green-400 inline",
                          xmlns: "http://www.w3.org/2000/svg",
                          viewBox: "0 0 64 64",
                          width: "512",
                          height: "512"
                        }, [
                          createVNode("g", { id: "globe" }, [
                            createVNode("path", { d: "M53.85,47.85A27,27,0,0,1,24,57.8V56l3-3V49l4-4V42l4,4h5l2-2h8Z" }),
                            createVNode("path", { d: "M42,20.59v2.56L38.07,27H31l-5.36,5.26L31,37.51v5.06L27.44,39H22.86L16,32.11V24.2L11.8,20h-4A27,27,0,0,1,32,5a26.55,26.55,0,0,1,7.06.94L36,9H30v4l4,4h4.33Z" }),
                            createVNode("path", { d: "M32,60A28,28,0,1,1,60,32,28,28,0,0,1,32,60ZM32,6A26,26,0,1,0,58,32,26,26,0,0,0,32,6Z" })
                          ])
                        ]))
                      ], 2)
                    ], 2)
                  ]),
                  _: 1
                }, 8, ["modelValue", "onUpdate:modelValue", "class"]),
                createVNode("span", { class: "flex-grow flex ml-4 flex-col" }, [
                  !$data.createProjectForm.is_public ? (openBlock(), createBlock("span", { key: 0 }, [
                    createVNode(_component_SwitchLabel, {
                      as: "span",
                      class: "text-sm font-medium text-gray-900",
                      passive: ""
                    }, {
                      default: withCtx(() => [
                        createTextVNode(" Private")
                      ]),
                      _: 1
                    }),
                    createVNode("br"),
                    createVNode(_component_SwitchDescription, {
                      as: "div",
                      class: "text-xs text-gray-500 leading-none pr-4"
                    }, {
                      default: withCtx(() => [
                        createTextVNode("Visibility of the project only, not the underlying studies")
                      ]),
                      _: 1
                    })
                  ])) : (openBlock(), createBlock("span", { key: 1 }, [
                    createVNode(_component_SwitchLabel, {
                      as: "span",
                      class: "text-sm font-medium text-gray-900",
                      passive: ""
                    }, {
                      default: withCtx(() => [
                        createTextVNode("Public")
                      ]),
                      _: 1
                    }),
                    createVNode("br"),
                    createVNode(_component_SwitchDescription, {
                      as: "div",
                      class: "text-xs text-gray-500 leading-none pr-4"
                    }, {
                      default: withCtx(() => [
                        createTextVNode("Visibility of the project only, not the underlying studies")
                      ]),
                      _: 1
                    })
                  ]))
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></div><div class="mt-6 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-1"${_scopeId}><div${_scopeId}>`);
        _push2(ssrRenderComponent(_component_select_rich, {
          selected: $data.createProjectForm.license,
          "onUpdate:selected": ($event) => $data.createProjectForm.license = $event,
          label: "License",
          items: $data.licenses
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.createProjectForm.errors.license,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "relative z-0 mt-1 rounded-lg cursor-pointer" }, [
            createVNode("div", { class: "mt-6 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6" }, [
              createVNode("div", { class: "sm:col-span-6" }, [
                createVNode("label", {
                  for: "name",
                  class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500"
                }, " Name "),
                createVNode("div", { class: "mt-1 flex rounded-md shadow-sm" }, [
                  withDirectives(createVNode("input", {
                    id: "name",
                    "onUpdate:modelValue": ($event) => $data.createProjectForm.name = $event,
                    type: "text",
                    name: "name",
                    autocomplete: "off",
                    class: "flex-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full min-w-0 rounded sm:text-sm border-gray-300"
                  }, null, 8, ["onUpdate:modelValue"]), [
                    [vModelText, $data.createProjectForm.name]
                  ])
                ]),
                createVNode(_component_jet_input_error, {
                  message: $data.createProjectForm.errors.name,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              createVNode("div", { class: "sm:col-span-6" }, [
                createVNode(_component_TabGroup, null, {
                  default: withCtx(({ $selectedIndex }) => [
                    createVNode(_component_TabList, { class: "flex items-center" }, {
                      default: withCtx(() => [
                        createVNode(_component_Tab, {
                          as: "template",
                          class: "after:content-['*'] after:ml-0.5 after:text-red-500"
                        }, {
                          default: withCtx(({ selected }) => [
                            createVNode("button", {
                              class: [
                                selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                              ]
                            }, " Write ", 2)
                          ]),
                          _: 1
                        }),
                        createVNode(_component_Tab, { as: "template" }, {
                          default: withCtx(({ selected }) => [
                            createVNode("button", {
                              class: [
                                selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                              ]
                            }, " Preview ", 2)
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode(_component_TabPanels, { class: "mt-2" }, {
                      default: withCtx(() => [
                        createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                          default: withCtx(() => [
                            createVNode("label", {
                              for: "comment",
                              class: "sr-only"
                            }, "Comment"),
                            createVNode("div", null, [
                              withDirectives(createVNode("textarea", {
                                id: "description",
                                "onUpdate:modelValue": ($event) => $data.createProjectForm.description = $event,
                                name: "description",
                                placeholder: "Describe this project in atleast 20 characters.",
                                rows: "3",
                                class: "shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"
                              }, null, 8, ["onUpdate:modelValue"]), [
                                [
                                  vModelText,
                                  $data.createProjectForm.description
                                ]
                              ])
                            ])
                          ]),
                          _: 1
                        }),
                        createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                          default: withCtx(() => [
                            createVNode("div", { class: "border-b" }, [
                              createVNode("div", { class: "mx-px mt-px px-3 pt-2 pb-12" }, [
                                $data.createProjectForm.description == "" ? (openBlock(), createBlock("span", {
                                  key: 0,
                                  class: "text-gray-400 text-sm font-medium"
                                }, " Nothing to preview ")) : (openBlock(), createBlock("span", { key: 1 }, [
                                  createVNode("div", {
                                    class: "prose",
                                    innerHTML: _ctx.md(
                                      $data.createProjectForm.description
                                    )
                                  }, null, 8, ["innerHTML"])
                                ]))
                              ])
                            ])
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                }),
                createVNode(_component_jet_input_error, {
                  message: $data.createProjectForm.errors.description,
                  class: "mt-2"
                }, null, 8, ["message"]),
                createVNode("label", { class: "block text-sm font-medium text-gray-700" }, [
                  createVNode("small", null, [
                    (openBlock(), createBlock("svg", {
                      "aria-hidden": "true",
                      height: "16",
                      viewBox: "0 0 16 16",
                      version: "1.1",
                      width: "16",
                      "data-view-component": "true",
                      class: "octicon octicon-markdown v-align-bottom inline"
                    }, [
                      createVNode("path", {
                        "fill-rule": "evenodd",
                        d: "M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z"
                      })
                    ])),
                    createTextVNode(" Styling with Markdown is "),
                    createVNode("span", {
                      onClick: ($event) => $data.createProjectForm.description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."
                    }, "supported", 8, ["onClick"])
                  ])
                ])
              ]),
              createVNode("div", { class: "sm:col-span-6" }, [
                createVNode(_component_SwitchGroup, {
                  as: "div",
                  class: "flex items-center"
                }, {
                  default: withCtx(() => [
                    createVNode(_component_Switch, {
                      modelValue: $data.createProjectForm.is_public,
                      "onUpdate:modelValue": ($event) => $data.createProjectForm.is_public = $event,
                      class: [
                        $data.createProjectForm.is_public ? "bg-green-600" : "bg-gray-200",
                        "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                      ]
                    }, {
                      default: withCtx(() => [
                        createVNode("span", {
                          class: [
                            $data.createProjectForm.is_public ? "translate-x-5" : "translate-x-0",
                            "pointer-events-none relative inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                          ]
                        }, [
                          createVNode("span", {
                            class: [
                              $data.createProjectForm.is_public ? "opacity-0 ease-out duration-100" : "opacity-100 ease-in duration-200",
                              "absolute inset-0 h-full w-full flex items-center justify-center transition-opacity"
                            ],
                            "aria-hidden": "true"
                          }, [
                            (openBlock(), createBlock("svg", {
                              id: "Capa_1",
                              class: "h-3 w-3 text-gray-400 inline",
                              version: "1.1",
                              xmlns: "http://www.w3.org/2000/svg",
                              "xmlns:xlink": "http://www.w3.org/1999/xlink",
                              x: "0px",
                              y: "0px",
                              viewBox: "0 0 512 512",
                              style: { "enable-background": "new 0 0 512\n                                                    512" },
                              "xml:space": "preserve"
                            }, [
                              createVNode("g", null, [
                                createVNode("g", null, [
                                  createVNode("path", { d: "M437.333,192h-32v-42.667C405.333,66.99,338.344,0,256,0S106.667,66.99,106.667,149.333V192h-32\n                                                C68.771,192,64,196.771,64,202.667v266.667C64,492.865,83.135,512,106.667,512h298.667C428.865,512,448,492.865,448,469.333\n                                                V202.667C448,196.771,443.229,192,437.333,192z M287.938,414.823c0.333,3.01-0.635,6.031-2.656,8.292\n                                                c-2.021,2.26-4.917,3.552-7.948,3.552h-42.667c-3.031,0-5.927-1.292-7.948-3.552c-2.021-2.26-2.99-5.281-2.656-8.292l6.729-60.51\n                                                c-10.927-7.948-17.458-20.521-17.458-34.313c0-23.531,19.135-42.667,42.667-42.667s42.667,19.135,42.667,42.667\n                                                c0,13.792-6.531,26.365-17.458,34.313L287.938,414.823z M341.333,192H170.667v-42.667C170.667,102.281,208.948,64,256,64\n                                                s85.333,38.281,85.333,85.333V192z" })
                                ])
                              ]),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g")
                            ]))
                          ], 2),
                          createVNode("span", {
                            class: [
                              $data.createProjectForm.is_public ? "opacity-100 ease-in duration-200" : "opacity-0 ease-out duration-100",
                              "absolute inset-0 h-full w-full flex items-center justify-center transition-opacity"
                            ],
                            "aria-hidden": "true"
                          }, [
                            (openBlock(), createBlock("svg", {
                              class: "h-3 w-3 text-green-400 inline",
                              xmlns: "http://www.w3.org/2000/svg",
                              viewBox: "0 0 64 64",
                              width: "512",
                              height: "512"
                            }, [
                              createVNode("g", { id: "globe" }, [
                                createVNode("path", { d: "M53.85,47.85A27,27,0,0,1,24,57.8V56l3-3V49l4-4V42l4,4h5l2-2h8Z" }),
                                createVNode("path", { d: "M42,20.59v2.56L38.07,27H31l-5.36,5.26L31,37.51v5.06L27.44,39H22.86L16,32.11V24.2L11.8,20h-4A27,27,0,0,1,32,5a26.55,26.55,0,0,1,7.06.94L36,9H30v4l4,4h4.33Z" }),
                                createVNode("path", { d: "M32,60A28,28,0,1,1,60,32,28,28,0,0,1,32,60ZM32,6A26,26,0,1,0,58,32,26,26,0,0,0,32,6Z" })
                              ])
                            ]))
                          ], 2)
                        ], 2)
                      ]),
                      _: 1
                    }, 8, ["modelValue", "onUpdate:modelValue", "class"]),
                    createVNode("span", { class: "flex-grow flex ml-4 flex-col" }, [
                      !$data.createProjectForm.is_public ? (openBlock(), createBlock("span", { key: 0 }, [
                        createVNode(_component_SwitchLabel, {
                          as: "span",
                          class: "text-sm font-medium text-gray-900",
                          passive: ""
                        }, {
                          default: withCtx(() => [
                            createTextVNode(" Private")
                          ]),
                          _: 1
                        }),
                        createVNode("br"),
                        createVNode(_component_SwitchDescription, {
                          as: "div",
                          class: "text-xs text-gray-500 leading-none pr-4"
                        }, {
                          default: withCtx(() => [
                            createTextVNode("Visibility of the project only, not the underlying studies")
                          ]),
                          _: 1
                        })
                      ])) : (openBlock(), createBlock("span", { key: 1 }, [
                        createVNode(_component_SwitchLabel, {
                          as: "span",
                          class: "text-sm font-medium text-gray-900",
                          passive: ""
                        }, {
                          default: withCtx(() => [
                            createTextVNode("Public")
                          ]),
                          _: 1
                        }),
                        createVNode("br"),
                        createVNode(_component_SwitchDescription, {
                          as: "div",
                          class: "text-xs text-gray-500 leading-none pr-4"
                        }, {
                          default: withCtx(() => [
                            createTextVNode("Visibility of the project only, not the underlying studies")
                          ]),
                          _: 1
                        })
                      ]))
                    ])
                  ]),
                  _: 1
                })
              ])
            ]),
            createVNode("div", { class: "mt-6 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-1" }, [
              createVNode("div", null, [
                createVNode(_component_select_rich, {
                  selected: $data.createProjectForm.license,
                  "onUpdate:selected": ($event) => $data.createProjectForm.license = $event,
                  label: "License",
                  items: $data.licenses
                }, null, 8, ["selected", "onUpdate:selected", "items"]),
                createVNode(_component_jet_input_error, {
                  message: $data.createProjectForm.errors.license,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ])
          ])
        ];
      }
    }),
    footer: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_secondary_button, { onClick: $options.toggleCreateProjectDialog }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_button, {
          class: ["ml-2", { "opacity-25": $data.createProjectForm.processing }],
          disabled: $data.createProjectForm.processing,
          onClick: $options.createProject
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Save `);
            } else {
              return [
                createTextVNode(" Save ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_secondary_button, { onClick: $options.toggleCreateProjectDialog }, {
            default: withCtx(() => [
              createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          createVNode(_component_jet_button, {
            class: ["ml-2", { "opacity-25": $data.createProjectForm.processing }],
            disabled: $data.createProjectForm.processing,
            onClick: $options.createProject
          }, {
            default: withCtx(() => [
              createTextVNode(" Save ")
            ]),
            _: 1
          }, 8, ["class", "disabled", "onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1f = _sfc_main$1f.setup;
_sfc_main$1f.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Project/Partials/Create.vue");
  return _sfc_setup$1f ? _sfc_setup$1f(props, ctx) : void 0;
};
const Create$1 = /* @__PURE__ */ _export_sfc(_sfc_main$1f, [["ssrRender", _sfc_ssrRender$1e]]);
const __vite_glob_0_32 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Create$1
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1e = {
  components: {
    JetActionSection,
    JetDangerButton,
    JetDialogModal,
    JetInput,
    JetInputError,
    JetSecondaryButton,
    LoadingButton,
    Link
  },
  props: ["project"],
  data() {
    return {
      loading: false,
      confirmingProjectDeletion: false,
      confirmingProjectDeletionWithoutPassword: false,
      form: this.$inertia.form({
        password: ""
      }),
      hasPassword: false
    };
  },
  computed: {
    coolOffPeriod() {
      return String(this.$page.props.coolOffPeriod);
    }
  },
  methods: {
    confirmProjectDeletion() {
      this.loading = true;
      this.confirmingProjectDeletion = true;
      axios.get(route("auth.checkPassword", this.project.id)).then((res) => {
        this.hasPassword = res.data.hasPassword;
      }).finally(() => {
        this.loading = false;
      });
    },
    deleteProject() {
      this.form.delete(
        route("dashboard.project.destroy", this.project.id),
        {
          preserveScroll: true,
          onSuccess: () => this.closeModal(),
          onError: () => this.$refs.password.focus(),
          onFinish: () => this.form.reset()
        }
      );
    },
    closeModal() {
      this.confirmingProjectDeletion = false;
      this.confirmingProjectDeletionWithoutPassword = false;
      this.form.reset();
    }
  }
};
function _sfc_ssrRender$1d(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = resolveComponent("jet-action-section");
  const _component_jet_danger_button = resolveComponent("jet-danger-button");
  const _component_jet_dialog_modal = resolveComponent("jet-dialog-modal");
  const _component_loading_button = resolveComponent("loading-button");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  _push(ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete Project `);
      } else {
        return [
          createTextVNode(" Delete Project ")
        ];
      }
    }),
    description: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Permanently delete your project. `);
      } else {
        return [
          createTextVNode(" Permanently delete your project. ")
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> Once your project is deleted, all of its resources and data will be permanently deleted. Before deleting your project, please download any data or information that you wish to retain. </div><div class="mt-5"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_danger_button, { onClick: $options.confirmProjectDeletion }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Project `);
            } else {
              return [
                createTextVNode(" Delete Project ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(ssrRenderComponent(_component_jet_dialog_modal, {
          show: $data.confirmingProjectDeletion,
          onClose: $options.closeModal
        }, createSlots({
          title: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Project `);
            } else {
              return [
                createTextVNode(" Delete Project ")
              ];
            }
          }),
          content: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_loading_button, { loading: $data.loading }, null, _parent3, _scopeId2));
              if (!$data.loading) {
                _push3(`<!--[-->`);
                if ($data.hasPassword) {
                  _push3(`<span${_scopeId2}> Are you sure you want to delete your project? Once your project is deleted, all its resources and data will be moved to the trash. You may recover deleted projects and the data stored in them for a limited time before they are permanently deleted. Please enter your password to confirm you would like to delete your project, and if there is no action in the next ${ssrInterpolate($options.coolOffPeriod)} days, the project will be deleted permanently. <div class="mt-4"${_scopeId2}>`);
                  _push3(ssrRenderComponent(_component_jet_input, {
                    ref: "password",
                    modelValue: $data.form.password,
                    "onUpdate:modelValue": ($event) => $data.form.password = $event,
                    type: "password",
                    class: "mt-1 block w-3/4",
                    placeholder: "Password",
                    onKeyup: $options.deleteProject
                  }, null, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_component_jet_input_error, {
                    message: $data.form.errors.password,
                    class: "mt-2"
                  }, null, _parent3, _scopeId2));
                  _push3(`</div></span>`);
                } else {
                  _push3(`<span${_scopeId2}> You need to set your password first before deleting the project. </span>`);
                }
                _push3(`<!--]-->`);
              } else {
                _push3(`<!---->`);
              }
            } else {
              return [
                createVNode(_component_loading_button, { loading: $data.loading }, null, 8, ["loading"]),
                !$data.loading ? (openBlock(), createBlock(Fragment, { key: 0 }, [
                  $data.hasPassword ? (openBlock(), createBlock("span", { key: 0 }, [
                    createTextVNode(" Are you sure you want to delete your project? Once your project is deleted, all its resources and data will be moved to the trash. You may recover deleted projects and the data stored in them for a limited time before they are permanently deleted. Please enter your password to confirm you would like to delete your project, and if there is no action in the next " + toDisplayString($options.coolOffPeriod) + " days, the project will be deleted permanently. ", 1),
                    createVNode("div", { class: "mt-4" }, [
                      createVNode(_component_jet_input, {
                        ref: "password",
                        modelValue: $data.form.password,
                        "onUpdate:modelValue": ($event) => $data.form.password = $event,
                        type: "password",
                        class: "mt-1 block w-3/4",
                        placeholder: "Password",
                        onKeyup: withKeys($options.deleteProject, ["enter"])
                      }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
                      createVNode(_component_jet_input_error, {
                        message: $data.form.errors.password,
                        class: "mt-2"
                      }, null, 8, ["message"])
                    ])
                  ])) : (openBlock(), createBlock("span", { key: 1 }, " You need to set your password first before deleting the project. "))
                ], 64)) : createCommentVNode("", true)
              ];
            }
          }),
          _: 2
        }, [
          !$data.loading ? {
            name: "footer",
            fn: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(ssrRenderComponent(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(` Cancel `);
                    } else {
                      return [
                        createTextVNode(" Cancel ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                if ($data.hasPassword) {
                  _push3(ssrRenderComponent(_component_jet_danger_button, {
                    class: ["ml-2", { "opacity-25": $data.form.processing }],
                    disabled: $data.form.processing,
                    onClick: $options.deleteProject
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Delete Project `);
                      } else {
                        return [
                          createTextVNode(" Delete Project ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  _push3(`<!---->`);
                }
              } else {
                return [
                  createVNode(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                    default: withCtx(() => [
                      createTextVNode(" Cancel ")
                    ]),
                    _: 1
                  }, 8, ["onClick"]),
                  $data.hasPassword ? (openBlock(), createBlock(_component_jet_danger_button, {
                    key: 0,
                    class: ["ml-2", { "opacity-25": $data.form.processing }],
                    disabled: $data.form.processing,
                    onClick: $options.deleteProject
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Delete Project ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled", "onClick"])) : createCommentVNode("", true)
                ];
              }
            }),
            key: "0"
          } : void 0
        ]), _parent2, _scopeId));
      } else {
        return [
          createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Once your project is deleted, all of its resources and data will be permanently deleted. Before deleting your project, please download any data or information that you wish to retain. "),
          createVNode("div", { class: "mt-5" }, [
            createVNode(_component_jet_danger_button, { onClick: $options.confirmProjectDeletion }, {
              default: withCtx(() => [
                createTextVNode(" Delete Project ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ]),
          createVNode(_component_jet_dialog_modal, {
            show: $data.confirmingProjectDeletion,
            onClose: $options.closeModal
          }, createSlots({
            title: withCtx(() => [
              createTextVNode(" Delete Project ")
            ]),
            content: withCtx(() => [
              createVNode(_component_loading_button, { loading: $data.loading }, null, 8, ["loading"]),
              !$data.loading ? (openBlock(), createBlock(Fragment, { key: 0 }, [
                $data.hasPassword ? (openBlock(), createBlock("span", { key: 0 }, [
                  createTextVNode(" Are you sure you want to delete your project? Once your project is deleted, all its resources and data will be moved to the trash. You may recover deleted projects and the data stored in them for a limited time before they are permanently deleted. Please enter your password to confirm you would like to delete your project, and if there is no action in the next " + toDisplayString($options.coolOffPeriod) + " days, the project will be deleted permanently. ", 1),
                  createVNode("div", { class: "mt-4" }, [
                    createVNode(_component_jet_input, {
                      ref: "password",
                      modelValue: $data.form.password,
                      "onUpdate:modelValue": ($event) => $data.form.password = $event,
                      type: "password",
                      class: "mt-1 block w-3/4",
                      placeholder: "Password",
                      onKeyup: withKeys($options.deleteProject, ["enter"])
                    }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
                    createVNode(_component_jet_input_error, {
                      message: $data.form.errors.password,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ])
                ])) : (openBlock(), createBlock("span", { key: 1 }, " You need to set your password first before deleting the project. "))
              ], 64)) : createCommentVNode("", true)
            ]),
            _: 2
          }, [
            !$data.loading ? {
              name: "footer",
              fn: withCtx(() => [
                createVNode(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                  default: withCtx(() => [
                    createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                $data.hasPassword ? (openBlock(), createBlock(_component_jet_danger_button, {
                  key: 0,
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  disabled: $data.form.processing,
                  onClick: $options.deleteProject
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Delete Project ")
                  ]),
                  _: 1
                }, 8, ["class", "disabled", "onClick"])) : createCommentVNode("", true)
              ]),
              key: "0"
            } : void 0
          ]), 1032, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1e = _sfc_main$1e.setup;
_sfc_main$1e.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Project/Partials/Delete.vue");
  return _sfc_setup$1e ? _sfc_setup$1e(props, ctx) : void 0;
};
const ProjectDelete = /* @__PURE__ */ _export_sfc(_sfc_main$1e, [["ssrRender", _sfc_ssrRender$1d]]);
const __vite_glob_0_33 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ProjectDelete
}, Symbol.toStringTag, { value: "Module" }));
const publishingOptions$1 = [
  {
    value: "viewer",
    title: "Viewer",
    description: "Anyone on the internet with this link can view",
    current: true
  },
  {
    value: "commentor",
    title: "Commentor",
    description: "Anyone on the internet with this link can comment",
    current: false
  },
  {
    value: "editor",
    title: "Editor",
    description: "Anyone on the internet with this link can edit (sign in required)",
    current: false
  }
];
const _sfc_main$1d = defineComponent({
  components: {
    Switch,
    SwitchGroup,
    SwitchLabel,
    JetSecondaryButton,
    JetButton,
    Dialog,
    DialogOverlay,
    DialogTitle,
    TransitionChild,
    // ColorPicker,
    JetActionMessage,
    JetInputError,
    XMarkIcon,
    ProjectActivity,
    TransitionRoot,
    LinkIcon,
    PlusSmallIcon,
    QuestionMarkCircleIcon,
    ExclamationCircleIcon,
    Listbox,
    ListboxButton,
    ListboxLabel,
    ListboxOption,
    ListboxOptions,
    Tab,
    TabGroup,
    TabList,
    TabPanel,
    TabPanels,
    ClipboardDocumentIcon,
    CheckIcon,
    ChevronDownIcon,
    SelectRich
    // VueTagsInput,
  },
  props: ["project", "role", "projectPermissions"],
  setup() {
    const activityDetailsElement = ref(null);
    return {
      activityDetailsElement,
      publishingOptions: publishingOptions$1
    };
  },
  data() {
    return {
      photoPreview: null,
      form: this.$inertia.form({
        _method: "PUT",
        name: this.project.name,
        description: this.project.description,
        error_message: null,
        team_id: this.project.team_id,
        owner_id: this.project.owner_id,
        color: this.project.color,
        starred: this.project.starred,
        access: this.project.access,
        access_type: this.project.access_type,
        is_public: this.project.is_public,
        license: null,
        license_id: null,
        tag: "",
        tags: [],
        doi: this.project.doi,
        tags_array: [],
        photo: null
      }),
      open: false,
      licenses: [],
      selectedAccessType: publishingOptions$1.filter(
        (option) => option.value == this.project.access_type
      )[0],
      linkAccess: this.project.access == "link",
      confirmPublicAccess: false
    };
  },
  computed: {
    canUpdateProject() {
      return this.projectPermissions ? this.projectPermissions.canUpdateProject : false;
    }
  },
  methods: {
    updateAccess(value) {
      if (this.canUpdateProject) {
        this.form.is_public = value;
      }
    },
    clearPhotoFileInput() {
      var _a;
      if ((_a = this.$refs.photo) == null ? void 0 : _a.value) {
        this.$refs.photo.value = null;
      }
    },
    selectNewPhoto() {
      this.$refs.photo.click();
    },
    updatePhotoPreview() {
      const photo = this.$refs.photo.files[0];
      if (!photo)
        return;
      const reader = new FileReader();
      reader.onload = (e2) => {
        this.photoPreview = e2.target.result;
      };
      reader.readAsDataURL(photo);
    },
    assignTags() {
      if (this.project) {
        let tags = [];
        this.project.tags.forEach((t4) => {
          tags.push({
            text: t4.name["en"]
          });
        });
        this.form.tags = tags;
      }
    },
    toggleDetails() {
      if (this.$page.props.licenses && this.$page.props.licenses.length > 0) {
        this.licenses = this.$page.props.licenses;
        this.form.license = this.licenses.find(
          (l2) => l2.id == this.project.license_id
        );
      } else {
        axios.get(route("licenses")).then((res) => {
          this.licenses = res.data;
          this.$page.props.licenses = res.data;
          this.form.license = this.licenses.find(
            (l2) => l2.id == this.project.license_id
          );
        });
      }
      this.open = !this.open;
      this.assignTags();
    },
    updateProject() {
      if (this.$refs.photo) {
        this.form.photo = this.$refs.photo.files[0];
      }
      this.form.owner_id = this.project.owner_id;
      this.form.team_id = this.project.team_id;
      if (this.form.license) {
        this.form.license_id = this.form.license.id;
      }
      if (this.linkAccess) {
        this.form.access = "link";
        this.form.access_type = this.selectedAccessType.value;
      } else {
        this.form.access = "restricted";
      }
      this.form.tags_array = this.form.tags.map((t4) => t4.text);
      if (this.form.tag != "") {
        let tags = this.form.tag.split(",");
        if (tags.length > 0) {
          this.form.tags_array = this.form.tags_array.concat(tags);
        }
      }
      this.form.tags_array = [...new Set(this.form.tags_array)];
      this.form.post(route("dashboard.project.update", this.project.id), {
        preserveScroll: true,
        onSuccess: () => {
          this.form.tag = "";
          this.open = false;
          this.clearPhotoFileInput();
          let stale = false;
          router$1.reload({ only: ["project"] });
          window.addEventListener("popstate", () => {
            stale = true;
          });
          Inertia.on("navigate", (event) => {
            const page = event.detail.page;
            if (stale) {
              Inertia.get(
                page.url,
                {},
                { replace: true, preserveState: false }
              );
            }
            stale = false;
          });
        },
        onError: (err) => {
        }
      });
    },
    toggleActivityDetails() {
      this.activityDetailsElement.toggleDetails();
    }
  }
});
function _sfc_ssrRender$1c(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_TransitionRoot = resolveComponent("TransitionRoot");
  const _component_Dialog = resolveComponent("Dialog");
  const _component_DialogOverlay = resolveComponent("DialogOverlay");
  const _component_TransitionChild = resolveComponent("TransitionChild");
  const _component_DialogTitle = resolveComponent("DialogTitle");
  const _component_XMarkIcon = resolveComponent("XMarkIcon");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_TabGroup = resolveComponent("TabGroup");
  const _component_TabList = resolveComponent("TabList");
  const _component_Tab = resolveComponent("Tab");
  const _component_TabPanels = resolveComponent("TabPanels");
  const _component_TabPanel = resolveComponent("TabPanel");
  const _component_vue_tags_input = resolveComponent("vue-tags-input");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  const _component_color_picker = resolveComponent("color-picker");
  const _component_ClipboardDocumentIcon = resolveComponent("ClipboardDocumentIcon");
  const _component_select_rich = resolveComponent("select-rich");
  const _component_QuestionMarkCircleIcon = resolveComponent("QuestionMarkCircleIcon");
  const _component_ExclamationCircleIcon = resolveComponent("ExclamationCircleIcon");
  const _component_project_activity = resolveComponent("project-activity");
  const _component_jet_action_message = resolveComponent("jet-action-message");
  const _component_jet_button = resolveComponent("jet-button");
  _push(ssrRenderComponent(_component_TransitionRoot, mergeProps({
    as: "template",
    show: _ctx.open
  }, _attrs), {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_Dialog, {
          as: "div",
          class: "fixed inset-0 z-50"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div class="absolute inset-0"${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_DialogOverlay, { class: "absolute inset-0" }, null, _parent3, _scopeId2));
              _push3(`<div class="fixed inset-y-0 pl-16 max-w-full right-0 flex"${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_TransitionChild, {
                as: "template",
                enter: "transform transition ease-in-out duration-500 sm:duration-700",
                "enter-from": "translate-x-full",
                "enter-to": "translate-x-0",
                leave: "transform transition ease-in-out duration-500 sm:duration-700",
                "leave-from": "translate-x-0",
                "leave-to": "translate-x-full"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<div class="w-screen max-w-2xl"${_scopeId3}><div class="h-full divide-y divide-gray-200 flex flex-col bg-white shadow-xl"${_scopeId3}><div class="flex-1 h-0 overflow-y-auto"${_scopeId3}><div class="py-6 px-4 sm:px-6" style="${ssrRenderStyle([
                      _ctx.project.color && _ctx.project.color != "" ? "background-color:" + _ctx.project.color : "background-color:rgb(75,75,75)"
                    ])}"${_scopeId3}><div class="flex items-center justify-between"${_scopeId3}>`);
                    _push4(ssrRenderComponent(_component_DialogTitle, { class: "text-lg font-medium text-white" }, {
                      default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`${ssrInterpolate(_ctx.project.name)}`);
                        } else {
                          return [
                            createTextVNode(toDisplayString(_ctx.project.name), 1)
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(`<div class="ml-3 h-7 flex items-center"${_scopeId3}><button type="button" class="rounded-md hover:text-black text-white"${_scopeId3}><span class="sr-only"${_scopeId3}>Close panel</span>`);
                    _push4(ssrRenderComponent(_component_XMarkIcon, {
                      class: "h-6 w-6",
                      "aria-hidden": "true"
                    }, null, _parent4, _scopeId3));
                    _push4(`</button></div></div></div><div class="flex-1 flex flex-col justify-between"${_scopeId3}><div class="px-4 divide-y divide-gray-200 sm:px-6"${_scopeId3}><div class="space-y-6 pt-6 pb-5"${_scopeId3}><div${_scopeId3}><label for="project-name" class="block text-sm font-medium text-gray-900 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId3}> Project name </label><div class="mt-1"${_scopeId3}><input id="project-name"${ssrRenderAttr("value", _ctx.form.name)} type="text"${ssrIncludeBooleanAttr(
                      !_ctx.canUpdateProject
                    ) ? " readonly" : ""} name="project-name" class="block w-full shadow-sm sm:text-sm focus:ring-gray-500 focus:border-gray-500 border-gray-300 rounded-md"${_scopeId3}></div>`);
                    _push4(ssrRenderComponent(_component_jet_input_error, {
                      message: _ctx.form.errors.name,
                      class: "mt-2"
                    }, null, _parent4, _scopeId3));
                    _push4(`</div><div${_scopeId3}><label for="description" class="block text-sm font-medium text-gray-900 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId3}> Description </label><div class="mt-1"${_scopeId3}>`);
                    _push4(ssrRenderComponent(_component_TabGroup, null, {
                      default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(ssrRenderComponent(_component_TabList, { class: "flex items-center" }, {
                            default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                              if (_push6) {
                                _push6(ssrRenderComponent(_component_Tab, { as: "template" }, {
                                  default: withCtx(({
                                    selected
                                  }, _push7, _parent7, _scopeId6) => {
                                    if (_push7) {
                                      _push7(`<button class="${ssrRenderClass([
                                        selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                        "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                      ])}"${_scopeId6}> Write </button>`);
                                    } else {
                                      return [
                                        createVNode("button", {
                                          class: [
                                            selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                            "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                          ]
                                        }, " Write ", 2)
                                      ];
                                    }
                                  }),
                                  _: 1
                                }, _parent6, _scopeId5));
                                _push6(ssrRenderComponent(_component_Tab, { as: "template" }, {
                                  default: withCtx(({
                                    selected
                                  }, _push7, _parent7, _scopeId6) => {
                                    if (_push7) {
                                      _push7(`<button class="${ssrRenderClass([
                                        selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                        "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                      ])}"${_scopeId6}> Preview </button>`);
                                    } else {
                                      return [
                                        createVNode("button", {
                                          class: [
                                            selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                            "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                          ]
                                        }, " Preview ", 2)
                                      ];
                                    }
                                  }),
                                  _: 1
                                }, _parent6, _scopeId5));
                              } else {
                                return [
                                  createVNode(_component_Tab, { as: "template" }, {
                                    default: withCtx(({
                                      selected
                                    }) => [
                                      createVNode("button", {
                                        class: [
                                          selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                          "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                        ]
                                      }, " Write ", 2)
                                    ]),
                                    _: 1
                                  }),
                                  createVNode(_component_Tab, { as: "template" }, {
                                    default: withCtx(({
                                      selected
                                    }) => [
                                      createVNode("button", {
                                        class: [
                                          selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                          "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                        ]
                                      }, " Preview ", 2)
                                    ]),
                                    _: 1
                                  })
                                ];
                              }
                            }),
                            _: 1
                          }, _parent5, _scopeId4));
                          _push5(ssrRenderComponent(_component_TabPanels, { class: "mt-2" }, {
                            default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                              if (_push6) {
                                _push6(ssrRenderComponent(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                  default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                    if (_push7) {
                                      _push7(`<label for="comment" class="sr-only"${_scopeId6}>Comment</label><div${_scopeId6}><textarea id="description"${ssrIncludeBooleanAttr(
                                        !_ctx.canUpdateProject
                                      ) ? " readonly" : ""} name="description" placeholder="Describe this project" rows="3" class="shadow-sm focus:ring-gray-500 focus:border-gray-500 block w-full sm:text-sm border-gray-300 rounded-md"${_scopeId6}>${ssrInterpolate(
                                        _ctx.form.description
                                      )}</textarea></div>`);
                                    } else {
                                      return [
                                        createVNode("label", {
                                          for: "comment",
                                          class: "sr-only"
                                        }, "Comment"),
                                        createVNode("div", null, [
                                          withDirectives(createVNode("textarea", {
                                            id: "description",
                                            "onUpdate:modelValue": ($event) => _ctx.form.description = $event,
                                            readonly: !_ctx.canUpdateProject,
                                            name: "description",
                                            placeholder: "Describe this project",
                                            rows: "3",
                                            class: "shadow-sm focus:ring-gray-500 focus:border-gray-500 block w-full sm:text-sm border-gray-300 rounded-md"
                                          }, null, 8, ["onUpdate:modelValue", "readonly"]), [
                                            [
                                              vModelText,
                                              _ctx.form.description
                                            ]
                                          ])
                                        ])
                                      ];
                                    }
                                  }),
                                  _: 1
                                }, _parent6, _scopeId5));
                                _push6(ssrRenderComponent(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                  default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                    if (_push7) {
                                      _push7(`<div class="border-b"${_scopeId6}><div class="mx-px mt-px px-3 pt-2 pb-12"${_scopeId6}>`);
                                      if (_ctx.form.description == "") {
                                        _push7(`<span class="text-gray-400 text-sm font-medium"${_scopeId6}> Nothing to preview </span>`);
                                      } else {
                                        _push7(`<span${_scopeId6}><div class="prose"${_scopeId6}>${_ctx.md(
                                          _ctx.form.description
                                        )}</div></span>`);
                                      }
                                      _push7(`</div></div>`);
                                    } else {
                                      return [
                                        createVNode("div", { class: "border-b" }, [
                                          createVNode("div", { class: "mx-px mt-px px-3 pt-2 pb-12" }, [
                                            _ctx.form.description == "" ? (openBlock(), createBlock("span", {
                                              key: 0,
                                              class: "text-gray-400 text-sm font-medium"
                                            }, " Nothing to preview ")) : (openBlock(), createBlock("span", { key: 1 }, [
                                              createVNode("div", {
                                                class: "prose",
                                                innerHTML: _ctx.md(
                                                  _ctx.form.description
                                                )
                                              }, null, 8, ["innerHTML"])
                                            ]))
                                          ])
                                        ])
                                      ];
                                    }
                                  }),
                                  _: 1
                                }, _parent6, _scopeId5));
                              } else {
                                return [
                                  createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                    default: withCtx(() => [
                                      createVNode("label", {
                                        for: "comment",
                                        class: "sr-only"
                                      }, "Comment"),
                                      createVNode("div", null, [
                                        withDirectives(createVNode("textarea", {
                                          id: "description",
                                          "onUpdate:modelValue": ($event) => _ctx.form.description = $event,
                                          readonly: !_ctx.canUpdateProject,
                                          name: "description",
                                          placeholder: "Describe this project",
                                          rows: "3",
                                          class: "shadow-sm focus:ring-gray-500 focus:border-gray-500 block w-full sm:text-sm border-gray-300 rounded-md"
                                        }, null, 8, ["onUpdate:modelValue", "readonly"]), [
                                          [
                                            vModelText,
                                            _ctx.form.description
                                          ]
                                        ])
                                      ])
                                    ]),
                                    _: 1
                                  }),
                                  createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                    default: withCtx(() => [
                                      createVNode("div", { class: "border-b" }, [
                                        createVNode("div", { class: "mx-px mt-px px-3 pt-2 pb-12" }, [
                                          _ctx.form.description == "" ? (openBlock(), createBlock("span", {
                                            key: 0,
                                            class: "text-gray-400 text-sm font-medium"
                                          }, " Nothing to preview ")) : (openBlock(), createBlock("span", { key: 1 }, [
                                            createVNode("div", {
                                              class: "prose",
                                              innerHTML: _ctx.md(
                                                _ctx.form.description
                                              )
                                            }, null, 8, ["innerHTML"])
                                          ]))
                                        ])
                                      ])
                                    ]),
                                    _: 1
                                  })
                                ];
                              }
                            }),
                            _: 1
                          }, _parent5, _scopeId4));
                        } else {
                          return [
                            createVNode(_component_TabList, { class: "flex items-center" }, {
                              default: withCtx(() => [
                                createVNode(_component_Tab, { as: "template" }, {
                                  default: withCtx(({
                                    selected
                                  }) => [
                                    createVNode("button", {
                                      class: [
                                        selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                        "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                      ]
                                    }, " Write ", 2)
                                  ]),
                                  _: 1
                                }),
                                createVNode(_component_Tab, { as: "template" }, {
                                  default: withCtx(({
                                    selected
                                  }) => [
                                    createVNode("button", {
                                      class: [
                                        selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                        "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                      ]
                                    }, " Preview ", 2)
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 1
                            }),
                            createVNode(_component_TabPanels, { class: "mt-2" }, {
                              default: withCtx(() => [
                                createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                  default: withCtx(() => [
                                    createVNode("label", {
                                      for: "comment",
                                      class: "sr-only"
                                    }, "Comment"),
                                    createVNode("div", null, [
                                      withDirectives(createVNode("textarea", {
                                        id: "description",
                                        "onUpdate:modelValue": ($event) => _ctx.form.description = $event,
                                        readonly: !_ctx.canUpdateProject,
                                        name: "description",
                                        placeholder: "Describe this project",
                                        rows: "3",
                                        class: "shadow-sm focus:ring-gray-500 focus:border-gray-500 block w-full sm:text-sm border-gray-300 rounded-md"
                                      }, null, 8, ["onUpdate:modelValue", "readonly"]), [
                                        [
                                          vModelText,
                                          _ctx.form.description
                                        ]
                                      ])
                                    ])
                                  ]),
                                  _: 1
                                }),
                                createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                  default: withCtx(() => [
                                    createVNode("div", { class: "border-b" }, [
                                      createVNode("div", { class: "mx-px mt-px px-3 pt-2 pb-12" }, [
                                        _ctx.form.description == "" ? (openBlock(), createBlock("span", {
                                          key: 0,
                                          class: "text-gray-400 text-sm font-medium"
                                        }, " Nothing to preview ")) : (openBlock(), createBlock("span", { key: 1 }, [
                                          createVNode("div", {
                                            class: "prose",
                                            innerHTML: _ctx.md(
                                              _ctx.form.description
                                            )
                                          }, null, 8, ["innerHTML"])
                                        ]))
                                      ])
                                    ])
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 1
                            })
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(`<label class="block text-sm font-medium text-gray-700"${_scopeId3}><small${_scopeId3}><svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-markdown v-align-bottom inline"${_scopeId3}><path fill-rule="evenodd" d="M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z"${_scopeId3}></path></svg> Styling with Markdown is supported</small></label>`);
                    _push4(ssrRenderComponent(_component_jet_input_error, {
                      message: _ctx.form.errors.description,
                      class: "mt-2"
                    }, null, _parent4, _scopeId3));
                    _push4(`</div></div><div class="mb-3"${_scopeId3}><label for="description" class="block text-sm font-medium text-gray-700"${_scopeId3}> Keywords </label><div${_scopeId3}>`);
                    _push4(ssrRenderComponent(_component_vue_tags_input, {
                      modelValue: _ctx.form.tag,
                      "onUpdate:modelValue": ($event) => _ctx.form.tag = $event,
                      placeholder: "Type a keyword or keywords separated by comma (,) and press enter",
                      separators: [
                        ";",
                        ","
                      ],
                      disabled: !_ctx.canUpdateProject,
                      "max-width": "100%",
                      tags: _ctx.form.tags,
                      onTagsChanged: (newTags) => _ctx.form.tags = newTags
                    }, null, _parent4, _scopeId3));
                    _push4(`</div></div>`);
                    if (_ctx.canUpdateProject) {
                      _push4(`<div${_scopeId3}><input type="file" class="hidden"${_scopeId3}><div style="${ssrRenderStyle(!_ctx.photoPreview ? null : { display: "none" })}" class="mt-2"${_scopeId3}><img${ssrRenderAttr(
                        "src",
                        _ctx.project.project_photo_url ? _ctx.project.project_photo_url : "https://via.placeholder.com/400x200"
                      )}${ssrRenderAttr("alt", _ctx.project.name)} class="h-24 w-72 rounded-md object-cover"${_scopeId3}></div><div style="${ssrRenderStyle(_ctx.photoPreview ? null : { display: "none" })}" class="mt-2"${_scopeId3}><span class="block h-24 w-72 rounded" style="${ssrRenderStyle(
                        "background-size: cover; background-repeat: no-repeat; background-position: center center; background-image: url('" + _ctx.photoPreview + "');"
                      )}"${_scopeId3}></span></div>`);
                      _push4(ssrRenderComponent(_component_jet_secondary_button, {
                        class: "mt-2 mr-2",
                        type: "button",
                        onClick: _ctx.selectNewPhoto
                      }, {
                        default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(` Select A New Photo `);
                          } else {
                            return [
                              createTextVNode(" Select A New Photo ")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent4, _scopeId3));
                      _push4(`</div>`);
                    } else {
                      _push4(`<!---->`);
                    }
                    if (_ctx.canUpdateProject) {
                      _push4(`<div${_scopeId3}><label for="study-name" class="block text-sm font-medium text-gray-900"${_scopeId3}> Color </label>`);
                      _push4(ssrRenderComponent(_component_color_picker, {
                        pureColor: _ctx.form.color,
                        "onUpdate:pureColor": ($event) => _ctx.form.color = $event
                      }, null, _parent4, _scopeId3));
                      _push4(`</div>`);
                    } else {
                      _push4(`<!---->`);
                    }
                    _push4(`<fieldset${_scopeId3}><legend class="text-sm font-medium text-gray-900"${_scopeId3}> Privacy </legend><div class="mt-2 space-y-5"${_scopeId3}><div class="relative flex items-start"${_scopeId3}><div class="absolute flex items-center h-5"${_scopeId3}><input id="privacy-private-to-project"${ssrIncludeBooleanAttr(
                      _ctx.form.is_public === false
                    ) ? " checked" : ""}${ssrIncludeBooleanAttr(
                      !_ctx.canUpdateProject
                    ) ? " disabled" : ""} name="privacy" aria-describedby="privacy-private-to-project-description" type="radio" class="focus:ring-gray-500 h-4 w-4 text-gray-600 border-gray-300"${_scopeId3}></div><div class="pl-7 text-sm"${_scopeId3}><label for="privacy-private-to-project" class="font-medium text-gray-900"${_scopeId3}> Private to project members </label><p id="privacy-private-to-project-description" class="text-gray-500"${_scopeId3}> Only members of this project would be able to access. </p></div></div></div></fieldset></div><div${_scopeId3}>`);
                    if (_ctx.form.is_public) {
                      _push4(`<div${_scopeId3}><label for="email" class="block text-sm font-medium text-gray-700"${_scopeId3}>Public URL</label><div class="mt-1 flex rounded-md shadow-sm"${_scopeId3}><div class="relative flex items-stretch flex-grow focus-within:z-10"${_scopeId3}><input id="projectPublicURLCopy"${ssrRenderAttr(
                        "value",
                        _ctx.project.public_url
                      )}${ssrIncludeBooleanAttr(true) ? " readonly" : ""} type="text" class="rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300"${_scopeId3}></div><button type="button" class="-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500"${_scopeId3}><span${_scopeId3}>`);
                      _push4(ssrRenderComponent(_component_ClipboardDocumentIcon, {
                        class: "h-5 w-5",
                        "aria-hidden": "true"
                      }, null, _parent4, _scopeId3));
                      _push4(`</span></button></div></div>`);
                    } else {
                      _push4(`<!---->`);
                    }
                    if (_ctx.form.doi) {
                      _push4(`<div class="mt-2"${_scopeId3}><label for="email" class="block text-sm font-medium text-gray-700"${_scopeId3}>DOI</label><div class="mt-1 flex rounded-md shadow-sm"${_scopeId3}><div class="relative flex items-stretch flex-grow focus-within:z-10"${_scopeId3}><input id="projectDOICopy"${ssrRenderAttr(
                        "value",
                        _ctx.project.doi
                      )}${ssrIncludeBooleanAttr(true) ? " readonly" : ""} type="text" class="rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300"${_scopeId3}></div><button type="button" class="-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500"${_scopeId3}><span${_scopeId3}>`);
                      _push4(ssrRenderComponent(_component_ClipboardDocumentIcon, {
                        class: "h-5 w-5",
                        "aria-hidden": "true"
                      }, null, _parent4, _scopeId3));
                      _push4(`</span></button></div></div>`);
                    } else {
                      _push4(`<!---->`);
                    }
                    _push4(`<div${_scopeId3}><div class="mt-6 grid grid-cols-1 gap-x-4 sm:grid-cols-1"${_scopeId3}>`);
                    if (_ctx.licenses) {
                      _push4(`<div${_scopeId3}><span class="float-right text-xs cursor-pointer hover:text-blue-700 mt-2"${_scopeId3}><a target="_blank" href="https://docs.nmrxiv.org/submission-guides/licenses.html"${_scopeId3}>How to choose the right license?</a></span>`);
                      _push4(ssrRenderComponent(_component_select_rich, {
                        selected: _ctx.form.license,
                        "onUpdate:selected": ($event) => _ctx.form.license = $event,
                        disabled: !_ctx.canUpdateProject,
                        label: "License",
                        items: _ctx.licenses
                      }, null, _parent4, _scopeId3));
                      _push4(`</div>`);
                    } else {
                      _push4(`<!---->`);
                    }
                    _push4(`</div>`);
                    _push4(ssrRenderComponent(_component_jet_input_error, {
                      message: _ctx.form.errors.license,
                      class: "mt-2"
                    }, null, _parent4, _scopeId3));
                    _push4(`</div><div class="mt-6 flex text-sm"${_scopeId3}><a target="_blank" href="https://docs.nmrxiv.org/submission-guides/sharing.html" class="group inline-flex items-center text-gray-500 hover:text-gray-900"${_scopeId3}>`);
                    _push4(ssrRenderComponent(_component_QuestionMarkCircleIcon, {
                      class: "h-5 w-5 text-gray-400 group-hover:text-gray-500",
                      "aria-hidden": "true"
                    }, null, _parent4, _scopeId3));
                    _push4(`<span class="ml-2"${_scopeId3}> Learn more about sharing </span></a></div><div class="mt-4 flex text-sm mb-6"${_scopeId3}><a class="cursor-pointer group inline-flex items-center text-gray-500 hover:text-gray-900"${_scopeId3}>`);
                    _push4(ssrRenderComponent(_component_ExclamationCircleIcon, {
                      class: "h-5 w-5 text-gray-400 group-hover:text-gray-500",
                      "aria-hidden": "true"
                    }, null, _parent4, _scopeId3));
                    _push4(`<span class="ml-2"${_scopeId3}> Activity </span></a></div>`);
                    _push4(ssrRenderComponent(_component_project_activity, {
                      ref: "activityDetailsElement",
                      project: _ctx.project
                    }, null, _parent4, _scopeId3));
                    _push4(`</div></div></div></div>`);
                    if (!_ctx.form.is_public) {
                      _push4(`<div class="flex-shrink-0 px-4 py-4 flex justify-end"${_scopeId3}>`);
                      _push4(ssrRenderComponent(_component_jet_action_message, {
                        on: _ctx.form.recentlySuccessful,
                        class: "mr-3 py-2 text-green-200"
                      }, {
                        default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(` Saved. `);
                          } else {
                            return [
                              createTextVNode(" Saved. ")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent4, _scopeId3));
                      _push4(ssrRenderComponent(_component_jet_secondary_button, {
                        type: "button",
                        class: "bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                        onClick: ($event) => _ctx.open = false
                      }, {
                        default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(` Cancel `);
                          } else {
                            return [
                              createTextVNode(" Cancel ")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent4, _scopeId3));
                      if (_ctx.canUpdateProject) {
                        _push4(ssrRenderComponent(_component_jet_button, {
                          type: "submit",
                          class: "ml-4 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-gray-600 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                          onClick: _ctx.updateProject
                        }, {
                          default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(` Save `);
                            } else {
                              return [
                                createTextVNode(" Save ")
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                      } else {
                        _push4(`<!---->`);
                      }
                      _push4(`</div>`);
                    } else {
                      _push4(`<!---->`);
                    }
                    if (_ctx.form.is_public && _ctx.canUpdateProject) {
                      _push4(`<div class="flex-shrink-0 px-4 py-4 flex justify-end"${_scopeId3}><div class="flex items-center h-5"${_scopeId3}><input id="confirm"${ssrIncludeBooleanAttr(Array.isArray(_ctx.confirmPublicAccess) ? ssrLooseContain(_ctx.confirmPublicAccess, null) : _ctx.confirmPublicAccess) ? " checked" : ""} aria-describedby="confirm-description" name="confirm" type="checkbox" class="focus:ring-teal-500 h-4 w-4 text-teal-600 border-gray-300 rounded"${_scopeId3}></div><div class="ml-3 text-xs"${_scopeId3}><label for="confirm" class="font-small text-red-700"${_scopeId3}>I understand, if the project is made public then all the underlying studies and dataset will also be made public and this version is no longer editable. </label></div>`);
                      _push4(ssrRenderComponent(_component_jet_secondary_button, {
                        type: "button",
                        class: "bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                        onClick: ($event) => _ctx.open = false
                      }, {
                        default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(` Cancel `);
                          } else {
                            return [
                              createTextVNode(" Cancel ")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent4, _scopeId3));
                      _push4(ssrRenderComponent(_component_jet_button, {
                        type: "submit",
                        disabled: !_ctx.confirmPublicAccess,
                        class: "ml-4 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-gray-600 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                        onClick: _ctx.updateProject
                      }, {
                        default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(` Save `);
                          } else {
                            return [
                              createTextVNode(" Save ")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent4, _scopeId3));
                      _push4(`</div>`);
                    } else {
                      _push4(`<!---->`);
                    }
                    _push4(`</div></div>`);
                  } else {
                    return [
                      createVNode("div", { class: "w-screen max-w-2xl" }, [
                        createVNode("div", { class: "h-full divide-y divide-gray-200 flex flex-col bg-white shadow-xl" }, [
                          createVNode("div", { class: "flex-1 h-0 overflow-y-auto" }, [
                            createVNode("div", {
                              class: "py-6 px-4 sm:px-6",
                              style: [
                                _ctx.project.color && _ctx.project.color != "" ? "background-color:" + _ctx.project.color : "background-color:rgb(75,75,75)"
                              ]
                            }, [
                              createVNode("div", { class: "flex items-center justify-between" }, [
                                createVNode(_component_DialogTitle, { class: "text-lg font-medium text-white" }, {
                                  default: withCtx(() => [
                                    createTextVNode(toDisplayString(_ctx.project.name), 1)
                                  ]),
                                  _: 1
                                }),
                                createVNode("div", { class: "ml-3 h-7 flex items-center" }, [
                                  createVNode("button", {
                                    type: "button",
                                    class: "rounded-md hover:text-black text-white",
                                    onClick: ($event) => _ctx.open = false
                                  }, [
                                    createVNode("span", { class: "sr-only" }, "Close panel"),
                                    createVNode(_component_XMarkIcon, {
                                      class: "h-6 w-6",
                                      "aria-hidden": "true"
                                    })
                                  ], 8, ["onClick"])
                                ])
                              ])
                            ], 4),
                            createVNode("div", { class: "flex-1 flex flex-col justify-between" }, [
                              createVNode("div", { class: "px-4 divide-y divide-gray-200 sm:px-6" }, [
                                createVNode("div", { class: "space-y-6 pt-6 pb-5" }, [
                                  createVNode("div", null, [
                                    createVNode("label", {
                                      for: "project-name",
                                      class: "block text-sm font-medium text-gray-900 after:content-['*'] after:ml-0.5 after:text-red-500"
                                    }, " Project name "),
                                    createVNode("div", { class: "mt-1" }, [
                                      withDirectives(createVNode("input", {
                                        id: "project-name",
                                        "onUpdate:modelValue": ($event) => _ctx.form.name = $event,
                                        type: "text",
                                        readonly: !_ctx.canUpdateProject,
                                        name: "project-name",
                                        class: "block w-full shadow-sm sm:text-sm focus:ring-gray-500 focus:border-gray-500 border-gray-300 rounded-md"
                                      }, null, 8, ["onUpdate:modelValue", "readonly"]), [
                                        [vModelText, _ctx.form.name]
                                      ])
                                    ]),
                                    createVNode(_component_jet_input_error, {
                                      message: _ctx.form.errors.name,
                                      class: "mt-2"
                                    }, null, 8, ["message"])
                                  ]),
                                  createVNode("div", null, [
                                    createVNode("label", {
                                      for: "description",
                                      class: "block text-sm font-medium text-gray-900 after:content-['*'] after:ml-0.5 after:text-red-500"
                                    }, " Description "),
                                    createVNode("div", { class: "mt-1" }, [
                                      createVNode(_component_TabGroup, null, {
                                        default: withCtx(() => [
                                          createVNode(_component_TabList, { class: "flex items-center" }, {
                                            default: withCtx(() => [
                                              createVNode(_component_Tab, { as: "template" }, {
                                                default: withCtx(({
                                                  selected
                                                }) => [
                                                  createVNode("button", {
                                                    class: [
                                                      selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                                      "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                                    ]
                                                  }, " Write ", 2)
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(_component_Tab, { as: "template" }, {
                                                default: withCtx(({
                                                  selected
                                                }) => [
                                                  createVNode("button", {
                                                    class: [
                                                      selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                                      "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                                    ]
                                                  }, " Preview ", 2)
                                                ]),
                                                _: 1
                                              })
                                            ]),
                                            _: 1
                                          }),
                                          createVNode(_component_TabPanels, { class: "mt-2" }, {
                                            default: withCtx(() => [
                                              createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                                default: withCtx(() => [
                                                  createVNode("label", {
                                                    for: "comment",
                                                    class: "sr-only"
                                                  }, "Comment"),
                                                  createVNode("div", null, [
                                                    withDirectives(createVNode("textarea", {
                                                      id: "description",
                                                      "onUpdate:modelValue": ($event) => _ctx.form.description = $event,
                                                      readonly: !_ctx.canUpdateProject,
                                                      name: "description",
                                                      placeholder: "Describe this project",
                                                      rows: "3",
                                                      class: "shadow-sm focus:ring-gray-500 focus:border-gray-500 block w-full sm:text-sm border-gray-300 rounded-md"
                                                    }, null, 8, ["onUpdate:modelValue", "readonly"]), [
                                                      [
                                                        vModelText,
                                                        _ctx.form.description
                                                      ]
                                                    ])
                                                  ])
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                                default: withCtx(() => [
                                                  createVNode("div", { class: "border-b" }, [
                                                    createVNode("div", { class: "mx-px mt-px px-3 pt-2 pb-12" }, [
                                                      _ctx.form.description == "" ? (openBlock(), createBlock("span", {
                                                        key: 0,
                                                        class: "text-gray-400 text-sm font-medium"
                                                      }, " Nothing to preview ")) : (openBlock(), createBlock("span", { key: 1 }, [
                                                        createVNode("div", {
                                                          class: "prose",
                                                          innerHTML: _ctx.md(
                                                            _ctx.form.description
                                                          )
                                                        }, null, 8, ["innerHTML"])
                                                      ]))
                                                    ])
                                                  ])
                                                ]),
                                                _: 1
                                              })
                                            ]),
                                            _: 1
                                          })
                                        ]),
                                        _: 1
                                      }),
                                      createVNode("label", { class: "block text-sm font-medium text-gray-700" }, [
                                        createVNode("small", null, [
                                          (openBlock(), createBlock("svg", {
                                            "aria-hidden": "true",
                                            height: "16",
                                            viewBox: "0 0 16 16",
                                            version: "1.1",
                                            width: "16",
                                            "data-view-component": "true",
                                            class: "octicon octicon-markdown v-align-bottom inline"
                                          }, [
                                            createVNode("path", {
                                              "fill-rule": "evenodd",
                                              d: "M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z"
                                            })
                                          ])),
                                          createTextVNode(" Styling with Markdown is supported")
                                        ])
                                      ]),
                                      createVNode(_component_jet_input_error, {
                                        message: _ctx.form.errors.description,
                                        class: "mt-2"
                                      }, null, 8, ["message"])
                                    ])
                                  ]),
                                  createVNode("div", { class: "mb-3" }, [
                                    createVNode("label", {
                                      for: "description",
                                      class: "block text-sm font-medium text-gray-700"
                                    }, " Keywords "),
                                    createVNode("div", null, [
                                      createVNode(_component_vue_tags_input, {
                                        modelValue: _ctx.form.tag,
                                        "onUpdate:modelValue": ($event) => _ctx.form.tag = $event,
                                        placeholder: "Type a keyword or keywords separated by comma (,) and press enter",
                                        separators: [
                                          ";",
                                          ","
                                        ],
                                        disabled: !_ctx.canUpdateProject,
                                        "max-width": "100%",
                                        tags: _ctx.form.tags,
                                        onTagsChanged: (newTags) => _ctx.form.tags = newTags
                                      }, null, 8, ["modelValue", "onUpdate:modelValue", "disabled", "tags", "onTagsChanged"])
                                    ])
                                  ]),
                                  _ctx.canUpdateProject ? (openBlock(), createBlock("div", { key: 0 }, [
                                    createVNode("input", {
                                      ref: "photo",
                                      type: "file",
                                      class: "hidden",
                                      onChange: _ctx.updatePhotoPreview
                                    }, null, 40, ["onChange"]),
                                    withDirectives(createVNode("div", { class: "mt-2" }, [
                                      createVNode("img", {
                                        src: _ctx.project.project_photo_url ? _ctx.project.project_photo_url : "https://via.placeholder.com/400x200",
                                        alt: _ctx.project.name,
                                        class: "h-24 w-72 rounded-md object-cover"
                                      }, null, 8, ["src", "alt"])
                                    ], 512), [
                                      [vShow, !_ctx.photoPreview]
                                    ]),
                                    withDirectives(createVNode("div", { class: "mt-2" }, [
                                      createVNode("span", {
                                        class: "block h-24 w-72 rounded",
                                        style: "background-size: cover; background-repeat: no-repeat; background-position: center center; background-image: url('" + _ctx.photoPreview + "');"
                                      }, null, 4)
                                    ], 512), [
                                      [vShow, _ctx.photoPreview]
                                    ]),
                                    createVNode(_component_jet_secondary_button, {
                                      class: "mt-2 mr-2",
                                      type: "button",
                                      onClick: withModifiers(
                                        _ctx.selectNewPhoto,
                                        ["prevent"]
                                      )
                                    }, {
                                      default: withCtx(() => [
                                        createTextVNode(" Select A New Photo ")
                                      ]),
                                      _: 1
                                    }, 8, ["onClick"])
                                  ])) : createCommentVNode("", true),
                                  _ctx.canUpdateProject ? (openBlock(), createBlock("div", { key: 1 }, [
                                    createVNode("label", {
                                      for: "study-name",
                                      class: "block text-sm font-medium text-gray-900"
                                    }, " Color "),
                                    createVNode(_component_color_picker, {
                                      pureColor: _ctx.form.color,
                                      "onUpdate:pureColor": ($event) => _ctx.form.color = $event
                                    }, null, 8, ["pureColor", "onUpdate:pureColor"])
                                  ])) : createCommentVNode("", true),
                                  createVNode("fieldset", null, [
                                    createVNode("legend", { class: "text-sm font-medium text-gray-900" }, " Privacy "),
                                    createVNode("div", { class: "mt-2 space-y-5" }, [
                                      createVNode("div", {
                                        class: "relative flex items-start",
                                        onClick: ($event) => _ctx.updateAccess(
                                          false
                                        )
                                      }, [
                                        createVNode("div", { class: "absolute flex items-center h-5" }, [
                                          createVNode("input", {
                                            id: "privacy-private-to-project",
                                            checked: _ctx.form.is_public === false,
                                            disabled: !_ctx.canUpdateProject,
                                            name: "privacy",
                                            "aria-describedby": "privacy-private-to-project-description",
                                            type: "radio",
                                            class: "focus:ring-gray-500 h-4 w-4 text-gray-600 border-gray-300"
                                          }, null, 8, ["checked", "disabled"])
                                        ]),
                                        createVNode("div", { class: "pl-7 text-sm" }, [
                                          createVNode("label", {
                                            for: "privacy-private-to-project",
                                            class: "font-medium text-gray-900"
                                          }, " Private to project members "),
                                          createVNode("p", {
                                            id: "privacy-private-to-project-description",
                                            class: "text-gray-500"
                                          }, " Only members of this project would be able to access. ")
                                        ])
                                      ], 8, ["onClick"])
                                    ])
                                  ])
                                ]),
                                createVNode("div", null, [
                                  _ctx.form.is_public ? (openBlock(), createBlock("div", { key: 0 }, [
                                    createVNode("label", {
                                      for: "email",
                                      class: "block text-sm font-medium text-gray-700"
                                    }, "Public URL"),
                                    createVNode("div", { class: "mt-1 flex rounded-md shadow-sm" }, [
                                      createVNode("div", { class: "relative flex items-stretch flex-grow focus-within:z-10" }, [
                                        withDirectives(createVNode("input", {
                                          id: "projectPublicURLCopy",
                                          "onUpdate:modelValue": ($event) => _ctx.project.public_url = $event,
                                          readonly: true,
                                          type: "text",
                                          class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                          onFocus: ($event) => $event.target.select()
                                        }, null, 40, ["onUpdate:modelValue", "onFocus"]), [
                                          [
                                            vModelText,
                                            _ctx.project.public_url
                                          ]
                                        ])
                                      ]),
                                      createVNode("button", {
                                        type: "button",
                                        class: "-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                        onClick: ($event) => _ctx.copyToClipboard(
                                          _ctx.project.public_url,
                                          "projectPublicURLCopy"
                                        )
                                      }, [
                                        createVNode("span", null, [
                                          createVNode(_component_ClipboardDocumentIcon, {
                                            class: "h-5 w-5",
                                            "aria-hidden": "true"
                                          })
                                        ])
                                      ], 8, ["onClick"])
                                    ])
                                  ])) : createCommentVNode("", true),
                                  _ctx.form.doi ? (openBlock(), createBlock("div", {
                                    key: 1,
                                    class: "mt-2"
                                  }, [
                                    createVNode("label", {
                                      for: "email",
                                      class: "block text-sm font-medium text-gray-700"
                                    }, "DOI"),
                                    createVNode("div", { class: "mt-1 flex rounded-md shadow-sm" }, [
                                      createVNode("div", { class: "relative flex items-stretch flex-grow focus-within:z-10" }, [
                                        withDirectives(createVNode("input", {
                                          id: "projectDOICopy",
                                          "onUpdate:modelValue": ($event) => _ctx.project.doi = $event,
                                          readonly: true,
                                          type: "text",
                                          class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                          onFocus: ($event) => $event.target.select()
                                        }, null, 40, ["onUpdate:modelValue", "onFocus"]), [
                                          [
                                            vModelText,
                                            _ctx.project.doi
                                          ]
                                        ])
                                      ]),
                                      createVNode("button", {
                                        type: "button",
                                        class: "-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                        onClick: ($event) => _ctx.copyToClipboard(
                                          _ctx.project.doi,
                                          "projectDOICopy"
                                        )
                                      }, [
                                        createVNode("span", null, [
                                          createVNode(_component_ClipboardDocumentIcon, {
                                            class: "h-5 w-5",
                                            "aria-hidden": "true"
                                          })
                                        ])
                                      ], 8, ["onClick"])
                                    ])
                                  ])) : createCommentVNode("", true),
                                  createVNode("div", null, [
                                    createVNode("div", { class: "mt-6 grid grid-cols-1 gap-x-4 sm:grid-cols-1" }, [
                                      _ctx.licenses ? (openBlock(), createBlock("div", { key: 0 }, [
                                        createVNode("span", { class: "float-right text-xs cursor-pointer hover:text-blue-700 mt-2" }, [
                                          createVNode("a", {
                                            target: "_blank",
                                            href: "https://docs.nmrxiv.org/submission-guides/licenses.html"
                                          }, "How to choose the right license?")
                                        ]),
                                        createVNode(_component_select_rich, {
                                          selected: _ctx.form.license,
                                          "onUpdate:selected": ($event) => _ctx.form.license = $event,
                                          disabled: !_ctx.canUpdateProject,
                                          label: "License",
                                          items: _ctx.licenses
                                        }, null, 8, ["selected", "onUpdate:selected", "disabled", "items"])
                                      ])) : createCommentVNode("", true)
                                    ]),
                                    createVNode(_component_jet_input_error, {
                                      message: _ctx.form.errors.license,
                                      class: "mt-2"
                                    }, null, 8, ["message"])
                                  ]),
                                  createVNode("div", { class: "mt-6 flex text-sm" }, [
                                    createVNode("a", {
                                      target: "_blank",
                                      href: "https://docs.nmrxiv.org/submission-guides/sharing.html",
                                      class: "group inline-flex items-center text-gray-500 hover:text-gray-900"
                                    }, [
                                      createVNode(_component_QuestionMarkCircleIcon, {
                                        class: "h-5 w-5 text-gray-400 group-hover:text-gray-500",
                                        "aria-hidden": "true"
                                      }),
                                      createVNode("span", { class: "ml-2" }, " Learn more about sharing ")
                                    ])
                                  ]),
                                  createVNode("div", { class: "mt-4 flex text-sm mb-6" }, [
                                    createVNode("a", {
                                      class: "cursor-pointer group inline-flex items-center text-gray-500 hover:text-gray-900",
                                      onClick: _ctx.toggleActivityDetails
                                    }, [
                                      createVNode(_component_ExclamationCircleIcon, {
                                        class: "h-5 w-5 text-gray-400 group-hover:text-gray-500",
                                        "aria-hidden": "true"
                                      }),
                                      createVNode("span", { class: "ml-2" }, " Activity ")
                                    ], 8, ["onClick"])
                                  ]),
                                  createVNode(_component_project_activity, {
                                    ref: "activityDetailsElement",
                                    project: _ctx.project
                                  }, null, 8, ["project"])
                                ])
                              ])
                            ])
                          ]),
                          !_ctx.form.is_public ? (openBlock(), createBlock("div", {
                            key: 0,
                            class: "flex-shrink-0 px-4 py-4 flex justify-end"
                          }, [
                            createVNode(_component_jet_action_message, {
                              on: _ctx.form.recentlySuccessful,
                              class: "mr-3 py-2 text-green-200"
                            }, {
                              default: withCtx(() => [
                                createTextVNode(" Saved. ")
                              ]),
                              _: 1
                            }, 8, ["on"]),
                            createVNode(_component_jet_secondary_button, {
                              type: "button",
                              class: "bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                              onClick: ($event) => _ctx.open = false
                            }, {
                              default: withCtx(() => [
                                createTextVNode(" Cancel ")
                              ]),
                              _: 1
                            }, 8, ["onClick"]),
                            _ctx.canUpdateProject ? (openBlock(), createBlock(_component_jet_button, {
                              key: 0,
                              type: "submit",
                              class: "ml-4 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-gray-600 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                              onClick: _ctx.updateProject
                            }, {
                              default: withCtx(() => [
                                createTextVNode(" Save ")
                              ]),
                              _: 1
                            }, 8, ["onClick"])) : createCommentVNode("", true)
                          ])) : createCommentVNode("", true),
                          _ctx.form.is_public && _ctx.canUpdateProject ? (openBlock(), createBlock("div", {
                            key: 1,
                            class: "flex-shrink-0 px-4 py-4 flex justify-end"
                          }, [
                            createVNode("div", { class: "flex items-center h-5" }, [
                              withDirectives(createVNode("input", {
                                id: "confirm",
                                "onUpdate:modelValue": ($event) => _ctx.confirmPublicAccess = $event,
                                "aria-describedby": "confirm-description",
                                name: "confirm",
                                type: "checkbox",
                                class: "focus:ring-teal-500 h-4 w-4 text-teal-600 border-gray-300 rounded"
                              }, null, 8, ["onUpdate:modelValue"]), [
                                [vModelCheckbox, _ctx.confirmPublicAccess]
                              ])
                            ]),
                            createVNode("div", { class: "ml-3 text-xs" }, [
                              createVNode("label", {
                                for: "confirm",
                                class: "font-small text-red-700"
                              }, "I understand, if the project is made public then all the underlying studies and dataset will also be made public and this version is no longer editable. ")
                            ]),
                            createVNode(_component_jet_secondary_button, {
                              type: "button",
                              class: "bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                              onClick: ($event) => _ctx.open = false
                            }, {
                              default: withCtx(() => [
                                createTextVNode(" Cancel ")
                              ]),
                              _: 1
                            }, 8, ["onClick"]),
                            createVNode(_component_jet_button, {
                              type: "submit",
                              disabled: !_ctx.confirmPublicAccess,
                              class: "ml-4 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-gray-600 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                              onClick: _ctx.updateProject
                            }, {
                              default: withCtx(() => [
                                createTextVNode(" Save ")
                              ]),
                              _: 1
                            }, 8, ["disabled", "onClick"])
                          ])) : createCommentVNode("", true)
                        ])
                      ])
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</div></div>`);
            } else {
              return [
                createVNode("div", { class: "absolute inset-0" }, [
                  createVNode(_component_DialogOverlay, { class: "absolute inset-0" }),
                  createVNode("div", { class: "fixed inset-y-0 pl-16 max-w-full right-0 flex" }, [
                    createVNode(_component_TransitionChild, {
                      as: "template",
                      enter: "transform transition ease-in-out duration-500 sm:duration-700",
                      "enter-from": "translate-x-full",
                      "enter-to": "translate-x-0",
                      leave: "transform transition ease-in-out duration-500 sm:duration-700",
                      "leave-from": "translate-x-0",
                      "leave-to": "translate-x-full"
                    }, {
                      default: withCtx(() => [
                        createVNode("div", { class: "w-screen max-w-2xl" }, [
                          createVNode("div", { class: "h-full divide-y divide-gray-200 flex flex-col bg-white shadow-xl" }, [
                            createVNode("div", { class: "flex-1 h-0 overflow-y-auto" }, [
                              createVNode("div", {
                                class: "py-6 px-4 sm:px-6",
                                style: [
                                  _ctx.project.color && _ctx.project.color != "" ? "background-color:" + _ctx.project.color : "background-color:rgb(75,75,75)"
                                ]
                              }, [
                                createVNode("div", { class: "flex items-center justify-between" }, [
                                  createVNode(_component_DialogTitle, { class: "text-lg font-medium text-white" }, {
                                    default: withCtx(() => [
                                      createTextVNode(toDisplayString(_ctx.project.name), 1)
                                    ]),
                                    _: 1
                                  }),
                                  createVNode("div", { class: "ml-3 h-7 flex items-center" }, [
                                    createVNode("button", {
                                      type: "button",
                                      class: "rounded-md hover:text-black text-white",
                                      onClick: ($event) => _ctx.open = false
                                    }, [
                                      createVNode("span", { class: "sr-only" }, "Close panel"),
                                      createVNode(_component_XMarkIcon, {
                                        class: "h-6 w-6",
                                        "aria-hidden": "true"
                                      })
                                    ], 8, ["onClick"])
                                  ])
                                ])
                              ], 4),
                              createVNode("div", { class: "flex-1 flex flex-col justify-between" }, [
                                createVNode("div", { class: "px-4 divide-y divide-gray-200 sm:px-6" }, [
                                  createVNode("div", { class: "space-y-6 pt-6 pb-5" }, [
                                    createVNode("div", null, [
                                      createVNode("label", {
                                        for: "project-name",
                                        class: "block text-sm font-medium text-gray-900 after:content-['*'] after:ml-0.5 after:text-red-500"
                                      }, " Project name "),
                                      createVNode("div", { class: "mt-1" }, [
                                        withDirectives(createVNode("input", {
                                          id: "project-name",
                                          "onUpdate:modelValue": ($event) => _ctx.form.name = $event,
                                          type: "text",
                                          readonly: !_ctx.canUpdateProject,
                                          name: "project-name",
                                          class: "block w-full shadow-sm sm:text-sm focus:ring-gray-500 focus:border-gray-500 border-gray-300 rounded-md"
                                        }, null, 8, ["onUpdate:modelValue", "readonly"]), [
                                          [vModelText, _ctx.form.name]
                                        ])
                                      ]),
                                      createVNode(_component_jet_input_error, {
                                        message: _ctx.form.errors.name,
                                        class: "mt-2"
                                      }, null, 8, ["message"])
                                    ]),
                                    createVNode("div", null, [
                                      createVNode("label", {
                                        for: "description",
                                        class: "block text-sm font-medium text-gray-900 after:content-['*'] after:ml-0.5 after:text-red-500"
                                      }, " Description "),
                                      createVNode("div", { class: "mt-1" }, [
                                        createVNode(_component_TabGroup, null, {
                                          default: withCtx(() => [
                                            createVNode(_component_TabList, { class: "flex items-center" }, {
                                              default: withCtx(() => [
                                                createVNode(_component_Tab, { as: "template" }, {
                                                  default: withCtx(({
                                                    selected
                                                  }) => [
                                                    createVNode("button", {
                                                      class: [
                                                        selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                                        "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                                      ]
                                                    }, " Write ", 2)
                                                  ]),
                                                  _: 1
                                                }),
                                                createVNode(_component_Tab, { as: "template" }, {
                                                  default: withCtx(({
                                                    selected
                                                  }) => [
                                                    createVNode("button", {
                                                      class: [
                                                        selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                                        "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                                      ]
                                                    }, " Preview ", 2)
                                                  ]),
                                                  _: 1
                                                })
                                              ]),
                                              _: 1
                                            }),
                                            createVNode(_component_TabPanels, { class: "mt-2" }, {
                                              default: withCtx(() => [
                                                createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                                  default: withCtx(() => [
                                                    createVNode("label", {
                                                      for: "comment",
                                                      class: "sr-only"
                                                    }, "Comment"),
                                                    createVNode("div", null, [
                                                      withDirectives(createVNode("textarea", {
                                                        id: "description",
                                                        "onUpdate:modelValue": ($event) => _ctx.form.description = $event,
                                                        readonly: !_ctx.canUpdateProject,
                                                        name: "description",
                                                        placeholder: "Describe this project",
                                                        rows: "3",
                                                        class: "shadow-sm focus:ring-gray-500 focus:border-gray-500 block w-full sm:text-sm border-gray-300 rounded-md"
                                                      }, null, 8, ["onUpdate:modelValue", "readonly"]), [
                                                        [
                                                          vModelText,
                                                          _ctx.form.description
                                                        ]
                                                      ])
                                                    ])
                                                  ]),
                                                  _: 1
                                                }),
                                                createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                                  default: withCtx(() => [
                                                    createVNode("div", { class: "border-b" }, [
                                                      createVNode("div", { class: "mx-px mt-px px-3 pt-2 pb-12" }, [
                                                        _ctx.form.description == "" ? (openBlock(), createBlock("span", {
                                                          key: 0,
                                                          class: "text-gray-400 text-sm font-medium"
                                                        }, " Nothing to preview ")) : (openBlock(), createBlock("span", { key: 1 }, [
                                                          createVNode("div", {
                                                            class: "prose",
                                                            innerHTML: _ctx.md(
                                                              _ctx.form.description
                                                            )
                                                          }, null, 8, ["innerHTML"])
                                                        ]))
                                                      ])
                                                    ])
                                                  ]),
                                                  _: 1
                                                })
                                              ]),
                                              _: 1
                                            })
                                          ]),
                                          _: 1
                                        }),
                                        createVNode("label", { class: "block text-sm font-medium text-gray-700" }, [
                                          createVNode("small", null, [
                                            (openBlock(), createBlock("svg", {
                                              "aria-hidden": "true",
                                              height: "16",
                                              viewBox: "0 0 16 16",
                                              version: "1.1",
                                              width: "16",
                                              "data-view-component": "true",
                                              class: "octicon octicon-markdown v-align-bottom inline"
                                            }, [
                                              createVNode("path", {
                                                "fill-rule": "evenodd",
                                                d: "M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z"
                                              })
                                            ])),
                                            createTextVNode(" Styling with Markdown is supported")
                                          ])
                                        ]),
                                        createVNode(_component_jet_input_error, {
                                          message: _ctx.form.errors.description,
                                          class: "mt-2"
                                        }, null, 8, ["message"])
                                      ])
                                    ]),
                                    createVNode("div", { class: "mb-3" }, [
                                      createVNode("label", {
                                        for: "description",
                                        class: "block text-sm font-medium text-gray-700"
                                      }, " Keywords "),
                                      createVNode("div", null, [
                                        createVNode(_component_vue_tags_input, {
                                          modelValue: _ctx.form.tag,
                                          "onUpdate:modelValue": ($event) => _ctx.form.tag = $event,
                                          placeholder: "Type a keyword or keywords separated by comma (,) and press enter",
                                          separators: [
                                            ";",
                                            ","
                                          ],
                                          disabled: !_ctx.canUpdateProject,
                                          "max-width": "100%",
                                          tags: _ctx.form.tags,
                                          onTagsChanged: (newTags) => _ctx.form.tags = newTags
                                        }, null, 8, ["modelValue", "onUpdate:modelValue", "disabled", "tags", "onTagsChanged"])
                                      ])
                                    ]),
                                    _ctx.canUpdateProject ? (openBlock(), createBlock("div", { key: 0 }, [
                                      createVNode("input", {
                                        ref: "photo",
                                        type: "file",
                                        class: "hidden",
                                        onChange: _ctx.updatePhotoPreview
                                      }, null, 40, ["onChange"]),
                                      withDirectives(createVNode("div", { class: "mt-2" }, [
                                        createVNode("img", {
                                          src: _ctx.project.project_photo_url ? _ctx.project.project_photo_url : "https://via.placeholder.com/400x200",
                                          alt: _ctx.project.name,
                                          class: "h-24 w-72 rounded-md object-cover"
                                        }, null, 8, ["src", "alt"])
                                      ], 512), [
                                        [vShow, !_ctx.photoPreview]
                                      ]),
                                      withDirectives(createVNode("div", { class: "mt-2" }, [
                                        createVNode("span", {
                                          class: "block h-24 w-72 rounded",
                                          style: "background-size: cover; background-repeat: no-repeat; background-position: center center; background-image: url('" + _ctx.photoPreview + "');"
                                        }, null, 4)
                                      ], 512), [
                                        [vShow, _ctx.photoPreview]
                                      ]),
                                      createVNode(_component_jet_secondary_button, {
                                        class: "mt-2 mr-2",
                                        type: "button",
                                        onClick: withModifiers(
                                          _ctx.selectNewPhoto,
                                          ["prevent"]
                                        )
                                      }, {
                                        default: withCtx(() => [
                                          createTextVNode(" Select A New Photo ")
                                        ]),
                                        _: 1
                                      }, 8, ["onClick"])
                                    ])) : createCommentVNode("", true),
                                    _ctx.canUpdateProject ? (openBlock(), createBlock("div", { key: 1 }, [
                                      createVNode("label", {
                                        for: "study-name",
                                        class: "block text-sm font-medium text-gray-900"
                                      }, " Color "),
                                      createVNode(_component_color_picker, {
                                        pureColor: _ctx.form.color,
                                        "onUpdate:pureColor": ($event) => _ctx.form.color = $event
                                      }, null, 8, ["pureColor", "onUpdate:pureColor"])
                                    ])) : createCommentVNode("", true),
                                    createVNode("fieldset", null, [
                                      createVNode("legend", { class: "text-sm font-medium text-gray-900" }, " Privacy "),
                                      createVNode("div", { class: "mt-2 space-y-5" }, [
                                        createVNode("div", {
                                          class: "relative flex items-start",
                                          onClick: ($event) => _ctx.updateAccess(
                                            false
                                          )
                                        }, [
                                          createVNode("div", { class: "absolute flex items-center h-5" }, [
                                            createVNode("input", {
                                              id: "privacy-private-to-project",
                                              checked: _ctx.form.is_public === false,
                                              disabled: !_ctx.canUpdateProject,
                                              name: "privacy",
                                              "aria-describedby": "privacy-private-to-project-description",
                                              type: "radio",
                                              class: "focus:ring-gray-500 h-4 w-4 text-gray-600 border-gray-300"
                                            }, null, 8, ["checked", "disabled"])
                                          ]),
                                          createVNode("div", { class: "pl-7 text-sm" }, [
                                            createVNode("label", {
                                              for: "privacy-private-to-project",
                                              class: "font-medium text-gray-900"
                                            }, " Private to project members "),
                                            createVNode("p", {
                                              id: "privacy-private-to-project-description",
                                              class: "text-gray-500"
                                            }, " Only members of this project would be able to access. ")
                                          ])
                                        ], 8, ["onClick"])
                                      ])
                                    ])
                                  ]),
                                  createVNode("div", null, [
                                    _ctx.form.is_public ? (openBlock(), createBlock("div", { key: 0 }, [
                                      createVNode("label", {
                                        for: "email",
                                        class: "block text-sm font-medium text-gray-700"
                                      }, "Public URL"),
                                      createVNode("div", { class: "mt-1 flex rounded-md shadow-sm" }, [
                                        createVNode("div", { class: "relative flex items-stretch flex-grow focus-within:z-10" }, [
                                          withDirectives(createVNode("input", {
                                            id: "projectPublicURLCopy",
                                            "onUpdate:modelValue": ($event) => _ctx.project.public_url = $event,
                                            readonly: true,
                                            type: "text",
                                            class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                            onFocus: ($event) => $event.target.select()
                                          }, null, 40, ["onUpdate:modelValue", "onFocus"]), [
                                            [
                                              vModelText,
                                              _ctx.project.public_url
                                            ]
                                          ])
                                        ]),
                                        createVNode("button", {
                                          type: "button",
                                          class: "-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                          onClick: ($event) => _ctx.copyToClipboard(
                                            _ctx.project.public_url,
                                            "projectPublicURLCopy"
                                          )
                                        }, [
                                          createVNode("span", null, [
                                            createVNode(_component_ClipboardDocumentIcon, {
                                              class: "h-5 w-5",
                                              "aria-hidden": "true"
                                            })
                                          ])
                                        ], 8, ["onClick"])
                                      ])
                                    ])) : createCommentVNode("", true),
                                    _ctx.form.doi ? (openBlock(), createBlock("div", {
                                      key: 1,
                                      class: "mt-2"
                                    }, [
                                      createVNode("label", {
                                        for: "email",
                                        class: "block text-sm font-medium text-gray-700"
                                      }, "DOI"),
                                      createVNode("div", { class: "mt-1 flex rounded-md shadow-sm" }, [
                                        createVNode("div", { class: "relative flex items-stretch flex-grow focus-within:z-10" }, [
                                          withDirectives(createVNode("input", {
                                            id: "projectDOICopy",
                                            "onUpdate:modelValue": ($event) => _ctx.project.doi = $event,
                                            readonly: true,
                                            type: "text",
                                            class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                            onFocus: ($event) => $event.target.select()
                                          }, null, 40, ["onUpdate:modelValue", "onFocus"]), [
                                            [
                                              vModelText,
                                              _ctx.project.doi
                                            ]
                                          ])
                                        ]),
                                        createVNode("button", {
                                          type: "button",
                                          class: "-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                          onClick: ($event) => _ctx.copyToClipboard(
                                            _ctx.project.doi,
                                            "projectDOICopy"
                                          )
                                        }, [
                                          createVNode("span", null, [
                                            createVNode(_component_ClipboardDocumentIcon, {
                                              class: "h-5 w-5",
                                              "aria-hidden": "true"
                                            })
                                          ])
                                        ], 8, ["onClick"])
                                      ])
                                    ])) : createCommentVNode("", true),
                                    createVNode("div", null, [
                                      createVNode("div", { class: "mt-6 grid grid-cols-1 gap-x-4 sm:grid-cols-1" }, [
                                        _ctx.licenses ? (openBlock(), createBlock("div", { key: 0 }, [
                                          createVNode("span", { class: "float-right text-xs cursor-pointer hover:text-blue-700 mt-2" }, [
                                            createVNode("a", {
                                              target: "_blank",
                                              href: "https://docs.nmrxiv.org/submission-guides/licenses.html"
                                            }, "How to choose the right license?")
                                          ]),
                                          createVNode(_component_select_rich, {
                                            selected: _ctx.form.license,
                                            "onUpdate:selected": ($event) => _ctx.form.license = $event,
                                            disabled: !_ctx.canUpdateProject,
                                            label: "License",
                                            items: _ctx.licenses
                                          }, null, 8, ["selected", "onUpdate:selected", "disabled", "items"])
                                        ])) : createCommentVNode("", true)
                                      ]),
                                      createVNode(_component_jet_input_error, {
                                        message: _ctx.form.errors.license,
                                        class: "mt-2"
                                      }, null, 8, ["message"])
                                    ]),
                                    createVNode("div", { class: "mt-6 flex text-sm" }, [
                                      createVNode("a", {
                                        target: "_blank",
                                        href: "https://docs.nmrxiv.org/submission-guides/sharing.html",
                                        class: "group inline-flex items-center text-gray-500 hover:text-gray-900"
                                      }, [
                                        createVNode(_component_QuestionMarkCircleIcon, {
                                          class: "h-5 w-5 text-gray-400 group-hover:text-gray-500",
                                          "aria-hidden": "true"
                                        }),
                                        createVNode("span", { class: "ml-2" }, " Learn more about sharing ")
                                      ])
                                    ]),
                                    createVNode("div", { class: "mt-4 flex text-sm mb-6" }, [
                                      createVNode("a", {
                                        class: "cursor-pointer group inline-flex items-center text-gray-500 hover:text-gray-900",
                                        onClick: _ctx.toggleActivityDetails
                                      }, [
                                        createVNode(_component_ExclamationCircleIcon, {
                                          class: "h-5 w-5 text-gray-400 group-hover:text-gray-500",
                                          "aria-hidden": "true"
                                        }),
                                        createVNode("span", { class: "ml-2" }, " Activity ")
                                      ], 8, ["onClick"])
                                    ]),
                                    createVNode(_component_project_activity, {
                                      ref: "activityDetailsElement",
                                      project: _ctx.project
                                    }, null, 8, ["project"])
                                  ])
                                ])
                              ])
                            ]),
                            !_ctx.form.is_public ? (openBlock(), createBlock("div", {
                              key: 0,
                              class: "flex-shrink-0 px-4 py-4 flex justify-end"
                            }, [
                              createVNode(_component_jet_action_message, {
                                on: _ctx.form.recentlySuccessful,
                                class: "mr-3 py-2 text-green-200"
                              }, {
                                default: withCtx(() => [
                                  createTextVNode(" Saved. ")
                                ]),
                                _: 1
                              }, 8, ["on"]),
                              createVNode(_component_jet_secondary_button, {
                                type: "button",
                                class: "bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                                onClick: ($event) => _ctx.open = false
                              }, {
                                default: withCtx(() => [
                                  createTextVNode(" Cancel ")
                                ]),
                                _: 1
                              }, 8, ["onClick"]),
                              _ctx.canUpdateProject ? (openBlock(), createBlock(_component_jet_button, {
                                key: 0,
                                type: "submit",
                                class: "ml-4 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-gray-600 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                                onClick: _ctx.updateProject
                              }, {
                                default: withCtx(() => [
                                  createTextVNode(" Save ")
                                ]),
                                _: 1
                              }, 8, ["onClick"])) : createCommentVNode("", true)
                            ])) : createCommentVNode("", true),
                            _ctx.form.is_public && _ctx.canUpdateProject ? (openBlock(), createBlock("div", {
                              key: 1,
                              class: "flex-shrink-0 px-4 py-4 flex justify-end"
                            }, [
                              createVNode("div", { class: "flex items-center h-5" }, [
                                withDirectives(createVNode("input", {
                                  id: "confirm",
                                  "onUpdate:modelValue": ($event) => _ctx.confirmPublicAccess = $event,
                                  "aria-describedby": "confirm-description",
                                  name: "confirm",
                                  type: "checkbox",
                                  class: "focus:ring-teal-500 h-4 w-4 text-teal-600 border-gray-300 rounded"
                                }, null, 8, ["onUpdate:modelValue"]), [
                                  [vModelCheckbox, _ctx.confirmPublicAccess]
                                ])
                              ]),
                              createVNode("div", { class: "ml-3 text-xs" }, [
                                createVNode("label", {
                                  for: "confirm",
                                  class: "font-small text-red-700"
                                }, "I understand, if the project is made public then all the underlying studies and dataset will also be made public and this version is no longer editable. ")
                              ]),
                              createVNode(_component_jet_secondary_button, {
                                type: "button",
                                class: "bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                                onClick: ($event) => _ctx.open = false
                              }, {
                                default: withCtx(() => [
                                  createTextVNode(" Cancel ")
                                ]),
                                _: 1
                              }, 8, ["onClick"]),
                              createVNode(_component_jet_button, {
                                type: "submit",
                                disabled: !_ctx.confirmPublicAccess,
                                class: "ml-4 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-gray-600 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                                onClick: _ctx.updateProject
                              }, {
                                default: withCtx(() => [
                                  createTextVNode(" Save ")
                                ]),
                                _: 1
                              }, 8, ["disabled", "onClick"])
                            ])) : createCommentVNode("", true)
                          ])
                        ])
                      ]),
                      _: 1
                    })
                  ])
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_Dialog, {
            as: "div",
            class: "fixed inset-0 z-50"
          }, {
            default: withCtx(() => [
              createVNode("div", { class: "absolute inset-0" }, [
                createVNode(_component_DialogOverlay, { class: "absolute inset-0" }),
                createVNode("div", { class: "fixed inset-y-0 pl-16 max-w-full right-0 flex" }, [
                  createVNode(_component_TransitionChild, {
                    as: "template",
                    enter: "transform transition ease-in-out duration-500 sm:duration-700",
                    "enter-from": "translate-x-full",
                    "enter-to": "translate-x-0",
                    leave: "transform transition ease-in-out duration-500 sm:duration-700",
                    "leave-from": "translate-x-0",
                    "leave-to": "translate-x-full"
                  }, {
                    default: withCtx(() => [
                      createVNode("div", { class: "w-screen max-w-2xl" }, [
                        createVNode("div", { class: "h-full divide-y divide-gray-200 flex flex-col bg-white shadow-xl" }, [
                          createVNode("div", { class: "flex-1 h-0 overflow-y-auto" }, [
                            createVNode("div", {
                              class: "py-6 px-4 sm:px-6",
                              style: [
                                _ctx.project.color && _ctx.project.color != "" ? "background-color:" + _ctx.project.color : "background-color:rgb(75,75,75)"
                              ]
                            }, [
                              createVNode("div", { class: "flex items-center justify-between" }, [
                                createVNode(_component_DialogTitle, { class: "text-lg font-medium text-white" }, {
                                  default: withCtx(() => [
                                    createTextVNode(toDisplayString(_ctx.project.name), 1)
                                  ]),
                                  _: 1
                                }),
                                createVNode("div", { class: "ml-3 h-7 flex items-center" }, [
                                  createVNode("button", {
                                    type: "button",
                                    class: "rounded-md hover:text-black text-white",
                                    onClick: ($event) => _ctx.open = false
                                  }, [
                                    createVNode("span", { class: "sr-only" }, "Close panel"),
                                    createVNode(_component_XMarkIcon, {
                                      class: "h-6 w-6",
                                      "aria-hidden": "true"
                                    })
                                  ], 8, ["onClick"])
                                ])
                              ])
                            ], 4),
                            createVNode("div", { class: "flex-1 flex flex-col justify-between" }, [
                              createVNode("div", { class: "px-4 divide-y divide-gray-200 sm:px-6" }, [
                                createVNode("div", { class: "space-y-6 pt-6 pb-5" }, [
                                  createVNode("div", null, [
                                    createVNode("label", {
                                      for: "project-name",
                                      class: "block text-sm font-medium text-gray-900 after:content-['*'] after:ml-0.5 after:text-red-500"
                                    }, " Project name "),
                                    createVNode("div", { class: "mt-1" }, [
                                      withDirectives(createVNode("input", {
                                        id: "project-name",
                                        "onUpdate:modelValue": ($event) => _ctx.form.name = $event,
                                        type: "text",
                                        readonly: !_ctx.canUpdateProject,
                                        name: "project-name",
                                        class: "block w-full shadow-sm sm:text-sm focus:ring-gray-500 focus:border-gray-500 border-gray-300 rounded-md"
                                      }, null, 8, ["onUpdate:modelValue", "readonly"]), [
                                        [vModelText, _ctx.form.name]
                                      ])
                                    ]),
                                    createVNode(_component_jet_input_error, {
                                      message: _ctx.form.errors.name,
                                      class: "mt-2"
                                    }, null, 8, ["message"])
                                  ]),
                                  createVNode("div", null, [
                                    createVNode("label", {
                                      for: "description",
                                      class: "block text-sm font-medium text-gray-900 after:content-['*'] after:ml-0.5 after:text-red-500"
                                    }, " Description "),
                                    createVNode("div", { class: "mt-1" }, [
                                      createVNode(_component_TabGroup, null, {
                                        default: withCtx(() => [
                                          createVNode(_component_TabList, { class: "flex items-center" }, {
                                            default: withCtx(() => [
                                              createVNode(_component_Tab, { as: "template" }, {
                                                default: withCtx(({
                                                  selected
                                                }) => [
                                                  createVNode("button", {
                                                    class: [
                                                      selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                                      "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                                    ]
                                                  }, " Write ", 2)
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(_component_Tab, { as: "template" }, {
                                                default: withCtx(({
                                                  selected
                                                }) => [
                                                  createVNode("button", {
                                                    class: [
                                                      selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                                      "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                                    ]
                                                  }, " Preview ", 2)
                                                ]),
                                                _: 1
                                              })
                                            ]),
                                            _: 1
                                          }),
                                          createVNode(_component_TabPanels, { class: "mt-2" }, {
                                            default: withCtx(() => [
                                              createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                                default: withCtx(() => [
                                                  createVNode("label", {
                                                    for: "comment",
                                                    class: "sr-only"
                                                  }, "Comment"),
                                                  createVNode("div", null, [
                                                    withDirectives(createVNode("textarea", {
                                                      id: "description",
                                                      "onUpdate:modelValue": ($event) => _ctx.form.description = $event,
                                                      readonly: !_ctx.canUpdateProject,
                                                      name: "description",
                                                      placeholder: "Describe this project",
                                                      rows: "3",
                                                      class: "shadow-sm focus:ring-gray-500 focus:border-gray-500 block w-full sm:text-sm border-gray-300 rounded-md"
                                                    }, null, 8, ["onUpdate:modelValue", "readonly"]), [
                                                      [
                                                        vModelText,
                                                        _ctx.form.description
                                                      ]
                                                    ])
                                                  ])
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                                default: withCtx(() => [
                                                  createVNode("div", { class: "border-b" }, [
                                                    createVNode("div", { class: "mx-px mt-px px-3 pt-2 pb-12" }, [
                                                      _ctx.form.description == "" ? (openBlock(), createBlock("span", {
                                                        key: 0,
                                                        class: "text-gray-400 text-sm font-medium"
                                                      }, " Nothing to preview ")) : (openBlock(), createBlock("span", { key: 1 }, [
                                                        createVNode("div", {
                                                          class: "prose",
                                                          innerHTML: _ctx.md(
                                                            _ctx.form.description
                                                          )
                                                        }, null, 8, ["innerHTML"])
                                                      ]))
                                                    ])
                                                  ])
                                                ]),
                                                _: 1
                                              })
                                            ]),
                                            _: 1
                                          })
                                        ]),
                                        _: 1
                                      }),
                                      createVNode("label", { class: "block text-sm font-medium text-gray-700" }, [
                                        createVNode("small", null, [
                                          (openBlock(), createBlock("svg", {
                                            "aria-hidden": "true",
                                            height: "16",
                                            viewBox: "0 0 16 16",
                                            version: "1.1",
                                            width: "16",
                                            "data-view-component": "true",
                                            class: "octicon octicon-markdown v-align-bottom inline"
                                          }, [
                                            createVNode("path", {
                                              "fill-rule": "evenodd",
                                              d: "M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z"
                                            })
                                          ])),
                                          createTextVNode(" Styling with Markdown is supported")
                                        ])
                                      ]),
                                      createVNode(_component_jet_input_error, {
                                        message: _ctx.form.errors.description,
                                        class: "mt-2"
                                      }, null, 8, ["message"])
                                    ])
                                  ]),
                                  createVNode("div", { class: "mb-3" }, [
                                    createVNode("label", {
                                      for: "description",
                                      class: "block text-sm font-medium text-gray-700"
                                    }, " Keywords "),
                                    createVNode("div", null, [
                                      createVNode(_component_vue_tags_input, {
                                        modelValue: _ctx.form.tag,
                                        "onUpdate:modelValue": ($event) => _ctx.form.tag = $event,
                                        placeholder: "Type a keyword or keywords separated by comma (,) and press enter",
                                        separators: [
                                          ";",
                                          ","
                                        ],
                                        disabled: !_ctx.canUpdateProject,
                                        "max-width": "100%",
                                        tags: _ctx.form.tags,
                                        onTagsChanged: (newTags) => _ctx.form.tags = newTags
                                      }, null, 8, ["modelValue", "onUpdate:modelValue", "disabled", "tags", "onTagsChanged"])
                                    ])
                                  ]),
                                  _ctx.canUpdateProject ? (openBlock(), createBlock("div", { key: 0 }, [
                                    createVNode("input", {
                                      ref: "photo",
                                      type: "file",
                                      class: "hidden",
                                      onChange: _ctx.updatePhotoPreview
                                    }, null, 40, ["onChange"]),
                                    withDirectives(createVNode("div", { class: "mt-2" }, [
                                      createVNode("img", {
                                        src: _ctx.project.project_photo_url ? _ctx.project.project_photo_url : "https://via.placeholder.com/400x200",
                                        alt: _ctx.project.name,
                                        class: "h-24 w-72 rounded-md object-cover"
                                      }, null, 8, ["src", "alt"])
                                    ], 512), [
                                      [vShow, !_ctx.photoPreview]
                                    ]),
                                    withDirectives(createVNode("div", { class: "mt-2" }, [
                                      createVNode("span", {
                                        class: "block h-24 w-72 rounded",
                                        style: "background-size: cover; background-repeat: no-repeat; background-position: center center; background-image: url('" + _ctx.photoPreview + "');"
                                      }, null, 4)
                                    ], 512), [
                                      [vShow, _ctx.photoPreview]
                                    ]),
                                    createVNode(_component_jet_secondary_button, {
                                      class: "mt-2 mr-2",
                                      type: "button",
                                      onClick: withModifiers(
                                        _ctx.selectNewPhoto,
                                        ["prevent"]
                                      )
                                    }, {
                                      default: withCtx(() => [
                                        createTextVNode(" Select A New Photo ")
                                      ]),
                                      _: 1
                                    }, 8, ["onClick"])
                                  ])) : createCommentVNode("", true),
                                  _ctx.canUpdateProject ? (openBlock(), createBlock("div", { key: 1 }, [
                                    createVNode("label", {
                                      for: "study-name",
                                      class: "block text-sm font-medium text-gray-900"
                                    }, " Color "),
                                    createVNode(_component_color_picker, {
                                      pureColor: _ctx.form.color,
                                      "onUpdate:pureColor": ($event) => _ctx.form.color = $event
                                    }, null, 8, ["pureColor", "onUpdate:pureColor"])
                                  ])) : createCommentVNode("", true),
                                  createVNode("fieldset", null, [
                                    createVNode("legend", { class: "text-sm font-medium text-gray-900" }, " Privacy "),
                                    createVNode("div", { class: "mt-2 space-y-5" }, [
                                      createVNode("div", {
                                        class: "relative flex items-start",
                                        onClick: ($event) => _ctx.updateAccess(
                                          false
                                        )
                                      }, [
                                        createVNode("div", { class: "absolute flex items-center h-5" }, [
                                          createVNode("input", {
                                            id: "privacy-private-to-project",
                                            checked: _ctx.form.is_public === false,
                                            disabled: !_ctx.canUpdateProject,
                                            name: "privacy",
                                            "aria-describedby": "privacy-private-to-project-description",
                                            type: "radio",
                                            class: "focus:ring-gray-500 h-4 w-4 text-gray-600 border-gray-300"
                                          }, null, 8, ["checked", "disabled"])
                                        ]),
                                        createVNode("div", { class: "pl-7 text-sm" }, [
                                          createVNode("label", {
                                            for: "privacy-private-to-project",
                                            class: "font-medium text-gray-900"
                                          }, " Private to project members "),
                                          createVNode("p", {
                                            id: "privacy-private-to-project-description",
                                            class: "text-gray-500"
                                          }, " Only members of this project would be able to access. ")
                                        ])
                                      ], 8, ["onClick"])
                                    ])
                                  ])
                                ]),
                                createVNode("div", null, [
                                  _ctx.form.is_public ? (openBlock(), createBlock("div", { key: 0 }, [
                                    createVNode("label", {
                                      for: "email",
                                      class: "block text-sm font-medium text-gray-700"
                                    }, "Public URL"),
                                    createVNode("div", { class: "mt-1 flex rounded-md shadow-sm" }, [
                                      createVNode("div", { class: "relative flex items-stretch flex-grow focus-within:z-10" }, [
                                        withDirectives(createVNode("input", {
                                          id: "projectPublicURLCopy",
                                          "onUpdate:modelValue": ($event) => _ctx.project.public_url = $event,
                                          readonly: true,
                                          type: "text",
                                          class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                          onFocus: ($event) => $event.target.select()
                                        }, null, 40, ["onUpdate:modelValue", "onFocus"]), [
                                          [
                                            vModelText,
                                            _ctx.project.public_url
                                          ]
                                        ])
                                      ]),
                                      createVNode("button", {
                                        type: "button",
                                        class: "-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                        onClick: ($event) => _ctx.copyToClipboard(
                                          _ctx.project.public_url,
                                          "projectPublicURLCopy"
                                        )
                                      }, [
                                        createVNode("span", null, [
                                          createVNode(_component_ClipboardDocumentIcon, {
                                            class: "h-5 w-5",
                                            "aria-hidden": "true"
                                          })
                                        ])
                                      ], 8, ["onClick"])
                                    ])
                                  ])) : createCommentVNode("", true),
                                  _ctx.form.doi ? (openBlock(), createBlock("div", {
                                    key: 1,
                                    class: "mt-2"
                                  }, [
                                    createVNode("label", {
                                      for: "email",
                                      class: "block text-sm font-medium text-gray-700"
                                    }, "DOI"),
                                    createVNode("div", { class: "mt-1 flex rounded-md shadow-sm" }, [
                                      createVNode("div", { class: "relative flex items-stretch flex-grow focus-within:z-10" }, [
                                        withDirectives(createVNode("input", {
                                          id: "projectDOICopy",
                                          "onUpdate:modelValue": ($event) => _ctx.project.doi = $event,
                                          readonly: true,
                                          type: "text",
                                          class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                          onFocus: ($event) => $event.target.select()
                                        }, null, 40, ["onUpdate:modelValue", "onFocus"]), [
                                          [
                                            vModelText,
                                            _ctx.project.doi
                                          ]
                                        ])
                                      ]),
                                      createVNode("button", {
                                        type: "button",
                                        class: "-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                        onClick: ($event) => _ctx.copyToClipboard(
                                          _ctx.project.doi,
                                          "projectDOICopy"
                                        )
                                      }, [
                                        createVNode("span", null, [
                                          createVNode(_component_ClipboardDocumentIcon, {
                                            class: "h-5 w-5",
                                            "aria-hidden": "true"
                                          })
                                        ])
                                      ], 8, ["onClick"])
                                    ])
                                  ])) : createCommentVNode("", true),
                                  createVNode("div", null, [
                                    createVNode("div", { class: "mt-6 grid grid-cols-1 gap-x-4 sm:grid-cols-1" }, [
                                      _ctx.licenses ? (openBlock(), createBlock("div", { key: 0 }, [
                                        createVNode("span", { class: "float-right text-xs cursor-pointer hover:text-blue-700 mt-2" }, [
                                          createVNode("a", {
                                            target: "_blank",
                                            href: "https://docs.nmrxiv.org/submission-guides/licenses.html"
                                          }, "How to choose the right license?")
                                        ]),
                                        createVNode(_component_select_rich, {
                                          selected: _ctx.form.license,
                                          "onUpdate:selected": ($event) => _ctx.form.license = $event,
                                          disabled: !_ctx.canUpdateProject,
                                          label: "License",
                                          items: _ctx.licenses
                                        }, null, 8, ["selected", "onUpdate:selected", "disabled", "items"])
                                      ])) : createCommentVNode("", true)
                                    ]),
                                    createVNode(_component_jet_input_error, {
                                      message: _ctx.form.errors.license,
                                      class: "mt-2"
                                    }, null, 8, ["message"])
                                  ]),
                                  createVNode("div", { class: "mt-6 flex text-sm" }, [
                                    createVNode("a", {
                                      target: "_blank",
                                      href: "https://docs.nmrxiv.org/submission-guides/sharing.html",
                                      class: "group inline-flex items-center text-gray-500 hover:text-gray-900"
                                    }, [
                                      createVNode(_component_QuestionMarkCircleIcon, {
                                        class: "h-5 w-5 text-gray-400 group-hover:text-gray-500",
                                        "aria-hidden": "true"
                                      }),
                                      createVNode("span", { class: "ml-2" }, " Learn more about sharing ")
                                    ])
                                  ]),
                                  createVNode("div", { class: "mt-4 flex text-sm mb-6" }, [
                                    createVNode("a", {
                                      class: "cursor-pointer group inline-flex items-center text-gray-500 hover:text-gray-900",
                                      onClick: _ctx.toggleActivityDetails
                                    }, [
                                      createVNode(_component_ExclamationCircleIcon, {
                                        class: "h-5 w-5 text-gray-400 group-hover:text-gray-500",
                                        "aria-hidden": "true"
                                      }),
                                      createVNode("span", { class: "ml-2" }, " Activity ")
                                    ], 8, ["onClick"])
                                  ]),
                                  createVNode(_component_project_activity, {
                                    ref: "activityDetailsElement",
                                    project: _ctx.project
                                  }, null, 8, ["project"])
                                ])
                              ])
                            ])
                          ]),
                          !_ctx.form.is_public ? (openBlock(), createBlock("div", {
                            key: 0,
                            class: "flex-shrink-0 px-4 py-4 flex justify-end"
                          }, [
                            createVNode(_component_jet_action_message, {
                              on: _ctx.form.recentlySuccessful,
                              class: "mr-3 py-2 text-green-200"
                            }, {
                              default: withCtx(() => [
                                createTextVNode(" Saved. ")
                              ]),
                              _: 1
                            }, 8, ["on"]),
                            createVNode(_component_jet_secondary_button, {
                              type: "button",
                              class: "bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                              onClick: ($event) => _ctx.open = false
                            }, {
                              default: withCtx(() => [
                                createTextVNode(" Cancel ")
                              ]),
                              _: 1
                            }, 8, ["onClick"]),
                            _ctx.canUpdateProject ? (openBlock(), createBlock(_component_jet_button, {
                              key: 0,
                              type: "submit",
                              class: "ml-4 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-gray-600 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                              onClick: _ctx.updateProject
                            }, {
                              default: withCtx(() => [
                                createTextVNode(" Save ")
                              ]),
                              _: 1
                            }, 8, ["onClick"])) : createCommentVNode("", true)
                          ])) : createCommentVNode("", true),
                          _ctx.form.is_public && _ctx.canUpdateProject ? (openBlock(), createBlock("div", {
                            key: 1,
                            class: "flex-shrink-0 px-4 py-4 flex justify-end"
                          }, [
                            createVNode("div", { class: "flex items-center h-5" }, [
                              withDirectives(createVNode("input", {
                                id: "confirm",
                                "onUpdate:modelValue": ($event) => _ctx.confirmPublicAccess = $event,
                                "aria-describedby": "confirm-description",
                                name: "confirm",
                                type: "checkbox",
                                class: "focus:ring-teal-500 h-4 w-4 text-teal-600 border-gray-300 rounded"
                              }, null, 8, ["onUpdate:modelValue"]), [
                                [vModelCheckbox, _ctx.confirmPublicAccess]
                              ])
                            ]),
                            createVNode("div", { class: "ml-3 text-xs" }, [
                              createVNode("label", {
                                for: "confirm",
                                class: "font-small text-red-700"
                              }, "I understand, if the project is made public then all the underlying studies and dataset will also be made public and this version is no longer editable. ")
                            ]),
                            createVNode(_component_jet_secondary_button, {
                              type: "button",
                              class: "bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                              onClick: ($event) => _ctx.open = false
                            }, {
                              default: withCtx(() => [
                                createTextVNode(" Cancel ")
                              ]),
                              _: 1
                            }, 8, ["onClick"]),
                            createVNode(_component_jet_button, {
                              type: "submit",
                              disabled: !_ctx.confirmPublicAccess,
                              class: "ml-4 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-gray-600 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                              onClick: _ctx.updateProject
                            }, {
                              default: withCtx(() => [
                                createTextVNode(" Save ")
                              ]),
                              _: 1
                            }, 8, ["disabled", "onClick"])
                          ])) : createCommentVNode("", true)
                        ])
                      ])
                    ]),
                    _: 1
                  })
                ])
              ])
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1d = _sfc_main$1d.setup;
_sfc_main$1d.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Project/Partials/Details.vue");
  return _sfc_setup$1d ? _sfc_setup$1d(props, ctx) : void 0;
};
const ProjectDetails = /* @__PURE__ */ _export_sfc(_sfc_main$1d, [["ssrRender", _sfc_ssrRender$1c]]);
const __vite_glob_0_34 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ProjectDetails
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1c = {
  props: {
    type: {
      type: String,
      default: "submit"
    }
  }
};
function _sfc_ssrRender$1b(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<button${ssrRenderAttrs(mergeProps({
    type: $props.type,
    class: "inline-flex items-center px-4 py-2 bg-green-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-green-700 active:bg-green-900 focus:outline-none focus:border-green-900 focus:ring focus:ring-green-300 disabled:opacity-25 transition"
  }, _attrs))}>`);
  ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent);
  _push(`</button>`);
}
const _sfc_setup$1c = _sfc_main$1c.setup;
_sfc_main$1c.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/SuccessButton.vue");
  return _sfc_setup$1c ? _sfc_setup$1c(props, ctx) : void 0;
};
const JetSuccessButton = /* @__PURE__ */ _export_sfc(_sfc_main$1c, [["ssrRender", _sfc_ssrRender$1b]]);
const _sfc_main$1b = {
  components: {
    JetActionSection,
    JetSuccessButton,
    JetDialogModal,
    JetInput,
    JetInputError,
    JetSecondaryButton,
    LoadingButton,
    Link
  },
  props: ["project"],
  data() {
    return {
      loading: false,
      confirmingProjectDeletion: false,
      confirmingProjectDeletionWithoutPassword: false,
      form: this.$inertia.form({
        password: ""
      }),
      hasPassword: false
    };
  },
  methods: {
    confirmProjectDeletion() {
      this.loading = true;
      this.confirmingProjectDeletion = true;
      axios.get(route("auth.checkPassword", this.project.id)).then((res) => {
        this.hasPassword = res.data.hasPassword;
      }).finally(() => {
        this.loading = false;
      });
    },
    restoreProject() {
      this.form.put(route("dashboard.project.destroy", this.project.id), {
        preserveScroll: true,
        onSuccess: () => this.closeModal(),
        onError: () => this.$refs.password.focus(),
        onFinish: () => this.form.reset()
      });
    },
    closeModal() {
      this.confirmingProjectDeletion = false;
      this.confirmingProjectDeletionWithoutPassword = false;
      this.form.reset();
    }
  }
};
function _sfc_ssrRender$1a(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = resolveComponent("jet-action-section");
  const _component_jet_success_button = resolveComponent("jet-success-button");
  const _component_jet_dialog_modal = resolveComponent("jet-dialog-modal");
  const _component_loading_button = resolveComponent("loading-button");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  _push(ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Restore Project `);
      } else {
        return [
          createTextVNode(" Restore Project ")
        ];
      }
    }),
    description: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Restore your project. `);
      } else {
        return [
          createTextVNode(" Restore your project. ")
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> Once your project is restored, all of its resources and data will be put back to their original state. Before restoring your project, please make sure your project access rights are reviewed. </div><div class="mt-5"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_success_button, { onClick: $options.confirmProjectDeletion }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Restore Project `);
            } else {
              return [
                createTextVNode(" Restore Project ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(ssrRenderComponent(_component_jet_dialog_modal, {
          show: $data.confirmingProjectDeletion,
          onClose: $options.closeModal
        }, createSlots({
          title: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Restore Project `);
            } else {
              return [
                createTextVNode(" Restore Project ")
              ];
            }
          }),
          content: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_loading_button, { loading: $data.loading }, null, _parent3, _scopeId2));
              if (!$data.loading) {
                _push3(`<!--[-->`);
                if ($data.hasPassword) {
                  _push3(`<span${_scopeId2}> Are you sure you want to restore your project? Once your project is restored, all of its resources and data will be set back to the original state. Please enter your password to confirm you would like to restore your project. <div class="mt-4"${_scopeId2}>`);
                  _push3(ssrRenderComponent(_component_jet_input, {
                    ref: "password",
                    modelValue: $data.form.password,
                    "onUpdate:modelValue": ($event) => $data.form.password = $event,
                    type: "password",
                    class: "mt-1 block w-3/4",
                    placeholder: "Password",
                    onKeyup: $options.restoreProject
                  }, null, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_component_jet_input_error, {
                    message: $data.form.errors.password,
                    class: "mt-2"
                  }, null, _parent3, _scopeId2));
                  _push3(`</div></span>`);
                } else {
                  _push3(`<span${_scopeId2}> You need to set your password first before deleting the project. </span>`);
                }
                _push3(`<!--]-->`);
              } else {
                _push3(`<!---->`);
              }
            } else {
              return [
                createVNode(_component_loading_button, { loading: $data.loading }, null, 8, ["loading"]),
                !$data.loading ? (openBlock(), createBlock(Fragment, { key: 0 }, [
                  $data.hasPassword ? (openBlock(), createBlock("span", { key: 0 }, [
                    createTextVNode(" Are you sure you want to restore your project? Once your project is restored, all of its resources and data will be set back to the original state. Please enter your password to confirm you would like to restore your project. "),
                    createVNode("div", { class: "mt-4" }, [
                      createVNode(_component_jet_input, {
                        ref: "password",
                        modelValue: $data.form.password,
                        "onUpdate:modelValue": ($event) => $data.form.password = $event,
                        type: "password",
                        class: "mt-1 block w-3/4",
                        placeholder: "Password",
                        onKeyup: withKeys($options.restoreProject, ["enter"])
                      }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
                      createVNode(_component_jet_input_error, {
                        message: $data.form.errors.password,
                        class: "mt-2"
                      }, null, 8, ["message"])
                    ])
                  ])) : (openBlock(), createBlock("span", { key: 1 }, " You need to set your password first before deleting the project. "))
                ], 64)) : createCommentVNode("", true)
              ];
            }
          }),
          _: 2
        }, [
          !$data.loading ? {
            name: "footer",
            fn: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(ssrRenderComponent(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(` Cancel `);
                    } else {
                      return [
                        createTextVNode(" Cancel ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                if ($data.hasPassword) {
                  _push3(ssrRenderComponent(_component_jet_success_button, {
                    class: ["ml-2", { "opacity-25": $data.form.processing }],
                    disabled: $data.form.processing,
                    onClick: $options.restoreProject
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Restore Project `);
                      } else {
                        return [
                          createTextVNode(" Restore Project ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  _push3(`<!---->`);
                }
              } else {
                return [
                  createVNode(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                    default: withCtx(() => [
                      createTextVNode(" Cancel ")
                    ]),
                    _: 1
                  }, 8, ["onClick"]),
                  $data.hasPassword ? (openBlock(), createBlock(_component_jet_success_button, {
                    key: 0,
                    class: ["ml-2", { "opacity-25": $data.form.processing }],
                    disabled: $data.form.processing,
                    onClick: $options.restoreProject
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Restore Project ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled", "onClick"])) : createCommentVNode("", true)
                ];
              }
            }),
            key: "0"
          } : void 0
        ]), _parent2, _scopeId));
      } else {
        return [
          createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Once your project is restored, all of its resources and data will be put back to their original state. Before restoring your project, please make sure your project access rights are reviewed. "),
          createVNode("div", { class: "mt-5" }, [
            createVNode(_component_jet_success_button, { onClick: $options.confirmProjectDeletion }, {
              default: withCtx(() => [
                createTextVNode(" Restore Project ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ]),
          createVNode(_component_jet_dialog_modal, {
            show: $data.confirmingProjectDeletion,
            onClose: $options.closeModal
          }, createSlots({
            title: withCtx(() => [
              createTextVNode(" Restore Project ")
            ]),
            content: withCtx(() => [
              createVNode(_component_loading_button, { loading: $data.loading }, null, 8, ["loading"]),
              !$data.loading ? (openBlock(), createBlock(Fragment, { key: 0 }, [
                $data.hasPassword ? (openBlock(), createBlock("span", { key: 0 }, [
                  createTextVNode(" Are you sure you want to restore your project? Once your project is restored, all of its resources and data will be set back to the original state. Please enter your password to confirm you would like to restore your project. "),
                  createVNode("div", { class: "mt-4" }, [
                    createVNode(_component_jet_input, {
                      ref: "password",
                      modelValue: $data.form.password,
                      "onUpdate:modelValue": ($event) => $data.form.password = $event,
                      type: "password",
                      class: "mt-1 block w-3/4",
                      placeholder: "Password",
                      onKeyup: withKeys($options.restoreProject, ["enter"])
                    }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
                    createVNode(_component_jet_input_error, {
                      message: $data.form.errors.password,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ])
                ])) : (openBlock(), createBlock("span", { key: 1 }, " You need to set your password first before deleting the project. "))
              ], 64)) : createCommentVNode("", true)
            ]),
            _: 2
          }, [
            !$data.loading ? {
              name: "footer",
              fn: withCtx(() => [
                createVNode(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                  default: withCtx(() => [
                    createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                $data.hasPassword ? (openBlock(), createBlock(_component_jet_success_button, {
                  key: 0,
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  disabled: $data.form.processing,
                  onClick: $options.restoreProject
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Restore Project ")
                  ]),
                  _: 1
                }, 8, ["class", "disabled", "onClick"])) : createCommentVNode("", true)
              ]),
              key: "0"
            } : void 0
          ]), 1032, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1b = _sfc_main$1b.setup;
_sfc_main$1b.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Project/Partials/Restore.vue");
  return _sfc_setup$1b ? _sfc_setup$1b(props, ctx) : void 0;
};
const ProjectRestore = /* @__PURE__ */ _export_sfc(_sfc_main$1b, [["ssrRender", _sfc_ssrRender$1a]]);
const __vite_glob_0_35 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ProjectRestore
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$1a = {
  components: {
    JetActionSection,
    JetDangerButton,
    JetDialogModal,
    JetInput,
    JetInputError,
    JetSecondaryButton,
    LoadingButton,
    Link
  },
  props: ["project"],
  data() {
    return {
      loading: false,
      confirmingProjectUnarchival: false,
      confirmingProjectUnarchivalWithoutPassword: false,
      form: this.$inertia.form({
        password: ""
      }),
      hasPassword: false
    };
  },
  methods: {
    confirmProjectDeletion() {
      this.loading = true;
      this.confirmingProjectUnarchival = true;
      axios.get(route("auth.checkPassword", this.project.id)).then((res) => {
        this.hasPassword = res.data.hasPassword;
      }).finally(() => {
        this.loading = false;
      });
    },
    unarchiveProject() {
      this.form.put(
        route("dashboard.project.toggle-archive", this.project.id),
        {
          preserveScroll: true,
          onSuccess: () => this.closeModal(),
          onError: () => this.$refs.password.focus(),
          onFinish: () => this.form.reset()
        }
      );
    },
    closeModal() {
      this.confirmingProjectUnarchival = false;
      this.confirmingProjectUnarchivalWithoutPassword = false;
      this.form.reset();
    }
  }
};
function _sfc_ssrRender$19(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = resolveComponent("jet-action-section");
  const _component_jet_danger_button = resolveComponent("jet-danger-button");
  const _component_jet_dialog_modal = resolveComponent("jet-dialog-modal");
  const _component_loading_button = resolveComponent("loading-button");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  _push(ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Unarchive Project `);
      } else {
        return [
          createTextVNode(" Unarchive Project ")
        ];
      }
    }),
    description: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Permanently unarchive your project. `);
      } else {
        return [
          createTextVNode(" Permanently unarchive your project. ")
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> Once your project is unarchived, all of its resources and data will be permanently unarchived. Before deleting your project, please download any data or information that you wish to retain. </div><div class="mt-5"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_danger_button, { onClick: $options.confirmProjectDeletion }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Unarchive Project `);
            } else {
              return [
                createTextVNode(" Unarchive Project ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(ssrRenderComponent(_component_jet_dialog_modal, {
          show: $data.confirmingProjectUnarchival,
          onClose: $options.closeModal
        }, createSlots({
          title: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Unarchive Project `);
            } else {
              return [
                createTextVNode(" Unarchive Project ")
              ];
            }
          }),
          content: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_loading_button, { loading: $data.loading }, null, _parent3, _scopeId2));
              if (!$data.loading) {
                _push3(`<!--[-->`);
                if ($data.hasPassword) {
                  _push3(`<span${_scopeId2}> Are you sure you want to unarchive your project? Once your project is unarchived, all of its resources and data will be permanently unarchived. Please enter your password to confirm you would like to permanently unarchive your project. <div class="mt-4"${_scopeId2}>`);
                  _push3(ssrRenderComponent(_component_jet_input, {
                    ref: "password",
                    modelValue: $data.form.password,
                    "onUpdate:modelValue": ($event) => $data.form.password = $event,
                    type: "password",
                    class: "mt-1 block w-3/4",
                    placeholder: "Password",
                    onKeyup: $options.unarchiveProject
                  }, null, _parent3, _scopeId2));
                  _push3(ssrRenderComponent(_component_jet_input_error, {
                    message: $data.form.errors.password,
                    class: "mt-2"
                  }, null, _parent3, _scopeId2));
                  _push3(`</div></span>`);
                } else {
                  _push3(`<span${_scopeId2}> You need to set your password first before deleting the project. </span>`);
                }
                _push3(`<!--]-->`);
              } else {
                _push3(`<!---->`);
              }
            } else {
              return [
                createVNode(_component_loading_button, { loading: $data.loading }, null, 8, ["loading"]),
                !$data.loading ? (openBlock(), createBlock(Fragment, { key: 0 }, [
                  $data.hasPassword ? (openBlock(), createBlock("span", { key: 0 }, [
                    createTextVNode(" Are you sure you want to unarchive your project? Once your project is unarchived, all of its resources and data will be permanently unarchived. Please enter your password to confirm you would like to permanently unarchive your project. "),
                    createVNode("div", { class: "mt-4" }, [
                      createVNode(_component_jet_input, {
                        ref: "password",
                        modelValue: $data.form.password,
                        "onUpdate:modelValue": ($event) => $data.form.password = $event,
                        type: "password",
                        class: "mt-1 block w-3/4",
                        placeholder: "Password",
                        onKeyup: withKeys($options.unarchiveProject, ["enter"])
                      }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
                      createVNode(_component_jet_input_error, {
                        message: $data.form.errors.password,
                        class: "mt-2"
                      }, null, 8, ["message"])
                    ])
                  ])) : (openBlock(), createBlock("span", { key: 1 }, " You need to set your password first before deleting the project. "))
                ], 64)) : createCommentVNode("", true)
              ];
            }
          }),
          _: 2
        }, [
          !$data.loading ? {
            name: "footer",
            fn: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(ssrRenderComponent(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(` Cancel `);
                    } else {
                      return [
                        createTextVNode(" Cancel ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                if ($data.hasPassword) {
                  _push3(ssrRenderComponent(_component_jet_danger_button, {
                    class: ["ml-2", { "opacity-25": $data.form.processing }],
                    disabled: $data.form.processing,
                    onClick: $options.unarchiveProject
                  }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(` Unarchive Project `);
                      } else {
                        return [
                          createTextVNode(" Unarchive Project ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  _push3(`<!---->`);
                }
              } else {
                return [
                  createVNode(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                    default: withCtx(() => [
                      createTextVNode(" Cancel ")
                    ]),
                    _: 1
                  }, 8, ["onClick"]),
                  $data.hasPassword ? (openBlock(), createBlock(_component_jet_danger_button, {
                    key: 0,
                    class: ["ml-2", { "opacity-25": $data.form.processing }],
                    disabled: $data.form.processing,
                    onClick: $options.unarchiveProject
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Unarchive Project ")
                    ]),
                    _: 1
                  }, 8, ["class", "disabled", "onClick"])) : createCommentVNode("", true)
                ];
              }
            }),
            key: "0"
          } : void 0
        ]), _parent2, _scopeId));
      } else {
        return [
          createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Once your project is unarchived, all of its resources and data will be permanently unarchived. Before deleting your project, please download any data or information that you wish to retain. "),
          createVNode("div", { class: "mt-5" }, [
            createVNode(_component_jet_danger_button, { onClick: $options.confirmProjectDeletion }, {
              default: withCtx(() => [
                createTextVNode(" Unarchive Project ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ]),
          createVNode(_component_jet_dialog_modal, {
            show: $data.confirmingProjectUnarchival,
            onClose: $options.closeModal
          }, createSlots({
            title: withCtx(() => [
              createTextVNode(" Unarchive Project ")
            ]),
            content: withCtx(() => [
              createVNode(_component_loading_button, { loading: $data.loading }, null, 8, ["loading"]),
              !$data.loading ? (openBlock(), createBlock(Fragment, { key: 0 }, [
                $data.hasPassword ? (openBlock(), createBlock("span", { key: 0 }, [
                  createTextVNode(" Are you sure you want to unarchive your project? Once your project is unarchived, all of its resources and data will be permanently unarchived. Please enter your password to confirm you would like to permanently unarchive your project. "),
                  createVNode("div", { class: "mt-4" }, [
                    createVNode(_component_jet_input, {
                      ref: "password",
                      modelValue: $data.form.password,
                      "onUpdate:modelValue": ($event) => $data.form.password = $event,
                      type: "password",
                      class: "mt-1 block w-3/4",
                      placeholder: "Password",
                      onKeyup: withKeys($options.unarchiveProject, ["enter"])
                    }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
                    createVNode(_component_jet_input_error, {
                      message: $data.form.errors.password,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ])
                ])) : (openBlock(), createBlock("span", { key: 1 }, " You need to set your password first before deleting the project. "))
              ], 64)) : createCommentVNode("", true)
            ]),
            _: 2
          }, [
            !$data.loading ? {
              name: "footer",
              fn: withCtx(() => [
                createVNode(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                  default: withCtx(() => [
                    createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                $data.hasPassword ? (openBlock(), createBlock(_component_jet_danger_button, {
                  key: 0,
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  disabled: $data.form.processing,
                  onClick: $options.unarchiveProject
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Unarchive Project ")
                  ]),
                  _: 1
                }, 8, ["class", "disabled", "onClick"])) : createCommentVNode("", true)
              ]),
              key: "0"
            } : void 0
          ]), 1032, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$1a = _sfc_main$1a.setup;
_sfc_main$1a.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Project/Partials/Unarchive.vue");
  return _sfc_setup$1a ? _sfc_setup$1a(props, ctx) : void 0;
};
const ProjectUnarchive = /* @__PURE__ */ _export_sfc(_sfc_main$1a, [["ssrRender", _sfc_ssrRender$19]]);
const __vite_glob_0_36 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ProjectUnarchive
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$19 = {
  components: {
    Link,
    AppLayout,
    ProjectDelete,
    ProjectRestore,
    ProjectArchive,
    ProjectUnarchive,
    InformationCircleIcon
  },
  props: ["project", "studies", "schema"]
};
function _sfc_ssrRender$18(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_Link = resolveComponent("Link");
  const _component_InformationCircleIcon = resolveComponent("InformationCircleIcon");
  const _component_project_delete = resolveComponent("project-delete");
  const _component_project_restore = resolveComponent("project-restore");
  const _component_project_archive = resolveComponent("project-archive");
  const _component_project_unarchive = resolveComponent("project-unarchive");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({
    title: $props.project.name
  }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white border-b"${_scopeId}><div class="px-12"${_scopeId}><div class="flex flex-nowrap justify-between py-6"${_scopeId}><div${_scopeId}><div class="flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_Link, {
          href: _ctx.route("dashboard.projects", $props.project.id)
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`${ssrInterpolate($props.project.name)}`);
            } else {
              return [
                createTextVNode(toDisplayString($props.project.name), 1)
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(` / Settings </div></div></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white border-b" }, [
            createVNode("div", { class: "px-12" }, [
              createVNode("div", { class: "flex flex-nowrap justify-between py-6" }, [
                createVNode("div", null, [
                  createVNode("div", { class: "flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest" }, [
                    createVNode(_component_Link, {
                      href: _ctx.route("dashboard.projects", $props.project.id)
                    }, {
                      default: withCtx(() => [
                        createTextVNode(toDisplayString($props.project.name), 1)
                      ]),
                      _: 1
                    }, 8, ["href"]),
                    createTextVNode(" / Settings ")
                  ])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="py-12 px-10"${_scopeId}><div${_scopeId}><div class="md:grid mb-10 md:grid-cols-3 md:gap-6"${_scopeId}><div class="md:col-span-1 flex justify-between"${_scopeId}><div class="px-4 sm:px-0"${_scopeId}><h3 class="text-lg font-medium text-gray-900"${_scopeId}> Schema </h3><p class="mt-1 text-sm text-gray-600"${_scopeId}> Project&#39;s repository schema version and validations details </p></div><div class="px-4 sm:px-0"${_scopeId}></div></div><div class="mt-5 md:mt-0 md:col-span-2"${_scopeId}><div class="px-4 py-5 sm:p-6 bg-white shadow sm:rounded-lg"${_scopeId}><div class="max-w-xl text-sm text-gray-600"${_scopeId}> Some of the nmrXiv functionality might not be available if your project is not migrated to our latest schema version. Where ever possible, we automatically migrate your data to be compatible with our latest schema version. Automatic migration might not be possible in some cases due to major nmrXiv schema version updates or missing metadata. Please get in touch with us to find out if it&#39;s possible to update your project to the latest schema version. You can find all information related to the nmrXiv schema on our documentation site. </div><div class="mt-5"${_scopeId}><span type="button" class="inline-flex items-center justify-center px-4 py-2 bg-yellow-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-yellow-500 focus:outline-none focus:border-yellow-700 focus:ring focus:ring-yellow-200 active:bg-yellow-600 disabled:opacity-25 transition"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_InformationCircleIcon, { class: "flex-shrink-0 mr-1.5 h-5 w-5 mr-4 inline" }, null, _parent2, _scopeId));
        _push2(` ${ssrInterpolate($props.project.schema_version)}</span>`);
        if ($props.project.schema_version == $props.schema) {
          _push2(`<span class="ml-4"${_scopeId}> Migrate now? </span>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div></div></div></div>`);
        if (!$props.project.is_public && !$props.project.is_deleted) {
          _push2(`<div${_scopeId}>`);
          _push2(ssrRenderComponent(_component_project_delete, { project: $props.project }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($props.project.is_deleted) {
          _push2(`<div${_scopeId}>`);
          _push2(ssrRenderComponent(_component_project_restore, { project: $props.project }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($props.project.is_public && !$props.project.is_archived) {
          _push2(`<div${_scopeId}>`);
          _push2(ssrRenderComponent(_component_project_archive, { project: $props.project }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($props.project.is_public && $props.project.is_archived) {
          _push2(`<div${_scopeId}>`);
          _push2(ssrRenderComponent(_component_project_unarchive, { project: $props.project }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "py-12 px-10" }, [
            createVNode("div", null, [
              createVNode("div", { class: "md:grid mb-10 md:grid-cols-3 md:gap-6" }, [
                createVNode("div", { class: "md:col-span-1 flex justify-between" }, [
                  createVNode("div", { class: "px-4 sm:px-0" }, [
                    createVNode("h3", { class: "text-lg font-medium text-gray-900" }, " Schema "),
                    createVNode("p", { class: "mt-1 text-sm text-gray-600" }, " Project's repository schema version and validations details ")
                  ]),
                  createVNode("div", { class: "px-4 sm:px-0" })
                ]),
                createVNode("div", { class: "mt-5 md:mt-0 md:col-span-2" }, [
                  createVNode("div", { class: "px-4 py-5 sm:p-6 bg-white shadow sm:rounded-lg" }, [
                    createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Some of the nmrXiv functionality might not be available if your project is not migrated to our latest schema version. Where ever possible, we automatically migrate your data to be compatible with our latest schema version. Automatic migration might not be possible in some cases due to major nmrXiv schema version updates or missing metadata. Please get in touch with us to find out if it's possible to update your project to the latest schema version. You can find all information related to the nmrXiv schema on our documentation site. "),
                    createVNode("div", { class: "mt-5" }, [
                      createVNode("span", {
                        type: "button",
                        class: "inline-flex items-center justify-center px-4 py-2 bg-yellow-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-yellow-500 focus:outline-none focus:border-yellow-700 focus:ring focus:ring-yellow-200 active:bg-yellow-600 disabled:opacity-25 transition"
                      }, [
                        createVNode(_component_InformationCircleIcon, { class: "flex-shrink-0 mr-1.5 h-5 w-5 mr-4 inline" }),
                        createTextVNode(" " + toDisplayString($props.project.schema_version), 1)
                      ]),
                      $props.project.schema_version == $props.schema ? (openBlock(), createBlock("span", {
                        key: 0,
                        class: "ml-4"
                      }, " Migrate now? ")) : createCommentVNode("", true)
                    ])
                  ])
                ])
              ])
            ]),
            !$props.project.is_public && !$props.project.is_deleted ? (openBlock(), createBlock("div", { key: 0 }, [
              createVNode(_component_project_delete, { project: $props.project }, null, 8, ["project"])
            ])) : createCommentVNode("", true),
            $props.project.is_deleted ? (openBlock(), createBlock("div", { key: 1 }, [
              createVNode(_component_project_restore, { project: $props.project }, null, 8, ["project"])
            ])) : createCommentVNode("", true),
            $props.project.is_public && !$props.project.is_archived ? (openBlock(), createBlock("div", { key: 2 }, [
              createVNode(_component_project_archive, { project: $props.project }, null, 8, ["project"])
            ])) : createCommentVNode("", true),
            $props.project.is_public && $props.project.is_archived ? (openBlock(), createBlock("div", { key: 3 }, [
              createVNode(_component_project_unarchive, { project: $props.project }, null, 8, ["project"])
            ])) : createCommentVNode("", true)
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$19 = _sfc_main$19.setup;
_sfc_main$19.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Project/Settings.vue");
  return _sfc_setup$19 ? _sfc_setup$19(props, ctx) : void 0;
};
const Settings$1 = /* @__PURE__ */ _export_sfc(_sfc_main$19, [["ssrRender", _sfc_ssrRender$18]]);
const __vite_glob_0_37 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Settings$1
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$18 = {
  components: {},
  emits: ["submitted"],
  computed: {
    hasActions() {
      return !!this.$slots.actions;
    }
  }
};
function _sfc_ssrRender$17(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "mt-5 md:mt-0" }, _attrs))}><form><div class="${ssrRenderClass(
    $options.hasActions ? "sm:rounded-tl-md sm:rounded-tr-md" : "sm:rounded-md"
  )}"><div class="grid grid-cols-6 gap-6">`);
  ssrRenderSlot(_ctx.$slots, "form", {}, null, _push, _parent);
  _push(`</div></div>`);
  if ($options.hasActions) {
    _push(`<div class="mt-3">`);
    ssrRenderSlot(_ctx.$slots, "actions", {}, null, _push, _parent);
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</form></div>`);
}
const _sfc_setup$18 = _sfc_main$18.setup;
_sfc_main$18.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/ModalFormSection.vue");
  return _sfc_setup$18 ? _sfc_setup$18(props, ctx) : void 0;
};
const JetModalFormSection = /* @__PURE__ */ _export_sfc(_sfc_main$18, [["ssrRender", _sfc_ssrRender$17]]);
const _sfc_main$17 = {
  props: ["modelValue", "rows"],
  emits: ["update:modelValue"],
  methods: {
    focus() {
      this.$refs.textarea.focus();
    }
  }
};
function _sfc_ssrRender$16(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  let _temp0;
  _push(`<textarea${ssrRenderAttrs(_temp0 = mergeProps({
    ref: "textarea",
    rows: $props.rows,
    class: "border-gray-300 focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 rounded-md shadow-sm",
    value: $props.modelValue
  }, _attrs), "textarea")}>${ssrInterpolate("value" in _temp0 ? _temp0.value : "")}</textarea>`);
}
const _sfc_setup$17 = _sfc_main$17.setup;
_sfc_main$17.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Jetstream/TextArea.vue");
  return _sfc_setup$17 ? _sfc_setup$17(props, ctx) : void 0;
};
const JetTextArea = /* @__PURE__ */ _export_sfc(_sfc_main$17, [["ssrRender", _sfc_ssrRender$16]]);
const _sfc_main$16 = {
  components: {
    Menu,
    MenuButton,
    MenuItem,
    MenuItems,
    ChevronDownIcon,
    Combobox,
    ComboboxInput,
    ComboboxOptions,
    ComboboxOption,
    Dialog,
    DialogPanel,
    TransitionChild,
    JetModalFormSection,
    TransitionRoot,
    UsersIcon,
    JetActionMessage,
    JetActionSection,
    JetButton,
    JetConfirmationModal,
    JetDangerButton,
    JetDialogModal,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    JetSectionBorder,
    JetTextArea
  },
  props: {
    members: Object,
    project: Object,
    study: Object,
    dataset: Object,
    team: Object,
    availableRoles: Object,
    role: String,
    model: String,
    calledFrom: String
  },
  setup() {
    const open2 = ref(false);
    const addUser = ref(false);
    return {
      open: open2,
      addUser
    };
  },
  data() {
    return {
      addMemberForm: this.$inertia.form({
        email: "",
        role: null,
        message: ""
      }),
      updateRoleForm: this.$inertia.form({
        role: null
      }),
      removeModelMemberForm: this.$inertia.form({})
    };
  },
  computed: {
    modelObject() {
      if (this.model == "study") {
        return this.study;
      } else if (this.model == "project") {
        return this.project;
      }
    },
    modelInvitations() {
      return this.modelObject[this.model + "_invitations"];
    },
    //Check if project is already shared for when called from Study view.
    isProjectAlreadyShared() {
      var count = 0;
      var isShared = false;
      if (this.calledFrom == "studyView") {
        if (this.members) {
          this.members.forEach((member) => {
            if (member.hasOwnProperty("project_membership")) {
              count = count + 1;
            }
          });
          if (count > 1) {
            isShared = true;
          }
        }
      }
      return isShared;
    },
    canChangeRole() {
      if (this.role) {
        return this.role == "creator" || this.role == "owner";
      } else {
        return true;
      }
    }
  },
  methods: {
    personRole(person) {
      if (person[this.model + "_membership"]) {
        return person[this.model + "_membership"].role;
      } else {
        if (person["project_membership"]) {
          return person["project_membership"].role;
        } else if (person["study_membership"]) {
          return person["study_membership"].role;
        } else if (person["dataset_membership"]) {
          return person["dataset_membership"].role;
        }
      }
    },
    addModelMember() {
      this.addMemberForm.post(
        route(this.model + "-members.store", this[this.model]),
        {
          errorBag: "addModelMember",
          preserveScroll: true,
          onSuccess: () => this.addMemberForm.reset()
        }
      );
    },
    cancelModelInvitation(invitation) {
      this.$inertia.delete(
        route(this.model + "-invitations.destroy", invitation),
        {
          preserveScroll: true
        }
      );
    },
    updateRole(role, managingRoleFor) {
      this.updateRoleForm.role = role.key;
      this.updateRoleForm.put(
        route(this.model + "-members.update", [
          this[this.model],
          managingRoleFor
        ]),
        {
          preserveScroll: true,
          onSuccess: () => {
            this.updateRoleForm.role = null;
          }
        }
      );
    },
    removeModelMember(modelMemberBeingRemoved) {
      this.removeModelMemberForm.delete(
        route(this.model + "-members.destroy", [
          this[this.model],
          modelMemberBeingRemoved
        ]),
        {
          errorBag: "removeModelMember",
          preserveScroll: true,
          preserveState: true,
          onSuccess: () => {
          }
        }
      );
    }
  }
};
function _sfc_ssrRender$15(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_TransitionRoot = resolveComponent("TransitionRoot");
  const _component_Dialog = resolveComponent("Dialog");
  const _component_TransitionChild = resolveComponent("TransitionChild");
  const _component_DialogPanel = resolveComponent("DialogPanel");
  const _component_Menu = resolveComponent("Menu");
  const _component_MenuButton = resolveComponent("MenuButton");
  const _component_ChevronDownIcon = resolveComponent("ChevronDownIcon");
  const _component_MenuItems = resolveComponent("MenuItems");
  const _component_MenuItem = resolveComponent("MenuItem");
  const _component_jet_modal_form_section = resolveComponent("jet-modal-form-section");
  const _component_jet_label = resolveComponent("jet-label");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_jet_text_area = resolveComponent("jet-text-area");
  const _component_jet_button = resolveComponent("jet-button");
  const _component_jet_action_message = resolveComponent("jet-action-message");
  _push(`<!--[--><div class="cursor-pointer flex flex-row-reverse justify-end mr-2">`);
  if ($props.members.length > 0) {
    _push(`<div class="tooltip w-8 h-8 -ml-.5 rounded-full border-2 border-white bg-gray-100" alt=""><svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 m-1.5 text-gray-400" viewBox="0 0 20 20" fill="currentColor"><path d="M8 9a3 3 0 100-6 3 3 0 000 6zM8 11a6 6 0 016 6H2a6 6 0 016-6zM16 7a1 1 0 10-2 0v1h-1a1 1 0 100 2h1v1a1 1 0 102 0v-1h1a1 1 0 100-2h-1V7z"></path></svg><span class="bg-gray-900 text-center text-white px-2 py-1 shadow-lg rounded-md tooltiptextbottom">Click here to edit sharing options.</span></div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`<!--[-->`);
  ssrRenderList($props.members, (user) => {
    _push(`<img class="w-8 h-8 -mr-2 rounded-full border-2 border-white"${ssrRenderAttr("src", user.profile_photo_url)}${ssrRenderAttr("alt", user.first_name)}>`);
  });
  _push(`<!--]--><!--[-->`);
  ssrRenderList($props.team ? $props.team.users : [], (user) => {
    _push(`<img class="w-8 h-8 -mr-2 rounded-full border-2 border-white"${ssrRenderAttr("src", user.profile_photo_url)}${ssrRenderAttr("alt", user.first_name)}>`);
  });
  _push(`<!--]-->`);
  if ($props.team && !$props.team.personal_team) {
    _push(`<img class="w-8 h-8 -mr-2 rounded-full border-2 border-white"${ssrRenderAttr("src", $props.team.owner.profile_photo_url)}${ssrRenderAttr("alt", $props.team.owner.first_name)}>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div>`);
  _push(ssrRenderComponent(_component_TransitionRoot, {
    show: $setup.open,
    as: "template",
    appear: "",
    onAfterLeave: ($event) => _ctx.query = ""
  }, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_Dialog, {
          as: "div",
          class: "relative z-10 p-4",
          onClose: ($event) => $setup.open = false
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_TransitionChild, {
                as: "template",
                enter: "ease-out duration-300",
                "enter-from": "opacity-0",
                "enter-to": "opacity-100",
                leave: "ease-in duration-200",
                "leave-from": "opacity-100",
                "leave-to": "opacity-0"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<div class="fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity"${_scopeId3}></div>`);
                  } else {
                    return [
                      createVNode("div", { class: "fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity" })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`<div class="fixed inset-0 z-10 overflow-y-auto p-4 sm:p-6 md:p-20"${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_TransitionChild, {
                as: "template",
                enter: "ease-out duration-300",
                "enter-from": "opacity-0 scale-95",
                "enter-to": "opacity-100 scale-100",
                leave: "ease-in duration-200",
                "leave-from": "opacity-100 scale-100",
                "leave-to": "opacity-0 scale-95"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(ssrRenderComponent(_component_DialogPanel, { class: "mx-auto max-w-xl transform rounded-xl bg-white p-2 shadow-2xl ring-1 ring-black ring-opacity-5 transition-all p-4" }, {
                      default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`<div class="sm:flex sm:items-start sm:justify-between"${_scopeId4}><div${_scopeId4}><h3 class="text-lg leading-6 font-medium text-gray-900"${_scopeId4}> Share with users </h3><span class="float-center text-xs cursor-pointer hover:text-blue-700 mt-2"${_scopeId4}><a href="https://docs.nmrxiv.org/submission-guides/sharing.html" target="_blank"${_scopeId4}>Learn more about sharing </a></span><div class="mt-2 max-w-xl text-sm text-gray-500"${_scopeId4}></div></div><div class="mt-5 sm:mt-0 sm:ml-6 sm:flex-shrink-0 sm:flex sm:items-center"${_scopeId4}>`);
                          if (!$setup.addUser && $options.canChangeRole) {
                            _push5(`<button type="button" class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm font-medium rounded-md text-white bg-gray-600 hover:bg-gray-700 focus:outline-none sm:text-sm"${_scopeId4}><svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"${_scopeId4}><path stroke-linecap="round" stroke-linejoin="round" d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"${_scopeId4}></path></svg>  SHARE </button>`);
                          } else {
                            _push5(`<!---->`);
                          }
                          if ($setup.addUser && $options.canChangeRole) {
                            _push5(`<button type="button" class="inline-flex items-center px-4 py-2 border shadow-sm font-medium rounded-md text-dark bg-white-600 hover:bg-white-700 focus:outline-none sm:text-sm"${_scopeId4}><svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"${_scopeId4}><path stroke-linecap="round" stroke-linejoin="round" d="M11 17l-5-5m0 0l5-5m-5 5h12"${_scopeId4}></path></svg></button>`);
                          } else {
                            _push5(`<!---->`);
                          }
                          _push5(`</div></div>`);
                          if (!$setup.addUser) {
                            _push5(`<div class="flow-root mt-1"${_scopeId4}>`);
                            if ($props.members.length > 0) {
                              _push5(`<ul role="list" class="my-5 shadow divide-y divide-gray-200"${_scopeId4}><!--[-->`);
                              ssrRenderList($props.members, (person) => {
                                _push5(`<li${_scopeId4}><a class="block"${_scopeId4}><div class="flex items-center px-4 py-4 sm:px-6"${_scopeId4}><div class="min-w-0 flex-1 pt-3 flex items-center"${_scopeId4}><div class="flex-shrink-0"${_scopeId4}><img class="h-12 w-12 rounded-full"${ssrRenderAttr(
                                  "src",
                                  person.profile_photo_url
                                )}${ssrRenderAttr("alt", person.first_name)}${_scopeId4}></div><div class="min-w-0 flex-1 px-4"${_scopeId4}><div${_scopeId4}><p class="text-sm font-medium text-gray-600"${_scopeId4}>${ssrInterpolate(person.first_name)} ${ssrInterpolate(person.last_name)} `);
                                if (_ctx.$page.props.user.email == person.email) {
                                  _push5(`<span${_scopeId4}>(you)</span>`);
                                } else {
                                  _push5(`<!---->`);
                                }
                                _push5(`</p><p class="mt-2 flex items-center text-sm text-gray-500"${_scopeId4}><svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"${_scopeId4}><path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"${_scopeId4}></path><path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"${_scopeId4}></path></svg><span${_scopeId4}>${ssrInterpolate(person.email)}</span></p></div></div></div><div class="-mt-4"${_scopeId4}>`);
                                if ($options.canChangeRole && !$options.isProjectAlreadyShared) {
                                  _push5(`<div${_scopeId4}>`);
                                  if ($options.personRole(
                                    person
                                  ) && $options.personRole(
                                    person
                                  ) == "creator") {
                                    _push5(`<div${_scopeId4}><span class="ml-6 text-sm text-dark-500"${_scopeId4}> Creator </span></div>`);
                                  } else {
                                    _push5(`<div${_scopeId4}><button class="cursor-pointer mr-3 text-sm text-red-500 hover:text-red-700"${_scopeId4}> Remove </button>`);
                                    _push5(ssrRenderComponent(_component_Menu, {
                                      as: "div",
                                      class: "relative inline-block text-left"
                                    }, {
                                      default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                        if (_push6) {
                                          _push6(`<div${_scopeId5}>`);
                                          _push6(ssrRenderComponent(_component_MenuButton, { class: "inline-flex justify-center w-full rounded-md capitalize border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-indigo-500" }, {
                                            default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                              if (_push7) {
                                                _push7(`${ssrInterpolate($options.personRole(
                                                  person
                                                ))} `);
                                                _push7(ssrRenderComponent(_component_ChevronDownIcon, {
                                                  class: "-mr-1 ml-2 h-5 w-5",
                                                  "aria-hidden": "true"
                                                }, null, _parent7, _scopeId6));
                                              } else {
                                                return [
                                                  createTextVNode(toDisplayString($options.personRole(
                                                    person
                                                  )) + " ", 1),
                                                  createVNode(_component_ChevronDownIcon, {
                                                    class: "-mr-1 ml-2 h-5 w-5",
                                                    "aria-hidden": "true"
                                                  })
                                                ];
                                              }
                                            }),
                                            _: 2
                                          }, _parent6, _scopeId5));
                                          _push6(`</div>`);
                                          _push6(ssrRenderComponent(_component_MenuItems, { class: "origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50" }, {
                                            default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                              if (_push7) {
                                                _push7(`<div class="py-1"${_scopeId6}><!--[-->`);
                                                ssrRenderList($props.availableRoles, (role) => {
                                                  _push7(`<span${_scopeId6}>`);
                                                  if (person[$props.model + "_membership"].role != role.key) {
                                                    _push7(ssrRenderComponent(_component_MenuItem, {
                                                      onClick: ($event) => $options.updateRole(
                                                        role,
                                                        person
                                                      )
                                                    }, {
                                                      default: withCtx(({
                                                        active
                                                      }, _push8, _parent8, _scopeId7) => {
                                                        if (_push8) {
                                                          _push8(`<a href="#" class="${ssrRenderClass([
                                                            active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                                            "block px-4 py-2 text-sm"
                                                          ])}"${_scopeId7}>${ssrInterpolate(role.name)}</a>`);
                                                        } else {
                                                          return [
                                                            createVNode("a", {
                                                              href: "#",
                                                              class: [
                                                                active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                                                "block px-4 py-2 text-sm"
                                                              ]
                                                            }, toDisplayString(role.name), 3)
                                                          ];
                                                        }
                                                      }),
                                                      _: 2
                                                    }, _parent7, _scopeId6));
                                                  } else {
                                                    _push7(`<!---->`);
                                                  }
                                                  _push7(`</span>`);
                                                });
                                                _push7(`<!--]--></div>`);
                                              } else {
                                                return [
                                                  createVNode("div", { class: "py-1" }, [
                                                    (openBlock(true), createBlock(Fragment, null, renderList($props.availableRoles, (role) => {
                                                      return openBlock(), createBlock("span", {
                                                        key: role.key
                                                      }, [
                                                        person[$props.model + "_membership"].role != role.key ? (openBlock(), createBlock(_component_MenuItem, {
                                                          key: 0,
                                                          onClick: ($event) => $options.updateRole(
                                                            role,
                                                            person
                                                          )
                                                        }, {
                                                          default: withCtx(({
                                                            active
                                                          }) => [
                                                            createVNode("a", {
                                                              href: "#",
                                                              class: [
                                                                active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                                                "block px-4 py-2 text-sm"
                                                              ]
                                                            }, toDisplayString(role.name), 3)
                                                          ]),
                                                          _: 2
                                                        }, 1032, ["onClick"])) : createCommentVNode("", true)
                                                      ]);
                                                    }), 128))
                                                  ])
                                                ];
                                              }
                                            }),
                                            _: 2
                                          }, _parent6, _scopeId5));
                                        } else {
                                          return [
                                            createVNode("div", null, [
                                              createVNode(_component_MenuButton, { class: "inline-flex justify-center w-full rounded-md capitalize border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-indigo-500" }, {
                                                default: withCtx(() => [
                                                  createTextVNode(toDisplayString($options.personRole(
                                                    person
                                                  )) + " ", 1),
                                                  createVNode(_component_ChevronDownIcon, {
                                                    class: "-mr-1 ml-2 h-5 w-5",
                                                    "aria-hidden": "true"
                                                  })
                                                ]),
                                                _: 2
                                              }, 1024)
                                            ]),
                                            createVNode(Transition, {
                                              "enter-active-class": "transition ease-out duration-100",
                                              "enter-from-class": "transform opacity-0 scale-95",
                                              "enter-to-class": "transform opacity-100 scale-100",
                                              "leave-active-class": "transition ease-in duration-75",
                                              "leave-from-class": "transform opacity-100 scale-100",
                                              "leave-to-class": "transform opacity-0 scale-95"
                                            }, {
                                              default: withCtx(() => [
                                                createVNode(_component_MenuItems, { class: "origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50" }, {
                                                  default: withCtx(() => [
                                                    createVNode("div", { class: "py-1" }, [
                                                      (openBlock(true), createBlock(Fragment, null, renderList($props.availableRoles, (role) => {
                                                        return openBlock(), createBlock("span", {
                                                          key: role.key
                                                        }, [
                                                          person[$props.model + "_membership"].role != role.key ? (openBlock(), createBlock(_component_MenuItem, {
                                                            key: 0,
                                                            onClick: ($event) => $options.updateRole(
                                                              role,
                                                              person
                                                            )
                                                          }, {
                                                            default: withCtx(({
                                                              active
                                                            }) => [
                                                              createVNode("a", {
                                                                href: "#",
                                                                class: [
                                                                  active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                                                  "block px-4 py-2 text-sm"
                                                                ]
                                                              }, toDisplayString(role.name), 3)
                                                            ]),
                                                            _: 2
                                                          }, 1032, ["onClick"])) : createCommentVNode("", true)
                                                        ]);
                                                      }), 128))
                                                    ])
                                                  ]),
                                                  _: 2
                                                }, 1024)
                                              ]),
                                              _: 2
                                            }, 1024)
                                          ];
                                        }
                                      }),
                                      _: 2
                                    }, _parent5, _scopeId4));
                                    _push5(`</div>`);
                                  }
                                  _push5(`</div>`);
                                } else {
                                  _push5(`<div${_scopeId4}>`);
                                  if ($options.personRole(person)) {
                                    _push5(`<div${_scopeId4}><span class="ml-6 text-sm capitalize text-dark-500"${_scopeId4}>${ssrInterpolate($options.personRole(
                                      person
                                    ))}</span></div>`);
                                  } else {
                                    _push5(`<!---->`);
                                  }
                                  _push5(`</div>`);
                                }
                                _push5(`</div></div></a></li>`);
                              });
                              _push5(`<!--]--></ul>`);
                            } else {
                              _push5(`<!---->`);
                            }
                            if ($props.team && !$props.team.personal_team) {
                              _push5(`<span${_scopeId4}><div class="mb-2"${_scopeId4}><h2 class="text-lg uppercase leading-6 font-medium text-gray-900"${_scopeId4}>${ssrInterpolate($props.team.name)}</h2><p class="mt-1 text-sm text-gray-500"${_scopeId4}> All the users (corresponding roles) in the team will be applicable to this ${ssrInterpolate($props.model)}. </p></div><div class="bg-white shadow overflow-hidden sm:rounded-md"${_scopeId4}><ul role="list" class="divide-y divide-gray-200"${_scopeId4}><!--[-->`);
                              ssrRenderList($props.team.users, (person) => {
                                _push5(`<li${_scopeId4}><a class="block hover:bg-gray-50"${_scopeId4}><div class="flex items-center px-4 py-4 sm:px-6"${_scopeId4}><div class="min-w-0 flex-1 flex items-center"${_scopeId4}><div class="flex-shrink-0"${_scopeId4}><img class="h-12 w-12 rounded-full"${ssrRenderAttr(
                                  "src",
                                  person.profile_photo_url
                                )}${ssrRenderAttr(
                                  "alt",
                                  person.first_name
                                )}${_scopeId4}></div><div class="min-w-0 flex-1 px-4 md:grid md:grid-cols-2 md:gap-4"${_scopeId4}><div${_scopeId4}><p class="text-sm font-medium text-gray-600 truncate"${_scopeId4}>${ssrInterpolate(person.first_name)}</p><p class="mt-2 flex items-center text-sm text-gray-500"${_scopeId4}><svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"${_scopeId4}><path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"${_scopeId4}></path><path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"${_scopeId4}></path></svg><span class="truncate"${_scopeId4}>${ssrInterpolate(person.email)}</span></p></div></div></div><div${_scopeId4}><span class="inline-flex capitalize items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800"${_scopeId4}>${ssrInterpolate(person.membership.role)}</span></div></div></a></li>`);
                              });
                              _push5(`<!--]--><li${_scopeId4}><a class="block hover:bg-gray-50"${_scopeId4}><div class="flex items-center px-4 py-4 sm:px-6"${_scopeId4}><div class="min-w-0 flex-1 flex items-center"${_scopeId4}><div class="flex-shrink-0"${_scopeId4}><img class="h-12 w-12 rounded-full"${ssrRenderAttr(
                                "src",
                                $props.team.owner.profile_photo_url
                              )}${ssrRenderAttr(
                                "alt",
                                $props.team.owner.first_name
                              )}${_scopeId4}></div><div class="min-w-0 flex-1 px-4 md:grid md:grid-cols-2 md:gap-4"${_scopeId4}><div${_scopeId4}><p class="text-sm font-medium text-gray-600 truncate"${_scopeId4}>${ssrInterpolate($props.team.owner.first_name)}</p><p class="mt-2 flex items-center text-sm text-gray-500"${_scopeId4}><svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"${_scopeId4}><path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"${_scopeId4}></path><path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"${_scopeId4}></path></svg><span class="truncate"${_scopeId4}>${ssrInterpolate($props.team.owner.email)}</span></p></div></div></div><div${_scopeId4}><span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800"${_scopeId4}>owner</span></div></div></a></li></ul></div></span>`);
                            } else {
                              _push5(`<!---->`);
                            }
                            if ($options.modelInvitations.length > 0) {
                              _push5(`<div class="pb-5"${_scopeId4}>`);
                              _push5(ssrRenderComponent(_component_jet_modal_form_section, { class: "mt-10 sm:mt-0" }, {
                                form: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                  if (_push6) {
                                    _push6(`<div class="mb-2 mt-5 col-span-12"${_scopeId5}><h2 class="text-lg leading-6 font-medium text-gray-900"${_scopeId5}> Pending Project Invitations </h2><p class="mt-1 text-sm text-gray-500"${_scopeId5}> These people have been invited to your ${ssrInterpolate($props.model)} and have been sent an invitation email. They may join the ${ssrInterpolate($props.model)} by accepting the email invitation. </p></div><div class="space-y-3 col-span-12 mb-3"${_scopeId5}><!--[-->`);
                                    ssrRenderList($options.modelInvitations, (invitation) => {
                                      _push6(`<div class="flex px-4 items-center justify-between"${_scopeId5}><div class="text-gray-600"${_scopeId5}>${ssrInterpolate(invitation.email)}</div><div class="flex items-center"${_scopeId5}><button class="cursor-pointer ml-6 text-sm text-red-500 focus:outline-none"${_scopeId5}> Cancel </button></div></div>`);
                                    });
                                    _push6(`<!--]--></div>`);
                                  } else {
                                    return [
                                      createVNode("div", { class: "mb-2 mt-5 col-span-12" }, [
                                        createVNode("h2", { class: "text-lg leading-6 font-medium text-gray-900" }, " Pending Project Invitations "),
                                        createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " These people have been invited to your " + toDisplayString($props.model) + " and have been sent an invitation email. They may join the " + toDisplayString($props.model) + " by accepting the email invitation. ", 1)
                                      ]),
                                      createVNode("div", { class: "space-y-3 col-span-12 mb-3" }, [
                                        (openBlock(true), createBlock(Fragment, null, renderList($options.modelInvitations, (invitation) => {
                                          return openBlock(), createBlock("div", {
                                            key: invitation.id,
                                            class: "flex px-4 items-center justify-between"
                                          }, [
                                            createVNode("div", { class: "text-gray-600" }, toDisplayString(invitation.email), 1),
                                            createVNode("div", { class: "flex items-center" }, [
                                              createVNode("button", {
                                                class: "cursor-pointer ml-6 text-sm text-red-500 focus:outline-none",
                                                onClick: ($event) => $options.cancelModelInvitation(
                                                  invitation
                                                )
                                              }, " Cancel ", 8, ["onClick"])
                                            ])
                                          ]);
                                        }), 128))
                                      ])
                                    ];
                                  }
                                }),
                                _: 1
                              }, _parent5, _scopeId4));
                              _push5(`</div>`);
                            } else {
                              _push5(`<!---->`);
                            }
                            _push5(`</div>`);
                          } else {
                            _push5(`<div${_scopeId4}>`);
                            _push5(ssrRenderComponent(_component_jet_modal_form_section, {
                              class: "space-y-3",
                              onSubmitted: $options.addModelMember
                            }, {
                              form: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                if (_push6) {
                                  _push6(`<div class="col-span-12"${_scopeId5}><div class="max-w-xl mt-2 text-sm text-gray-600"${_scopeId5}> Please provide the email address of the person you would like to add. </div></div><div class="col-span-12"${_scopeId5}>`);
                                  _push6(ssrRenderComponent(_component_jet_label, {
                                    for: "email",
                                    value: "Email"
                                  }, null, _parent6, _scopeId5));
                                  _push6(ssrRenderComponent(_component_jet_input, {
                                    id: "email",
                                    modelValue: $data.addMemberForm.email,
                                    "onUpdate:modelValue": ($event) => $data.addMemberForm.email = $event,
                                    type: "email",
                                    class: "mt-1 block w-full"
                                  }, null, _parent6, _scopeId5));
                                  _push6(ssrRenderComponent(_component_jet_input_error, {
                                    message: $data.addMemberForm.errors.email,
                                    class: "mt-2"
                                  }, null, _parent6, _scopeId5));
                                  _push6(`</div>`);
                                  if ($props.availableRoles.length > 0) {
                                    _push6(`<div class="col-span-12"${_scopeId5}>`);
                                    _push6(ssrRenderComponent(_component_jet_label, {
                                      for: "roles",
                                      value: "Role"
                                    }, null, _parent6, _scopeId5));
                                    _push6(ssrRenderComponent(_component_jet_input_error, {
                                      message: $data.addMemberForm.errors.role,
                                      class: "mt-2"
                                    }, null, _parent6, _scopeId5));
                                    _push6(`<div class="relative z-0 mt-1 border border-gray-200 rounded-lg cursor-pointer"${_scopeId5}><!--[-->`);
                                    ssrRenderList($props.availableRoles, (role, i2) => {
                                      _push6(`<button type="button" class="${ssrRenderClass([{
                                        "border-t border-gray-200 rounded-t-none": i2 > 0,
                                        "rounded-b-none": i2 != Object.keys(
                                          $props.availableRoles
                                        ).length - 1
                                      }, "relative px-4 py-3 inline-flex w-full rounded-lg focus:z-10 focus:outline-none focus:border-blue-300 focus:ring focus:ring-blue-200"])}"${_scopeId5}><div class="${ssrRenderClass({
                                        "opacity-50": $data.addMemberForm.role && $data.addMemberForm.role != role.key
                                      })}"${_scopeId5}><div class="flex items-center"${_scopeId5}><div class="${ssrRenderClass([{
                                        "font-semibold": $data.addMemberForm.role == role.key
                                      }, "text-sm text-gray-600"])}"${_scopeId5}>${ssrInterpolate(role.name)}</div>`);
                                      if ($data.addMemberForm.role == role.key) {
                                        _push6(`<svg class="ml-2 h-5 w-5 text-green-400" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" stroke="currentColor" viewBox="0 0 24 24"${_scopeId5}><path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"${_scopeId5}></path></svg>`);
                                      } else {
                                        _push6(`<!---->`);
                                      }
                                      _push6(`</div><div class="mt-2 text-xs text-gray-600"${_scopeId5}>${ssrInterpolate(role.description)}</div></div></button>`);
                                    });
                                    _push6(`<!--]--></div></div>`);
                                  } else {
                                    _push6(`<!---->`);
                                  }
                                  _push6(`<div class="col-span-12"${_scopeId5}>`);
                                  _push6(ssrRenderComponent(_component_jet_label, {
                                    for: "message",
                                    value: "Message"
                                  }, null, _parent6, _scopeId5));
                                  _push6(ssrRenderComponent(_component_jet_text_area, {
                                    id: "message",
                                    modelValue: $data.addMemberForm.message,
                                    "onUpdate:modelValue": ($event) => $data.addMemberForm.message = $event,
                                    rows: 3,
                                    class: "mt-1 block w-full"
                                  }, null, _parent6, _scopeId5));
                                  _push6(ssrRenderComponent(_component_jet_input_error, {
                                    message: $data.addMemberForm.errors.message,
                                    class: "mt-2"
                                  }, null, _parent6, _scopeId5));
                                  _push6(`</div>`);
                                } else {
                                  return [
                                    createVNode("div", { class: "col-span-12" }, [
                                      createVNode("div", { class: "max-w-xl mt-2 text-sm text-gray-600" }, " Please provide the email address of the person you would like to add. ")
                                    ]),
                                    createVNode("div", { class: "col-span-12" }, [
                                      createVNode(_component_jet_label, {
                                        for: "email",
                                        value: "Email"
                                      }),
                                      createVNode(_component_jet_input, {
                                        id: "email",
                                        modelValue: $data.addMemberForm.email,
                                        "onUpdate:modelValue": ($event) => $data.addMemberForm.email = $event,
                                        type: "email",
                                        class: "mt-1 block w-full"
                                      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                                      createVNode(_component_jet_input_error, {
                                        message: $data.addMemberForm.errors.email,
                                        class: "mt-2"
                                      }, null, 8, ["message"])
                                    ]),
                                    $props.availableRoles.length > 0 ? (openBlock(), createBlock("div", {
                                      key: 0,
                                      class: "col-span-12"
                                    }, [
                                      createVNode(_component_jet_label, {
                                        for: "roles",
                                        value: "Role"
                                      }),
                                      createVNode(_component_jet_input_error, {
                                        message: $data.addMemberForm.errors.role,
                                        class: "mt-2"
                                      }, null, 8, ["message"]),
                                      createVNode("div", { class: "relative z-0 mt-1 border border-gray-200 rounded-lg cursor-pointer" }, [
                                        (openBlock(true), createBlock(Fragment, null, renderList($props.availableRoles, (role, i2) => {
                                          return openBlock(), createBlock("button", {
                                            key: role.key,
                                            type: "button",
                                            class: ["relative px-4 py-3 inline-flex w-full rounded-lg focus:z-10 focus:outline-none focus:border-blue-300 focus:ring focus:ring-blue-200", {
                                              "border-t border-gray-200 rounded-t-none": i2 > 0,
                                              "rounded-b-none": i2 != Object.keys(
                                                $props.availableRoles
                                              ).length - 1
                                            }],
                                            onClick: ($event) => $data.addMemberForm.role = role.key
                                          }, [
                                            createVNode("div", {
                                              class: {
                                                "opacity-50": $data.addMemberForm.role && $data.addMemberForm.role != role.key
                                              }
                                            }, [
                                              createVNode("div", { class: "flex items-center" }, [
                                                createVNode("div", {
                                                  class: ["text-sm text-gray-600", {
                                                    "font-semibold": $data.addMemberForm.role == role.key
                                                  }]
                                                }, toDisplayString(role.name), 3),
                                                $data.addMemberForm.role == role.key ? (openBlock(), createBlock("svg", {
                                                  key: 0,
                                                  class: "ml-2 h-5 w-5 text-green-400",
                                                  fill: "none",
                                                  "stroke-linecap": "round",
                                                  "stroke-linejoin": "round",
                                                  "stroke-width": "2",
                                                  stroke: "currentColor",
                                                  viewBox: "0 0 24 24"
                                                }, [
                                                  createVNode("path", { d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" })
                                                ])) : createCommentVNode("", true)
                                              ]),
                                              createVNode("div", { class: "mt-2 text-xs text-gray-600" }, toDisplayString(role.description), 1)
                                            ], 2)
                                          ], 10, ["onClick"]);
                                        }), 128))
                                      ])
                                    ])) : createCommentVNode("", true),
                                    createVNode("div", { class: "col-span-12" }, [
                                      createVNode(_component_jet_label, {
                                        for: "message",
                                        value: "Message"
                                      }),
                                      createVNode(_component_jet_text_area, {
                                        id: "message",
                                        modelValue: $data.addMemberForm.message,
                                        "onUpdate:modelValue": ($event) => $data.addMemberForm.message = $event,
                                        rows: 3,
                                        class: "mt-1 block w-full"
                                      }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                                      createVNode(_component_jet_input_error, {
                                        message: $data.addMemberForm.errors.message,
                                        class: "mt-2"
                                      }, null, 8, ["message"])
                                    ])
                                  ];
                                }
                              }),
                              actions: withCtx((_5, _push6, _parent6, _scopeId5) => {
                                if (_push6) {
                                  _push6(ssrRenderComponent(_component_jet_button, {
                                    class: {
                                      "opacity-25": $data.addMemberForm.processing
                                    },
                                    disabled: $data.addMemberForm.processing
                                  }, {
                                    default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                      if (_push7) {
                                        _push7(` SEND `);
                                      } else {
                                        return [
                                          createTextVNode(" SEND ")
                                        ];
                                      }
                                    }),
                                    _: 1
                                  }, _parent6, _scopeId5));
                                  _push6(ssrRenderComponent(_component_jet_action_message, {
                                    on: $data.addMemberForm.recentlySuccessful,
                                    class: "mx-3 inline-flex"
                                  }, {
                                    default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                      if (_push7) {
                                        _push7(` Added. `);
                                      } else {
                                        return [
                                          createTextVNode(" Added. ")
                                        ];
                                      }
                                    }),
                                    _: 1
                                  }, _parent6, _scopeId5));
                                } else {
                                  return [
                                    createVNode(_component_jet_button, {
                                      class: {
                                        "opacity-25": $data.addMemberForm.processing
                                      },
                                      disabled: $data.addMemberForm.processing
                                    }, {
                                      default: withCtx(() => [
                                        createTextVNode(" SEND ")
                                      ]),
                                      _: 1
                                    }, 8, ["class", "disabled"]),
                                    createVNode(_component_jet_action_message, {
                                      on: $data.addMemberForm.recentlySuccessful,
                                      class: "mx-3 inline-flex"
                                    }, {
                                      default: withCtx(() => [
                                        createTextVNode(" Added. ")
                                      ]),
                                      _: 1
                                    }, 8, ["on"])
                                  ];
                                }
                              }),
                              _: 1
                            }, _parent5, _scopeId4));
                            _push5(`</div>`);
                          }
                        } else {
                          return [
                            createVNode("div", { class: "sm:flex sm:items-start sm:justify-between" }, [
                              createVNode("div", null, [
                                createVNode("h3", { class: "text-lg leading-6 font-medium text-gray-900" }, " Share with users "),
                                createVNode("span", { class: "float-center text-xs cursor-pointer hover:text-blue-700 mt-2" }, [
                                  createVNode("a", {
                                    href: "https://docs.nmrxiv.org/submission-guides/sharing.html",
                                    target: "_blank"
                                  }, "Learn more about sharing ")
                                ]),
                                createVNode("div", { class: "mt-2 max-w-xl text-sm text-gray-500" })
                              ]),
                              createVNode("div", { class: "mt-5 sm:mt-0 sm:ml-6 sm:flex-shrink-0 sm:flex sm:items-center" }, [
                                !$setup.addUser && $options.canChangeRole ? (openBlock(), createBlock("button", {
                                  key: 0,
                                  type: "button",
                                  class: "inline-flex items-center px-4 py-2 border border-transparent shadow-sm font-medium rounded-md text-white bg-gray-600 hover:bg-gray-700 focus:outline-none sm:text-sm",
                                  onClick: ($event) => $setup.addUser = true
                                }, [
                                  (openBlock(), createBlock("svg", {
                                    xmlns: "http://www.w3.org/2000/svg",
                                    class: "h-4 w-4",
                                    fill: "none",
                                    viewBox: "0 0 24 24",
                                    stroke: "currentColor",
                                    "stroke-width": "2"
                                  }, [
                                    createVNode("path", {
                                      "stroke-linecap": "round",
                                      "stroke-linejoin": "round",
                                      d: "M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"
                                    })
                                  ])),
                                  createTextVNode("  SHARE ")
                                ], 8, ["onClick"])) : createCommentVNode("", true),
                                $setup.addUser && $options.canChangeRole ? (openBlock(), createBlock("button", {
                                  key: 1,
                                  type: "button",
                                  class: "inline-flex items-center px-4 py-2 border shadow-sm font-medium rounded-md text-dark bg-white-600 hover:bg-white-700 focus:outline-none sm:text-sm",
                                  onClick: ($event) => $setup.addUser = false
                                }, [
                                  (openBlock(), createBlock("svg", {
                                    xmlns: "http://www.w3.org/2000/svg",
                                    class: "h-6 w-6",
                                    fill: "none",
                                    viewBox: "0 0 24 24",
                                    stroke: "currentColor",
                                    "stroke-width": "2"
                                  }, [
                                    createVNode("path", {
                                      "stroke-linecap": "round",
                                      "stroke-linejoin": "round",
                                      d: "M11 17l-5-5m0 0l5-5m-5 5h12"
                                    })
                                  ]))
                                ], 8, ["onClick"])) : createCommentVNode("", true)
                              ])
                            ]),
                            !$setup.addUser ? (openBlock(), createBlock("div", {
                              key: 0,
                              class: "flow-root mt-1"
                            }, [
                              $props.members.length > 0 ? (openBlock(), createBlock("ul", {
                                key: 0,
                                role: "list",
                                class: "my-5 shadow divide-y divide-gray-200"
                              }, [
                                (openBlock(true), createBlock(Fragment, null, renderList($props.members, (person) => {
                                  return openBlock(), createBlock("li", {
                                    key: person.email
                                  }, [
                                    createVNode("a", { class: "block" }, [
                                      createVNode("div", { class: "flex items-center px-4 py-4 sm:px-6" }, [
                                        createVNode("div", { class: "min-w-0 flex-1 pt-3 flex items-center" }, [
                                          createVNode("div", { class: "flex-shrink-0" }, [
                                            (openBlock(), createBlock("img", {
                                              key: person.id,
                                              class: "h-12 w-12 rounded-full",
                                              src: person.profile_photo_url,
                                              alt: person.first_name
                                            }, null, 8, ["src", "alt"]))
                                          ]),
                                          createVNode("div", { class: "min-w-0 flex-1 px-4" }, [
                                            createVNode("div", null, [
                                              createVNode("p", { class: "text-sm font-medium text-gray-600" }, [
                                                createTextVNode(toDisplayString(person.first_name) + " " + toDisplayString(person.last_name) + " ", 1),
                                                _ctx.$page.props.user.email == person.email ? (openBlock(), createBlock("span", { key: 0 }, "(you)")) : createCommentVNode("", true)
                                              ]),
                                              createVNode("p", { class: "mt-2 flex items-center text-sm text-gray-500" }, [
                                                (openBlock(), createBlock("svg", {
                                                  class: "flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400",
                                                  xmlns: "http://www.w3.org/2000/svg",
                                                  viewBox: "0 0 20 20",
                                                  fill: "currentColor",
                                                  "aria-hidden": "true"
                                                }, [
                                                  createVNode("path", { d: "M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z" }),
                                                  createVNode("path", { d: "M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z" })
                                                ])),
                                                createVNode("span", null, toDisplayString(person.email), 1)
                                              ])
                                            ])
                                          ])
                                        ]),
                                        createVNode("div", { class: "-mt-4" }, [
                                          $options.canChangeRole && !$options.isProjectAlreadyShared ? (openBlock(), createBlock("div", { key: 0 }, [
                                            $options.personRole(
                                              person
                                            ) && $options.personRole(
                                              person
                                            ) == "creator" ? (openBlock(), createBlock("div", { key: 0 }, [
                                              createVNode("span", { class: "ml-6 text-sm text-dark-500" }, " Creator ")
                                            ])) : (openBlock(), createBlock("div", { key: 1 }, [
                                              createVNode("button", {
                                                class: "cursor-pointer mr-3 text-sm text-red-500 hover:text-red-700",
                                                onClick: ($event) => $options.removeModelMember(
                                                  person
                                                )
                                              }, " Remove ", 8, ["onClick"]),
                                              createVNode(_component_Menu, {
                                                as: "div",
                                                class: "relative inline-block text-left"
                                              }, {
                                                default: withCtx(() => [
                                                  createVNode("div", null, [
                                                    createVNode(_component_MenuButton, { class: "inline-flex justify-center w-full rounded-md capitalize border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-indigo-500" }, {
                                                      default: withCtx(() => [
                                                        createTextVNode(toDisplayString($options.personRole(
                                                          person
                                                        )) + " ", 1),
                                                        createVNode(_component_ChevronDownIcon, {
                                                          class: "-mr-1 ml-2 h-5 w-5",
                                                          "aria-hidden": "true"
                                                        })
                                                      ]),
                                                      _: 2
                                                    }, 1024)
                                                  ]),
                                                  createVNode(Transition, {
                                                    "enter-active-class": "transition ease-out duration-100",
                                                    "enter-from-class": "transform opacity-0 scale-95",
                                                    "enter-to-class": "transform opacity-100 scale-100",
                                                    "leave-active-class": "transition ease-in duration-75",
                                                    "leave-from-class": "transform opacity-100 scale-100",
                                                    "leave-to-class": "transform opacity-0 scale-95"
                                                  }, {
                                                    default: withCtx(() => [
                                                      createVNode(_component_MenuItems, { class: "origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50" }, {
                                                        default: withCtx(() => [
                                                          createVNode("div", { class: "py-1" }, [
                                                            (openBlock(true), createBlock(Fragment, null, renderList($props.availableRoles, (role) => {
                                                              return openBlock(), createBlock("span", {
                                                                key: role.key
                                                              }, [
                                                                person[$props.model + "_membership"].role != role.key ? (openBlock(), createBlock(_component_MenuItem, {
                                                                  key: 0,
                                                                  onClick: ($event) => $options.updateRole(
                                                                    role,
                                                                    person
                                                                  )
                                                                }, {
                                                                  default: withCtx(({
                                                                    active
                                                                  }) => [
                                                                    createVNode("a", {
                                                                      href: "#",
                                                                      class: [
                                                                        active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                                                        "block px-4 py-2 text-sm"
                                                                      ]
                                                                    }, toDisplayString(role.name), 3)
                                                                  ]),
                                                                  _: 2
                                                                }, 1032, ["onClick"])) : createCommentVNode("", true)
                                                              ]);
                                                            }), 128))
                                                          ])
                                                        ]),
                                                        _: 2
                                                      }, 1024)
                                                    ]),
                                                    _: 2
                                                  }, 1024)
                                                ]),
                                                _: 2
                                              }, 1024)
                                            ]))
                                          ])) : (openBlock(), createBlock("div", { key: 1 }, [
                                            $options.personRole(person) ? (openBlock(), createBlock("div", { key: 0 }, [
                                              createVNode("span", { class: "ml-6 text-sm capitalize text-dark-500" }, toDisplayString($options.personRole(
                                                person
                                              )), 1)
                                            ])) : createCommentVNode("", true)
                                          ]))
                                        ])
                                      ])
                                    ])
                                  ]);
                                }), 128))
                              ])) : createCommentVNode("", true),
                              $props.team && !$props.team.personal_team ? (openBlock(), createBlock("span", { key: 1 }, [
                                createVNode("div", { class: "mb-2" }, [
                                  createVNode("h2", { class: "text-lg uppercase leading-6 font-medium text-gray-900" }, toDisplayString($props.team.name), 1),
                                  createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " All the users (corresponding roles) in the team will be applicable to this " + toDisplayString($props.model) + ". ", 1)
                                ]),
                                createVNode("div", { class: "bg-white shadow overflow-hidden sm:rounded-md" }, [
                                  createVNode("ul", {
                                    role: "list",
                                    class: "divide-y divide-gray-200"
                                  }, [
                                    (openBlock(true), createBlock(Fragment, null, renderList($props.team.users, (person) => {
                                      return openBlock(), createBlock("li", {
                                        key: person.email
                                      }, [
                                        createVNode("a", { class: "block hover:bg-gray-50" }, [
                                          createVNode("div", { class: "flex items-center px-4 py-4 sm:px-6" }, [
                                            createVNode("div", { class: "min-w-0 flex-1 flex items-center" }, [
                                              createVNode("div", { class: "flex-shrink-0" }, [
                                                (openBlock(), createBlock("img", {
                                                  key: person.id,
                                                  class: "h-12 w-12 rounded-full",
                                                  src: person.profile_photo_url,
                                                  alt: person.first_name
                                                }, null, 8, ["src", "alt"]))
                                              ]),
                                              createVNode("div", { class: "min-w-0 flex-1 px-4 md:grid md:grid-cols-2 md:gap-4" }, [
                                                createVNode("div", null, [
                                                  createVNode("p", { class: "text-sm font-medium text-gray-600 truncate" }, toDisplayString(person.first_name), 1),
                                                  createVNode("p", { class: "mt-2 flex items-center text-sm text-gray-500" }, [
                                                    (openBlock(), createBlock("svg", {
                                                      class: "flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400",
                                                      xmlns: "http://www.w3.org/2000/svg",
                                                      viewBox: "0 0 20 20",
                                                      fill: "currentColor",
                                                      "aria-hidden": "true"
                                                    }, [
                                                      createVNode("path", { d: "M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z" }),
                                                      createVNode("path", { d: "M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z" })
                                                    ])),
                                                    createVNode("span", { class: "truncate" }, toDisplayString(person.email), 1)
                                                  ])
                                                ])
                                              ])
                                            ]),
                                            createVNode("div", null, [
                                              createVNode("span", { class: "inline-flex capitalize items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800" }, toDisplayString(person.membership.role), 1)
                                            ])
                                          ])
                                        ])
                                      ]);
                                    }), 128)),
                                    createVNode("li", null, [
                                      createVNode("a", { class: "block hover:bg-gray-50" }, [
                                        createVNode("div", { class: "flex items-center px-4 py-4 sm:px-6" }, [
                                          createVNode("div", { class: "min-w-0 flex-1 flex items-center" }, [
                                            createVNode("div", { class: "flex-shrink-0" }, [
                                              (openBlock(), createBlock("img", {
                                                key: $props.team.owner.id,
                                                class: "h-12 w-12 rounded-full",
                                                src: $props.team.owner.profile_photo_url,
                                                alt: $props.team.owner.first_name
                                              }, null, 8, ["src", "alt"]))
                                            ]),
                                            createVNode("div", { class: "min-w-0 flex-1 px-4 md:grid md:grid-cols-2 md:gap-4" }, [
                                              createVNode("div", null, [
                                                createVNode("p", { class: "text-sm font-medium text-gray-600 truncate" }, toDisplayString($props.team.owner.first_name), 1),
                                                createVNode("p", { class: "mt-2 flex items-center text-sm text-gray-500" }, [
                                                  (openBlock(), createBlock("svg", {
                                                    class: "flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400",
                                                    xmlns: "http://www.w3.org/2000/svg",
                                                    viewBox: "0 0 20 20",
                                                    fill: "currentColor",
                                                    "aria-hidden": "true"
                                                  }, [
                                                    createVNode("path", { d: "M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z" }),
                                                    createVNode("path", { d: "M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z" })
                                                  ])),
                                                  createVNode("span", { class: "truncate" }, toDisplayString($props.team.owner.email), 1)
                                                ])
                                              ])
                                            ])
                                          ]),
                                          createVNode("div", null, [
                                            createVNode("span", { class: "inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800" }, "owner")
                                          ])
                                        ])
                                      ])
                                    ])
                                  ])
                                ])
                              ])) : createCommentVNode("", true),
                              $options.modelInvitations.length > 0 ? (openBlock(), createBlock("div", {
                                key: 2,
                                class: "pb-5"
                              }, [
                                createVNode(_component_jet_modal_form_section, { class: "mt-10 sm:mt-0" }, {
                                  form: withCtx(() => [
                                    createVNode("div", { class: "mb-2 mt-5 col-span-12" }, [
                                      createVNode("h2", { class: "text-lg leading-6 font-medium text-gray-900" }, " Pending Project Invitations "),
                                      createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " These people have been invited to your " + toDisplayString($props.model) + " and have been sent an invitation email. They may join the " + toDisplayString($props.model) + " by accepting the email invitation. ", 1)
                                    ]),
                                    createVNode("div", { class: "space-y-3 col-span-12 mb-3" }, [
                                      (openBlock(true), createBlock(Fragment, null, renderList($options.modelInvitations, (invitation) => {
                                        return openBlock(), createBlock("div", {
                                          key: invitation.id,
                                          class: "flex px-4 items-center justify-between"
                                        }, [
                                          createVNode("div", { class: "text-gray-600" }, toDisplayString(invitation.email), 1),
                                          createVNode("div", { class: "flex items-center" }, [
                                            createVNode("button", {
                                              class: "cursor-pointer ml-6 text-sm text-red-500 focus:outline-none",
                                              onClick: ($event) => $options.cancelModelInvitation(
                                                invitation
                                              )
                                            }, " Cancel ", 8, ["onClick"])
                                          ])
                                        ]);
                                      }), 128))
                                    ])
                                  ]),
                                  _: 1
                                })
                              ])) : createCommentVNode("", true)
                            ])) : (openBlock(), createBlock("div", { key: 1 }, [
                              createVNode(_component_jet_modal_form_section, {
                                class: "space-y-3",
                                onSubmitted: $options.addModelMember
                              }, {
                                form: withCtx(() => [
                                  createVNode("div", { class: "col-span-12" }, [
                                    createVNode("div", { class: "max-w-xl mt-2 text-sm text-gray-600" }, " Please provide the email address of the person you would like to add. ")
                                  ]),
                                  createVNode("div", { class: "col-span-12" }, [
                                    createVNode(_component_jet_label, {
                                      for: "email",
                                      value: "Email"
                                    }),
                                    createVNode(_component_jet_input, {
                                      id: "email",
                                      modelValue: $data.addMemberForm.email,
                                      "onUpdate:modelValue": ($event) => $data.addMemberForm.email = $event,
                                      type: "email",
                                      class: "mt-1 block w-full"
                                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                                    createVNode(_component_jet_input_error, {
                                      message: $data.addMemberForm.errors.email,
                                      class: "mt-2"
                                    }, null, 8, ["message"])
                                  ]),
                                  $props.availableRoles.length > 0 ? (openBlock(), createBlock("div", {
                                    key: 0,
                                    class: "col-span-12"
                                  }, [
                                    createVNode(_component_jet_label, {
                                      for: "roles",
                                      value: "Role"
                                    }),
                                    createVNode(_component_jet_input_error, {
                                      message: $data.addMemberForm.errors.role,
                                      class: "mt-2"
                                    }, null, 8, ["message"]),
                                    createVNode("div", { class: "relative z-0 mt-1 border border-gray-200 rounded-lg cursor-pointer" }, [
                                      (openBlock(true), createBlock(Fragment, null, renderList($props.availableRoles, (role, i2) => {
                                        return openBlock(), createBlock("button", {
                                          key: role.key,
                                          type: "button",
                                          class: ["relative px-4 py-3 inline-flex w-full rounded-lg focus:z-10 focus:outline-none focus:border-blue-300 focus:ring focus:ring-blue-200", {
                                            "border-t border-gray-200 rounded-t-none": i2 > 0,
                                            "rounded-b-none": i2 != Object.keys(
                                              $props.availableRoles
                                            ).length - 1
                                          }],
                                          onClick: ($event) => $data.addMemberForm.role = role.key
                                        }, [
                                          createVNode("div", {
                                            class: {
                                              "opacity-50": $data.addMemberForm.role && $data.addMemberForm.role != role.key
                                            }
                                          }, [
                                            createVNode("div", { class: "flex items-center" }, [
                                              createVNode("div", {
                                                class: ["text-sm text-gray-600", {
                                                  "font-semibold": $data.addMemberForm.role == role.key
                                                }]
                                              }, toDisplayString(role.name), 3),
                                              $data.addMemberForm.role == role.key ? (openBlock(), createBlock("svg", {
                                                key: 0,
                                                class: "ml-2 h-5 w-5 text-green-400",
                                                fill: "none",
                                                "stroke-linecap": "round",
                                                "stroke-linejoin": "round",
                                                "stroke-width": "2",
                                                stroke: "currentColor",
                                                viewBox: "0 0 24 24"
                                              }, [
                                                createVNode("path", { d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" })
                                              ])) : createCommentVNode("", true)
                                            ]),
                                            createVNode("div", { class: "mt-2 text-xs text-gray-600" }, toDisplayString(role.description), 1)
                                          ], 2)
                                        ], 10, ["onClick"]);
                                      }), 128))
                                    ])
                                  ])) : createCommentVNode("", true),
                                  createVNode("div", { class: "col-span-12" }, [
                                    createVNode(_component_jet_label, {
                                      for: "message",
                                      value: "Message"
                                    }),
                                    createVNode(_component_jet_text_area, {
                                      id: "message",
                                      modelValue: $data.addMemberForm.message,
                                      "onUpdate:modelValue": ($event) => $data.addMemberForm.message = $event,
                                      rows: 3,
                                      class: "mt-1 block w-full"
                                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                                    createVNode(_component_jet_input_error, {
                                      message: $data.addMemberForm.errors.message,
                                      class: "mt-2"
                                    }, null, 8, ["message"])
                                  ])
                                ]),
                                actions: withCtx(() => [
                                  createVNode(_component_jet_button, {
                                    class: {
                                      "opacity-25": $data.addMemberForm.processing
                                    },
                                    disabled: $data.addMemberForm.processing
                                  }, {
                                    default: withCtx(() => [
                                      createTextVNode(" SEND ")
                                    ]),
                                    _: 1
                                  }, 8, ["class", "disabled"]),
                                  createVNode(_component_jet_action_message, {
                                    on: $data.addMemberForm.recentlySuccessful,
                                    class: "mx-3 inline-flex"
                                  }, {
                                    default: withCtx(() => [
                                      createTextVNode(" Added. ")
                                    ]),
                                    _: 1
                                  }, 8, ["on"])
                                ]),
                                _: 1
                              }, 8, ["onSubmitted"])
                            ]))
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                  } else {
                    return [
                      createVNode(_component_DialogPanel, { class: "mx-auto max-w-xl transform rounded-xl bg-white p-2 shadow-2xl ring-1 ring-black ring-opacity-5 transition-all p-4" }, {
                        default: withCtx(() => [
                          createVNode("div", { class: "sm:flex sm:items-start sm:justify-between" }, [
                            createVNode("div", null, [
                              createVNode("h3", { class: "text-lg leading-6 font-medium text-gray-900" }, " Share with users "),
                              createVNode("span", { class: "float-center text-xs cursor-pointer hover:text-blue-700 mt-2" }, [
                                createVNode("a", {
                                  href: "https://docs.nmrxiv.org/submission-guides/sharing.html",
                                  target: "_blank"
                                }, "Learn more about sharing ")
                              ]),
                              createVNode("div", { class: "mt-2 max-w-xl text-sm text-gray-500" })
                            ]),
                            createVNode("div", { class: "mt-5 sm:mt-0 sm:ml-6 sm:flex-shrink-0 sm:flex sm:items-center" }, [
                              !$setup.addUser && $options.canChangeRole ? (openBlock(), createBlock("button", {
                                key: 0,
                                type: "button",
                                class: "inline-flex items-center px-4 py-2 border border-transparent shadow-sm font-medium rounded-md text-white bg-gray-600 hover:bg-gray-700 focus:outline-none sm:text-sm",
                                onClick: ($event) => $setup.addUser = true
                              }, [
                                (openBlock(), createBlock("svg", {
                                  xmlns: "http://www.w3.org/2000/svg",
                                  class: "h-4 w-4",
                                  fill: "none",
                                  viewBox: "0 0 24 24",
                                  stroke: "currentColor",
                                  "stroke-width": "2"
                                }, [
                                  createVNode("path", {
                                    "stroke-linecap": "round",
                                    "stroke-linejoin": "round",
                                    d: "M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"
                                  })
                                ])),
                                createTextVNode("  SHARE ")
                              ], 8, ["onClick"])) : createCommentVNode("", true),
                              $setup.addUser && $options.canChangeRole ? (openBlock(), createBlock("button", {
                                key: 1,
                                type: "button",
                                class: "inline-flex items-center px-4 py-2 border shadow-sm font-medium rounded-md text-dark bg-white-600 hover:bg-white-700 focus:outline-none sm:text-sm",
                                onClick: ($event) => $setup.addUser = false
                              }, [
                                (openBlock(), createBlock("svg", {
                                  xmlns: "http://www.w3.org/2000/svg",
                                  class: "h-6 w-6",
                                  fill: "none",
                                  viewBox: "0 0 24 24",
                                  stroke: "currentColor",
                                  "stroke-width": "2"
                                }, [
                                  createVNode("path", {
                                    "stroke-linecap": "round",
                                    "stroke-linejoin": "round",
                                    d: "M11 17l-5-5m0 0l5-5m-5 5h12"
                                  })
                                ]))
                              ], 8, ["onClick"])) : createCommentVNode("", true)
                            ])
                          ]),
                          !$setup.addUser ? (openBlock(), createBlock("div", {
                            key: 0,
                            class: "flow-root mt-1"
                          }, [
                            $props.members.length > 0 ? (openBlock(), createBlock("ul", {
                              key: 0,
                              role: "list",
                              class: "my-5 shadow divide-y divide-gray-200"
                            }, [
                              (openBlock(true), createBlock(Fragment, null, renderList($props.members, (person) => {
                                return openBlock(), createBlock("li", {
                                  key: person.email
                                }, [
                                  createVNode("a", { class: "block" }, [
                                    createVNode("div", { class: "flex items-center px-4 py-4 sm:px-6" }, [
                                      createVNode("div", { class: "min-w-0 flex-1 pt-3 flex items-center" }, [
                                        createVNode("div", { class: "flex-shrink-0" }, [
                                          (openBlock(), createBlock("img", {
                                            key: person.id,
                                            class: "h-12 w-12 rounded-full",
                                            src: person.profile_photo_url,
                                            alt: person.first_name
                                          }, null, 8, ["src", "alt"]))
                                        ]),
                                        createVNode("div", { class: "min-w-0 flex-1 px-4" }, [
                                          createVNode("div", null, [
                                            createVNode("p", { class: "text-sm font-medium text-gray-600" }, [
                                              createTextVNode(toDisplayString(person.first_name) + " " + toDisplayString(person.last_name) + " ", 1),
                                              _ctx.$page.props.user.email == person.email ? (openBlock(), createBlock("span", { key: 0 }, "(you)")) : createCommentVNode("", true)
                                            ]),
                                            createVNode("p", { class: "mt-2 flex items-center text-sm text-gray-500" }, [
                                              (openBlock(), createBlock("svg", {
                                                class: "flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400",
                                                xmlns: "http://www.w3.org/2000/svg",
                                                viewBox: "0 0 20 20",
                                                fill: "currentColor",
                                                "aria-hidden": "true"
                                              }, [
                                                createVNode("path", { d: "M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z" }),
                                                createVNode("path", { d: "M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z" })
                                              ])),
                                              createVNode("span", null, toDisplayString(person.email), 1)
                                            ])
                                          ])
                                        ])
                                      ]),
                                      createVNode("div", { class: "-mt-4" }, [
                                        $options.canChangeRole && !$options.isProjectAlreadyShared ? (openBlock(), createBlock("div", { key: 0 }, [
                                          $options.personRole(
                                            person
                                          ) && $options.personRole(
                                            person
                                          ) == "creator" ? (openBlock(), createBlock("div", { key: 0 }, [
                                            createVNode("span", { class: "ml-6 text-sm text-dark-500" }, " Creator ")
                                          ])) : (openBlock(), createBlock("div", { key: 1 }, [
                                            createVNode("button", {
                                              class: "cursor-pointer mr-3 text-sm text-red-500 hover:text-red-700",
                                              onClick: ($event) => $options.removeModelMember(
                                                person
                                              )
                                            }, " Remove ", 8, ["onClick"]),
                                            createVNode(_component_Menu, {
                                              as: "div",
                                              class: "relative inline-block text-left"
                                            }, {
                                              default: withCtx(() => [
                                                createVNode("div", null, [
                                                  createVNode(_component_MenuButton, { class: "inline-flex justify-center w-full rounded-md capitalize border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-indigo-500" }, {
                                                    default: withCtx(() => [
                                                      createTextVNode(toDisplayString($options.personRole(
                                                        person
                                                      )) + " ", 1),
                                                      createVNode(_component_ChevronDownIcon, {
                                                        class: "-mr-1 ml-2 h-5 w-5",
                                                        "aria-hidden": "true"
                                                      })
                                                    ]),
                                                    _: 2
                                                  }, 1024)
                                                ]),
                                                createVNode(Transition, {
                                                  "enter-active-class": "transition ease-out duration-100",
                                                  "enter-from-class": "transform opacity-0 scale-95",
                                                  "enter-to-class": "transform opacity-100 scale-100",
                                                  "leave-active-class": "transition ease-in duration-75",
                                                  "leave-from-class": "transform opacity-100 scale-100",
                                                  "leave-to-class": "transform opacity-0 scale-95"
                                                }, {
                                                  default: withCtx(() => [
                                                    createVNode(_component_MenuItems, { class: "origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50" }, {
                                                      default: withCtx(() => [
                                                        createVNode("div", { class: "py-1" }, [
                                                          (openBlock(true), createBlock(Fragment, null, renderList($props.availableRoles, (role) => {
                                                            return openBlock(), createBlock("span", {
                                                              key: role.key
                                                            }, [
                                                              person[$props.model + "_membership"].role != role.key ? (openBlock(), createBlock(_component_MenuItem, {
                                                                key: 0,
                                                                onClick: ($event) => $options.updateRole(
                                                                  role,
                                                                  person
                                                                )
                                                              }, {
                                                                default: withCtx(({
                                                                  active
                                                                }) => [
                                                                  createVNode("a", {
                                                                    href: "#",
                                                                    class: [
                                                                      active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                                                      "block px-4 py-2 text-sm"
                                                                    ]
                                                                  }, toDisplayString(role.name), 3)
                                                                ]),
                                                                _: 2
                                                              }, 1032, ["onClick"])) : createCommentVNode("", true)
                                                            ]);
                                                          }), 128))
                                                        ])
                                                      ]),
                                                      _: 2
                                                    }, 1024)
                                                  ]),
                                                  _: 2
                                                }, 1024)
                                              ]),
                                              _: 2
                                            }, 1024)
                                          ]))
                                        ])) : (openBlock(), createBlock("div", { key: 1 }, [
                                          $options.personRole(person) ? (openBlock(), createBlock("div", { key: 0 }, [
                                            createVNode("span", { class: "ml-6 text-sm capitalize text-dark-500" }, toDisplayString($options.personRole(
                                              person
                                            )), 1)
                                          ])) : createCommentVNode("", true)
                                        ]))
                                      ])
                                    ])
                                  ])
                                ]);
                              }), 128))
                            ])) : createCommentVNode("", true),
                            $props.team && !$props.team.personal_team ? (openBlock(), createBlock("span", { key: 1 }, [
                              createVNode("div", { class: "mb-2" }, [
                                createVNode("h2", { class: "text-lg uppercase leading-6 font-medium text-gray-900" }, toDisplayString($props.team.name), 1),
                                createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " All the users (corresponding roles) in the team will be applicable to this " + toDisplayString($props.model) + ". ", 1)
                              ]),
                              createVNode("div", { class: "bg-white shadow overflow-hidden sm:rounded-md" }, [
                                createVNode("ul", {
                                  role: "list",
                                  class: "divide-y divide-gray-200"
                                }, [
                                  (openBlock(true), createBlock(Fragment, null, renderList($props.team.users, (person) => {
                                    return openBlock(), createBlock("li", {
                                      key: person.email
                                    }, [
                                      createVNode("a", { class: "block hover:bg-gray-50" }, [
                                        createVNode("div", { class: "flex items-center px-4 py-4 sm:px-6" }, [
                                          createVNode("div", { class: "min-w-0 flex-1 flex items-center" }, [
                                            createVNode("div", { class: "flex-shrink-0" }, [
                                              (openBlock(), createBlock("img", {
                                                key: person.id,
                                                class: "h-12 w-12 rounded-full",
                                                src: person.profile_photo_url,
                                                alt: person.first_name
                                              }, null, 8, ["src", "alt"]))
                                            ]),
                                            createVNode("div", { class: "min-w-0 flex-1 px-4 md:grid md:grid-cols-2 md:gap-4" }, [
                                              createVNode("div", null, [
                                                createVNode("p", { class: "text-sm font-medium text-gray-600 truncate" }, toDisplayString(person.first_name), 1),
                                                createVNode("p", { class: "mt-2 flex items-center text-sm text-gray-500" }, [
                                                  (openBlock(), createBlock("svg", {
                                                    class: "flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400",
                                                    xmlns: "http://www.w3.org/2000/svg",
                                                    viewBox: "0 0 20 20",
                                                    fill: "currentColor",
                                                    "aria-hidden": "true"
                                                  }, [
                                                    createVNode("path", { d: "M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z" }),
                                                    createVNode("path", { d: "M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z" })
                                                  ])),
                                                  createVNode("span", { class: "truncate" }, toDisplayString(person.email), 1)
                                                ])
                                              ])
                                            ])
                                          ]),
                                          createVNode("div", null, [
                                            createVNode("span", { class: "inline-flex capitalize items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800" }, toDisplayString(person.membership.role), 1)
                                          ])
                                        ])
                                      ])
                                    ]);
                                  }), 128)),
                                  createVNode("li", null, [
                                    createVNode("a", { class: "block hover:bg-gray-50" }, [
                                      createVNode("div", { class: "flex items-center px-4 py-4 sm:px-6" }, [
                                        createVNode("div", { class: "min-w-0 flex-1 flex items-center" }, [
                                          createVNode("div", { class: "flex-shrink-0" }, [
                                            (openBlock(), createBlock("img", {
                                              key: $props.team.owner.id,
                                              class: "h-12 w-12 rounded-full",
                                              src: $props.team.owner.profile_photo_url,
                                              alt: $props.team.owner.first_name
                                            }, null, 8, ["src", "alt"]))
                                          ]),
                                          createVNode("div", { class: "min-w-0 flex-1 px-4 md:grid md:grid-cols-2 md:gap-4" }, [
                                            createVNode("div", null, [
                                              createVNode("p", { class: "text-sm font-medium text-gray-600 truncate" }, toDisplayString($props.team.owner.first_name), 1),
                                              createVNode("p", { class: "mt-2 flex items-center text-sm text-gray-500" }, [
                                                (openBlock(), createBlock("svg", {
                                                  class: "flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400",
                                                  xmlns: "http://www.w3.org/2000/svg",
                                                  viewBox: "0 0 20 20",
                                                  fill: "currentColor",
                                                  "aria-hidden": "true"
                                                }, [
                                                  createVNode("path", { d: "M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z" }),
                                                  createVNode("path", { d: "M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z" })
                                                ])),
                                                createVNode("span", { class: "truncate" }, toDisplayString($props.team.owner.email), 1)
                                              ])
                                            ])
                                          ])
                                        ]),
                                        createVNode("div", null, [
                                          createVNode("span", { class: "inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800" }, "owner")
                                        ])
                                      ])
                                    ])
                                  ])
                                ])
                              ])
                            ])) : createCommentVNode("", true),
                            $options.modelInvitations.length > 0 ? (openBlock(), createBlock("div", {
                              key: 2,
                              class: "pb-5"
                            }, [
                              createVNode(_component_jet_modal_form_section, { class: "mt-10 sm:mt-0" }, {
                                form: withCtx(() => [
                                  createVNode("div", { class: "mb-2 mt-5 col-span-12" }, [
                                    createVNode("h2", { class: "text-lg leading-6 font-medium text-gray-900" }, " Pending Project Invitations "),
                                    createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " These people have been invited to your " + toDisplayString($props.model) + " and have been sent an invitation email. They may join the " + toDisplayString($props.model) + " by accepting the email invitation. ", 1)
                                  ]),
                                  createVNode("div", { class: "space-y-3 col-span-12 mb-3" }, [
                                    (openBlock(true), createBlock(Fragment, null, renderList($options.modelInvitations, (invitation) => {
                                      return openBlock(), createBlock("div", {
                                        key: invitation.id,
                                        class: "flex px-4 items-center justify-between"
                                      }, [
                                        createVNode("div", { class: "text-gray-600" }, toDisplayString(invitation.email), 1),
                                        createVNode("div", { class: "flex items-center" }, [
                                          createVNode("button", {
                                            class: "cursor-pointer ml-6 text-sm text-red-500 focus:outline-none",
                                            onClick: ($event) => $options.cancelModelInvitation(
                                              invitation
                                            )
                                          }, " Cancel ", 8, ["onClick"])
                                        ])
                                      ]);
                                    }), 128))
                                  ])
                                ]),
                                _: 1
                              })
                            ])) : createCommentVNode("", true)
                          ])) : (openBlock(), createBlock("div", { key: 1 }, [
                            createVNode(_component_jet_modal_form_section, {
                              class: "space-y-3",
                              onSubmitted: $options.addModelMember
                            }, {
                              form: withCtx(() => [
                                createVNode("div", { class: "col-span-12" }, [
                                  createVNode("div", { class: "max-w-xl mt-2 text-sm text-gray-600" }, " Please provide the email address of the person you would like to add. ")
                                ]),
                                createVNode("div", { class: "col-span-12" }, [
                                  createVNode(_component_jet_label, {
                                    for: "email",
                                    value: "Email"
                                  }),
                                  createVNode(_component_jet_input, {
                                    id: "email",
                                    modelValue: $data.addMemberForm.email,
                                    "onUpdate:modelValue": ($event) => $data.addMemberForm.email = $event,
                                    type: "email",
                                    class: "mt-1 block w-full"
                                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                                  createVNode(_component_jet_input_error, {
                                    message: $data.addMemberForm.errors.email,
                                    class: "mt-2"
                                  }, null, 8, ["message"])
                                ]),
                                $props.availableRoles.length > 0 ? (openBlock(), createBlock("div", {
                                  key: 0,
                                  class: "col-span-12"
                                }, [
                                  createVNode(_component_jet_label, {
                                    for: "roles",
                                    value: "Role"
                                  }),
                                  createVNode(_component_jet_input_error, {
                                    message: $data.addMemberForm.errors.role,
                                    class: "mt-2"
                                  }, null, 8, ["message"]),
                                  createVNode("div", { class: "relative z-0 mt-1 border border-gray-200 rounded-lg cursor-pointer" }, [
                                    (openBlock(true), createBlock(Fragment, null, renderList($props.availableRoles, (role, i2) => {
                                      return openBlock(), createBlock("button", {
                                        key: role.key,
                                        type: "button",
                                        class: ["relative px-4 py-3 inline-flex w-full rounded-lg focus:z-10 focus:outline-none focus:border-blue-300 focus:ring focus:ring-blue-200", {
                                          "border-t border-gray-200 rounded-t-none": i2 > 0,
                                          "rounded-b-none": i2 != Object.keys(
                                            $props.availableRoles
                                          ).length - 1
                                        }],
                                        onClick: ($event) => $data.addMemberForm.role = role.key
                                      }, [
                                        createVNode("div", {
                                          class: {
                                            "opacity-50": $data.addMemberForm.role && $data.addMemberForm.role != role.key
                                          }
                                        }, [
                                          createVNode("div", { class: "flex items-center" }, [
                                            createVNode("div", {
                                              class: ["text-sm text-gray-600", {
                                                "font-semibold": $data.addMemberForm.role == role.key
                                              }]
                                            }, toDisplayString(role.name), 3),
                                            $data.addMemberForm.role == role.key ? (openBlock(), createBlock("svg", {
                                              key: 0,
                                              class: "ml-2 h-5 w-5 text-green-400",
                                              fill: "none",
                                              "stroke-linecap": "round",
                                              "stroke-linejoin": "round",
                                              "stroke-width": "2",
                                              stroke: "currentColor",
                                              viewBox: "0 0 24 24"
                                            }, [
                                              createVNode("path", { d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" })
                                            ])) : createCommentVNode("", true)
                                          ]),
                                          createVNode("div", { class: "mt-2 text-xs text-gray-600" }, toDisplayString(role.description), 1)
                                        ], 2)
                                      ], 10, ["onClick"]);
                                    }), 128))
                                  ])
                                ])) : createCommentVNode("", true),
                                createVNode("div", { class: "col-span-12" }, [
                                  createVNode(_component_jet_label, {
                                    for: "message",
                                    value: "Message"
                                  }),
                                  createVNode(_component_jet_text_area, {
                                    id: "message",
                                    modelValue: $data.addMemberForm.message,
                                    "onUpdate:modelValue": ($event) => $data.addMemberForm.message = $event,
                                    rows: 3,
                                    class: "mt-1 block w-full"
                                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                                  createVNode(_component_jet_input_error, {
                                    message: $data.addMemberForm.errors.message,
                                    class: "mt-2"
                                  }, null, 8, ["message"])
                                ])
                              ]),
                              actions: withCtx(() => [
                                createVNode(_component_jet_button, {
                                  class: {
                                    "opacity-25": $data.addMemberForm.processing
                                  },
                                  disabled: $data.addMemberForm.processing
                                }, {
                                  default: withCtx(() => [
                                    createTextVNode(" SEND ")
                                  ]),
                                  _: 1
                                }, 8, ["class", "disabled"]),
                                createVNode(_component_jet_action_message, {
                                  on: $data.addMemberForm.recentlySuccessful,
                                  class: "mx-3 inline-flex"
                                }, {
                                  default: withCtx(() => [
                                    createTextVNode(" Added. ")
                                  ]),
                                  _: 1
                                }, 8, ["on"])
                              ]),
                              _: 1
                            }, 8, ["onSubmitted"])
                          ]))
                        ]),
                        _: 1
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</div>`);
            } else {
              return [
                createVNode(_component_TransitionChild, {
                  as: "template",
                  enter: "ease-out duration-300",
                  "enter-from": "opacity-0",
                  "enter-to": "opacity-100",
                  leave: "ease-in duration-200",
                  "leave-from": "opacity-100",
                  "leave-to": "opacity-0"
                }, {
                  default: withCtx(() => [
                    createVNode("div", { class: "fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity" })
                  ]),
                  _: 1
                }),
                createVNode("div", { class: "fixed inset-0 z-10 overflow-y-auto p-4 sm:p-6 md:p-20" }, [
                  createVNode(_component_TransitionChild, {
                    as: "template",
                    enter: "ease-out duration-300",
                    "enter-from": "opacity-0 scale-95",
                    "enter-to": "opacity-100 scale-100",
                    leave: "ease-in duration-200",
                    "leave-from": "opacity-100 scale-100",
                    "leave-to": "opacity-0 scale-95"
                  }, {
                    default: withCtx(() => [
                      createVNode(_component_DialogPanel, { class: "mx-auto max-w-xl transform rounded-xl bg-white p-2 shadow-2xl ring-1 ring-black ring-opacity-5 transition-all p-4" }, {
                        default: withCtx(() => [
                          createVNode("div", { class: "sm:flex sm:items-start sm:justify-between" }, [
                            createVNode("div", null, [
                              createVNode("h3", { class: "text-lg leading-6 font-medium text-gray-900" }, " Share with users "),
                              createVNode("span", { class: "float-center text-xs cursor-pointer hover:text-blue-700 mt-2" }, [
                                createVNode("a", {
                                  href: "https://docs.nmrxiv.org/submission-guides/sharing.html",
                                  target: "_blank"
                                }, "Learn more about sharing ")
                              ]),
                              createVNode("div", { class: "mt-2 max-w-xl text-sm text-gray-500" })
                            ]),
                            createVNode("div", { class: "mt-5 sm:mt-0 sm:ml-6 sm:flex-shrink-0 sm:flex sm:items-center" }, [
                              !$setup.addUser && $options.canChangeRole ? (openBlock(), createBlock("button", {
                                key: 0,
                                type: "button",
                                class: "inline-flex items-center px-4 py-2 border border-transparent shadow-sm font-medium rounded-md text-white bg-gray-600 hover:bg-gray-700 focus:outline-none sm:text-sm",
                                onClick: ($event) => $setup.addUser = true
                              }, [
                                (openBlock(), createBlock("svg", {
                                  xmlns: "http://www.w3.org/2000/svg",
                                  class: "h-4 w-4",
                                  fill: "none",
                                  viewBox: "0 0 24 24",
                                  stroke: "currentColor",
                                  "stroke-width": "2"
                                }, [
                                  createVNode("path", {
                                    "stroke-linecap": "round",
                                    "stroke-linejoin": "round",
                                    d: "M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"
                                  })
                                ])),
                                createTextVNode("  SHARE ")
                              ], 8, ["onClick"])) : createCommentVNode("", true),
                              $setup.addUser && $options.canChangeRole ? (openBlock(), createBlock("button", {
                                key: 1,
                                type: "button",
                                class: "inline-flex items-center px-4 py-2 border shadow-sm font-medium rounded-md text-dark bg-white-600 hover:bg-white-700 focus:outline-none sm:text-sm",
                                onClick: ($event) => $setup.addUser = false
                              }, [
                                (openBlock(), createBlock("svg", {
                                  xmlns: "http://www.w3.org/2000/svg",
                                  class: "h-6 w-6",
                                  fill: "none",
                                  viewBox: "0 0 24 24",
                                  stroke: "currentColor",
                                  "stroke-width": "2"
                                }, [
                                  createVNode("path", {
                                    "stroke-linecap": "round",
                                    "stroke-linejoin": "round",
                                    d: "M11 17l-5-5m0 0l5-5m-5 5h12"
                                  })
                                ]))
                              ], 8, ["onClick"])) : createCommentVNode("", true)
                            ])
                          ]),
                          !$setup.addUser ? (openBlock(), createBlock("div", {
                            key: 0,
                            class: "flow-root mt-1"
                          }, [
                            $props.members.length > 0 ? (openBlock(), createBlock("ul", {
                              key: 0,
                              role: "list",
                              class: "my-5 shadow divide-y divide-gray-200"
                            }, [
                              (openBlock(true), createBlock(Fragment, null, renderList($props.members, (person) => {
                                return openBlock(), createBlock("li", {
                                  key: person.email
                                }, [
                                  createVNode("a", { class: "block" }, [
                                    createVNode("div", { class: "flex items-center px-4 py-4 sm:px-6" }, [
                                      createVNode("div", { class: "min-w-0 flex-1 pt-3 flex items-center" }, [
                                        createVNode("div", { class: "flex-shrink-0" }, [
                                          (openBlock(), createBlock("img", {
                                            key: person.id,
                                            class: "h-12 w-12 rounded-full",
                                            src: person.profile_photo_url,
                                            alt: person.first_name
                                          }, null, 8, ["src", "alt"]))
                                        ]),
                                        createVNode("div", { class: "min-w-0 flex-1 px-4" }, [
                                          createVNode("div", null, [
                                            createVNode("p", { class: "text-sm font-medium text-gray-600" }, [
                                              createTextVNode(toDisplayString(person.first_name) + " " + toDisplayString(person.last_name) + " ", 1),
                                              _ctx.$page.props.user.email == person.email ? (openBlock(), createBlock("span", { key: 0 }, "(you)")) : createCommentVNode("", true)
                                            ]),
                                            createVNode("p", { class: "mt-2 flex items-center text-sm text-gray-500" }, [
                                              (openBlock(), createBlock("svg", {
                                                class: "flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400",
                                                xmlns: "http://www.w3.org/2000/svg",
                                                viewBox: "0 0 20 20",
                                                fill: "currentColor",
                                                "aria-hidden": "true"
                                              }, [
                                                createVNode("path", { d: "M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z" }),
                                                createVNode("path", { d: "M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z" })
                                              ])),
                                              createVNode("span", null, toDisplayString(person.email), 1)
                                            ])
                                          ])
                                        ])
                                      ]),
                                      createVNode("div", { class: "-mt-4" }, [
                                        $options.canChangeRole && !$options.isProjectAlreadyShared ? (openBlock(), createBlock("div", { key: 0 }, [
                                          $options.personRole(
                                            person
                                          ) && $options.personRole(
                                            person
                                          ) == "creator" ? (openBlock(), createBlock("div", { key: 0 }, [
                                            createVNode("span", { class: "ml-6 text-sm text-dark-500" }, " Creator ")
                                          ])) : (openBlock(), createBlock("div", { key: 1 }, [
                                            createVNode("button", {
                                              class: "cursor-pointer mr-3 text-sm text-red-500 hover:text-red-700",
                                              onClick: ($event) => $options.removeModelMember(
                                                person
                                              )
                                            }, " Remove ", 8, ["onClick"]),
                                            createVNode(_component_Menu, {
                                              as: "div",
                                              class: "relative inline-block text-left"
                                            }, {
                                              default: withCtx(() => [
                                                createVNode("div", null, [
                                                  createVNode(_component_MenuButton, { class: "inline-flex justify-center w-full rounded-md capitalize border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-indigo-500" }, {
                                                    default: withCtx(() => [
                                                      createTextVNode(toDisplayString($options.personRole(
                                                        person
                                                      )) + " ", 1),
                                                      createVNode(_component_ChevronDownIcon, {
                                                        class: "-mr-1 ml-2 h-5 w-5",
                                                        "aria-hidden": "true"
                                                      })
                                                    ]),
                                                    _: 2
                                                  }, 1024)
                                                ]),
                                                createVNode(Transition, {
                                                  "enter-active-class": "transition ease-out duration-100",
                                                  "enter-from-class": "transform opacity-0 scale-95",
                                                  "enter-to-class": "transform opacity-100 scale-100",
                                                  "leave-active-class": "transition ease-in duration-75",
                                                  "leave-from-class": "transform opacity-100 scale-100",
                                                  "leave-to-class": "transform opacity-0 scale-95"
                                                }, {
                                                  default: withCtx(() => [
                                                    createVNode(_component_MenuItems, { class: "origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50" }, {
                                                      default: withCtx(() => [
                                                        createVNode("div", { class: "py-1" }, [
                                                          (openBlock(true), createBlock(Fragment, null, renderList($props.availableRoles, (role) => {
                                                            return openBlock(), createBlock("span", {
                                                              key: role.key
                                                            }, [
                                                              person[$props.model + "_membership"].role != role.key ? (openBlock(), createBlock(_component_MenuItem, {
                                                                key: 0,
                                                                onClick: ($event) => $options.updateRole(
                                                                  role,
                                                                  person
                                                                )
                                                              }, {
                                                                default: withCtx(({
                                                                  active
                                                                }) => [
                                                                  createVNode("a", {
                                                                    href: "#",
                                                                    class: [
                                                                      active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                                                      "block px-4 py-2 text-sm"
                                                                    ]
                                                                  }, toDisplayString(role.name), 3)
                                                                ]),
                                                                _: 2
                                                              }, 1032, ["onClick"])) : createCommentVNode("", true)
                                                            ]);
                                                          }), 128))
                                                        ])
                                                      ]),
                                                      _: 2
                                                    }, 1024)
                                                  ]),
                                                  _: 2
                                                }, 1024)
                                              ]),
                                              _: 2
                                            }, 1024)
                                          ]))
                                        ])) : (openBlock(), createBlock("div", { key: 1 }, [
                                          $options.personRole(person) ? (openBlock(), createBlock("div", { key: 0 }, [
                                            createVNode("span", { class: "ml-6 text-sm capitalize text-dark-500" }, toDisplayString($options.personRole(
                                              person
                                            )), 1)
                                          ])) : createCommentVNode("", true)
                                        ]))
                                      ])
                                    ])
                                  ])
                                ]);
                              }), 128))
                            ])) : createCommentVNode("", true),
                            $props.team && !$props.team.personal_team ? (openBlock(), createBlock("span", { key: 1 }, [
                              createVNode("div", { class: "mb-2" }, [
                                createVNode("h2", { class: "text-lg uppercase leading-6 font-medium text-gray-900" }, toDisplayString($props.team.name), 1),
                                createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " All the users (corresponding roles) in the team will be applicable to this " + toDisplayString($props.model) + ". ", 1)
                              ]),
                              createVNode("div", { class: "bg-white shadow overflow-hidden sm:rounded-md" }, [
                                createVNode("ul", {
                                  role: "list",
                                  class: "divide-y divide-gray-200"
                                }, [
                                  (openBlock(true), createBlock(Fragment, null, renderList($props.team.users, (person) => {
                                    return openBlock(), createBlock("li", {
                                      key: person.email
                                    }, [
                                      createVNode("a", { class: "block hover:bg-gray-50" }, [
                                        createVNode("div", { class: "flex items-center px-4 py-4 sm:px-6" }, [
                                          createVNode("div", { class: "min-w-0 flex-1 flex items-center" }, [
                                            createVNode("div", { class: "flex-shrink-0" }, [
                                              (openBlock(), createBlock("img", {
                                                key: person.id,
                                                class: "h-12 w-12 rounded-full",
                                                src: person.profile_photo_url,
                                                alt: person.first_name
                                              }, null, 8, ["src", "alt"]))
                                            ]),
                                            createVNode("div", { class: "min-w-0 flex-1 px-4 md:grid md:grid-cols-2 md:gap-4" }, [
                                              createVNode("div", null, [
                                                createVNode("p", { class: "text-sm font-medium text-gray-600 truncate" }, toDisplayString(person.first_name), 1),
                                                createVNode("p", { class: "mt-2 flex items-center text-sm text-gray-500" }, [
                                                  (openBlock(), createBlock("svg", {
                                                    class: "flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400",
                                                    xmlns: "http://www.w3.org/2000/svg",
                                                    viewBox: "0 0 20 20",
                                                    fill: "currentColor",
                                                    "aria-hidden": "true"
                                                  }, [
                                                    createVNode("path", { d: "M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z" }),
                                                    createVNode("path", { d: "M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z" })
                                                  ])),
                                                  createVNode("span", { class: "truncate" }, toDisplayString(person.email), 1)
                                                ])
                                              ])
                                            ])
                                          ]),
                                          createVNode("div", null, [
                                            createVNode("span", { class: "inline-flex capitalize items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800" }, toDisplayString(person.membership.role), 1)
                                          ])
                                        ])
                                      ])
                                    ]);
                                  }), 128)),
                                  createVNode("li", null, [
                                    createVNode("a", { class: "block hover:bg-gray-50" }, [
                                      createVNode("div", { class: "flex items-center px-4 py-4 sm:px-6" }, [
                                        createVNode("div", { class: "min-w-0 flex-1 flex items-center" }, [
                                          createVNode("div", { class: "flex-shrink-0" }, [
                                            (openBlock(), createBlock("img", {
                                              key: $props.team.owner.id,
                                              class: "h-12 w-12 rounded-full",
                                              src: $props.team.owner.profile_photo_url,
                                              alt: $props.team.owner.first_name
                                            }, null, 8, ["src", "alt"]))
                                          ]),
                                          createVNode("div", { class: "min-w-0 flex-1 px-4 md:grid md:grid-cols-2 md:gap-4" }, [
                                            createVNode("div", null, [
                                              createVNode("p", { class: "text-sm font-medium text-gray-600 truncate" }, toDisplayString($props.team.owner.first_name), 1),
                                              createVNode("p", { class: "mt-2 flex items-center text-sm text-gray-500" }, [
                                                (openBlock(), createBlock("svg", {
                                                  class: "flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400",
                                                  xmlns: "http://www.w3.org/2000/svg",
                                                  viewBox: "0 0 20 20",
                                                  fill: "currentColor",
                                                  "aria-hidden": "true"
                                                }, [
                                                  createVNode("path", { d: "M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z" }),
                                                  createVNode("path", { d: "M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z" })
                                                ])),
                                                createVNode("span", { class: "truncate" }, toDisplayString($props.team.owner.email), 1)
                                              ])
                                            ])
                                          ])
                                        ]),
                                        createVNode("div", null, [
                                          createVNode("span", { class: "inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800" }, "owner")
                                        ])
                                      ])
                                    ])
                                  ])
                                ])
                              ])
                            ])) : createCommentVNode("", true),
                            $options.modelInvitations.length > 0 ? (openBlock(), createBlock("div", {
                              key: 2,
                              class: "pb-5"
                            }, [
                              createVNode(_component_jet_modal_form_section, { class: "mt-10 sm:mt-0" }, {
                                form: withCtx(() => [
                                  createVNode("div", { class: "mb-2 mt-5 col-span-12" }, [
                                    createVNode("h2", { class: "text-lg leading-6 font-medium text-gray-900" }, " Pending Project Invitations "),
                                    createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " These people have been invited to your " + toDisplayString($props.model) + " and have been sent an invitation email. They may join the " + toDisplayString($props.model) + " by accepting the email invitation. ", 1)
                                  ]),
                                  createVNode("div", { class: "space-y-3 col-span-12 mb-3" }, [
                                    (openBlock(true), createBlock(Fragment, null, renderList($options.modelInvitations, (invitation) => {
                                      return openBlock(), createBlock("div", {
                                        key: invitation.id,
                                        class: "flex px-4 items-center justify-between"
                                      }, [
                                        createVNode("div", { class: "text-gray-600" }, toDisplayString(invitation.email), 1),
                                        createVNode("div", { class: "flex items-center" }, [
                                          createVNode("button", {
                                            class: "cursor-pointer ml-6 text-sm text-red-500 focus:outline-none",
                                            onClick: ($event) => $options.cancelModelInvitation(
                                              invitation
                                            )
                                          }, " Cancel ", 8, ["onClick"])
                                        ])
                                      ]);
                                    }), 128))
                                  ])
                                ]),
                                _: 1
                              })
                            ])) : createCommentVNode("", true)
                          ])) : (openBlock(), createBlock("div", { key: 1 }, [
                            createVNode(_component_jet_modal_form_section, {
                              class: "space-y-3",
                              onSubmitted: $options.addModelMember
                            }, {
                              form: withCtx(() => [
                                createVNode("div", { class: "col-span-12" }, [
                                  createVNode("div", { class: "max-w-xl mt-2 text-sm text-gray-600" }, " Please provide the email address of the person you would like to add. ")
                                ]),
                                createVNode("div", { class: "col-span-12" }, [
                                  createVNode(_component_jet_label, {
                                    for: "email",
                                    value: "Email"
                                  }),
                                  createVNode(_component_jet_input, {
                                    id: "email",
                                    modelValue: $data.addMemberForm.email,
                                    "onUpdate:modelValue": ($event) => $data.addMemberForm.email = $event,
                                    type: "email",
                                    class: "mt-1 block w-full"
                                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                                  createVNode(_component_jet_input_error, {
                                    message: $data.addMemberForm.errors.email,
                                    class: "mt-2"
                                  }, null, 8, ["message"])
                                ]),
                                $props.availableRoles.length > 0 ? (openBlock(), createBlock("div", {
                                  key: 0,
                                  class: "col-span-12"
                                }, [
                                  createVNode(_component_jet_label, {
                                    for: "roles",
                                    value: "Role"
                                  }),
                                  createVNode(_component_jet_input_error, {
                                    message: $data.addMemberForm.errors.role,
                                    class: "mt-2"
                                  }, null, 8, ["message"]),
                                  createVNode("div", { class: "relative z-0 mt-1 border border-gray-200 rounded-lg cursor-pointer" }, [
                                    (openBlock(true), createBlock(Fragment, null, renderList($props.availableRoles, (role, i2) => {
                                      return openBlock(), createBlock("button", {
                                        key: role.key,
                                        type: "button",
                                        class: ["relative px-4 py-3 inline-flex w-full rounded-lg focus:z-10 focus:outline-none focus:border-blue-300 focus:ring focus:ring-blue-200", {
                                          "border-t border-gray-200 rounded-t-none": i2 > 0,
                                          "rounded-b-none": i2 != Object.keys(
                                            $props.availableRoles
                                          ).length - 1
                                        }],
                                        onClick: ($event) => $data.addMemberForm.role = role.key
                                      }, [
                                        createVNode("div", {
                                          class: {
                                            "opacity-50": $data.addMemberForm.role && $data.addMemberForm.role != role.key
                                          }
                                        }, [
                                          createVNode("div", { class: "flex items-center" }, [
                                            createVNode("div", {
                                              class: ["text-sm text-gray-600", {
                                                "font-semibold": $data.addMemberForm.role == role.key
                                              }]
                                            }, toDisplayString(role.name), 3),
                                            $data.addMemberForm.role == role.key ? (openBlock(), createBlock("svg", {
                                              key: 0,
                                              class: "ml-2 h-5 w-5 text-green-400",
                                              fill: "none",
                                              "stroke-linecap": "round",
                                              "stroke-linejoin": "round",
                                              "stroke-width": "2",
                                              stroke: "currentColor",
                                              viewBox: "0 0 24 24"
                                            }, [
                                              createVNode("path", { d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" })
                                            ])) : createCommentVNode("", true)
                                          ]),
                                          createVNode("div", { class: "mt-2 text-xs text-gray-600" }, toDisplayString(role.description), 1)
                                        ], 2)
                                      ], 10, ["onClick"]);
                                    }), 128))
                                  ])
                                ])) : createCommentVNode("", true),
                                createVNode("div", { class: "col-span-12" }, [
                                  createVNode(_component_jet_label, {
                                    for: "message",
                                    value: "Message"
                                  }),
                                  createVNode(_component_jet_text_area, {
                                    id: "message",
                                    modelValue: $data.addMemberForm.message,
                                    "onUpdate:modelValue": ($event) => $data.addMemberForm.message = $event,
                                    rows: 3,
                                    class: "mt-1 block w-full"
                                  }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                                  createVNode(_component_jet_input_error, {
                                    message: $data.addMemberForm.errors.message,
                                    class: "mt-2"
                                  }, null, 8, ["message"])
                                ])
                              ]),
                              actions: withCtx(() => [
                                createVNode(_component_jet_button, {
                                  class: {
                                    "opacity-25": $data.addMemberForm.processing
                                  },
                                  disabled: $data.addMemberForm.processing
                                }, {
                                  default: withCtx(() => [
                                    createTextVNode(" SEND ")
                                  ]),
                                  _: 1
                                }, 8, ["class", "disabled"]),
                                createVNode(_component_jet_action_message, {
                                  on: $data.addMemberForm.recentlySuccessful,
                                  class: "mx-3 inline-flex"
                                }, {
                                  default: withCtx(() => [
                                    createTextVNode(" Added. ")
                                  ]),
                                  _: 1
                                }, 8, ["on"])
                              ]),
                              _: 1
                            }, 8, ["onSubmitted"])
                          ]))
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  })
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_Dialog, {
            as: "div",
            class: "relative z-10 p-4",
            onClose: ($event) => $setup.open = false
          }, {
            default: withCtx(() => [
              createVNode(_component_TransitionChild, {
                as: "template",
                enter: "ease-out duration-300",
                "enter-from": "opacity-0",
                "enter-to": "opacity-100",
                leave: "ease-in duration-200",
                "leave-from": "opacity-100",
                "leave-to": "opacity-0"
              }, {
                default: withCtx(() => [
                  createVNode("div", { class: "fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity" })
                ]),
                _: 1
              }),
              createVNode("div", { class: "fixed inset-0 z-10 overflow-y-auto p-4 sm:p-6 md:p-20" }, [
                createVNode(_component_TransitionChild, {
                  as: "template",
                  enter: "ease-out duration-300",
                  "enter-from": "opacity-0 scale-95",
                  "enter-to": "opacity-100 scale-100",
                  leave: "ease-in duration-200",
                  "leave-from": "opacity-100 scale-100",
                  "leave-to": "opacity-0 scale-95"
                }, {
                  default: withCtx(() => [
                    createVNode(_component_DialogPanel, { class: "mx-auto max-w-xl transform rounded-xl bg-white p-2 shadow-2xl ring-1 ring-black ring-opacity-5 transition-all p-4" }, {
                      default: withCtx(() => [
                        createVNode("div", { class: "sm:flex sm:items-start sm:justify-between" }, [
                          createVNode("div", null, [
                            createVNode("h3", { class: "text-lg leading-6 font-medium text-gray-900" }, " Share with users "),
                            createVNode("span", { class: "float-center text-xs cursor-pointer hover:text-blue-700 mt-2" }, [
                              createVNode("a", {
                                href: "https://docs.nmrxiv.org/submission-guides/sharing.html",
                                target: "_blank"
                              }, "Learn more about sharing ")
                            ]),
                            createVNode("div", { class: "mt-2 max-w-xl text-sm text-gray-500" })
                          ]),
                          createVNode("div", { class: "mt-5 sm:mt-0 sm:ml-6 sm:flex-shrink-0 sm:flex sm:items-center" }, [
                            !$setup.addUser && $options.canChangeRole ? (openBlock(), createBlock("button", {
                              key: 0,
                              type: "button",
                              class: "inline-flex items-center px-4 py-2 border border-transparent shadow-sm font-medium rounded-md text-white bg-gray-600 hover:bg-gray-700 focus:outline-none sm:text-sm",
                              onClick: ($event) => $setup.addUser = true
                            }, [
                              (openBlock(), createBlock("svg", {
                                xmlns: "http://www.w3.org/2000/svg",
                                class: "h-4 w-4",
                                fill: "none",
                                viewBox: "0 0 24 24",
                                stroke: "currentColor",
                                "stroke-width": "2"
                              }, [
                                createVNode("path", {
                                  "stroke-linecap": "round",
                                  "stroke-linejoin": "round",
                                  d: "M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"
                                })
                              ])),
                              createTextVNode("  SHARE ")
                            ], 8, ["onClick"])) : createCommentVNode("", true),
                            $setup.addUser && $options.canChangeRole ? (openBlock(), createBlock("button", {
                              key: 1,
                              type: "button",
                              class: "inline-flex items-center px-4 py-2 border shadow-sm font-medium rounded-md text-dark bg-white-600 hover:bg-white-700 focus:outline-none sm:text-sm",
                              onClick: ($event) => $setup.addUser = false
                            }, [
                              (openBlock(), createBlock("svg", {
                                xmlns: "http://www.w3.org/2000/svg",
                                class: "h-6 w-6",
                                fill: "none",
                                viewBox: "0 0 24 24",
                                stroke: "currentColor",
                                "stroke-width": "2"
                              }, [
                                createVNode("path", {
                                  "stroke-linecap": "round",
                                  "stroke-linejoin": "round",
                                  d: "M11 17l-5-5m0 0l5-5m-5 5h12"
                                })
                              ]))
                            ], 8, ["onClick"])) : createCommentVNode("", true)
                          ])
                        ]),
                        !$setup.addUser ? (openBlock(), createBlock("div", {
                          key: 0,
                          class: "flow-root mt-1"
                        }, [
                          $props.members.length > 0 ? (openBlock(), createBlock("ul", {
                            key: 0,
                            role: "list",
                            class: "my-5 shadow divide-y divide-gray-200"
                          }, [
                            (openBlock(true), createBlock(Fragment, null, renderList($props.members, (person) => {
                              return openBlock(), createBlock("li", {
                                key: person.email
                              }, [
                                createVNode("a", { class: "block" }, [
                                  createVNode("div", { class: "flex items-center px-4 py-4 sm:px-6" }, [
                                    createVNode("div", { class: "min-w-0 flex-1 pt-3 flex items-center" }, [
                                      createVNode("div", { class: "flex-shrink-0" }, [
                                        (openBlock(), createBlock("img", {
                                          key: person.id,
                                          class: "h-12 w-12 rounded-full",
                                          src: person.profile_photo_url,
                                          alt: person.first_name
                                        }, null, 8, ["src", "alt"]))
                                      ]),
                                      createVNode("div", { class: "min-w-0 flex-1 px-4" }, [
                                        createVNode("div", null, [
                                          createVNode("p", { class: "text-sm font-medium text-gray-600" }, [
                                            createTextVNode(toDisplayString(person.first_name) + " " + toDisplayString(person.last_name) + " ", 1),
                                            _ctx.$page.props.user.email == person.email ? (openBlock(), createBlock("span", { key: 0 }, "(you)")) : createCommentVNode("", true)
                                          ]),
                                          createVNode("p", { class: "mt-2 flex items-center text-sm text-gray-500" }, [
                                            (openBlock(), createBlock("svg", {
                                              class: "flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400",
                                              xmlns: "http://www.w3.org/2000/svg",
                                              viewBox: "0 0 20 20",
                                              fill: "currentColor",
                                              "aria-hidden": "true"
                                            }, [
                                              createVNode("path", { d: "M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z" }),
                                              createVNode("path", { d: "M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z" })
                                            ])),
                                            createVNode("span", null, toDisplayString(person.email), 1)
                                          ])
                                        ])
                                      ])
                                    ]),
                                    createVNode("div", { class: "-mt-4" }, [
                                      $options.canChangeRole && !$options.isProjectAlreadyShared ? (openBlock(), createBlock("div", { key: 0 }, [
                                        $options.personRole(
                                          person
                                        ) && $options.personRole(
                                          person
                                        ) == "creator" ? (openBlock(), createBlock("div", { key: 0 }, [
                                          createVNode("span", { class: "ml-6 text-sm text-dark-500" }, " Creator ")
                                        ])) : (openBlock(), createBlock("div", { key: 1 }, [
                                          createVNode("button", {
                                            class: "cursor-pointer mr-3 text-sm text-red-500 hover:text-red-700",
                                            onClick: ($event) => $options.removeModelMember(
                                              person
                                            )
                                          }, " Remove ", 8, ["onClick"]),
                                          createVNode(_component_Menu, {
                                            as: "div",
                                            class: "relative inline-block text-left"
                                          }, {
                                            default: withCtx(() => [
                                              createVNode("div", null, [
                                                createVNode(_component_MenuButton, { class: "inline-flex justify-center w-full rounded-md capitalize border border-gray-300 shadow-sm px-4 py-2 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-indigo-500" }, {
                                                  default: withCtx(() => [
                                                    createTextVNode(toDisplayString($options.personRole(
                                                      person
                                                    )) + " ", 1),
                                                    createVNode(_component_ChevronDownIcon, {
                                                      class: "-mr-1 ml-2 h-5 w-5",
                                                      "aria-hidden": "true"
                                                    })
                                                  ]),
                                                  _: 2
                                                }, 1024)
                                              ]),
                                              createVNode(Transition, {
                                                "enter-active-class": "transition ease-out duration-100",
                                                "enter-from-class": "transform opacity-0 scale-95",
                                                "enter-to-class": "transform opacity-100 scale-100",
                                                "leave-active-class": "transition ease-in duration-75",
                                                "leave-from-class": "transform opacity-100 scale-100",
                                                "leave-to-class": "transform opacity-0 scale-95"
                                              }, {
                                                default: withCtx(() => [
                                                  createVNode(_component_MenuItems, { class: "origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50" }, {
                                                    default: withCtx(() => [
                                                      createVNode("div", { class: "py-1" }, [
                                                        (openBlock(true), createBlock(Fragment, null, renderList($props.availableRoles, (role) => {
                                                          return openBlock(), createBlock("span", {
                                                            key: role.key
                                                          }, [
                                                            person[$props.model + "_membership"].role != role.key ? (openBlock(), createBlock(_component_MenuItem, {
                                                              key: 0,
                                                              onClick: ($event) => $options.updateRole(
                                                                role,
                                                                person
                                                              )
                                                            }, {
                                                              default: withCtx(({
                                                                active
                                                              }) => [
                                                                createVNode("a", {
                                                                  href: "#",
                                                                  class: [
                                                                    active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                                                    "block px-4 py-2 text-sm"
                                                                  ]
                                                                }, toDisplayString(role.name), 3)
                                                              ]),
                                                              _: 2
                                                            }, 1032, ["onClick"])) : createCommentVNode("", true)
                                                          ]);
                                                        }), 128))
                                                      ])
                                                    ]),
                                                    _: 2
                                                  }, 1024)
                                                ]),
                                                _: 2
                                              }, 1024)
                                            ]),
                                            _: 2
                                          }, 1024)
                                        ]))
                                      ])) : (openBlock(), createBlock("div", { key: 1 }, [
                                        $options.personRole(person) ? (openBlock(), createBlock("div", { key: 0 }, [
                                          createVNode("span", { class: "ml-6 text-sm capitalize text-dark-500" }, toDisplayString($options.personRole(
                                            person
                                          )), 1)
                                        ])) : createCommentVNode("", true)
                                      ]))
                                    ])
                                  ])
                                ])
                              ]);
                            }), 128))
                          ])) : createCommentVNode("", true),
                          $props.team && !$props.team.personal_team ? (openBlock(), createBlock("span", { key: 1 }, [
                            createVNode("div", { class: "mb-2" }, [
                              createVNode("h2", { class: "text-lg uppercase leading-6 font-medium text-gray-900" }, toDisplayString($props.team.name), 1),
                              createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " All the users (corresponding roles) in the team will be applicable to this " + toDisplayString($props.model) + ". ", 1)
                            ]),
                            createVNode("div", { class: "bg-white shadow overflow-hidden sm:rounded-md" }, [
                              createVNode("ul", {
                                role: "list",
                                class: "divide-y divide-gray-200"
                              }, [
                                (openBlock(true), createBlock(Fragment, null, renderList($props.team.users, (person) => {
                                  return openBlock(), createBlock("li", {
                                    key: person.email
                                  }, [
                                    createVNode("a", { class: "block hover:bg-gray-50" }, [
                                      createVNode("div", { class: "flex items-center px-4 py-4 sm:px-6" }, [
                                        createVNode("div", { class: "min-w-0 flex-1 flex items-center" }, [
                                          createVNode("div", { class: "flex-shrink-0" }, [
                                            (openBlock(), createBlock("img", {
                                              key: person.id,
                                              class: "h-12 w-12 rounded-full",
                                              src: person.profile_photo_url,
                                              alt: person.first_name
                                            }, null, 8, ["src", "alt"]))
                                          ]),
                                          createVNode("div", { class: "min-w-0 flex-1 px-4 md:grid md:grid-cols-2 md:gap-4" }, [
                                            createVNode("div", null, [
                                              createVNode("p", { class: "text-sm font-medium text-gray-600 truncate" }, toDisplayString(person.first_name), 1),
                                              createVNode("p", { class: "mt-2 flex items-center text-sm text-gray-500" }, [
                                                (openBlock(), createBlock("svg", {
                                                  class: "flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400",
                                                  xmlns: "http://www.w3.org/2000/svg",
                                                  viewBox: "0 0 20 20",
                                                  fill: "currentColor",
                                                  "aria-hidden": "true"
                                                }, [
                                                  createVNode("path", { d: "M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z" }),
                                                  createVNode("path", { d: "M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z" })
                                                ])),
                                                createVNode("span", { class: "truncate" }, toDisplayString(person.email), 1)
                                              ])
                                            ])
                                          ])
                                        ]),
                                        createVNode("div", null, [
                                          createVNode("span", { class: "inline-flex capitalize items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800" }, toDisplayString(person.membership.role), 1)
                                        ])
                                      ])
                                    ])
                                  ]);
                                }), 128)),
                                createVNode("li", null, [
                                  createVNode("a", { class: "block hover:bg-gray-50" }, [
                                    createVNode("div", { class: "flex items-center px-4 py-4 sm:px-6" }, [
                                      createVNode("div", { class: "min-w-0 flex-1 flex items-center" }, [
                                        createVNode("div", { class: "flex-shrink-0" }, [
                                          (openBlock(), createBlock("img", {
                                            key: $props.team.owner.id,
                                            class: "h-12 w-12 rounded-full",
                                            src: $props.team.owner.profile_photo_url,
                                            alt: $props.team.owner.first_name
                                          }, null, 8, ["src", "alt"]))
                                        ]),
                                        createVNode("div", { class: "min-w-0 flex-1 px-4 md:grid md:grid-cols-2 md:gap-4" }, [
                                          createVNode("div", null, [
                                            createVNode("p", { class: "text-sm font-medium text-gray-600 truncate" }, toDisplayString($props.team.owner.first_name), 1),
                                            createVNode("p", { class: "mt-2 flex items-center text-sm text-gray-500" }, [
                                              (openBlock(), createBlock("svg", {
                                                class: "flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400",
                                                xmlns: "http://www.w3.org/2000/svg",
                                                viewBox: "0 0 20 20",
                                                fill: "currentColor",
                                                "aria-hidden": "true"
                                              }, [
                                                createVNode("path", { d: "M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z" }),
                                                createVNode("path", { d: "M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z" })
                                              ])),
                                              createVNode("span", { class: "truncate" }, toDisplayString($props.team.owner.email), 1)
                                            ])
                                          ])
                                        ])
                                      ]),
                                      createVNode("div", null, [
                                        createVNode("span", { class: "inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800" }, "owner")
                                      ])
                                    ])
                                  ])
                                ])
                              ])
                            ])
                          ])) : createCommentVNode("", true),
                          $options.modelInvitations.length > 0 ? (openBlock(), createBlock("div", {
                            key: 2,
                            class: "pb-5"
                          }, [
                            createVNode(_component_jet_modal_form_section, { class: "mt-10 sm:mt-0" }, {
                              form: withCtx(() => [
                                createVNode("div", { class: "mb-2 mt-5 col-span-12" }, [
                                  createVNode("h2", { class: "text-lg leading-6 font-medium text-gray-900" }, " Pending Project Invitations "),
                                  createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " These people have been invited to your " + toDisplayString($props.model) + " and have been sent an invitation email. They may join the " + toDisplayString($props.model) + " by accepting the email invitation. ", 1)
                                ]),
                                createVNode("div", { class: "space-y-3 col-span-12 mb-3" }, [
                                  (openBlock(true), createBlock(Fragment, null, renderList($options.modelInvitations, (invitation) => {
                                    return openBlock(), createBlock("div", {
                                      key: invitation.id,
                                      class: "flex px-4 items-center justify-between"
                                    }, [
                                      createVNode("div", { class: "text-gray-600" }, toDisplayString(invitation.email), 1),
                                      createVNode("div", { class: "flex items-center" }, [
                                        createVNode("button", {
                                          class: "cursor-pointer ml-6 text-sm text-red-500 focus:outline-none",
                                          onClick: ($event) => $options.cancelModelInvitation(
                                            invitation
                                          )
                                        }, " Cancel ", 8, ["onClick"])
                                      ])
                                    ]);
                                  }), 128))
                                ])
                              ]),
                              _: 1
                            })
                          ])) : createCommentVNode("", true)
                        ])) : (openBlock(), createBlock("div", { key: 1 }, [
                          createVNode(_component_jet_modal_form_section, {
                            class: "space-y-3",
                            onSubmitted: $options.addModelMember
                          }, {
                            form: withCtx(() => [
                              createVNode("div", { class: "col-span-12" }, [
                                createVNode("div", { class: "max-w-xl mt-2 text-sm text-gray-600" }, " Please provide the email address of the person you would like to add. ")
                              ]),
                              createVNode("div", { class: "col-span-12" }, [
                                createVNode(_component_jet_label, {
                                  for: "email",
                                  value: "Email"
                                }),
                                createVNode(_component_jet_input, {
                                  id: "email",
                                  modelValue: $data.addMemberForm.email,
                                  "onUpdate:modelValue": ($event) => $data.addMemberForm.email = $event,
                                  type: "email",
                                  class: "mt-1 block w-full"
                                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                                createVNode(_component_jet_input_error, {
                                  message: $data.addMemberForm.errors.email,
                                  class: "mt-2"
                                }, null, 8, ["message"])
                              ]),
                              $props.availableRoles.length > 0 ? (openBlock(), createBlock("div", {
                                key: 0,
                                class: "col-span-12"
                              }, [
                                createVNode(_component_jet_label, {
                                  for: "roles",
                                  value: "Role"
                                }),
                                createVNode(_component_jet_input_error, {
                                  message: $data.addMemberForm.errors.role,
                                  class: "mt-2"
                                }, null, 8, ["message"]),
                                createVNode("div", { class: "relative z-0 mt-1 border border-gray-200 rounded-lg cursor-pointer" }, [
                                  (openBlock(true), createBlock(Fragment, null, renderList($props.availableRoles, (role, i2) => {
                                    return openBlock(), createBlock("button", {
                                      key: role.key,
                                      type: "button",
                                      class: ["relative px-4 py-3 inline-flex w-full rounded-lg focus:z-10 focus:outline-none focus:border-blue-300 focus:ring focus:ring-blue-200", {
                                        "border-t border-gray-200 rounded-t-none": i2 > 0,
                                        "rounded-b-none": i2 != Object.keys(
                                          $props.availableRoles
                                        ).length - 1
                                      }],
                                      onClick: ($event) => $data.addMemberForm.role = role.key
                                    }, [
                                      createVNode("div", {
                                        class: {
                                          "opacity-50": $data.addMemberForm.role && $data.addMemberForm.role != role.key
                                        }
                                      }, [
                                        createVNode("div", { class: "flex items-center" }, [
                                          createVNode("div", {
                                            class: ["text-sm text-gray-600", {
                                              "font-semibold": $data.addMemberForm.role == role.key
                                            }]
                                          }, toDisplayString(role.name), 3),
                                          $data.addMemberForm.role == role.key ? (openBlock(), createBlock("svg", {
                                            key: 0,
                                            class: "ml-2 h-5 w-5 text-green-400",
                                            fill: "none",
                                            "stroke-linecap": "round",
                                            "stroke-linejoin": "round",
                                            "stroke-width": "2",
                                            stroke: "currentColor",
                                            viewBox: "0 0 24 24"
                                          }, [
                                            createVNode("path", { d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" })
                                          ])) : createCommentVNode("", true)
                                        ]),
                                        createVNode("div", { class: "mt-2 text-xs text-gray-600" }, toDisplayString(role.description), 1)
                                      ], 2)
                                    ], 10, ["onClick"]);
                                  }), 128))
                                ])
                              ])) : createCommentVNode("", true),
                              createVNode("div", { class: "col-span-12" }, [
                                createVNode(_component_jet_label, {
                                  for: "message",
                                  value: "Message"
                                }),
                                createVNode(_component_jet_text_area, {
                                  id: "message",
                                  modelValue: $data.addMemberForm.message,
                                  "onUpdate:modelValue": ($event) => $data.addMemberForm.message = $event,
                                  rows: 3,
                                  class: "mt-1 block w-full"
                                }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                                createVNode(_component_jet_input_error, {
                                  message: $data.addMemberForm.errors.message,
                                  class: "mt-2"
                                }, null, 8, ["message"])
                              ])
                            ]),
                            actions: withCtx(() => [
                              createVNode(_component_jet_button, {
                                class: {
                                  "opacity-25": $data.addMemberForm.processing
                                },
                                disabled: $data.addMemberForm.processing
                              }, {
                                default: withCtx(() => [
                                  createTextVNode(" SEND ")
                                ]),
                                _: 1
                              }, 8, ["class", "disabled"]),
                              createVNode(_component_jet_action_message, {
                                on: $data.addMemberForm.recentlySuccessful,
                                class: "mx-3 inline-flex"
                              }, {
                                default: withCtx(() => [
                                  createTextVNode(" Added. ")
                                ]),
                                _: 1
                              }, 8, ["on"])
                            ]),
                            _: 1
                          }, 8, ["onSubmitted"])
                        ]))
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                })
              ])
            ]),
            _: 1
          }, 8, ["onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$16 = _sfc_main$16.setup;
_sfc_main$16.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/AccessDialogue.vue");
  return _sfc_setup$16 ? _sfc_setup$16(props, ctx) : void 0;
};
const AccessDialogue = /* @__PURE__ */ _export_sfc(_sfc_main$16, [["ssrRender", _sfc_ssrRender$15]]);
const _sfc_main$15 = {
  components: {
    Tab,
    TabGroup,
    TabList,
    TabPanel,
    TabPanels,
    Switch,
    SwitchDescription,
    SwitchGroup,
    SwitchLabel,
    AtSymbolIcon,
    CodeBracketIcon,
    LinkIcon,
    JetDialogModal,
    JetSecondaryButton,
    JetButton,
    Link,
    CheckCircleIcon: CheckCircleIcon$1,
    ChevronRightIcon,
    JetInputError,
    SelectRich
  },
  props: ["project"],
  data() {
    return {
      createStudyForm: this.$inertia.form({
        _method: "POST",
        name: "",
        description: "",
        error_message: null,
        team_id: null,
        owner_id: null,
        color: null,
        starred: null,
        project_id: this.project ? this.project.id : null,
        is_public: ref(false),
        license: null
      }),
      createStudyDialog: false,
      licenses: []
    };
  },
  mounted() {
    this.emitter.on("openStudyCreateDialog", () => {
      this.createStudyDialog = true;
    });
  },
  methods: {
    createStudy() {
      this.createStudyForm.owner_id = this.$page.props.auth.user.id;
      this.createStudyForm.team_id = this.$page.props.auth.user.current_team.id;
      this.createStudyForm.project_id = this.project.id;
      this.createStudyForm.post(route("dashboard.study.create"), {
        preserveScroll: true,
        onSuccess: () => {
          this.createStudyDialog = false;
          this.createStudyForm.reset();
        },
        onError: (err) => console.error(err)
      });
    },
    toggleCreateStudyDialog() {
      this.createStudyDialog = !this.createStudyDialog;
      this.createStudyForm.clearErrors();
      if (this.$page.props.licenses) {
        this.licenses = this.$page.props.licenses;
        this.createStudyForm.license = this.licenses.find(
          (l2) => l2.id == this.project.license_id
        );
      } else {
        axios.get(route("licenses")).then((res) => {
          this.licenses = res.data;
          this.$page.props.licenses = res.data;
          this.createStudyForm.license = this.licenses.find(
            (l2) => l2.id == this.project.license_id
          );
        });
      }
    }
  }
};
function _sfc_ssrRender$14(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_dialog_modal = resolveComponent("jet-dialog-modal");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_TabGroup = resolveComponent("TabGroup");
  const _component_TabList = resolveComponent("TabList");
  const _component_Tab = resolveComponent("Tab");
  const _component_TabPanels = resolveComponent("TabPanels");
  const _component_TabPanel = resolveComponent("TabPanel");
  const _component_SwitchGroup = resolveComponent("SwitchGroup");
  const _component_Switch = resolveComponent("Switch");
  const _component_SwitchLabel = resolveComponent("SwitchLabel");
  const _component_select_rich = resolveComponent("select-rich");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  const _component_jet_button = resolveComponent("jet-button");
  _push(ssrRenderComponent(_component_jet_dialog_modal, mergeProps({
    show: $data.createStudyDialog,
    onClose: ($event) => $data.createStudyDialog = false
  }, _attrs), {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${ssrInterpolate($props.project.name)} <span class="text-gray-400"${_scopeId}>&gt;</span> New Study `);
      } else {
        return [
          createTextVNode(toDisplayString($props.project.name) + " ", 1),
          createVNode("span", { class: "text-gray-400" }, ">"),
          createTextVNode(" New Study ")
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="relative z-0 mt-1 rounded-lg cursor-pointer"${_scopeId}><div class="mt-6 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6"${_scopeId}><div class="sm:col-span-6"${_scopeId}><label for="name" class="block text-sm font-medium text-gray-700 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId}> Name </label><div class="mt-1 flex rounded-md shadow-sm"${_scopeId}><input id="name"${ssrRenderAttr("value", $data.createStudyForm.name)} type="text" name="name" autocomplete="off" class="flex-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full min-w-0 rounded sm:text-sm border-gray-300"${_scopeId}></div>`);
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.createStudyForm.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="sm:col-span-6"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_TabGroup, null, {
          default: withCtx(({ $selectedIndex }, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_TabList, { class: "flex items-center" }, {
                default: withCtx((_2, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(ssrRenderComponent(_component_Tab, {
                      as: "template",
                      class: "after:content-['*'] after:ml-0.5 after:text-red-500"
                    }, {
                      default: withCtx(({ selected }, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`<button class="${ssrRenderClass([
                            selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                            "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                          ])}"${_scopeId4}> Write </button>`);
                        } else {
                          return [
                            createVNode("button", {
                              class: [
                                selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                              ]
                            }, " Write ", 2)
                          ];
                        }
                      }),
                      _: 2
                    }, _parent4, _scopeId3));
                    _push4(ssrRenderComponent(_component_Tab, { as: "template" }, {
                      default: withCtx(({ selected }, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`<button class="${ssrRenderClass([
                            selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                            "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                          ])}"${_scopeId4}> Preview </button>`);
                        } else {
                          return [
                            createVNode("button", {
                              class: [
                                selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                              ]
                            }, " Preview ", 2)
                          ];
                        }
                      }),
                      _: 2
                    }, _parent4, _scopeId3));
                  } else {
                    return [
                      createVNode(_component_Tab, {
                        as: "template",
                        class: "after:content-['*'] after:ml-0.5 after:text-red-500"
                      }, {
                        default: withCtx(({ selected }) => [
                          createVNode("button", {
                            class: [
                              selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                              "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                            ]
                          }, " Write ", 2)
                        ]),
                        _: 1
                      }),
                      createVNode(_component_Tab, { as: "template" }, {
                        default: withCtx(({ selected }) => [
                          createVNode("button", {
                            class: [
                              selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                              "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                            ]
                          }, " Preview ", 2)
                        ]),
                        _: 1
                      })
                    ];
                  }
                }),
                _: 2
              }, _parent3, _scopeId2));
              _push3(ssrRenderComponent(_component_TabPanels, { class: "mt-2" }, {
                default: withCtx((_2, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(ssrRenderComponent(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                      default: withCtx((_3, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`<label for="comment" class="sr-only"${_scopeId4}>Comment</label><div${_scopeId4}><textarea id="description" name="description" placeholder="Describe this study in atleast 20 characters." rows="3" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"${_scopeId4}>${ssrInterpolate(
                            $data.createStudyForm.description
                          )}</textarea></div>`);
                        } else {
                          return [
                            createVNode("label", {
                              for: "comment",
                              class: "sr-only"
                            }, "Comment"),
                            createVNode("div", null, [
                              withDirectives(createVNode("textarea", {
                                id: "description",
                                "onUpdate:modelValue": ($event) => $data.createStudyForm.description = $event,
                                name: "description",
                                placeholder: "Describe this study in atleast 20 characters.",
                                rows: "3",
                                class: "shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"
                              }, null, 8, ["onUpdate:modelValue"]), [
                                [
                                  vModelText,
                                  $data.createStudyForm.description
                                ]
                              ])
                            ])
                          ];
                        }
                      }),
                      _: 2
                    }, _parent4, _scopeId3));
                    _push4(ssrRenderComponent(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                      default: withCtx((_3, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`<div class="border-b"${_scopeId4}><div class="mx-px mt-px px-3 pt-2 pb-12"${_scopeId4}>`);
                          if ($data.createStudyForm.description == "") {
                            _push5(`<span class="text-gray-400 text-sm font-medium"${_scopeId4}> Nothing to preview </span>`);
                          } else {
                            _push5(`<span${_scopeId4}><div class="prose"${_scopeId4}>${_ctx.md(
                              $data.createStudyForm.description
                            )}</div></span>`);
                          }
                          _push5(`</div></div>`);
                        } else {
                          return [
                            createVNode("div", { class: "border-b" }, [
                              createVNode("div", { class: "mx-px mt-px px-3 pt-2 pb-12" }, [
                                $data.createStudyForm.description == "" ? (openBlock(), createBlock("span", {
                                  key: 0,
                                  class: "text-gray-400 text-sm font-medium"
                                }, " Nothing to preview ")) : (openBlock(), createBlock("span", { key: 1 }, [
                                  createVNode("div", {
                                    class: "prose",
                                    innerHTML: _ctx.md(
                                      $data.createStudyForm.description
                                    )
                                  }, null, 8, ["innerHTML"])
                                ]))
                              ])
                            ])
                          ];
                        }
                      }),
                      _: 2
                    }, _parent4, _scopeId3));
                  } else {
                    return [
                      createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                        default: withCtx(() => [
                          createVNode("label", {
                            for: "comment",
                            class: "sr-only"
                          }, "Comment"),
                          createVNode("div", null, [
                            withDirectives(createVNode("textarea", {
                              id: "description",
                              "onUpdate:modelValue": ($event) => $data.createStudyForm.description = $event,
                              name: "description",
                              placeholder: "Describe this study in atleast 20 characters.",
                              rows: "3",
                              class: "shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"
                            }, null, 8, ["onUpdate:modelValue"]), [
                              [
                                vModelText,
                                $data.createStudyForm.description
                              ]
                            ])
                          ])
                        ]),
                        _: 1
                      }),
                      createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                        default: withCtx(() => [
                          createVNode("div", { class: "border-b" }, [
                            createVNode("div", { class: "mx-px mt-px px-3 pt-2 pb-12" }, [
                              $data.createStudyForm.description == "" ? (openBlock(), createBlock("span", {
                                key: 0,
                                class: "text-gray-400 text-sm font-medium"
                              }, " Nothing to preview ")) : (openBlock(), createBlock("span", { key: 1 }, [
                                createVNode("div", {
                                  class: "prose",
                                  innerHTML: _ctx.md(
                                    $data.createStudyForm.description
                                  )
                                }, null, 8, ["innerHTML"])
                              ]))
                            ])
                          ])
                        ]),
                        _: 1
                      })
                    ];
                  }
                }),
                _: 2
              }, _parent3, _scopeId2));
            } else {
              return [
                createVNode(_component_TabList, { class: "flex items-center" }, {
                  default: withCtx(() => [
                    createVNode(_component_Tab, {
                      as: "template",
                      class: "after:content-['*'] after:ml-0.5 after:text-red-500"
                    }, {
                      default: withCtx(({ selected }) => [
                        createVNode("button", {
                          class: [
                            selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                            "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                          ]
                        }, " Write ", 2)
                      ]),
                      _: 1
                    }),
                    createVNode(_component_Tab, { as: "template" }, {
                      default: withCtx(({ selected }) => [
                        createVNode("button", {
                          class: [
                            selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                            "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                          ]
                        }, " Preview ", 2)
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                }),
                createVNode(_component_TabPanels, { class: "mt-2" }, {
                  default: withCtx(() => [
                    createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                      default: withCtx(() => [
                        createVNode("label", {
                          for: "comment",
                          class: "sr-only"
                        }, "Comment"),
                        createVNode("div", null, [
                          withDirectives(createVNode("textarea", {
                            id: "description",
                            "onUpdate:modelValue": ($event) => $data.createStudyForm.description = $event,
                            name: "description",
                            placeholder: "Describe this study in atleast 20 characters.",
                            rows: "3",
                            class: "shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"
                          }, null, 8, ["onUpdate:modelValue"]), [
                            [
                              vModelText,
                              $data.createStudyForm.description
                            ]
                          ])
                        ])
                      ]),
                      _: 1
                    }),
                    createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                      default: withCtx(() => [
                        createVNode("div", { class: "border-b" }, [
                          createVNode("div", { class: "mx-px mt-px px-3 pt-2 pb-12" }, [
                            $data.createStudyForm.description == "" ? (openBlock(), createBlock("span", {
                              key: 0,
                              class: "text-gray-400 text-sm font-medium"
                            }, " Nothing to preview ")) : (openBlock(), createBlock("span", { key: 1 }, [
                              createVNode("div", {
                                class: "prose",
                                innerHTML: _ctx.md(
                                  $data.createStudyForm.description
                                )
                              }, null, 8, ["innerHTML"])
                            ]))
                          ])
                        ])
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.createStudyForm.errors.description,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`<label class="block text-sm font-medium text-gray-700"${_scopeId}><small${_scopeId}><svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-markdown v-align-bottom inline"${_scopeId}><path fill-rule="evenodd" d="M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z"${_scopeId}></path></svg> Styling with Markdown is <span${_scopeId}>supported</span></small></label></div><div class="sm:col-span-6"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_SwitchGroup, {
          as: "div",
          class: "flex items-center"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_Switch, {
                modelValue: $data.createStudyForm.is_public,
                "onUpdate:modelValue": ($event) => $data.createStudyForm.is_public = $event,
                class: [
                  $data.createStudyForm.is_public ? "bg-green-600" : "bg-gray-200",
                  "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                ]
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<span class="${ssrRenderClass([
                      $data.createStudyForm.is_public ? "translate-x-5" : "translate-x-0",
                      "pointer-events-none relative inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                    ])}"${_scopeId3}><span class="${ssrRenderClass([
                      $data.createStudyForm.is_public ? "opacity-0 ease-out duration-100" : "opacity-100 ease-in duration-200",
                      "absolute inset-0 h-full w-full flex items-center justify-center transition-opacity"
                    ])}" aria-hidden="true"${_scopeId3}><svg id="Capa_1" class="h-3 w-3 text-gray-400 inline" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 512 512" style="${ssrRenderStyle({ "enable-background": "new 0 0 512\n                                                    512" })}" xml:space="preserve"${_scopeId3}><g${_scopeId3}><g${_scopeId3}><path d="M437.333,192h-32v-42.667C405.333,66.99,338.344,0,256,0S106.667,66.99,106.667,149.333V192h-32
                                                C68.771,192,64,196.771,64,202.667v266.667C64,492.865,83.135,512,106.667,512h298.667C428.865,512,448,492.865,448,469.333
                                                V202.667C448,196.771,443.229,192,437.333,192z M287.938,414.823c0.333,3.01-0.635,6.031-2.656,8.292
                                                c-2.021,2.26-4.917,3.552-7.948,3.552h-42.667c-3.031,0-5.927-1.292-7.948-3.552c-2.021-2.26-2.99-5.281-2.656-8.292l6.729-60.51
                                                c-10.927-7.948-17.458-20.521-17.458-34.313c0-23.531,19.135-42.667,42.667-42.667s42.667,19.135,42.667,42.667
                                                c0,13.792-6.531,26.365-17.458,34.313L287.938,414.823z M341.333,192H170.667v-42.667C170.667,102.281,208.948,64,256,64
                                                s85.333,38.281,85.333,85.333V192z"${_scopeId3}></path></g></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g><g${_scopeId3}></g></svg></span><span class="${ssrRenderClass([
                      $data.createStudyForm.is_public ? "opacity-100 ease-in duration-200" : "opacity-0 ease-out duration-100",
                      "absolute inset-0 h-full w-full flex items-center justify-center transition-opacity"
                    ])}" aria-hidden="true"${_scopeId3}><svg class="h-3 w-3 text-green-400 inline" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 64 64" width="512" height="512"${_scopeId3}><g id="globe"${_scopeId3}><path d="M53.85,47.85A27,27,0,0,1,24,57.8V56l3-3V49l4-4V42l4,4h5l2-2h8Z"${_scopeId3}></path><path d="M42,20.59v2.56L38.07,27H31l-5.36,5.26L31,37.51v5.06L27.44,39H22.86L16,32.11V24.2L11.8,20h-4A27,27,0,0,1,32,5a26.55,26.55,0,0,1,7.06.94L36,9H30v4l4,4h4.33Z"${_scopeId3}></path><path d="M32,60A28,28,0,1,1,60,32,28,28,0,0,1,32,60ZM32,6A26,26,0,1,0,58,32,26,26,0,0,0,32,6Z"${_scopeId3}></path></g></svg></span></span>`);
                  } else {
                    return [
                      createVNode("span", {
                        class: [
                          $data.createStudyForm.is_public ? "translate-x-5" : "translate-x-0",
                          "pointer-events-none relative inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                        ]
                      }, [
                        createVNode("span", {
                          class: [
                            $data.createStudyForm.is_public ? "opacity-0 ease-out duration-100" : "opacity-100 ease-in duration-200",
                            "absolute inset-0 h-full w-full flex items-center justify-center transition-opacity"
                          ],
                          "aria-hidden": "true"
                        }, [
                          (openBlock(), createBlock("svg", {
                            id: "Capa_1",
                            class: "h-3 w-3 text-gray-400 inline",
                            version: "1.1",
                            xmlns: "http://www.w3.org/2000/svg",
                            "xmlns:xlink": "http://www.w3.org/1999/xlink",
                            x: "0px",
                            y: "0px",
                            viewBox: "0 0 512 512",
                            style: { "enable-background": "new 0 0 512\n                                                    512" },
                            "xml:space": "preserve"
                          }, [
                            createVNode("g", null, [
                              createVNode("g", null, [
                                createVNode("path", { d: "M437.333,192h-32v-42.667C405.333,66.99,338.344,0,256,0S106.667,66.99,106.667,149.333V192h-32\n                                                C68.771,192,64,196.771,64,202.667v266.667C64,492.865,83.135,512,106.667,512h298.667C428.865,512,448,492.865,448,469.333\n                                                V202.667C448,196.771,443.229,192,437.333,192z M287.938,414.823c0.333,3.01-0.635,6.031-2.656,8.292\n                                                c-2.021,2.26-4.917,3.552-7.948,3.552h-42.667c-3.031,0-5.927-1.292-7.948-3.552c-2.021-2.26-2.99-5.281-2.656-8.292l6.729-60.51\n                                                c-10.927-7.948-17.458-20.521-17.458-34.313c0-23.531,19.135-42.667,42.667-42.667s42.667,19.135,42.667,42.667\n                                                c0,13.792-6.531,26.365-17.458,34.313L287.938,414.823z M341.333,192H170.667v-42.667C170.667,102.281,208.948,64,256,64\n                                                s85.333,38.281,85.333,85.333V192z" })
                              ])
                            ]),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g"),
                            createVNode("g")
                          ]))
                        ], 2),
                        createVNode("span", {
                          class: [
                            $data.createStudyForm.is_public ? "opacity-100 ease-in duration-200" : "opacity-0 ease-out duration-100",
                            "absolute inset-0 h-full w-full flex items-center justify-center transition-opacity"
                          ],
                          "aria-hidden": "true"
                        }, [
                          (openBlock(), createBlock("svg", {
                            class: "h-3 w-3 text-green-400 inline",
                            xmlns: "http://www.w3.org/2000/svg",
                            viewBox: "0 0 64 64",
                            width: "512",
                            height: "512"
                          }, [
                            createVNode("g", { id: "globe" }, [
                              createVNode("path", { d: "M53.85,47.85A27,27,0,0,1,24,57.8V56l3-3V49l4-4V42l4,4h5l2-2h8Z" }),
                              createVNode("path", { d: "M42,20.59v2.56L38.07,27H31l-5.36,5.26L31,37.51v5.06L27.44,39H22.86L16,32.11V24.2L11.8,20h-4A27,27,0,0,1,32,5a26.55,26.55,0,0,1,7.06.94L36,9H30v4l4,4h4.33Z" }),
                              createVNode("path", { d: "M32,60A28,28,0,1,1,60,32,28,28,0,0,1,32,60ZM32,6A26,26,0,1,0,58,32,26,26,0,0,0,32,6Z" })
                            ])
                          ]))
                        ], 2)
                      ], 2)
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`<span class="flex-grow flex ml-4 flex-col"${_scopeId2}>`);
              if (!$data.createStudyForm.is_public) {
                _push3(`<span${_scopeId2}>`);
                _push3(ssrRenderComponent(_component_SwitchLabel, {
                  as: "span",
                  class: "text-sm font-medium text-gray-900",
                  passive: ""
                }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(` Private`);
                    } else {
                      return [
                        createTextVNode(" Private")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                _push3(`</span>`);
              } else {
                _push3(`<span${_scopeId2}>`);
                _push3(ssrRenderComponent(_component_SwitchLabel, {
                  as: "span",
                  class: "text-sm font-medium text-gray-900",
                  passive: ""
                }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`Public`);
                    } else {
                      return [
                        createTextVNode("Public")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                _push3(`</span>`);
              }
              _push3(`</span>`);
            } else {
              return [
                createVNode(_component_Switch, {
                  modelValue: $data.createStudyForm.is_public,
                  "onUpdate:modelValue": ($event) => $data.createStudyForm.is_public = $event,
                  class: [
                    $data.createStudyForm.is_public ? "bg-green-600" : "bg-gray-200",
                    "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                  ]
                }, {
                  default: withCtx(() => [
                    createVNode("span", {
                      class: [
                        $data.createStudyForm.is_public ? "translate-x-5" : "translate-x-0",
                        "pointer-events-none relative inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                      ]
                    }, [
                      createVNode("span", {
                        class: [
                          $data.createStudyForm.is_public ? "opacity-0 ease-out duration-100" : "opacity-100 ease-in duration-200",
                          "absolute inset-0 h-full w-full flex items-center justify-center transition-opacity"
                        ],
                        "aria-hidden": "true"
                      }, [
                        (openBlock(), createBlock("svg", {
                          id: "Capa_1",
                          class: "h-3 w-3 text-gray-400 inline",
                          version: "1.1",
                          xmlns: "http://www.w3.org/2000/svg",
                          "xmlns:xlink": "http://www.w3.org/1999/xlink",
                          x: "0px",
                          y: "0px",
                          viewBox: "0 0 512 512",
                          style: { "enable-background": "new 0 0 512\n                                                    512" },
                          "xml:space": "preserve"
                        }, [
                          createVNode("g", null, [
                            createVNode("g", null, [
                              createVNode("path", { d: "M437.333,192h-32v-42.667C405.333,66.99,338.344,0,256,0S106.667,66.99,106.667,149.333V192h-32\n                                                C68.771,192,64,196.771,64,202.667v266.667C64,492.865,83.135,512,106.667,512h298.667C428.865,512,448,492.865,448,469.333\n                                                V202.667C448,196.771,443.229,192,437.333,192z M287.938,414.823c0.333,3.01-0.635,6.031-2.656,8.292\n                                                c-2.021,2.26-4.917,3.552-7.948,3.552h-42.667c-3.031,0-5.927-1.292-7.948-3.552c-2.021-2.26-2.99-5.281-2.656-8.292l6.729-60.51\n                                                c-10.927-7.948-17.458-20.521-17.458-34.313c0-23.531,19.135-42.667,42.667-42.667s42.667,19.135,42.667,42.667\n                                                c0,13.792-6.531,26.365-17.458,34.313L287.938,414.823z M341.333,192H170.667v-42.667C170.667,102.281,208.948,64,256,64\n                                                s85.333,38.281,85.333,85.333V192z" })
                            ])
                          ]),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g")
                        ]))
                      ], 2),
                      createVNode("span", {
                        class: [
                          $data.createStudyForm.is_public ? "opacity-100 ease-in duration-200" : "opacity-0 ease-out duration-100",
                          "absolute inset-0 h-full w-full flex items-center justify-center transition-opacity"
                        ],
                        "aria-hidden": "true"
                      }, [
                        (openBlock(), createBlock("svg", {
                          class: "h-3 w-3 text-green-400 inline",
                          xmlns: "http://www.w3.org/2000/svg",
                          viewBox: "0 0 64 64",
                          width: "512",
                          height: "512"
                        }, [
                          createVNode("g", { id: "globe" }, [
                            createVNode("path", { d: "M53.85,47.85A27,27,0,0,1,24,57.8V56l3-3V49l4-4V42l4,4h5l2-2h8Z" }),
                            createVNode("path", { d: "M42,20.59v2.56L38.07,27H31l-5.36,5.26L31,37.51v5.06L27.44,39H22.86L16,32.11V24.2L11.8,20h-4A27,27,0,0,1,32,5a26.55,26.55,0,0,1,7.06.94L36,9H30v4l4,4h4.33Z" }),
                            createVNode("path", { d: "M32,60A28,28,0,1,1,60,32,28,28,0,0,1,32,60ZM32,6A26,26,0,1,0,58,32,26,26,0,0,0,32,6Z" })
                          ])
                        ]))
                      ], 2)
                    ], 2)
                  ]),
                  _: 1
                }, 8, ["modelValue", "onUpdate:modelValue", "class"]),
                createVNode("span", { class: "flex-grow flex ml-4 flex-col" }, [
                  !$data.createStudyForm.is_public ? (openBlock(), createBlock("span", { key: 0 }, [
                    createVNode(_component_SwitchLabel, {
                      as: "span",
                      class: "text-sm font-medium text-gray-900",
                      passive: ""
                    }, {
                      default: withCtx(() => [
                        createTextVNode(" Private")
                      ]),
                      _: 1
                    })
                  ])) : (openBlock(), createBlock("span", { key: 1 }, [
                    createVNode(_component_SwitchLabel, {
                      as: "span",
                      class: "text-sm font-medium text-gray-900",
                      passive: ""
                    }, {
                      default: withCtx(() => [
                        createTextVNode("Public")
                      ]),
                      _: 1
                    })
                  ]))
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></div><div class="mt-6 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-1"${_scopeId}><div${_scopeId}>`);
        _push2(ssrRenderComponent(_component_select_rich, {
          selected: $data.createStudyForm.license,
          "onUpdate:selected": ($event) => $data.createStudyForm.license = $event,
          label: "License",
          items: $data.licenses
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.createStudyForm.errors.license,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "relative z-0 mt-1 rounded-lg cursor-pointer" }, [
            createVNode("div", { class: "mt-6 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6" }, [
              createVNode("div", { class: "sm:col-span-6" }, [
                createVNode("label", {
                  for: "name",
                  class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500"
                }, " Name "),
                createVNode("div", { class: "mt-1 flex rounded-md shadow-sm" }, [
                  withDirectives(createVNode("input", {
                    id: "name",
                    "onUpdate:modelValue": ($event) => $data.createStudyForm.name = $event,
                    type: "text",
                    name: "name",
                    autocomplete: "off",
                    class: "flex-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full min-w-0 rounded sm:text-sm border-gray-300"
                  }, null, 8, ["onUpdate:modelValue"]), [
                    [vModelText, $data.createStudyForm.name]
                  ])
                ]),
                createVNode(_component_jet_input_error, {
                  message: $data.createStudyForm.errors.name,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              createVNode("div", { class: "sm:col-span-6" }, [
                createVNode(_component_TabGroup, null, {
                  default: withCtx(({ $selectedIndex }) => [
                    createVNode(_component_TabList, { class: "flex items-center" }, {
                      default: withCtx(() => [
                        createVNode(_component_Tab, {
                          as: "template",
                          class: "after:content-['*'] after:ml-0.5 after:text-red-500"
                        }, {
                          default: withCtx(({ selected }) => [
                            createVNode("button", {
                              class: [
                                selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                              ]
                            }, " Write ", 2)
                          ]),
                          _: 1
                        }),
                        createVNode(_component_Tab, { as: "template" }, {
                          default: withCtx(({ selected }) => [
                            createVNode("button", {
                              class: [
                                selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                              ]
                            }, " Preview ", 2)
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    createVNode(_component_TabPanels, { class: "mt-2" }, {
                      default: withCtx(() => [
                        createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                          default: withCtx(() => [
                            createVNode("label", {
                              for: "comment",
                              class: "sr-only"
                            }, "Comment"),
                            createVNode("div", null, [
                              withDirectives(createVNode("textarea", {
                                id: "description",
                                "onUpdate:modelValue": ($event) => $data.createStudyForm.description = $event,
                                name: "description",
                                placeholder: "Describe this study in atleast 20 characters.",
                                rows: "3",
                                class: "shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"
                              }, null, 8, ["onUpdate:modelValue"]), [
                                [
                                  vModelText,
                                  $data.createStudyForm.description
                                ]
                              ])
                            ])
                          ]),
                          _: 1
                        }),
                        createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                          default: withCtx(() => [
                            createVNode("div", { class: "border-b" }, [
                              createVNode("div", { class: "mx-px mt-px px-3 pt-2 pb-12" }, [
                                $data.createStudyForm.description == "" ? (openBlock(), createBlock("span", {
                                  key: 0,
                                  class: "text-gray-400 text-sm font-medium"
                                }, " Nothing to preview ")) : (openBlock(), createBlock("span", { key: 1 }, [
                                  createVNode("div", {
                                    class: "prose",
                                    innerHTML: _ctx.md(
                                      $data.createStudyForm.description
                                    )
                                  }, null, 8, ["innerHTML"])
                                ]))
                              ])
                            ])
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                }),
                createVNode(_component_jet_input_error, {
                  message: $data.createStudyForm.errors.description,
                  class: "mt-2"
                }, null, 8, ["message"]),
                createVNode("label", { class: "block text-sm font-medium text-gray-700" }, [
                  createVNode("small", null, [
                    (openBlock(), createBlock("svg", {
                      "aria-hidden": "true",
                      height: "16",
                      viewBox: "0 0 16 16",
                      version: "1.1",
                      width: "16",
                      "data-view-component": "true",
                      class: "octicon octicon-markdown v-align-bottom inline"
                    }, [
                      createVNode("path", {
                        "fill-rule": "evenodd",
                        d: "M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z"
                      })
                    ])),
                    createTextVNode(" Styling with Markdown is "),
                    createVNode("span", {
                      onClick: ($event) => $data.createStudyForm.description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat."
                    }, "supported", 8, ["onClick"])
                  ])
                ])
              ]),
              createVNode("div", { class: "sm:col-span-6" }, [
                createVNode(_component_SwitchGroup, {
                  as: "div",
                  class: "flex items-center"
                }, {
                  default: withCtx(() => [
                    createVNode(_component_Switch, {
                      modelValue: $data.createStudyForm.is_public,
                      "onUpdate:modelValue": ($event) => $data.createStudyForm.is_public = $event,
                      class: [
                        $data.createStudyForm.is_public ? "bg-green-600" : "bg-gray-200",
                        "relative inline-flex flex-shrink-0 h-6 w-11 border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
                      ]
                    }, {
                      default: withCtx(() => [
                        createVNode("span", {
                          class: [
                            $data.createStudyForm.is_public ? "translate-x-5" : "translate-x-0",
                            "pointer-events-none relative inline-block h-5 w-5 rounded-full bg-white shadow transform ring-0 transition ease-in-out duration-200"
                          ]
                        }, [
                          createVNode("span", {
                            class: [
                              $data.createStudyForm.is_public ? "opacity-0 ease-out duration-100" : "opacity-100 ease-in duration-200",
                              "absolute inset-0 h-full w-full flex items-center justify-center transition-opacity"
                            ],
                            "aria-hidden": "true"
                          }, [
                            (openBlock(), createBlock("svg", {
                              id: "Capa_1",
                              class: "h-3 w-3 text-gray-400 inline",
                              version: "1.1",
                              xmlns: "http://www.w3.org/2000/svg",
                              "xmlns:xlink": "http://www.w3.org/1999/xlink",
                              x: "0px",
                              y: "0px",
                              viewBox: "0 0 512 512",
                              style: { "enable-background": "new 0 0 512\n                                                    512" },
                              "xml:space": "preserve"
                            }, [
                              createVNode("g", null, [
                                createVNode("g", null, [
                                  createVNode("path", { d: "M437.333,192h-32v-42.667C405.333,66.99,338.344,0,256,0S106.667,66.99,106.667,149.333V192h-32\n                                                C68.771,192,64,196.771,64,202.667v266.667C64,492.865,83.135,512,106.667,512h298.667C428.865,512,448,492.865,448,469.333\n                                                V202.667C448,196.771,443.229,192,437.333,192z M287.938,414.823c0.333,3.01-0.635,6.031-2.656,8.292\n                                                c-2.021,2.26-4.917,3.552-7.948,3.552h-42.667c-3.031,0-5.927-1.292-7.948-3.552c-2.021-2.26-2.99-5.281-2.656-8.292l6.729-60.51\n                                                c-10.927-7.948-17.458-20.521-17.458-34.313c0-23.531,19.135-42.667,42.667-42.667s42.667,19.135,42.667,42.667\n                                                c0,13.792-6.531,26.365-17.458,34.313L287.938,414.823z M341.333,192H170.667v-42.667C170.667,102.281,208.948,64,256,64\n                                                s85.333,38.281,85.333,85.333V192z" })
                                ])
                              ]),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g")
                            ]))
                          ], 2),
                          createVNode("span", {
                            class: [
                              $data.createStudyForm.is_public ? "opacity-100 ease-in duration-200" : "opacity-0 ease-out duration-100",
                              "absolute inset-0 h-full w-full flex items-center justify-center transition-opacity"
                            ],
                            "aria-hidden": "true"
                          }, [
                            (openBlock(), createBlock("svg", {
                              class: "h-3 w-3 text-green-400 inline",
                              xmlns: "http://www.w3.org/2000/svg",
                              viewBox: "0 0 64 64",
                              width: "512",
                              height: "512"
                            }, [
                              createVNode("g", { id: "globe" }, [
                                createVNode("path", { d: "M53.85,47.85A27,27,0,0,1,24,57.8V56l3-3V49l4-4V42l4,4h5l2-2h8Z" }),
                                createVNode("path", { d: "M42,20.59v2.56L38.07,27H31l-5.36,5.26L31,37.51v5.06L27.44,39H22.86L16,32.11V24.2L11.8,20h-4A27,27,0,0,1,32,5a26.55,26.55,0,0,1,7.06.94L36,9H30v4l4,4h4.33Z" }),
                                createVNode("path", { d: "M32,60A28,28,0,1,1,60,32,28,28,0,0,1,32,60ZM32,6A26,26,0,1,0,58,32,26,26,0,0,0,32,6Z" })
                              ])
                            ]))
                          ], 2)
                        ], 2)
                      ]),
                      _: 1
                    }, 8, ["modelValue", "onUpdate:modelValue", "class"]),
                    createVNode("span", { class: "flex-grow flex ml-4 flex-col" }, [
                      !$data.createStudyForm.is_public ? (openBlock(), createBlock("span", { key: 0 }, [
                        createVNode(_component_SwitchLabel, {
                          as: "span",
                          class: "text-sm font-medium text-gray-900",
                          passive: ""
                        }, {
                          default: withCtx(() => [
                            createTextVNode(" Private")
                          ]),
                          _: 1
                        })
                      ])) : (openBlock(), createBlock("span", { key: 1 }, [
                        createVNode(_component_SwitchLabel, {
                          as: "span",
                          class: "text-sm font-medium text-gray-900",
                          passive: ""
                        }, {
                          default: withCtx(() => [
                            createTextVNode("Public")
                          ]),
                          _: 1
                        })
                      ]))
                    ])
                  ]),
                  _: 1
                })
              ])
            ]),
            createVNode("div", { class: "mt-6 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-1" }, [
              createVNode("div", null, [
                createVNode(_component_select_rich, {
                  selected: $data.createStudyForm.license,
                  "onUpdate:selected": ($event) => $data.createStudyForm.license = $event,
                  label: "License",
                  items: $data.licenses
                }, null, 8, ["selected", "onUpdate:selected", "items"]),
                createVNode(_component_jet_input_error, {
                  message: $data.createStudyForm.errors.license,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ])
          ])
        ];
      }
    }),
    footer: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_secondary_button, { onClick: $options.toggleCreateStudyDialog }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_button, {
          class: ["ml-2", { "opacity-25": $data.createStudyForm.processing }],
          disabled: $data.createStudyForm.processing,
          onClick: $options.createStudy
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Save `);
            } else {
              return [
                createTextVNode(" Save ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_secondary_button, { onClick: $options.toggleCreateStudyDialog }, {
            default: withCtx(() => [
              createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          createVNode(_component_jet_button, {
            class: ["ml-2", { "opacity-25": $data.createStudyForm.processing }],
            disabled: $data.createStudyForm.processing,
            onClick: $options.createStudy
          }, {
            default: withCtx(() => [
              createTextVNode(" Save ")
            ]),
            _: 1
          }, 8, ["class", "disabled", "onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$15 = _sfc_main$15.setup;
_sfc_main$15.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Study/Partials/Create.vue");
  return _sfc_setup$15 ? _sfc_setup$15(props, ctx) : void 0;
};
const StudyCreate = /* @__PURE__ */ _export_sfc(_sfc_main$15, [["ssrRender", _sfc_ssrRender$14]]);
const __vite_glob_0_68 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: StudyCreate
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$14 = {
  components: {},
  props: {
    molecule: String,
    width: {
      type: Number,
      default: 300
    },
    height: {
      type: Number,
      default: 300
    },
    source: {
      type: String,
      default: "cpm"
    },
    CIP: {
      type: Boolean,
      default: false
    },
    showDownload: {
      type: Boolean,
      default: false
    },
    identifier: String
  },
  data() {
    return {
      results: []
    };
  },
  computed: {
    encodedSmiles() {
      return encodeURIComponent(this.molecule);
    }
  },
  mounted() {
  },
  methods: {
    getSVGString() {
      if (this.molecule) {
        const options = {
          suppressChiralText: true,
          autoCropMargin: true
        };
        let mol = OCL$1.Molecule.fromSmiles(this.molecule);
        return mol.toSVG(
          this.width,
          this.height,
          mol.getIDCode,
          options
        );
      }
    }
  }
};
function _sfc_ssrRender$13(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "justify-center" }, _attrs))}>`);
  if ($props.source == "ocl") {
    _push(`<div class="flex justify-center align-middle pt-5">${$options.getSVGString($props.molecule)}</div>`);
  } else {
    _push(`<div class="flex"><img class="mx-auto w-100"${ssrRenderAttr(
      "src",
      _ctx.$page.props.CM_API + "depict/2D?smiles=" + $options.encodedSmiles + "&height=" + $props.height + "&width=" + $props.width + "&CIP=" + $props.CIP + "&toolkit=rdkit"
    )} alt=""></div>`);
  }
  if ($props.showDownload) {
    _push(`<div class="cursor-pointer mt-1 text-sm text-gray-900 float-right"><a style="${ssrRenderStyle({ "box-shadow": "none" })}" class="hover:text-gray-600">Download Molfile(2D)</a></div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div>`);
}
const _sfc_setup$14 = _sfc_main$14.setup;
_sfc_main$14.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/Depictor2D.vue");
  return _sfc_setup$14 ? _sfc_setup$14(props, ctx) : void 0;
};
const Depictor2D = /* @__PURE__ */ _export_sfc(_sfc_main$14, [["ssrRender", _sfc_ssrRender$13]]);
const _sfc_main$13 = {
  components: {
    LockClosedIcon,
    LockOpenIcon,
    EnvelopeIcon,
    PencilIcon,
    StarIcon: StarIcon$1,
    Link,
    Depictor2D
  },
  props: ["study"],
  setup() {
  },
  data() {
    return {
      selectedPreviewIndex: 0
    };
  },
  methods: {}
};
function _sfc_ssrRender$12(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Depictor2D = resolveComponent("Depictor2D");
  const _component_LockClosedIcon = resolveComponent("LockClosedIcon");
  const _component_Link = resolveComponent("Link");
  if ($props.study) {
    _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex flex-col border rounded-lg shadow-lg transition ease-in-out delay-150 duration-300 overflow-hidden" }, _attrs))}><div class="relative overflow-hidden bg-white-200"><div class="pt-2 px-2"><ul role="list"><li class="col-span-1 divide-y divide-gray-200 cursor-pointer"><div class="bg-white rounded-t-md flex justify-center items-center">`);
    if ($props.study.molecules[0] && $props.study.molecules[0].canonical_smiles) {
      _push(`<span>`);
      _push(ssrRenderComponent(_component_Depictor2D, {
        class: "py-2",
        molecule: $props.study.molecules[0].canonical_smiles,
        "show-download": false
      }, null, _parent));
      _push(`</span>`);
    } else {
      _push(`<span><div class="h-64"><div class="absolute inset-0 flex items-center justify-center"><h2 class="text-gray-200 font-bold"><i>-- molecule(s) information missing --</i></h2></div></div></span>`);
    }
    _push(`</div></li></ul><div class="bg-white"></div></div></div><div class="flex-1 border-t bg-white p-3 flex flex-col justify-between"><div>`);
    if ($props.study.identifier) {
      _push(`<small class="text-gray-500 float-left">#${ssrInterpolate($props.study.identifier)}</small>`);
    } else {
      _push(`<!---->`);
    }
    _push(`<div class="float-right">`);
    if ($props.study.is_public) {
      _push(`<div class="flex items-center mt-1"><svg class="h-3 w-3 mr-1 text-green-400 inline" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 64 64" width="512" height="512"><g id="globe"><path d="M53.85,47.85A27,27,0,0,1,24,57.8V56l3-3V49l4-4V42l4,4h5l2-2h8Z"></path><path d="M42,20.59v2.56L38.07,27H31l-5.36,5.26L31,37.51v5.06L27.44,39H22.86L16,32.11V24.2L11.8,20h-4A27,27,0,0,1,32,5a26.55,26.55,0,0,1,7.06.94L36,9H30v4l4,4h4.33Z"></path><path d="M32,60A28,28,0,1,1,60,32,28,28,0,0,1,32,60ZM32,6A26,26,0,1,0,58,32,26,26,0,0,0,32,6Z"></path></g></svg><p class="text-xs text-gray-600">Public</p></div>`);
    } else {
      _push(`<div class="flex items-center mt-1">`);
      _push(ssrRenderComponent(_component_LockClosedIcon, { class: "w-3 h-3 mr-1 text-teal-600" }, null, _parent));
      _push(`<p class="text-xs text-gray-600">Private</p></div>`);
    }
    _push(`</div></div>`);
    _push(ssrRenderComponent(_component_Link, {
      href: _ctx.route("dashboard.studies", [$props.study.id])
    }, {
      default: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`<div class="flex items-center font-bold truncate text-lg text-gray-600"${_scopeId}><span class=""${_scopeId}></span> ${ssrInterpolate($props.study.name)}</div><div class="pt-1"${_scopeId}><div class="text-xs text-gray-600"${_scopeId}><span class="text-gray-400"${_scopeId}>Last updated on</span> ${ssrInterpolate(_ctx.formatDate($props.study.updated_at))}</div></div>`);
        } else {
          return [
            createVNode("div", { class: "flex items-center font-bold truncate text-lg text-gray-600" }, [
              createVNode("span", { class: "" }),
              createTextVNode(" " + toDisplayString($props.study.name), 1)
            ]),
            createVNode("div", { class: "pt-1" }, [
              createVNode("div", { class: "text-xs text-gray-600" }, [
                createVNode("span", { class: "text-gray-400" }, "Last updated on"),
                createTextVNode(" " + toDisplayString(_ctx.formatDate($props.study.updated_at)), 1)
              ])
            ])
          ];
        }
      }),
      _: 1
    }, _parent));
    _push(`</div></div>`);
  } else {
    _push(`<!---->`);
  }
}
const _sfc_setup$13 = _sfc_main$13.setup;
_sfc_main$13.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/StudyCard.vue");
  return _sfc_setup$13 ? _sfc_setup$13(props, ctx) : void 0;
};
const StudyCard = /* @__PURE__ */ _export_sfc(_sfc_main$13, [["ssrRender", _sfc_ssrRender$12]]);
const _sfc_main$12 = {
  components: {
    Link,
    StudyCreate,
    StudyCard,
    JetButton,
    ArrowLongLeftIcon,
    ArrowLongRightIcon
  },
  props: {
    project: {
      default: null,
      type: Object
    },
    role: {
      default: null,
      type: String
    },
    teamRole: {
      default: null,
      type: String
    }
  },
  data() {
    return {
      loading: false,
      studies: [],
      query: ""
    };
  },
  mounted() {
    if (this.studies.length == 0) {
      if (this.project) {
        this.loading = true;
        this.fetchStudies(
          route("dashboard.project.studies", this.project.id)
        );
      }
    }
  },
  methods: {
    openDatasetCreateDialog() {
      this.emitter.emit("openDatasetCreateDialog", {
        draft_id: this.project.draft_id,
        return_url: "/projects/" + this.project.id
      });
    },
    fetchStudies(url) {
      axios.get(url).then((response) => {
        this.loading = false;
        this.studies = response.data;
      });
    },
    update(link) {
      if (!link) {
        link = {};
        link["url"] = route("dashboard.project.studies", this.project.id) + "?page=1";
      }
      if (link.url) {
        this.loading = true;
        this.executeQuery(link);
      }
    },
    reset() {
      let link = {};
      link["url"] = route("dashboard.project.studies", this.project.id) + "?page=1";
      this.query = "";
      this.loading = true;
      this.executeQuery(link);
    },
    executeQuery(link) {
      this.fetchStudies(link.url + "&search=" + this.query);
    },
    openStudyCreateDialog() {
      this.emitter.emit("openStudyCreateDialog", {});
    }
  }
};
function _sfc_ssrRender$11(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_study_card = resolveComponent("study-card");
  _push(`<div${ssrRenderAttrs(_attrs)}><div class="flex items-baseline justify-between"><div><h2 class="text-lg">Samples</h2><div class="float-center text-xs cursor-pointer hover:text-blue-700 mb-2"><a href="https://docs.nmrxiv.org/submission-guides/data-model/sample.html" target="_blank">Learn more about samples </a></div>`);
  if (!$data.loading) {
    _push(`<div class="flex items-center mr-4 w-full"><div class="flex w-full bg-white shadow rounded-full"><input${ssrRenderAttr("value", $data.query)} class="relative w-full border-0 px-6 py-3 rounded-full focus:shadow-outline" autocomplete="off" type="text" name="search" placeholder="Search…"></div><button class="ml-2 inline-flex items-center rounded-full px-6 py-3 shadow rounded-full text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500" style="${ssrRenderStyle({ "overflow-anchor": "none" })}"> GO </button><button class="ml-3 text-sm text-gray-500 hover:text-gray-700 focus:text-indigo-500" style="${ssrRenderStyle({ "overflow-anchor": "none" })}"> Reset </button></div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div>`);
  if (_ctx.editable && $props.project.draft_id !== null && !$props.project.is_deleted) {
    _push(`<div class="flex-shrink-0 ml-4"><a type="button" class="inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-sm font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"${ssrRenderAttr("href", "/upload?draft_id=" + $props.project.draft_id)}> + Manage Samples </a><div class="text-center text-xs cursor-pointer hover:text-blue-700 mt-2"><a href="https://docs.nmrxiv.org/submission-guides/data-model/project.html#manage-samples" target="_blank">Need help? </a></div></div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div>`);
  if (!$data.loading && $data.studies.data) {
    _push(`<div>`);
    if ($data.studies.data.length <= 0 && _ctx.editable) {
      _push(`<div><div class="mt-4 px-12 py-8 mx-auto max-w-4xl"><div class="px-6 py-4 bg-white shadow-md rounded-lg"><div class="flex items-center"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="h-6 w-6"><path d="M3 6l9 4v12l-9-4V6zm14-3v2c0 1.1-2.24 2-5 2s-5-.9-5-2V3c0 1.1 2.24 2 5 2s5-.9 5-2z" class="fill-current text-gray-400"></path><polygon points="21 6 12 10 12 22 21 18" class="fill-current text-gray-600"></polygon></svg><div class="ml-3 font-semibold text-sm text-gray-600 uppercase tracking-wider"> No studies that match the search query </div></div><button type="button" class="relative block w-full border-2 border-gray-300 border-dashed rounded-lg p-12 text-center hover:border-gray-400 focus:outline-none focus:ring-2 mt-6 focus:ring-offset-2 focus:ring-teal-500"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="mx-auto h-12 w-12 text-gray-400"><path stroke-linecap="round" stroke-linejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"></path></svg><span class="mt-2 block text-sm font-medium text-gray-900"> Empty results. <br>Click here to reset </span></button></div></div></div>`);
    } else {
      _push(`<div><div class="mt-8 mx-auto max-w-md grid gap-8 sm:max-w-lg lg:grid-cols-4 lg:max-w-7xl"><!--[-->`);
      ssrRenderList($data.studies.data, (study) => {
        _push(`<div>`);
        _push(ssrRenderComponent(_component_study_card, { study }, null, _parent));
        _push(`</div>`);
      });
      _push(`<!--]--></div>`);
      if ($data.studies.meta && $data.studies.meta.total > $data.studies.meta.per_page) {
        _push(`<div class="block w-100 mt-10"><nav class="border-t border-gray-200 px-4 flex items-center justify-between sm:px-0"><div class="-mt-px w-0 flex-1 flex"> </div><div class="hidden md:-mt-px md:flex"><!--[-->`);
        ssrRenderList($data.studies.meta.links, (link) => {
          _push(`<div class="${ssrRenderClass([
            link.active ? "text-teal-600 border-teal-500" : "",
            "cursor-pointer border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 border-t-2 pt-4 px-4 inline-flex items-center text-sm font-medium"
          ])}">${link.label}</div>`);
        });
        _push(`<!--]--></div><div class="-mt-px w-0 flex-1 flex justify-end">   </div></nav></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div>`);
    }
    _push(`</div>`);
  } else {
    _push(`<div class="text-gray-400"><svg class="animate-spin inline -ml-1 mr-2 h-5 w-5 text-dark" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg> Loading... </div>`);
  }
  _push(`</div>`);
}
const _sfc_setup$12 = _sfc_main$12.setup;
_sfc_main$12.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Study/Index.vue");
  return _sfc_setup$12 ? _sfc_setup$12(props, ctx) : void 0;
};
const StudyIndex = /* @__PURE__ */ _export_sfc(_sfc_main$12, [["ssrRender", _sfc_ssrRender$11]]);
const __vite_glob_0_62 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: StudyIndex
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$11 = {
  components: {
    JetDialogModal,
    JetSecondaryButton,
    JetDangerButton,
    JetButton,
    PencilIcon,
    ArrowSmallRightIcon,
    FolderPlusIcon: FolderPlusIcon$1,
    PlusIcon,
    TrashIcon,
    JetInputError,
    LoadingButton,
    SelectRich,
    Draggable
  },
  props: ["project"],
  data() {
    return {
      displayAddAuthorForms: false,
      isEdit: false,
      form: this.$inertia.form({
        title: "",
        given_name: "",
        family_name: null,
        affiliation: null,
        orcid_id: null,
        email_id: null,
        contributor_type: null
      }),
      authorsForm: this.$inertia.form({
        authors: []
      }),
      updateRoleForm: this.$inertia.form({
        author_id: "",
        role: ""
      }),
      query: "",
      showDialog: false,
      authors: [],
      fetchedAuthors: [],
      selectedAuthor: null,
      loading: false,
      confirmDelete: false,
      error: "",
      showManageRoleDialog: false,
      drag: false,
      // todo : dynamically load this from the config
      contributorType: [
        {
          title: "Researcher",
          description: "A person involved in analysing data or the results of an experiment or formal study.<br> May indicate an intern or assistant to one of the authors who helped with research<br> but who was not so “key” as to be listed as an author."
        },
        {
          title: "ContactPerson",
          description: "Person with knowledge of how to access, troubleshoot, or otherwise field issues<br> related to the resource."
        },
        {
          title: "DataCollector",
          description: "Person/institution responsible for finding or gathering/collecting data under the <br> guidelines of the author(s) or Principal Investigator(PI)."
        },
        {
          title: "DataCurator",
          description: "Person tasked with reviewing, enhancing, cleaning, or standardizing metadata and<br> the associated data submitted for storage, use, and maintenance within a data centre<br> or repository."
        },
        {
          title: "DataManager",
          description: "Person (or organisation with a staff of data managers, such as a data centre) <br> responsible for maintaining the finished resource."
        },
        {
          title: "Distributor",
          description: "Institution tasked with responsibility to generate/disseminate copies of the resource<br> in either electronic or print form."
        },
        {
          title: "Editor",
          description: "A person who oversees the details related to the publication format of the resource."
        },
        {
          title: "HostingInstitution",
          description: "Typically, the organisation allowing the resource to be available on the internet<br> through the provision of its hardware/software/operating support."
        },
        {
          title: "Producer",
          description: "Typically, a person or organisation responsible for the artistry and form of a media<br> product."
        },
        {
          title: "ProjectLeader",
          description: "Person officially designated as head of project team or subproject team<br> instrumental in the work necessary to development of the resource."
        },
        {
          title: "ProjectManager",
          description: "Person on the membership list of a designated project/project team."
        },
        {
          title: "RegistrationAgency",
          description: "Institution/organisation officially appointed by a Registration Authority to handle<br> specific tasks within a defined area of responsibility."
        },
        {
          title: "RelatedPerson",
          description: "A person without a specifically defined role in the development of the resource,<br> but who is someone the author wishes to recognize."
        },
        {
          title: "ResearchGroup",
          description: "Typically refers to a group of individuals with a lab, department, or division that<br> has a specifically defined focus of activity."
        },
        {
          title: "RightsHolder",
          description: "Person or institution owning or managing property rights, including intellectual<br> property rights over the resource."
        },
        {
          title: "Sponsor",
          description: "Person or organisation that issued a contract or under the auspices of which<br> a work has been written,<br> printed, published, developed, etc."
        },
        {
          title: "Supervisor",
          description: "Designated administrator over one or more groups/teams working to produce<br> a resource, or over one or more steps of a development process."
        },
        {
          title: "WorkPackageLeader",
          description: "A Work Package is a recognized data product, not all of which is included in<br> publication. The package, instead, may include notes, discarded documents,<br> etc.The Work Package Leader is responsible for ensuring the comprehensive<br> contents, versioning, and availability of the Work Package during the development<br> of the resource."
        },
        {
          title: "Other",
          description: "Any person or institution making a significant contribution to the development<br> and/or maintenance of the resource, but whose contribution is not adequately<br> described by any of the other values for contributorType."
        }
      ]
    };
  },
  mounted() {
    this.loadInitial();
  },
  methods: {
    /*Return filtered fetched authors list on the basis of selection*/
    selectedFetchedAuthorsList(all = false) {
      if (all) {
        return this.fetchedAuthors;
      } else {
        return this.fetchedAuthors.filter((a2) => a2.selected);
      }
    },
    /*Add imported authors to selected list*/
    addAuthorToSelectedList(author) {
      if (author.selected) {
        author.selected = false;
      } else {
        author.selected = true;
      }
    },
    /*Fetch and populate initial & default values*/
    loadInitial() {
      if (this.project && this.project.authors) {
        this.authors = this.project.authors.sort(
          (a2, b2) => a2.pivot.sort_order - b2.pivot.sort_order
        );
      }
      this.form.contributor_type = {};
      this.form.contributor_type = this.contributorType[0];
    },
    /*Control the display toggling*/
    toggleDialog() {
      this.showDialog = !this.showDialog;
    },
    /*Reset variables on close of dialog*/
    onClose() {
      this.showDialog = false;
      this.form.reset();
      this.fetchedAuthors = [];
      this.query = "";
      this.form.contributor_type = {};
      this.form.contributor_type = this.contributorType[0];
      this.isEdit = false;
      this.error = "";
    },
    /*Edit author*/
    edit(author) {
      this.selectedAuthor = author;
      this.authors = this.authors.filter((author2) => {
        return author2.given_name + author2.family_name != this.selectedAuthor.given_name + this.selectedAuthor.family_name;
      });
      this.form.title = author.title;
      this.form.given_name = author.given_name;
      this.form.family_name = author.family_name;
      this.form.email_id = author.email_id;
      this.form.affiliation = author.affiliation;
      this.form.orcid_id = author.orcid_id;
      this.form.contributor_type = {};
      this.form.contributor_type.title = author.pivot ? author.pivot.contributor_type : null;
      this.displayAddAuthorForms = true;
      this.isEdit = true;
    },
    /*Fetch author from DOI or ORCID id*/
    fetchAuthors() {
      this.loading = true;
      this.error = "";
      this.query = this.extractDoi(this.query);
      this.fetchedAuthors = [];
      let isDOI = new RegExp(/\b(10[.][0-9]{4,}(?:[.][0-9]+)*)\b/g).test(
        this.query
      );
      axios.get(this.$page.props.europemcWSApi, {
        params: {
          query: isDOI ? "DOI:" + this.query : this.query,
          format: "json",
          pageSize: "1",
          resulttype: "core",
          synonym: "true"
        }
      }).then((res) => {
        if (res && res.data && res.data.resultList.result.length > 0) {
          var authors = isDOI ? res.data.resultList.result[0].authorList.author : res.data.resultList.result[0].authorList.author.filter(
            (a2) => a2.authorId && a2.authorId.type == "ORCID" && a2.authorId.value == this.query
          );
          this.fetchedAuthors = this.formatAuthorResponse(
            authors,
            "europemc"
          );
        } else {
          this.fetchDataFromCrossref(this.query);
        }
      }).catch((err) => {
        console.log(err);
      }).finally(() => {
        this.loading = false;
      });
    },
    /*Make REST Call to Crossref API */
    fetchDataFromCrossref(query) {
      this.fetchedAuthors = [];
      axios.get(this.$page.props.CROSSREF_API + this.query).then((res) => {
        if (res.data && res.data.message) {
          this.fetchedAuthors = this.formatAuthorResponse(
            res.data.message.author,
            "crossref"
          );
        }
      }).catch((err) => {
        console.log(err);
      }).finally(() => {
        if (this.fetchedAuthors && this.fetchedAuthors.length == 0) {
          this.error = "No data found. Please enter the details manually.";
        }
        this.loading = false;
      });
    },
    /*Format authors response*/
    formatAuthorResponse(authors, apiType) {
      var formattedAuthors = [];
      if (authors && authors.length > 0) {
        switch (apiType) {
          case "europemc":
            authors.forEach((author) => {
              var a2 = {};
              a2.firstName = author.firstName;
              a2.lastName = author.lastName;
              a2.fullName = author.fullName;
              a2.orcidId = author.authorId && author.authorId.type == "ORCID" ? author.authorId.value : "";
              a2.affiliation = author.authorAffiliationDetailsList && author.authorAffiliationDetailsList.authorAffiliation[0] ? author.authorAffiliationDetailsList.authorAffiliation[0].affiliation : "";
              formattedAuthors.push(a2);
            });
            break;
          case "crossref":
            authors.forEach((author) => {
              var a2 = {};
              a2.firstName = author.given;
              a2.lastName = author.family;
              a2.orcidId = "";
              a2.affiliation = author.affiliation[0] ? author.affiliation[0].name : "";
              formattedAuthors.push(a2);
            });
            break;
        }
      }
      return formattedAuthors;
    },
    /*Format the response*/
    formatAuthors(authors) {
      let authorsList = [];
      authors.forEach((author) => {
        authorsList.push({
          given_name: author.firstName,
          family_name: author.lastName,
          orcid_id: author.orcidId,
          affiliation: author.affiliation
        });
      });
      return authorsList;
    },
    /*Make the call to save API on the basis of selection*/
    save(input) {
      switch (input) {
        case "addSelected":
          this.addImportedAuthor(false);
          break;
        case "addAll":
          this.addImportedAuthor(true);
          break;
        case "addManually":
          this.addManually();
          break;
      }
    },
    /*Prepare request form and execute save query for imported authors*/
    addImportedAuthor(addAll) {
      this.authorsForm.reset();
      if (this.authors.length > 0) {
        this.authors = this.authors.concat(
          this.formatAuthors(this.selectedFetchedAuthorsList(addAll))
        );
      } else {
        this.authors = this.formatAuthors(
          this.selectedFetchedAuthorsList(addAll)
        );
      }
      this.executeQuery();
    },
    /*Prepare request form and execute save query for authors added manually*/
    addManually() {
      this.validateForm();
      this.authorsForm.reset();
      if (!this.form.hasErrors) {
        let newAuthor = {
          title: this.form.title ? this.form.title.trim() : null,
          given_name: this.form.given_name ? this.form.given_name.trim() : null,
          family_name: this.form.family_name ? this.form.family_name.trim() : null,
          email_id: this.form.email_id ? this.form.email_id.trim() : null,
          orcid_id: this.form.orcid_id ? this.form.orcid_id.trim() : null,
          affiliation: this.form.affiliation ? this.form.affiliation.trim() : null,
          contributor_type: this.form.contributor_type ? this.form.contributor_type.title.trim() : "Researcher"
        };
        if (this.authors.length > 0) {
          if (this.selectedAuthor) {
            this.authors.splice(
              this.selectedAuthor.pivot.sort_order,
              0,
              newAuthor
            );
          } else {
            this.authors.push(newAuthor);
          }
        } else {
          this.authors = [newAuthor];
        }
        this.executeQuery();
      }
    },
    /*Make request to save API*/
    executeQuery() {
      this.authorsForm.authors = this.authors;
      const keys = ["given_name", "family_name"];
      this.authorsForm.authors = this.authorsForm.authors.filter(
        (value, index, self) => self.findIndex(
          (v2) => keys.every((k2) => v2[k2] === value[k2])
        ) === index
      );
      this.authorsForm.post(route("author.save", this.project.id), {
        preserveScroll: true,
        onSuccess: () => {
          this.loadInitial();
          this.form.reset();
          this.form.contributor_type = {};
          this.form.contributor_type = this.contributorType[0];
          this.displayAddAuthorForms = false;
          this.isEdit = false;
        },
        onError: (err) => console.error(err)
      });
    },
    /*Confirm delete and prepare request*/
    confirmDeletion(author) {
      this.confirmDelete = true;
      this.authorsForm.reset();
      this.authorsForm.authors = [
        {
          id: author.id,
          given_name: author.given_name,
          family_name: author.family_name,
          orcid_id: author.orcid_id,
          affiliation: author.affiliation
        }
      ];
    },
    /*Make request to delete API*/
    deleteAuthor() {
      this.authorsForm.delete(route("author.delete", this.project.id), {
        preserveScroll: true,
        onSuccess: () => {
          router$1.reload({ only: ["project"] });
          this.loadInitial();
          this.authorsForm.reset();
          this.confirmDelete = false;
        },
        onError: (err) => console.error(err)
      });
    },
    /*Check form for validation errors*/
    validateForm() {
      this.form.errors = {};
      this.form.hasErrors = false;
      let _hasErrors = false;
      if (this.form.email_id) {
        if (!this.isValidEmail(this.form.email_id)) {
          this.form.errors.email_id = "Valid email required.";
          _hasErrors = true;
        }
      }
      if (_hasErrors) {
        this.form.hasErrors = true;
      }
    },
    /*Make request to update role API*/
    updateRole(role) {
      this.updateRoleForm.role = role.title;
      this.updateRoleForm.post(
        route("author.updateRole", this.project.id),
        {
          preserveScroll: true,
          onSuccess: () => {
            router$1.reload({ only: ["project"] });
            this.loadInitial();
            this.updateRoleForm.reset();
            this.showManageRoleDialog = false;
            this.authorId = "";
          },
          onError: (err) => console.error(err)
        }
      );
    },
    /*Execute query on sorting of authors*/
    onSort() {
      this.executeQuery();
    },
    /*Reset variables on cancel editing*/
    onCancelEdit() {
      if (this.selectedAuthor) {
        this.authors.splice(
          this.selectedAuthor.pivot.sort_order,
          0,
          this.selectedAuthor
        );
      }
      this.displayAddAuthorForms = false, this.isEdit = false, this.form.reset(), this.form.contributor_type = {};
      this.form.contributor_type = this.contributorType[0];
    },
    onBack() {
      if (this.selectedAuthor) {
        this.authors.splice(
          this.selectedAuthor.pivot.sort_order,
          0,
          this.selectedAuthor
        );
      }
      this.displayAddAuthorForms = false;
      this.isEdit = false;
    },
    /*Add current user as Author*/
    addCurrentUser() {
      if (this.$page.props.auth.user && this.$page.props.auth.user.orcid_id) {
        let user = {};
        let affiliation = {};
        this.fetchedAuthors = [];
        user.firstName = this.$page.props.auth.user.first_name;
        user.lastName = this.$page.props.auth.user.last_name;
        user.authorId = {};
        user.authorId.type = "ORCID";
        user.authorId.value = this.$page.props.auth.user.orcid_id;
        user.authorAffiliationDetailsList = {};
        user.authorAffiliationDetailsList.authorAffiliation = [];
        affiliation.affiliation = this.$page.props.auth.user.affiliation;
        user.authorAffiliationDetailsList.authorAffiliation.push(
          affiliation
        );
        this.fetchedAuthors.push(user);
      }
    }
  }
};
function _sfc_ssrRender$10(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_dialog_modal = resolveComponent("jet-dialog-modal");
  const _component_PlusIcon = resolveComponent("PlusIcon");
  const _component_ArrowSmallRightIcon = resolveComponent("ArrowSmallRightIcon");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_select_rich = resolveComponent("select-rich");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  const _component_loading_button = resolveComponent("loading-button");
  const _component_draggable = resolveComponent("draggable");
  const _component_PencilIcon = resolveComponent("PencilIcon");
  const _component_TrashIcon = resolveComponent("TrashIcon");
  const _component_FolderPlusIcon = resolveComponent("FolderPlusIcon");
  const _component_jet_danger_button = resolveComponent("jet-danger-button");
  _push(`<!--[-->`);
  _push(ssrRenderComponent(_component_jet_dialog_modal, {
    show: $data.showDialog,
    "max-width": "6xl",
    onClose: ($event) => $data.showDialog = false
  }, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${ssrInterpolate($props.project.name)} - Manage Authors `);
        if (!$data.displayAddAuthorForms) {
          _push2(`<button type="button" class="inline-flex float-right items-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_PlusIcon, { class: "w-5 h-5 mr-1 text-white" }, null, _parent2, _scopeId));
          _push2(` Add Author </button>`);
        } else {
          _push2(`<button type="button" class="inline-flex float-right items-center rounded-md border border-transparent bg-gray-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_ArrowSmallRightIcon, { class: "w-5 h-5 mr-1 text-white" }, null, _parent2, _scopeId));
          _push2(` Back </button>`);
        }
      } else {
        return [
          createTextVNode(toDisplayString($props.project.name) + " - Manage Authors ", 1),
          !$data.displayAddAuthorForms ? (openBlock(), createBlock("button", {
            key: 0,
            type: "button",
            class: "inline-flex float-right items-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2",
            onClick: ($event) => $data.displayAddAuthorForms = true
          }, [
            createVNode(_component_PlusIcon, { class: "w-5 h-5 mr-1 text-white" }),
            createTextVNode(" Add Author ")
          ], 8, ["onClick"])) : (openBlock(), createBlock("button", {
            key: 1,
            type: "button",
            class: "inline-flex float-right items-center rounded-md border border-transparent bg-gray-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2",
            onClick: $options.onBack
          }, [
            createVNode(_component_ArrowSmallRightIcon, { class: "w-5 h-5 mr-1 text-white" }),
            createTextVNode(" Back ")
          ], 8, ["onClick"]))
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}>`);
        if ($data.displayAddAuthorForms) {
          _push2(`<div${_scopeId}><div class="relative grid grid-cols-1 gap-x-5 max-w-7xl mx-auto lg:grid-cols-2"${_scopeId}><div class="pb-36 px-4 sm:px-6 lg:pb-5 lg:px-0 lg:row-start-1 lg:col-start-1"${_scopeId}><div${_scopeId}><p class="text-sm leading-6 font-bold text-gray-900"${_scopeId}>`);
          if (!$data.isEdit) {
            _push2(`<span${_scopeId}>Add</span>`);
          } else {
            _push2(`<span${_scopeId}></span>`);
          }
          _push2(` Author </p><div class="mt-1 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-2"${_scopeId}><div class="sm:col-span-2"${_scopeId}><label for="title" class="block text-sm font-medium text-gray-700"${_scopeId}> Title </label><div class="mt-1"${_scopeId}><input id="title"${ssrRenderAttr("value", $data.form.title)} type="text" name="title" autocomplete="title" class="${ssrRenderClass([
            $data.isEdit ? "shadow-sm focus:ring-red-500 focus:border-red-500 block w-full sm:text-sm border-red-500 rounded-md bg-gray-100" : "",
            "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md"
          ])}"${_scopeId}></div></div><div class="sm:col-span-2"${_scopeId}><label for="given-name" class="block text-sm font-medium text-gray-700 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId}> First Name </label><div class="mt-1"${_scopeId}><input id="given-name"${ssrRenderAttr("value", $data.form.given_name)} type="text" name="given-name" class="${ssrRenderClass([
            $data.isEdit ? "shadow-sm focus:ring-red-500 focus:border-red-500 block w-full sm:text-sm border-red-500 rounded-md bg-gray-100" : "",
            "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md"
          ])}"${_scopeId}></div>`);
          _push2(ssrRenderComponent(_component_jet_input_error, {
            message: $data.authorsForm.errors.given_name,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div><div class="sm:col-span-2"${_scopeId}><label for="family-name" class="block text-sm font-medium text-gray-700 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId}> Family Name </label><div class="mt-1"${_scopeId}><input id="family-name"${ssrRenderAttr("value", $data.form.family_name)} type="text" name="family-name" autocomplete="family-name" class="${ssrRenderClass([
            $data.isEdit ? "shadow-sm focus:ring-red-500 focus:border-red-500 block w-full sm:text-sm border-red-500 rounded-md bg-gray-100" : "",
            "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md"
          ])}"${_scopeId}></div>`);
          _push2(ssrRenderComponent(_component_jet_input_error, {
            message: $data.authorsForm.errors.family_name,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div><div class="sm:col-span-3"${_scopeId}><label for="email" class="block text-sm font-medium text-gray-700"${_scopeId}> Email address </label><div class="mt-1"${_scopeId}><input id="email"${ssrRenderAttr("value", $data.form.email_id)} name="email" type="email" autocomplete="email" class="${ssrRenderClass([
            $data.isEdit ? "shadow-sm focus:ring-red-500 focus:border-red-500 block w-full sm:text-sm border-red-500 rounded-md bg-gray-100" : "",
            "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md"
          ])}"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.email_id,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div></div><div class="sm:col-span-3"${_scopeId}><label for="orcid" class="block text-sm font-medium text-gray-700"${_scopeId}> ORCID iD </label><div class="mt-1"${_scopeId}><input id="orcid"${ssrRenderAttr("value", $data.form.orcid_id)} name="orcid" autocomplete="orcid" type="text" class="${ssrRenderClass([
            $data.isEdit ? "shadow-sm focus:ring-red-500 focus:border-red-500 block w-full sm:text-sm border-red-500 rounded-md bg-gray-100" : "",
            "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md"
          ])}"${_scopeId}></div></div><div class="sm:col-span-6"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_select_rich, {
            selected: $data.form.contributor_type,
            "onUpdate:selected": ($event) => $data.form.contributor_type = $event,
            label: "Role",
            items: $data.contributorType
          }, null, _parent2, _scopeId));
          _push2(`</div><div class="sm:col-span-6"${_scopeId}><label for="about" class="block text-sm font-medium text-gray-700"${_scopeId}> Affiliation </label><div class="mt-1"${_scopeId}><textarea id="affiliation" name="affiliation" rows="3" class="${ssrRenderClass([
            $data.isEdit ? "shadow-sm focus:ring-red-500 focus:border-red-500 block w-full sm:text-sm border-red-500 rounded-md bg-gray-100" : "",
            "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border border-gray-300 rounded-md"
          ])}" placeholder="Name and address of affiliated University and Department. e.g. Institut für Anorganische und Analytische Chemie, Friedrich-Schiller-Universität, Schloßgasse 10, 07743 Jena"${_scopeId}>${ssrInterpolate($data.form.affiliation)}</textarea></div>`);
          _push2(ssrRenderComponent(_component_jet_input_error, {
            message: $data.authorsForm.errors.affiliation,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
          if (!$data.isEdit) {
            _push2(`<div class="sm:col-span-6 float-left"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_jet_secondary_button, {
              class: "float-right",
              disabled: !($data.form && $data.form.given_name && $data.form.family_name),
              onClick: ($event) => $options.save("addManually")
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Add `);
                } else {
                  return [
                    createTextVNode(" Add ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_jet_secondary_button, {
              class: "float-right mr-2",
              disabled: !($data.form && $data.form.given_name && $data.form.family_name),
              onClick: ($event) => ($data.form.reset(), $data.authorsForm.reset())
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Clear `);
                } else {
                  return [
                    createTextVNode(" Clear ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            _push2(`<div class="sm:col-span-6 float-left"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_jet_secondary_button, {
              class: "float-right",
              disabled: !($data.form && $data.form.given_name && $data.form.family_name),
              onClick: ($event) => $options.save("addManually")
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Update `);
                } else {
                  return [
                    createTextVNode(" Update ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_jet_secondary_button, {
              class: "float-right mr-2",
              disabled: !($data.form && $data.form.given_name && $data.form.family_name),
              onClick: ($event) => $options.onCancelEdit()
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Cancel `);
                } else {
                  return [
                    createTextVNode(" Cancel ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div>`);
          }
          _push2(`</div></div></div><div class="pb-36 lg:px-1 lg:row-start-1 lg:col-start-2 border-l"${_scopeId}><div class="pl-2"${_scopeId}><p class="text-sm leading-6 font-bold text-gray-900"${_scopeId}> Import From </p><div class="mt-1 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-2"${_scopeId}><div class="sm:col-span-2"${_scopeId}><label for="name" class="block text-sm font-medium text-gray-700"${_scopeId}> DOI or ORCID iD </label><div class="mt-1 flex rounded-md shadow-sm"${_scopeId}><input id="name"${ssrRenderAttr("value", $data.query)} type="text" name="name" autocomplete="off" placeholder="DOI or ORCID iD e.g. 10.1186/s19991-022-00987-0 or 0000-0001-6033-8976" class="flex-1 focus:ring-teal-500 focus:border-teal-500 block w-full min-w-0 rounded sm:text-sm border-gray-300"${_scopeId}></div></div></div><div class="sm:col-span-2 mt-4"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_jet_secondary_button, {
            disabled: $data.query == "" || !$data.query,
            onClick: $options.fetchAuthors
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Import `);
              } else {
                return [
                  createTextVNode(" Import ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_jet_secondary_button, {
            class: "ml-2",
            disabled: !($data.fetchedAuthors.length > 0),
            onClick: ($event) => ($data.fetchedAuthors = [], $data.query = null)
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Reset `);
              } else {
                return [
                  createTextVNode(" Reset ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_jet_secondary_button, {
            class: "ml-2 float-right",
            disabled: !_ctx.$page.props.auth.user.orcid_id,
            onClick: $options.addCurrentUser
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Add me `);
              } else {
                return [
                  createTextVNode(" Add me ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div>`);
          _push2(ssrRenderComponent(_component_jet_input_error, {
            message: $data.error,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          if ($data.loading) {
            _push2(`<div class="sm:col-span-9 mt-4 align-centre"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_loading_button, { loading: $data.loading }, null, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`<div${_scopeId}><div style="${ssrRenderStyle({ "max-height": "40vh" })}" class="overflow-auto p-2 mt-4"${_scopeId}><!--[-->`);
          ssrRenderList($data.fetchedAuthors, (author) => {
            _push2(`<div class="relative flex items-start mt-2"${_scopeId}><div class="${ssrRenderClass([
              author.selected ? "bg-gray-200 text-white" : "",
              "cursor-pointer min-w-0 flex-1 text-sm font-medium border rounded-md p-4"
            ])}"${_scopeId}><label for="items" class="font-medium text-teal-900"${_scopeId}>${ssrInterpolate(author.firstName)} ${ssrInterpolate(author.lastName)}</label>`);
            if (author.affiliation) {
              _push2(`<p id="items-description" class="text-xs font-medium text-gray-900"${_scopeId}>${ssrInterpolate(author.affiliation)}</p>`);
            } else {
              _push2(`<!---->`);
            }
            if (author.orcidId) {
              _push2(`<div class="text-xs leading-6 font-medium text-teal-900"${_scopeId}><b class="text-gray-500"${_scopeId}>ORCID iD:</b> ${ssrInterpolate(author.orcidId)}</div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div></div>`);
          });
          _push2(`<!--]--></div>`);
          if ($data.fetchedAuthors.length > 0) {
            _push2(`<div class="sm:col-span-6 mt-4"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_jet_secondary_button, {
              disabled: !($options.selectedFetchedAuthorsList(
                false
              ).length > 0),
              class: "float-right ml-2",
              onClick: ($event) => $options.save("addSelected")
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Add Selected (${ssrInterpolate($options.selectedFetchedAuthorsList(
                    false
                  ).length)}) `);
                } else {
                  return [
                    createTextVNode(" Add Selected (" + toDisplayString($options.selectedFetchedAuthorsList(
                      false
                    ).length) + ") ", 1)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_jet_secondary_button, {
              class: "float-right",
              onClick: ($event) => $options.save("addAll")
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Add All `);
                } else {
                  return [
                    createTextVNode(" Add All ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div></div></div></div></div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($data.authors.length > 0 && !$data.displayAddAuthorForms) {
          _push2(`<div style="${ssrRenderStyle({ "height": "60vh" })}" class="sm:rounded-md overflow-y-scroll"${_scopeId}><p class="text-xs font-large text-red-800 mb-1"${_scopeId}> *Click and drag authors to sort order. </p>`);
          _push2(ssrRenderComponent(_component_draggable, {
            modelValue: $data.authors,
            "onUpdate:modelValue": ($event) => $data.authors = $event,
            "item-key": "author.id",
            group: "author",
            onStart: ($event) => $data.drag = true,
            onEnd: ($event) => $data.drag = false,
            onChange: ($event) => $options.onSort()
          }, {
            item: withCtx(({ element }, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<div class="overflow-auto"${_scopeId2}><ul role="list" class="divide-y divide-gray-900"${_scopeId2}><li${_scopeId2}><div class="px-4 border cursor-move hover:bg-gray-200 rounded-md mb-1 py-4 sm:px-6"${_scopeId2}><div class="flex items-center cursor justify-between"${_scopeId2}><p class="text-sm font-medium text-teal-900"${_scopeId2}>${ssrInterpolate(element.title)} ${ssrInterpolate(element.given_name)} ${ssrInterpolate(element.family_name)}</p><button class="ml-2 flex flex-shrink-0"${_scopeId2}>`);
                if (element.pivot && element.pivot.contributor_type) {
                  _push3(`<p class="inline-flex rounded-full bg-green-100 px-2 text-xs font-semibold leading-5 text-green-800"${_scopeId2}>${ssrInterpolate(element.pivot.contributor_type ? element.pivot.contributor_type : "Researcher")}</p>`);
                } else {
                  _push3(`<!---->`);
                }
                _push3(`</button></div><div class="mt-1 sm:flex sm:justify-between"${_scopeId2}><div class="sm:flex"${_scopeId2}><p class="flex items-center text-xs font-small text-gray-500 break-words"${_scopeId2}>${ssrInterpolate(element.affiliation)}</p></div><div class="mt-2 flex items-center text-sm text-gray-500 sm:mt-0"${_scopeId2}><button type="button" class="inline-flex items-center p-1 border border-transparent"${_scopeId2}>`);
                _push3(ssrRenderComponent(_component_PencilIcon, { class: "w-3.5 h-3.5 mr-1 text-gray-600" }, null, _parent3, _scopeId2));
                _push3(`</button><button type="button" class="inline-flex items-center p-1 border border-transparent"${_scopeId2}>`);
                _push3(ssrRenderComponent(_component_TrashIcon, { class: "w-3.5 h-3.5 mr-1 text-gray-600" }, null, _parent3, _scopeId2));
                _push3(`</button></div></div><div class="sm:flex sm:justify-between"${_scopeId2}>`);
                if (element.orcid_id) {
                  _push3(`<p class="text-xs font-medium text-teal-900"${_scopeId2}><b class="text-gray-500"${_scopeId2}>ORCID iD:</b> ${ssrInterpolate(element.orcid_id)}</p>`);
                } else {
                  _push3(`<!---->`);
                }
                _push3(`</div><div class="sm:flex sm:justify-between"${_scopeId2}>`);
                if (element.email_id) {
                  _push3(`<p class="text-xs font-medium text-gray-900"${_scopeId2}><b class="text-gray-500"${_scopeId2}>Email-Id:</b> ${ssrInterpolate(element.email_id)}</p>`);
                } else {
                  _push3(`<!---->`);
                }
                _push3(`</div></div></li></ul></div>`);
              } else {
                return [
                  createVNode("div", { class: "overflow-auto" }, [
                    createVNode("ul", {
                      role: "list",
                      class: "divide-y divide-gray-900"
                    }, [
                      createVNode("li", null, [
                        createVNode("div", { class: "px-4 border cursor-move hover:bg-gray-200 rounded-md mb-1 py-4 sm:px-6" }, [
                          createVNode("div", { class: "flex items-center cursor justify-between" }, [
                            createVNode("p", { class: "text-sm font-medium text-teal-900" }, toDisplayString(element.title) + " " + toDisplayString(element.given_name) + " " + toDisplayString(element.family_name), 1),
                            createVNode("button", {
                              class: "ml-2 flex flex-shrink-0",
                              onClick: ($event) => ($data.showManageRoleDialog = true, $data.updateRoleForm.author_id = element.id)
                            }, [
                              element.pivot && element.pivot.contributor_type ? (openBlock(), createBlock("p", {
                                key: 0,
                                class: "inline-flex rounded-full bg-green-100 px-2 text-xs font-semibold leading-5 text-green-800"
                              }, toDisplayString(element.pivot.contributor_type ? element.pivot.contributor_type : "Researcher"), 1)) : createCommentVNode("", true)
                            ], 8, ["onClick"])
                          ]),
                          createVNode("div", { class: "mt-1 sm:flex sm:justify-between" }, [
                            createVNode("div", { class: "sm:flex" }, [
                              createVNode("p", { class: "flex items-center text-xs font-small text-gray-500 break-words" }, toDisplayString(element.affiliation), 1)
                            ]),
                            createVNode("div", { class: "mt-2 flex items-center text-sm text-gray-500 sm:mt-0" }, [
                              createVNode("button", {
                                type: "button",
                                class: "inline-flex items-center p-1 border border-transparent",
                                onClick: ($event) => $options.edit(element)
                              }, [
                                createVNode(_component_PencilIcon, { class: "w-3.5 h-3.5 mr-1 text-gray-600" })
                              ], 8, ["onClick"]),
                              createVNode("button", {
                                type: "button",
                                class: "inline-flex items-center p-1 border border-transparent",
                                onClick: ($event) => $options.confirmDeletion(
                                  element
                                )
                              }, [
                                createVNode(_component_TrashIcon, { class: "w-3.5 h-3.5 mr-1 text-gray-600" })
                              ], 8, ["onClick"])
                            ])
                          ]),
                          createVNode("div", { class: "sm:flex sm:justify-between" }, [
                            element.orcid_id ? (openBlock(), createBlock("p", {
                              key: 0,
                              class: "text-xs font-medium text-teal-900"
                            }, [
                              createVNode("b", { class: "text-gray-500" }, "ORCID iD:"),
                              createTextVNode(" " + toDisplayString(element.orcid_id), 1)
                            ])) : createCommentVNode("", true)
                          ]),
                          createVNode("div", { class: "sm:flex sm:justify-between" }, [
                            element.email_id ? (openBlock(), createBlock("p", {
                              key: 0,
                              class: "text-xs font-medium text-gray-900"
                            }, [
                              createVNode("b", { class: "text-gray-500" }, "Email-Id:"),
                              createTextVNode(" " + toDisplayString(element.email_id), 1)
                            ])) : createCommentVNode("", true)
                          ])
                        ])
                      ])
                    ])
                  ])
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div>`);
        if ($data.authors.length == 0 && !$data.displayAddAuthorForms) {
          _push2(`<div class="py-5"${_scopeId}><div class="text-center"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_FolderPlusIcon, { class: "mx-auto h-12 w-12 text-gray-400" }, null, _parent2, _scopeId));
          _push2(`<h3 class="mt-2 text-sm font-medium text-gray-900"${_scopeId}> No Authors Listed </h3><p class="mt-1 text-sm text-gray-500"${_scopeId}> Get started by adding a new author. </p><div class="mt-6"${_scopeId}><button type="button" class="inline-flex items-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_PlusIcon, { class: "w-5 h-5 mr-1 text-white" }, null, _parent2, _scopeId));
          _push2(` Add Author </button></div></div></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(ssrRenderComponent(_component_jet_dialog_modal, {
          show: $data.confirmDelete,
          onClose: ($event) => $data.confirmDelete = false
        }, {
          title: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Author `);
            } else {
              return [
                createTextVNode(" Delete Author ")
              ];
            }
          }),
          content: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Are you sure you want to delete this author? <div class="mt-4"${_scopeId2}></div>`);
            } else {
              return [
                createTextVNode(" Are you sure you want to delete this author? "),
                createVNode("div", { class: "mt-4" })
              ];
            }
          }),
          footer: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmDelete = false
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(ssrRenderComponent(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                disabled: $data.form.processing,
                onClick: ($event) => $options.deleteAuthor()
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Delete Author `);
                  } else {
                    return [
                      createTextVNode(" Delete Author ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                createVNode(_component_jet_secondary_button, {
                  onClick: ($event) => $data.confirmDelete = false
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                createVNode(_component_jet_danger_button, {
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  disabled: $data.form.processing,
                  onClick: ($event) => $options.deleteAuthor()
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Delete Author ")
                  ]),
                  _: 1
                }, 8, ["class", "disabled", "onClick"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode("div", null, [
            $data.displayAddAuthorForms ? (openBlock(), createBlock("div", { key: 0 }, [
              createVNode("div", { class: "relative grid grid-cols-1 gap-x-5 max-w-7xl mx-auto lg:grid-cols-2" }, [
                createVNode("div", { class: "pb-36 px-4 sm:px-6 lg:pb-5 lg:px-0 lg:row-start-1 lg:col-start-1" }, [
                  createVNode("div", null, [
                    createVNode("p", { class: "text-sm leading-6 font-bold text-gray-900" }, [
                      !$data.isEdit ? (openBlock(), createBlock("span", { key: 0 }, "Add")) : (openBlock(), createBlock("span", { key: 1 })),
                      createTextVNode(" Author ")
                    ]),
                    createVNode("div", { class: "mt-1 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-2" }, [
                      createVNode("div", { class: "sm:col-span-2" }, [
                        createVNode("label", {
                          for: "title",
                          class: "block text-sm font-medium text-gray-700"
                        }, " Title "),
                        createVNode("div", { class: "mt-1" }, [
                          withDirectives(createVNode("input", {
                            id: "title",
                            "onUpdate:modelValue": ($event) => $data.form.title = $event,
                            type: "text",
                            name: "title",
                            autocomplete: "title",
                            class: [
                              $data.isEdit ? "shadow-sm focus:ring-red-500 focus:border-red-500 block w-full sm:text-sm border-red-500 rounded-md bg-gray-100" : "",
                              "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md"
                            ]
                          }, null, 10, ["onUpdate:modelValue"]), [
                            [vModelText, $data.form.title]
                          ])
                        ])
                      ]),
                      createVNode("div", { class: "sm:col-span-2" }, [
                        createVNode("label", {
                          for: "given-name",
                          class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500"
                        }, " First Name "),
                        createVNode("div", { class: "mt-1" }, [
                          withDirectives(createVNode("input", {
                            id: "given-name",
                            "onUpdate:modelValue": ($event) => $data.form.given_name = $event,
                            type: "text",
                            name: "given-name",
                            class: [
                              $data.isEdit ? "shadow-sm focus:ring-red-500 focus:border-red-500 block w-full sm:text-sm border-red-500 rounded-md bg-gray-100" : "",
                              "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md"
                            ]
                          }, null, 10, ["onUpdate:modelValue"]), [
                            [vModelText, $data.form.given_name]
                          ])
                        ]),
                        createVNode(_component_jet_input_error, {
                          message: $data.authorsForm.errors.given_name,
                          class: "mt-2"
                        }, null, 8, ["message"])
                      ]),
                      createVNode("div", { class: "sm:col-span-2" }, [
                        createVNode("label", {
                          for: "family-name",
                          class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500"
                        }, " Family Name "),
                        createVNode("div", { class: "mt-1" }, [
                          withDirectives(createVNode("input", {
                            id: "family-name",
                            "onUpdate:modelValue": ($event) => $data.form.family_name = $event,
                            type: "text",
                            name: "family-name",
                            autocomplete: "family-name",
                            class: [
                              $data.isEdit ? "shadow-sm focus:ring-red-500 focus:border-red-500 block w-full sm:text-sm border-red-500 rounded-md bg-gray-100" : "",
                              "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md"
                            ]
                          }, null, 10, ["onUpdate:modelValue"]), [
                            [vModelText, $data.form.family_name]
                          ])
                        ]),
                        createVNode(_component_jet_input_error, {
                          message: $data.authorsForm.errors.family_name,
                          class: "mt-2"
                        }, null, 8, ["message"])
                      ]),
                      createVNode("div", { class: "sm:col-span-3" }, [
                        createVNode("label", {
                          for: "email",
                          class: "block text-sm font-medium text-gray-700"
                        }, " Email address "),
                        createVNode("div", { class: "mt-1" }, [
                          withDirectives(createVNode("input", {
                            id: "email",
                            "onUpdate:modelValue": ($event) => $data.form.email_id = $event,
                            name: "email",
                            type: "email",
                            autocomplete: "email",
                            class: [
                              $data.isEdit ? "shadow-sm focus:ring-red-500 focus:border-red-500 block w-full sm:text-sm border-red-500 rounded-md bg-gray-100" : "",
                              "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md"
                            ]
                          }, null, 10, ["onUpdate:modelValue"]), [
                            [vModelText, $data.form.email_id]
                          ]),
                          createVNode(_component_jet_input_error, {
                            message: $data.form.errors.email_id,
                            class: "mt-2"
                          }, null, 8, ["message"])
                        ])
                      ]),
                      createVNode("div", { class: "sm:col-span-3" }, [
                        createVNode("label", {
                          for: "orcid",
                          class: "block text-sm font-medium text-gray-700"
                        }, " ORCID iD "),
                        createVNode("div", { class: "mt-1" }, [
                          withDirectives(createVNode("input", {
                            id: "orcid",
                            "onUpdate:modelValue": ($event) => $data.form.orcid_id = $event,
                            name: "orcid",
                            autocomplete: "orcid",
                            type: "text",
                            class: [
                              $data.isEdit ? "shadow-sm focus:ring-red-500 focus:border-red-500 block w-full sm:text-sm border-red-500 rounded-md bg-gray-100" : "",
                              "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md"
                            ]
                          }, null, 10, ["onUpdate:modelValue"]), [
                            [vModelText, $data.form.orcid_id]
                          ])
                        ])
                      ]),
                      createVNode("div", { class: "sm:col-span-6" }, [
                        createVNode(_component_select_rich, {
                          selected: $data.form.contributor_type,
                          "onUpdate:selected": ($event) => $data.form.contributor_type = $event,
                          label: "Role",
                          items: $data.contributorType
                        }, null, 8, ["selected", "onUpdate:selected", "items"])
                      ]),
                      createVNode("div", { class: "sm:col-span-6" }, [
                        createVNode("label", {
                          for: "about",
                          class: "block text-sm font-medium text-gray-700"
                        }, " Affiliation "),
                        createVNode("div", { class: "mt-1" }, [
                          withDirectives(createVNode("textarea", {
                            id: "affiliation",
                            "onUpdate:modelValue": ($event) => $data.form.affiliation = $event,
                            name: "affiliation",
                            rows: "3",
                            class: [
                              $data.isEdit ? "shadow-sm focus:ring-red-500 focus:border-red-500 block w-full sm:text-sm border-red-500 rounded-md bg-gray-100" : "",
                              "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border border-gray-300 rounded-md"
                            ],
                            placeholder: "Name and address of affiliated University and Department. e.g. Institut für Anorganische und Analytische Chemie, Friedrich-Schiller-Universität, Schloßgasse 10, 07743 Jena"
                          }, null, 10, ["onUpdate:modelValue"]), [
                            [vModelText, $data.form.affiliation]
                          ])
                        ]),
                        createVNode(_component_jet_input_error, {
                          message: $data.authorsForm.errors.affiliation,
                          class: "mt-2"
                        }, null, 8, ["message"])
                      ]),
                      !$data.isEdit ? (openBlock(), createBlock("div", {
                        key: 0,
                        class: "sm:col-span-6 float-left"
                      }, [
                        createVNode(_component_jet_secondary_button, {
                          class: "float-right",
                          disabled: !($data.form && $data.form.given_name && $data.form.family_name),
                          onClick: ($event) => $options.save("addManually")
                        }, {
                          default: withCtx(() => [
                            createTextVNode(" Add ")
                          ]),
                          _: 1
                        }, 8, ["disabled", "onClick"]),
                        createVNode(_component_jet_secondary_button, {
                          class: "float-right mr-2",
                          disabled: !($data.form && $data.form.given_name && $data.form.family_name),
                          onClick: ($event) => ($data.form.reset(), $data.authorsForm.reset())
                        }, {
                          default: withCtx(() => [
                            createTextVNode(" Clear ")
                          ]),
                          _: 1
                        }, 8, ["disabled", "onClick"])
                      ])) : (openBlock(), createBlock("div", {
                        key: 1,
                        class: "sm:col-span-6 float-left"
                      }, [
                        createVNode(_component_jet_secondary_button, {
                          class: "float-right",
                          disabled: !($data.form && $data.form.given_name && $data.form.family_name),
                          onClick: ($event) => $options.save("addManually")
                        }, {
                          default: withCtx(() => [
                            createTextVNode(" Update ")
                          ]),
                          _: 1
                        }, 8, ["disabled", "onClick"]),
                        createVNode(_component_jet_secondary_button, {
                          class: "float-right mr-2",
                          disabled: !($data.form && $data.form.given_name && $data.form.family_name),
                          onClick: ($event) => $options.onCancelEdit()
                        }, {
                          default: withCtx(() => [
                            createTextVNode(" Cancel ")
                          ]),
                          _: 1
                        }, 8, ["disabled", "onClick"])
                      ]))
                    ])
                  ])
                ]),
                createVNode("div", { class: "pb-36 lg:px-1 lg:row-start-1 lg:col-start-2 border-l" }, [
                  createVNode("div", { class: "pl-2" }, [
                    createVNode("p", { class: "text-sm leading-6 font-bold text-gray-900" }, " Import From "),
                    createVNode("div", { class: "mt-1 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-2" }, [
                      createVNode("div", { class: "sm:col-span-2" }, [
                        createVNode("label", {
                          for: "name",
                          class: "block text-sm font-medium text-gray-700"
                        }, " DOI or ORCID iD "),
                        createVNode("div", { class: "mt-1 flex rounded-md shadow-sm" }, [
                          withDirectives(createVNode("input", {
                            id: "name",
                            "onUpdate:modelValue": ($event) => $data.query = $event,
                            type: "text",
                            name: "name",
                            autocomplete: "off",
                            placeholder: "DOI or ORCID iD e.g. 10.1186/s19991-022-00987-0 or 0000-0001-6033-8976",
                            class: "flex-1 focus:ring-teal-500 focus:border-teal-500 block w-full min-w-0 rounded sm:text-sm border-gray-300"
                          }, null, 8, ["onUpdate:modelValue"]), [
                            [vModelText, $data.query]
                          ])
                        ])
                      ])
                    ]),
                    createVNode("div", { class: "sm:col-span-2 mt-4" }, [
                      createVNode(_component_jet_secondary_button, {
                        disabled: $data.query == "" || !$data.query,
                        onClick: $options.fetchAuthors
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Import ")
                        ]),
                        _: 1
                      }, 8, ["disabled", "onClick"]),
                      createVNode(_component_jet_secondary_button, {
                        class: "ml-2",
                        disabled: !($data.fetchedAuthors.length > 0),
                        onClick: ($event) => ($data.fetchedAuthors = [], $data.query = null)
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Reset ")
                        ]),
                        _: 1
                      }, 8, ["disabled", "onClick"]),
                      createVNode(_component_jet_secondary_button, {
                        class: "ml-2 float-right",
                        disabled: !_ctx.$page.props.auth.user.orcid_id,
                        onClick: $options.addCurrentUser
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Add me ")
                        ]),
                        _: 1
                      }, 8, ["disabled", "onClick"])
                    ]),
                    createVNode(_component_jet_input_error, {
                      message: $data.error,
                      class: "mt-2"
                    }, null, 8, ["message"]),
                    $data.loading ? (openBlock(), createBlock("div", {
                      key: 0,
                      class: "sm:col-span-9 mt-4 align-centre"
                    }, [
                      createVNode(_component_loading_button, { loading: $data.loading }, null, 8, ["loading"])
                    ])) : createCommentVNode("", true),
                    createVNode("div", null, [
                      createVNode("div", {
                        style: { "max-height": "40vh" },
                        class: "overflow-auto p-2 mt-4"
                      }, [
                        (openBlock(true), createBlock(Fragment, null, renderList($data.fetchedAuthors, (author) => {
                          return openBlock(), createBlock("div", {
                            key: author.authorId,
                            class: "relative flex items-start mt-2"
                          }, [
                            createVNode("div", {
                              class: [
                                author.selected ? "bg-gray-200 text-white" : "",
                                "cursor-pointer min-w-0 flex-1 text-sm font-medium border rounded-md p-4"
                              ],
                              onClick: ($event) => $options.addAuthorToSelectedList(
                                author
                              )
                            }, [
                              createVNode("label", {
                                for: "items",
                                class: "font-medium text-teal-900"
                              }, toDisplayString(author.firstName) + " " + toDisplayString(author.lastName), 1),
                              author.affiliation ? (openBlock(), createBlock("p", {
                                key: 0,
                                id: "items-description",
                                class: "text-xs font-medium text-gray-900"
                              }, toDisplayString(author.affiliation), 1)) : createCommentVNode("", true),
                              author.orcidId ? (openBlock(), createBlock("div", {
                                key: 1,
                                class: "text-xs leading-6 font-medium text-teal-900"
                              }, [
                                createVNode("b", { class: "text-gray-500" }, "ORCID iD:"),
                                createTextVNode(" " + toDisplayString(author.orcidId), 1)
                              ])) : createCommentVNode("", true)
                            ], 10, ["onClick"])
                          ]);
                        }), 128))
                      ]),
                      $data.fetchedAuthors.length > 0 ? (openBlock(), createBlock("div", {
                        key: 0,
                        class: "sm:col-span-6 mt-4"
                      }, [
                        createVNode(_component_jet_secondary_button, {
                          disabled: !($options.selectedFetchedAuthorsList(
                            false
                          ).length > 0),
                          class: "float-right ml-2",
                          onClick: ($event) => $options.save("addSelected")
                        }, {
                          default: withCtx(() => [
                            createTextVNode(" Add Selected (" + toDisplayString($options.selectedFetchedAuthorsList(
                              false
                            ).length) + ") ", 1)
                          ]),
                          _: 1
                        }, 8, ["disabled", "onClick"]),
                        createVNode(_component_jet_secondary_button, {
                          class: "float-right",
                          onClick: ($event) => $options.save("addAll")
                        }, {
                          default: withCtx(() => [
                            createTextVNode(" Add All ")
                          ]),
                          _: 1
                        }, 8, ["onClick"])
                      ])) : createCommentVNode("", true)
                    ])
                  ])
                ])
              ])
            ])) : createCommentVNode("", true),
            $data.authors.length > 0 && !$data.displayAddAuthorForms ? (openBlock(), createBlock("div", {
              key: 1,
              style: { "height": "60vh" },
              class: "sm:rounded-md overflow-y-scroll"
            }, [
              createVNode("p", { class: "text-xs font-large text-red-800 mb-1" }, " *Click and drag authors to sort order. "),
              createVNode(_component_draggable, {
                modelValue: $data.authors,
                "onUpdate:modelValue": ($event) => $data.authors = $event,
                "item-key": "author.id",
                group: "author",
                onStart: ($event) => $data.drag = true,
                onEnd: ($event) => $data.drag = false,
                onChange: ($event) => $options.onSort()
              }, {
                item: withCtx(({ element }) => [
                  createVNode("div", { class: "overflow-auto" }, [
                    createVNode("ul", {
                      role: "list",
                      class: "divide-y divide-gray-900"
                    }, [
                      createVNode("li", null, [
                        createVNode("div", { class: "px-4 border cursor-move hover:bg-gray-200 rounded-md mb-1 py-4 sm:px-6" }, [
                          createVNode("div", { class: "flex items-center cursor justify-between" }, [
                            createVNode("p", { class: "text-sm font-medium text-teal-900" }, toDisplayString(element.title) + " " + toDisplayString(element.given_name) + " " + toDisplayString(element.family_name), 1),
                            createVNode("button", {
                              class: "ml-2 flex flex-shrink-0",
                              onClick: ($event) => ($data.showManageRoleDialog = true, $data.updateRoleForm.author_id = element.id)
                            }, [
                              element.pivot && element.pivot.contributor_type ? (openBlock(), createBlock("p", {
                                key: 0,
                                class: "inline-flex rounded-full bg-green-100 px-2 text-xs font-semibold leading-5 text-green-800"
                              }, toDisplayString(element.pivot.contributor_type ? element.pivot.contributor_type : "Researcher"), 1)) : createCommentVNode("", true)
                            ], 8, ["onClick"])
                          ]),
                          createVNode("div", { class: "mt-1 sm:flex sm:justify-between" }, [
                            createVNode("div", { class: "sm:flex" }, [
                              createVNode("p", { class: "flex items-center text-xs font-small text-gray-500 break-words" }, toDisplayString(element.affiliation), 1)
                            ]),
                            createVNode("div", { class: "mt-2 flex items-center text-sm text-gray-500 sm:mt-0" }, [
                              createVNode("button", {
                                type: "button",
                                class: "inline-flex items-center p-1 border border-transparent",
                                onClick: ($event) => $options.edit(element)
                              }, [
                                createVNode(_component_PencilIcon, { class: "w-3.5 h-3.5 mr-1 text-gray-600" })
                              ], 8, ["onClick"]),
                              createVNode("button", {
                                type: "button",
                                class: "inline-flex items-center p-1 border border-transparent",
                                onClick: ($event) => $options.confirmDeletion(
                                  element
                                )
                              }, [
                                createVNode(_component_TrashIcon, { class: "w-3.5 h-3.5 mr-1 text-gray-600" })
                              ], 8, ["onClick"])
                            ])
                          ]),
                          createVNode("div", { class: "sm:flex sm:justify-between" }, [
                            element.orcid_id ? (openBlock(), createBlock("p", {
                              key: 0,
                              class: "text-xs font-medium text-teal-900"
                            }, [
                              createVNode("b", { class: "text-gray-500" }, "ORCID iD:"),
                              createTextVNode(" " + toDisplayString(element.orcid_id), 1)
                            ])) : createCommentVNode("", true)
                          ]),
                          createVNode("div", { class: "sm:flex sm:justify-between" }, [
                            element.email_id ? (openBlock(), createBlock("p", {
                              key: 0,
                              class: "text-xs font-medium text-gray-900"
                            }, [
                              createVNode("b", { class: "text-gray-500" }, "Email-Id:"),
                              createTextVNode(" " + toDisplayString(element.email_id), 1)
                            ])) : createCommentVNode("", true)
                          ])
                        ])
                      ])
                    ])
                  ])
                ]),
                _: 1
              }, 8, ["modelValue", "onUpdate:modelValue", "onStart", "onEnd", "onChange"])
            ])) : createCommentVNode("", true)
          ]),
          $data.authors.length == 0 && !$data.displayAddAuthorForms ? (openBlock(), createBlock("div", {
            key: 0,
            class: "py-5"
          }, [
            createVNode("div", { class: "text-center" }, [
              createVNode(_component_FolderPlusIcon, { class: "mx-auto h-12 w-12 text-gray-400" }),
              createVNode("h3", { class: "mt-2 text-sm font-medium text-gray-900" }, " No Authors Listed "),
              createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " Get started by adding a new author. "),
              createVNode("div", { class: "mt-6" }, [
                createVNode("button", {
                  type: "button",
                  class: "inline-flex items-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2",
                  onClick: ($event) => $data.displayAddAuthorForms = true
                }, [
                  createVNode(_component_PlusIcon, { class: "w-5 h-5 mr-1 text-white" }),
                  createTextVNode(" Add Author ")
                ], 8, ["onClick"])
              ])
            ])
          ])) : createCommentVNode("", true),
          createVNode(_component_jet_dialog_modal, {
            show: $data.confirmDelete,
            onClose: ($event) => $data.confirmDelete = false
          }, {
            title: withCtx(() => [
              createTextVNode(" Delete Author ")
            ]),
            content: withCtx(() => [
              createTextVNode(" Are you sure you want to delete this author? "),
              createVNode("div", { class: "mt-4" })
            ]),
            footer: withCtx(() => [
              createVNode(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmDelete = false
              }, {
                default: withCtx(() => [
                  createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              createVNode(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                disabled: $data.form.processing,
                onClick: ($event) => $options.deleteAuthor()
              }, {
                default: withCtx(() => [
                  createTextVNode(" Delete Author ")
                ]),
                _: 1
              }, 8, ["class", "disabled", "onClick"])
            ]),
            _: 1
          }, 8, ["show", "onClose"])
        ];
      }
    }),
    footer: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_secondary_button, {
          class: "float-left",
          onClick: ($event) => $options.onClose()
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Close `);
            } else {
              return [
                createTextVNode(" Close ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "flex" }, [
            createVNode(_component_jet_secondary_button, {
              class: "float-left",
              onClick: ($event) => $options.onClose()
            }, {
              default: withCtx(() => [
                createTextVNode(" Close ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(ssrRenderComponent(_component_jet_dialog_modal, {
    show: $data.showManageRoleDialog,
    onClose: ($event) => $data.showManageRoleDialog = false
  }, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Manage Role `);
      } else {
        return [
          createTextVNode(" Manage Role ")
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div style="${ssrRenderStyle({ "height": "30vh" })}" class="overflow-auto p-1"${_scopeId}><!--[-->`);
        ssrRenderList($data.contributorType, (item) => {
          _push2(`<div class="relative flex items-start mt-2"${_scopeId}><div class="cursor-pointer flex-1 border rounded-md p-2 bg-white-200 hover:bg-gray-200"${_scopeId}><div class="text-gray-900"${_scopeId}><b${_scopeId}>${ssrInterpolate(item.title)}</b> <br${_scopeId}><p class="text-xs align-top"${_scopeId}>${item.description}</p></div></div></div>`);
        });
        _push2(`<!--]--></div>`);
      } else {
        return [
          createVNode("div", {
            style: { "height": "30vh" },
            class: "overflow-auto p-1"
          }, [
            (openBlock(true), createBlock(Fragment, null, renderList($data.contributorType, (item) => {
              return openBlock(), createBlock("div", {
                key: item.title,
                class: "relative flex items-start mt-2"
              }, [
                createVNode("div", {
                  class: "cursor-pointer flex-1 border rounded-md p-2 bg-white-200 hover:bg-gray-200",
                  onClick: ($event) => $options.updateRole(item)
                }, [
                  createVNode("div", { class: "text-gray-900" }, [
                    createVNode("b", null, toDisplayString(item.title), 1),
                    createTextVNode(),
                    createVNode("br"),
                    createVNode("p", {
                      class: "text-xs align-top",
                      innerHTML: item.description
                    }, null, 8, ["innerHTML"])
                  ])
                ], 8, ["onClick"])
              ]);
            }), 128))
          ])
        ];
      }
    }),
    footer: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.showManageRoleDialog = false
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_secondary_button, {
            onClick: ($event) => $data.showManageRoleDialog = false
          }, {
            default: withCtx(() => [
              createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$11 = _sfc_main$11.setup;
_sfc_main$11.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/ManageAuthor.vue");
  return _sfc_setup$11 ? _sfc_setup$11(props, ctx) : void 0;
};
const ManageAuthor = /* @__PURE__ */ _export_sfc(_sfc_main$11, [["ssrRender", _sfc_ssrRender$10]]);
const _sfc_main$10 = {
  components: {
    JetDialogModal,
    JetSecondaryButton,
    JetDangerButton,
    JetButton,
    PencilIcon,
    TrashIcon,
    PlusIcon,
    FolderPlusIcon: FolderPlusIcon$1,
    ArrowSmallRightIcon,
    JetInputError,
    LoadingButton,
    Draggable
  },
  props: ["project"],
  data() {
    return {
      form: this.$inertia.form({
        title: "",
        doi: "",
        title: "",
        authors: "",
        abstract: "",
        citation_text: "",
        errors: {}
      }),
      citationsForm: this.$inertia.form({
        citations: []
      }),
      fetchedCitations: {},
      showDialog: false,
      citations: [],
      confirmDelete: false,
      displayAddCitationForms: false,
      selectedCitation: null,
      query: "",
      loading: false,
      isEdit: false,
      error: ""
    };
  },
  mounted() {
    this.loadInitial();
  },
  methods: {
    loadInitial() {
      if (this.project && this.project.citations) {
        this.citations = this.project.citations;
      }
    },
    /*Control the display toggling*/
    toggleDialog() {
      this.showDialog = !this.showDialog;
    },
    onClose() {
      this.showDialog = false;
    },
    /*Fetch citation from DOI*/
    fetchCitations() {
      this.loading = true;
      this.error = "";
      this.query = this.extractDoi(this.query);
      new RegExp(/\b(10[.][0-9]{4,}(?:[.][0-9]+)*)\b/g).test(
        this.query
      );
      axios.get(this.$page.props.europemcWSApi, {
        params: {
          query: "DOI:" + this.query,
          format: "json",
          pageSize: "1",
          resulttype: "core",
          synonym: "true"
        }
      }).then((res) => {
        if (res && res.data && res.data.resultList.result.length > 0) {
          this.fetchedCitations = this.formatCitationResponse(
            res.data.resultList.result[0],
            "europemc"
          );
        } else {
          this.fetchDataFromCrossref(this.query);
        }
      }).catch((err) => {
        console.log(err);
      }).finally(() => {
        this.loading = false;
      });
    },
    /*Make REST Call to Crossref API */
    fetchDataFromCrossref(query) {
      this.fetchedCitations = [];
      axios.get(this.$page.props.CROSSREF_API + this.query).then((res) => {
        if (res.data && res.data.message) {
          this.fetchedCitations = this.formatCitationResponse(
            res.data.message,
            "crossref"
          );
        }
      }).catch((err) => {
        console.log(err);
      }).finally(() => {
        if (this.fetchedCitations && this.fetchedCitations.length == 0) {
          this.error = "No data found. Please enter the details manually.";
        }
        this.loading = false;
      });
    },
    /*Edit Citation */
    edit(citation) {
      this.selectedCitation = citation;
      this.citations = this.citations.filter((citation2) => {
        return citation2.title != this.selectedCitation.title;
      });
      for (var key in citation) {
        this.form[key] = citation.hasOwnProperty(key) ? citation[key] : null;
      }
      this.displayAddCitationForms = true;
      this.isEdit = true;
      this.fetchedCitations = {};
      this.query = "";
    },
    /*Make the call to save API on the basis of selection*/
    save(input) {
      switch (input) {
        case "addFetched":
          this.addFetchedCitation();
          break;
        case "addManually":
          this.addManually();
          break;
      }
    },
    /*Prepare request form and execute save query for citations added manually*/
    addManually() {
      this.validateForm();
      if (!this.form.hasErrors) {
        this.citationsForm.reset();
        let _citation = {};
        for (var key in this.form) {
          _citation[key] = this.form.hasOwnProperty(key) ? this.form[key] : null;
        }
        this.citationsForm.citations.push(_citation);
        this.executeQuery();
      }
    },
    addFetchedCitation() {
      this.citationsForm.reset();
      if (this.citations.length > 0) {
        this.citations = this.citations.concat(this.fetchedCitations);
      } else {
        this.citations.push(this.fetchedCitations);
      }
      this.executeQuery();
    },
    /*Make request to save API*/
    executeQuery() {
      if (this.citations.length > 0) {
        let _citationObj = {};
        this.citations.forEach((citation) => {
          for (var key in citation) {
            _citationObj[key] = citation.hasOwnProperty(key) ? citation[key] : null;
          }
          this.citationsForm.citations.push(_citationObj);
          _citationObj = {};
        });
      }
      const keys = ["title"];
      this.citationsForm.citations = this.citationsForm.citations.filter(
        (value, index, self) => self.findIndex(
          (v2) => keys.every((k2) => v2[k2] === value[k2])
        ) === index
      );
      this.citationsForm.post(route("citation.save", this.project.id), {
        preserveScroll: true,
        onSuccess: () => {
          router$1.reload({ only: ["project"] });
          this.citationsForm.reset();
          this.loadInitial();
          this.form.reset();
          this.displayAddCitationForms = false;
          this.isEdit = false;
        },
        onError: (err) => console.error(err)
      });
    },
    /*Check for validation error*/
    validateForm() {
      this.form.errors = {};
      this.form.hasErrors = false;
      var hasErrors = false;
      if (!this.form.title) {
        this.form.errors.title = "The title field is required.";
        hasErrors = true;
      }
      if (!this.form.authors) {
        this.form.errors.authors = "The authors field is required.";
        hasErrors = true;
      }
      if (hasErrors) {
        this.form.hasErrors = true;
      }
    },
    /*Format response recived from Europemc API*/
    formatCitationResponse(obj, apiType) {
      var journalTitle = "";
      var yearofPublication = "";
      var volume = "";
      var issue = "";
      var pageInfo = "";
      this.formattedCitationRes = {};
      if (obj) {
        switch (apiType) {
          case "europemc":
            if (obj.journalInfo) {
              journalTitle = obj.journalInfo.journal.title ? obj.journalInfo.journal.title : "";
              yearofPublication = obj.journalInfo.yearOfPublication ? obj.journalInfo.yearOfPublication : "";
              volume = obj.journalInfo.volume ? obj.journalInfo.volume : "";
              issue = obj.journalInfo.issue ? obj.journalInfo.issue : "";
            }
            pageInfo = obj.pageInfo ? obj.pageInfo : "";
            this.formattedCitationRes.title = obj.title ? obj.title : "";
            this.formattedCitationRes.authors = obj.authorString ? obj.authorString : "";
            this.formattedCitationRes.citation_text = journalTitle + " " + yearofPublication + " " + volume + " ( " + issue + " ) " + pageInfo;
            this.formattedCitationRes.doi = obj.doi ? obj.doi : "";
            this.formattedCitationRes.abstract = obj.abstractText ? obj.abstractText : "";
            break;
          case "crossref":
            journalTitle = obj.title[0];
            yearofPublication = obj["published-online"]["date-parts"] ? obj["published-online"]["date-parts"][0][0] : "";
            volume = obj.volume ? obj.volume : "";
            issue = obj.issue ? obj.issue : "";
            pageInfo = obj.page ? obj.page : "";
            this.formattedCitationRes.title = journalTitle;
            if (obj.author) {
              this.formattedCitationRes.authors = obj.author.map(
                (author) => author.given + " " + author.family
              ).join(", ");
            }
            this.formattedCitationRes.citation_text = journalTitle + " " + yearofPublication + " " + volume + " ( " + issue + " ) " + pageInfo;
            this.formattedCitationRes.doi = obj.DOI ? obj.DOI : "";
            this.formattedCitationRes.abstract = obj.abstract ? obj.abstract : "";
            break;
        }
      }
      return this.formattedCitationRes;
    },
    /*Confirm delete and prepare request*/
    confirmDeletion(citation) {
      this.confirmDelete = true;
      this.citationsForm.reset();
      this.citationsForm.citations = [
        {
          id: citation.id ? citation.id : null,
          title: citation.tile ? citation.title : null,
          doi: citation.doi ? citation.doi : null,
          title: citation.title ? citation.title : null,
          authors: citation.authors ? citation.authors : null,
          abstract: citation.abstract ? citation.abstract : null,
          citation_text: citation.citation_text ? citation.citation_text : null
        }
      ];
    },
    /*Make request to delete API*/
    deleteCitation() {
      this.citationsForm.delete(
        route("citation.delete", this.project.id),
        {
          preserveScroll: true,
          onSuccess: () => {
            router$1.reload({ only: ["project"] });
            this.loadInitial();
            this.citationsForm.reset();
            this.confirmDelete = false;
          },
          onError: (err) => console.error(err)
        }
      );
    },
    onCancelEdit() {
      if (this.selectedCitation) {
        this.citations.push(this.selectedCitation);
      }
      this.displayAddCitationForms = false;
      this.isEdit = false;
      this.form.reset();
    },
    onBack() {
      if (this.selectedCitation) {
        this.citations.push(this.selectedCitation);
      }
      this.displayAddCitationForms = false;
      this.isEdit = false;
      this.fetchedCitations = {};
      this.query = "";
    }
  }
};
function _sfc_ssrRender$$(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_dialog_modal = resolveComponent("jet-dialog-modal");
  const _component_PlusIcon = resolveComponent("PlusIcon");
  const _component_ArrowSmallRightIcon = resolveComponent("ArrowSmallRightIcon");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  const _component_loading_button = resolveComponent("loading-button");
  const _component_draggable = resolveComponent("draggable");
  const _component_PencilIcon = resolveComponent("PencilIcon");
  const _component_TrashIcon = resolveComponent("TrashIcon");
  const _component_FolderPlusIcon = resolveComponent("FolderPlusIcon");
  const _component_jet_danger_button = resolveComponent("jet-danger-button");
  _push(ssrRenderComponent(_component_jet_dialog_modal, mergeProps({
    show: $data.showDialog,
    "max-width": "6xl",
    onClose: ($event) => $data.showDialog = false
  }, _attrs), {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${ssrInterpolate($props.project.name)} - Manage Citations `);
        if (!$data.displayAddCitationForms) {
          _push2(`<button type="button" class="inline-flex float-right items-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_PlusIcon, { class: "w-5 h-5 mr-1 text-white" }, null, _parent2, _scopeId));
          _push2(` Add Citation </button>`);
        } else {
          _push2(`<button type="button" class="inline-flex float-right items-center rounded-md border border-transparent bg-gray-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_ArrowSmallRightIcon, { class: "w-5 h-5 mr-1 text-white" }, null, _parent2, _scopeId));
          _push2(` Back </button>`);
        }
      } else {
        return [
          createTextVNode(toDisplayString($props.project.name) + " - Manage Citations ", 1),
          !$data.displayAddCitationForms ? (openBlock(), createBlock("button", {
            key: 0,
            type: "button",
            class: "inline-flex float-right items-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2",
            onClick: ($event) => $data.displayAddCitationForms = true
          }, [
            createVNode(_component_PlusIcon, { class: "w-5 h-5 mr-1 text-white" }),
            createTextVNode(" Add Citation ")
          ], 8, ["onClick"])) : (openBlock(), createBlock("button", {
            key: 1,
            type: "button",
            class: "inline-flex float-right items-center rounded-md border border-transparent bg-gray-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2",
            onClick: $options.onBack
          }, [
            createVNode(_component_ArrowSmallRightIcon, { class: "w-5 h-5 mr-1 text-white" }),
            createTextVNode(" Back ")
          ], 8, ["onClick"]))
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}>`);
        if ($data.displayAddCitationForms) {
          _push2(`<div${_scopeId}><div class="relative grid grid-cols-1 gap-x-4 max-w-7xl mx-auto lg:grid-cols-2"${_scopeId}><div class="px-4 sm:px-6 lg:pb-5 lg:px-0 lg:row-start-1 lg:col-start-1"${_scopeId}><div${_scopeId}><p class="text-sm leading-6 font-bold text-gray-900"${_scopeId}>`);
          if (!$data.isEdit) {
            _push2(`<span${_scopeId}>Add</span>`);
          } else {
            _push2(`<span${_scopeId}>Update</span>`);
          }
          _push2(` Citation </p><div class="mt-1 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-2"${_scopeId}><div class="sm:col-span-1"${_scopeId}><label for="title" class="block text-sm font-medium text-gray-700"${_scopeId}> DOI </label><div class="mt-1"${_scopeId}><input id="doi"${ssrRenderAttr("value", $data.form.doi)} type="text" name="doi" placeholder="DOI ID e.g. 10.1186/s19991-022-00987-0" class="${ssrRenderClass([
            $data.isEdit ? "shadow-sm focus:ring-red-500 focus:border-red-500 block w-full sm:text-sm border-red-500 rounded-md bg-gray-100" : "",
            "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md"
          ])}"${_scopeId}></div>`);
          _push2(ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.doi,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div><div class="sm:col-span-4"${_scopeId}><label for="family-name" class="block text-sm font-medium text-gray-700 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId}> Title </label><div class="mt-1"${_scopeId}><input id="title"${ssrRenderAttr("value", $data.form.title)} type="text" name="title" autocomplete="title" class="${ssrRenderClass([
            $data.isEdit ? "shadow-sm focus:ring-red-500 focus:border-red-500 block w-full sm:text-sm border-red-500 rounded-md bg-gray-100" : "",
            "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md"
          ])}"${_scopeId}></div>`);
          _push2(ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.title,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div><div class="sm:col-span-6"${_scopeId}><label for="given-name" class="block text-sm font-medium text-gray-700 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId}> Authors </label><div class="mt-1"${_scopeId}><textarea id="authors" type="text" name="authors" placeholder="e.g. Pupier S, Nuzillard MK, Wist P, Schlörer AK." class="${ssrRenderClass([
            $data.isEdit ? "shadow-sm focus:ring-red-500 focus:border-red-500 block w-full sm:text-sm border-red-500 rounded-md bg-gray-100" : "",
            "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md"
          ])}"${_scopeId}>${ssrInterpolate($data.form.authors)}</textarea></div>`);
          _push2(ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.authors,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div><div class="sm:col-span-6"${_scopeId}><label for="abstract" class="block text-sm font-medium text-gray-700"${_scopeId}> Abstract </label><div class="mt-1"${_scopeId}><textarea id="abstract" name="abstract" type="abstract" autocomplete="abstract" class="${ssrRenderClass([
            $data.isEdit ? "shadow-sm focus:ring-red-500 focus:border-red-500 block w-full sm:text-sm border-red-500 rounded-md bg-gray-100" : "",
            "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md"
          ])}"${_scopeId}>${ssrInterpolate($data.form.abstract)}</textarea>`);
          _push2(ssrRenderComponent(_component_jet_input_error, {
            message: $data.form.errors.abstract,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div></div><div class="sm:col-span-6"${_scopeId}><label for="orcid" class="block text-sm font-medium text-gray-700"${_scopeId}> Citation Text </label><div class="mt-1"${_scopeId}><textarea id="citation-text" name="citation-text" autocomplete="citation-text" placeholder="&lt;journal title&gt; &lt;year of publication&gt; &lt;volume&gt; &lt;(issue)&gt; &lt;page info&gt; e.g. - Magnetic resonance in chemistry : MRC 2018 56 ( 8 ) 703-715 or please provide any relevant information." type="text" class="${ssrRenderClass([
            $data.isEdit ? "shadow-sm focus:ring-red-500 focus:border-red-500 block w-full sm:text-sm border-red-500 rounded-md bg-gray-100" : "",
            "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md"
          ])}"${_scopeId}>${ssrInterpolate($data.form.citation_text)}</textarea></div></div>`);
          if (!$data.isEdit) {
            _push2(`<div class="sm:col-span-6 float-left"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_jet_secondary_button, {
              class: "float-right",
              disabled: !($data.form && $data.form.title),
              onClick: ($event) => $options.save("addManually")
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Add `);
                } else {
                  return [
                    createTextVNode(" Add ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_jet_secondary_button, {
              class: "float-right mr-2",
              disabled: !($data.form && $data.form.title),
              onClick: ($event) => ($data.form.reset(), $data.citationsForm.reset())
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Clear `);
                } else {
                  return [
                    createTextVNode(" Clear ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            _push2(`<div class="sm:col-span-6 float-left"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_jet_secondary_button, {
              class: "float-right",
              disabled: !($data.form && $data.form.title),
              onClick: ($event) => $options.save("addManually")
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Update `);
                } else {
                  return [
                    createTextVNode(" Update ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_jet_secondary_button, {
              class: "float-right mr-2",
              disabled: !($data.form && $data.form.title),
              onClick: ($event) => $options.onCancelEdit()
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Cancel `);
                } else {
                  return [
                    createTextVNode(" Cancel ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div>`);
          }
          _push2(`</div></div></div><div class="lg:px-1 lg:row-start-1 lg:col-start-2 border-l"${_scopeId}><div class="pl-2"${_scopeId}><p class="text-sm leading-6 font-bold text-gray-900"${_scopeId}> Import From </p><div class="mt-1 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-2"${_scopeId}><div class="sm:col-span-2"${_scopeId}><label for="name" class="block text-sm font-medium text-gray-700"${_scopeId}> DOI </label><div class="mt-1 flex rounded-md shadow-sm"${_scopeId}><input id="query"${ssrRenderAttr("value", $data.query)} type="text" name="query" placeholder="DOI ID e.g. 10.1186/s19991-022-00987-0" autocomplete="off" class="flex-1 focus:ring-teal-500 focus:border-teal-500 block w-full min-w-0 rounded sm:text-sm border-gray-300"${_scopeId}></div></div></div><div class="sm:col-span-2 mt-4"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_jet_secondary_button, {
            disabled: $data.query == "" || !$data.query,
            onClick: $options.fetchCitations
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Import `);
              } else {
                return [
                  createTextVNode(" Import ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_jet_secondary_button, {
            class: "ml-2",
            disabled: _ctx.isEmpty($data.fetchedCitations),
            onClick: ($event) => ($data.fetchedCitations = {}, $data.query = null)
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Reset `);
              } else {
                return [
                  createTextVNode(" Reset ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div>`);
          _push2(ssrRenderComponent(_component_jet_input_error, {
            message: $data.error,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          if ($data.loading) {
            _push2(`<div class="sm:col-span-9 mt-4 align-centre"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_loading_button, { loading: $data.loading }, null, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            _push2(`<!---->`);
          }
          if (!(_ctx.isEmpty($data.fetchedCitations) || $options.fetchCitations == null) && !$data.loading) {
            _push2(`<div class="mt-4"${_scopeId}><fieldset class="border rounded border-gray-200 overflow-auto"${_scopeId}><legend class="sr-only"${_scopeId}> Notifications </legend><div style="${ssrRenderStyle({ "height": "40vh" })}" class="divide-y divide-gray-200"${_scopeId}><div class="relative flex items-start p-4"${_scopeId}><div class="min-w-0 flex-1 text-sm"${_scopeId}><label for="citation" class="font-medium text-gray-700"${_scopeId}>${ssrInterpolate($data.fetchedCitations.title)}</label><p id="citation-authors" class="text-teal-500"${_scopeId}>${ssrInterpolate($data.fetchedCitations.authors)}</p><p id="citation-text" class="text-gray-500"${_scopeId}>${ssrInterpolate($data.fetchedCitations.citation_text)}</p><p id="citation-doi" class="text-gray-500 font-bold"${_scopeId}> DOI - ${ssrInterpolate($data.fetchedCitations.doi)}</p>`);
            if ($data.fetchedCitations.abstract) {
              _push2(`<p id="citation-doi" class="font-bold text-gray-500 mt-2"${_scopeId}> Abstract </p>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`<div id="citation-abstract" class="text-xs text-gray-500"${_scopeId}>${$data.fetchedCitations.abstract}</div></div></div></div></fieldset><div${_scopeId}>`);
            _push2(ssrRenderComponent(_component_jet_secondary_button, {
              class: "float-right text-md font-bold text-teal-900 mt-4",
              onClick: ($event) => $options.save("addFetched")
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Add `);
                } else {
                  return [
                    createTextVNode(" Add ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</div></div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div></div></div></div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($data.citations.length > 0 && !$data.displayAddCitationForms) {
          _push2(`<div style="${ssrRenderStyle({ "height": "60vh" })}" class="sm:rounded-md overflow-y-scroll"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_draggable, {
            modelValue: $data.citations,
            "onUpdate:modelValue": ($event) => $data.citations = $event,
            "item-key": "citation.id",
            group: "author",
            onStart: ($event) => _ctx.drag = true,
            onEnd: ($event) => _ctx.drag = false
          }, {
            item: withCtx(({ element }, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<div class="overflow-auto"${_scopeId2}><ul role="list" class="divide-y divide-gray-900"${_scopeId2}><li${_scopeId2}><div class="px-4 border rounded-md mb-1 py-4 sm:px-6"${_scopeId2}><div class="flex items-center cursor justify-between"${_scopeId2}><p class="text-sm font-medium text-teal-900"${_scopeId2}>${ssrInterpolate(element.title)}</p></div><div class="mt-1 sm:flex sm:justify-between"${_scopeId2}><div class="sm:flex"${_scopeId2}><p class="flex items-center text-xs font-small text-gray-500 break-words"${_scopeId2}>${ssrInterpolate(element.authors)}</p></div><div class="mt-2 flex items-center text-sm text-gray-500 sm:mt-0"${_scopeId2}><button type="button" class="inline-flex items-center p-1 border border-transparent"${_scopeId2}>`);
                _push3(ssrRenderComponent(_component_PencilIcon, { class: "w-3.5 h-3.5 mr-1 text-gray-600" }, null, _parent3, _scopeId2));
                _push3(`</button><button type="button" class="inline-flex items-center p-1 border border-transparent"${_scopeId2}>`);
                _push3(ssrRenderComponent(_component_TrashIcon, { class: "w-3.5 h-3.5 mr-1 text-gray-600" }, null, _parent3, _scopeId2));
                _push3(`</button></div></div><div class="sm:flex sm:justify-between"${_scopeId2}>`);
                if (element.doi) {
                  _push3(`<p class="text-xs font-medium text-teal-900"${_scopeId2}><b class="text-gray-500"${_scopeId2}>DOI: </b> ${ssrInterpolate(element.doi)}</p>`);
                } else {
                  _push3(`<!---->`);
                }
                _push3(`</div><div class="sm:flex sm:justify-between"${_scopeId2}>`);
                if (element.abstract) {
                  _push3(`<div class="text-xs font-medium text-gray-900"${_scopeId2}>${element.abstract}</div>`);
                } else {
                  _push3(`<!---->`);
                }
                _push3(`</div></div></li></ul></div>`);
              } else {
                return [
                  createVNode("div", { class: "overflow-auto" }, [
                    createVNode("ul", {
                      role: "list",
                      class: "divide-y divide-gray-900"
                    }, [
                      createVNode("li", null, [
                        createVNode("div", { class: "px-4 border rounded-md mb-1 py-4 sm:px-6" }, [
                          createVNode("div", { class: "flex items-center cursor justify-between" }, [
                            createVNode("p", { class: "text-sm font-medium text-teal-900" }, toDisplayString(element.title), 1)
                          ]),
                          createVNode("div", { class: "mt-1 sm:flex sm:justify-between" }, [
                            createVNode("div", { class: "sm:flex" }, [
                              createVNode("p", { class: "flex items-center text-xs font-small text-gray-500 break-words" }, toDisplayString(element.authors), 1)
                            ]),
                            createVNode("div", { class: "mt-2 flex items-center text-sm text-gray-500 sm:mt-0" }, [
                              createVNode("button", {
                                type: "button",
                                class: "inline-flex items-center p-1 border border-transparent",
                                onClick: ($event) => $options.edit(element)
                              }, [
                                createVNode(_component_PencilIcon, { class: "w-3.5 h-3.5 mr-1 text-gray-600" })
                              ], 8, ["onClick"]),
                              createVNode("button", {
                                type: "button",
                                class: "inline-flex items-center p-1 border border-transparent",
                                onClick: ($event) => $options.confirmDeletion(
                                  element
                                )
                              }, [
                                createVNode(_component_TrashIcon, { class: "w-3.5 h-3.5 mr-1 text-gray-600" })
                              ], 8, ["onClick"])
                            ])
                          ]),
                          createVNode("div", { class: "sm:flex sm:justify-between" }, [
                            element.doi ? (openBlock(), createBlock("p", {
                              key: 0,
                              class: "text-xs font-medium text-teal-900"
                            }, [
                              createVNode("b", { class: "text-gray-500" }, "DOI: "),
                              createTextVNode(" " + toDisplayString(element.doi), 1)
                            ])) : createCommentVNode("", true)
                          ]),
                          createVNode("div", { class: "sm:flex sm:justify-between" }, [
                            element.abstract ? (openBlock(), createBlock("div", {
                              key: 0,
                              class: "text-xs font-medium text-gray-900",
                              innerHTML: element.abstract
                            }, null, 8, ["innerHTML"])) : createCommentVNode("", true)
                          ])
                        ])
                      ])
                    ])
                  ])
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div>`);
        if ($data.citations.length == 0 && !$data.displayAddCitationForms) {
          _push2(`<div class="py-5"${_scopeId}><div class="text-center"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_FolderPlusIcon, { class: "mx-auto h-12 w-12 text-gray-400" }, null, _parent2, _scopeId));
          _push2(`<h3 class="mt-2 text-sm font-medium text-gray-900"${_scopeId}> No Citations Listed </h3><p class="mt-1 text-sm text-gray-500"${_scopeId}> Get started by adding a new citation. </p><div class="mt-6"${_scopeId}><button type="button" class="inline-flex items-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_PlusIcon, { class: "w-5 h-5 mr-1 text-white" }, null, _parent2, _scopeId));
          _push2(` Add Citation </button></div></div></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(ssrRenderComponent(_component_jet_dialog_modal, {
          show: $data.confirmDelete,
          onClose: ($event) => $data.confirmDelete = false
        }, {
          title: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Citation `);
            } else {
              return [
                createTextVNode(" Delete Citation ")
              ];
            }
          }),
          content: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Are you sure you want to delete this citation? <div class="mt-4"${_scopeId2}></div>`);
            } else {
              return [
                createTextVNode(" Are you sure you want to delete this citation? "),
                createVNode("div", { class: "mt-4" })
              ];
            }
          }),
          footer: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmDelete = false
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(ssrRenderComponent(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                disabled: $data.form.processing,
                onClick: ($event) => $options.deleteCitation()
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Delete Citation `);
                  } else {
                    return [
                      createTextVNode(" Delete Citation ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                createVNode(_component_jet_secondary_button, {
                  onClick: ($event) => $data.confirmDelete = false
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                createVNode(_component_jet_danger_button, {
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  disabled: $data.form.processing,
                  onClick: ($event) => $options.deleteCitation()
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Delete Citation ")
                  ]),
                  _: 1
                }, 8, ["class", "disabled", "onClick"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode("div", null, [
            $data.displayAddCitationForms ? (openBlock(), createBlock("div", { key: 0 }, [
              createVNode("div", { class: "relative grid grid-cols-1 gap-x-4 max-w-7xl mx-auto lg:grid-cols-2" }, [
                createVNode("div", { class: "px-4 sm:px-6 lg:pb-5 lg:px-0 lg:row-start-1 lg:col-start-1" }, [
                  createVNode("div", null, [
                    createVNode("p", { class: "text-sm leading-6 font-bold text-gray-900" }, [
                      !$data.isEdit ? (openBlock(), createBlock("span", { key: 0 }, "Add")) : (openBlock(), createBlock("span", { key: 1 }, "Update")),
                      createTextVNode(" Citation ")
                    ]),
                    createVNode("div", { class: "mt-1 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-2" }, [
                      createVNode("div", { class: "sm:col-span-1" }, [
                        createVNode("label", {
                          for: "title",
                          class: "block text-sm font-medium text-gray-700"
                        }, " DOI "),
                        createVNode("div", { class: "mt-1" }, [
                          withDirectives(createVNode("input", {
                            id: "doi",
                            "onUpdate:modelValue": ($event) => $data.form.doi = $event,
                            type: "text",
                            name: "doi",
                            placeholder: "DOI ID e.g. 10.1186/s19991-022-00987-0",
                            class: [
                              $data.isEdit ? "shadow-sm focus:ring-red-500 focus:border-red-500 block w-full sm:text-sm border-red-500 rounded-md bg-gray-100" : "",
                              "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md"
                            ]
                          }, null, 10, ["onUpdate:modelValue"]), [
                            [vModelText, $data.form.doi]
                          ])
                        ]),
                        createVNode(_component_jet_input_error, {
                          message: $data.form.errors.doi,
                          class: "mt-2"
                        }, null, 8, ["message"])
                      ]),
                      createVNode("div", { class: "sm:col-span-4" }, [
                        createVNode("label", {
                          for: "family-name",
                          class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500"
                        }, " Title "),
                        createVNode("div", { class: "mt-1" }, [
                          withDirectives(createVNode("input", {
                            id: "title",
                            "onUpdate:modelValue": ($event) => $data.form.title = $event,
                            type: "text",
                            name: "title",
                            autocomplete: "title",
                            class: [
                              $data.isEdit ? "shadow-sm focus:ring-red-500 focus:border-red-500 block w-full sm:text-sm border-red-500 rounded-md bg-gray-100" : "",
                              "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md"
                            ]
                          }, null, 10, ["onUpdate:modelValue"]), [
                            [vModelText, $data.form.title]
                          ])
                        ]),
                        createVNode(_component_jet_input_error, {
                          message: $data.form.errors.title,
                          class: "mt-2"
                        }, null, 8, ["message"])
                      ]),
                      createVNode("div", { class: "sm:col-span-6" }, [
                        createVNode("label", {
                          for: "given-name",
                          class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500"
                        }, " Authors "),
                        createVNode("div", { class: "mt-1" }, [
                          withDirectives(createVNode("textarea", {
                            id: "authors",
                            "onUpdate:modelValue": ($event) => $data.form.authors = $event,
                            type: "text",
                            name: "authors",
                            placeholder: "e.g. Pupier S, Nuzillard MK, Wist P, Schlörer AK.",
                            class: [
                              $data.isEdit ? "shadow-sm focus:ring-red-500 focus:border-red-500 block w-full sm:text-sm border-red-500 rounded-md bg-gray-100" : "",
                              "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md"
                            ]
                          }, null, 10, ["onUpdate:modelValue"]), [
                            [vModelText, $data.form.authors]
                          ])
                        ]),
                        createVNode(_component_jet_input_error, {
                          message: $data.form.errors.authors,
                          class: "mt-2"
                        }, null, 8, ["message"])
                      ]),
                      createVNode("div", { class: "sm:col-span-6" }, [
                        createVNode("label", {
                          for: "abstract",
                          class: "block text-sm font-medium text-gray-700"
                        }, " Abstract "),
                        createVNode("div", { class: "mt-1" }, [
                          withDirectives(createVNode("textarea", {
                            id: "abstract",
                            "onUpdate:modelValue": ($event) => $data.form.abstract = $event,
                            name: "abstract",
                            type: "abstract",
                            autocomplete: "abstract",
                            class: [
                              $data.isEdit ? "shadow-sm focus:ring-red-500 focus:border-red-500 block w-full sm:text-sm border-red-500 rounded-md bg-gray-100" : "",
                              "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md"
                            ]
                          }, null, 10, ["onUpdate:modelValue"]), [
                            [vModelText, $data.form.abstract]
                          ]),
                          createVNode(_component_jet_input_error, {
                            message: $data.form.errors.abstract,
                            class: "mt-2"
                          }, null, 8, ["message"])
                        ])
                      ]),
                      createVNode("div", { class: "sm:col-span-6" }, [
                        createVNode("label", {
                          for: "orcid",
                          class: "block text-sm font-medium text-gray-700"
                        }, " Citation Text "),
                        createVNode("div", { class: "mt-1" }, [
                          withDirectives(createVNode("textarea", {
                            id: "citation-text",
                            "onUpdate:modelValue": ($event) => $data.form.citation_text = $event,
                            name: "citation-text",
                            autocomplete: "citation-text",
                            placeholder: "<journal title> <year of publication> <volume> <(issue)> <page info> e.g. - Magnetic resonance in chemistry : MRC 2018 56 ( 8 ) 703-715 or please provide any relevant information.",
                            type: "text",
                            class: [
                              $data.isEdit ? "shadow-sm focus:ring-red-500 focus:border-red-500 block w-full sm:text-sm border-red-500 rounded-md bg-gray-100" : "",
                              "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md"
                            ]
                          }, null, 10, ["onUpdate:modelValue"]), [
                            [vModelText, $data.form.citation_text]
                          ])
                        ])
                      ]),
                      !$data.isEdit ? (openBlock(), createBlock("div", {
                        key: 0,
                        class: "sm:col-span-6 float-left"
                      }, [
                        createVNode(_component_jet_secondary_button, {
                          class: "float-right",
                          disabled: !($data.form && $data.form.title),
                          onClick: ($event) => $options.save("addManually")
                        }, {
                          default: withCtx(() => [
                            createTextVNode(" Add ")
                          ]),
                          _: 1
                        }, 8, ["disabled", "onClick"]),
                        createVNode(_component_jet_secondary_button, {
                          class: "float-right mr-2",
                          disabled: !($data.form && $data.form.title),
                          onClick: ($event) => ($data.form.reset(), $data.citationsForm.reset())
                        }, {
                          default: withCtx(() => [
                            createTextVNode(" Clear ")
                          ]),
                          _: 1
                        }, 8, ["disabled", "onClick"])
                      ])) : (openBlock(), createBlock("div", {
                        key: 1,
                        class: "sm:col-span-6 float-left"
                      }, [
                        createVNode(_component_jet_secondary_button, {
                          class: "float-right",
                          disabled: !($data.form && $data.form.title),
                          onClick: ($event) => $options.save("addManually")
                        }, {
                          default: withCtx(() => [
                            createTextVNode(" Update ")
                          ]),
                          _: 1
                        }, 8, ["disabled", "onClick"]),
                        createVNode(_component_jet_secondary_button, {
                          class: "float-right mr-2",
                          disabled: !($data.form && $data.form.title),
                          onClick: ($event) => $options.onCancelEdit()
                        }, {
                          default: withCtx(() => [
                            createTextVNode(" Cancel ")
                          ]),
                          _: 1
                        }, 8, ["disabled", "onClick"])
                      ]))
                    ])
                  ])
                ]),
                createVNode("div", { class: "lg:px-1 lg:row-start-1 lg:col-start-2 border-l" }, [
                  createVNode("div", { class: "pl-2" }, [
                    createVNode("p", { class: "text-sm leading-6 font-bold text-gray-900" }, " Import From "),
                    createVNode("div", { class: "mt-1 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-2" }, [
                      createVNode("div", { class: "sm:col-span-2" }, [
                        createVNode("label", {
                          for: "name",
                          class: "block text-sm font-medium text-gray-700"
                        }, " DOI "),
                        createVNode("div", { class: "mt-1 flex rounded-md shadow-sm" }, [
                          withDirectives(createVNode("input", {
                            id: "query",
                            "onUpdate:modelValue": ($event) => $data.query = $event,
                            type: "text",
                            name: "query",
                            placeholder: "DOI ID e.g. 10.1186/s19991-022-00987-0",
                            autocomplete: "off",
                            class: "flex-1 focus:ring-teal-500 focus:border-teal-500 block w-full min-w-0 rounded sm:text-sm border-gray-300"
                          }, null, 8, ["onUpdate:modelValue"]), [
                            [vModelText, $data.query]
                          ])
                        ])
                      ])
                    ]),
                    createVNode("div", { class: "sm:col-span-2 mt-4" }, [
                      createVNode(_component_jet_secondary_button, {
                        disabled: $data.query == "" || !$data.query,
                        onClick: $options.fetchCitations
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Import ")
                        ]),
                        _: 1
                      }, 8, ["disabled", "onClick"]),
                      createVNode(_component_jet_secondary_button, {
                        class: "ml-2",
                        disabled: _ctx.isEmpty($data.fetchedCitations),
                        onClick: ($event) => ($data.fetchedCitations = {}, $data.query = null)
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Reset ")
                        ]),
                        _: 1
                      }, 8, ["disabled", "onClick"])
                    ]),
                    createVNode(_component_jet_input_error, {
                      message: $data.error,
                      class: "mt-2"
                    }, null, 8, ["message"]),
                    $data.loading ? (openBlock(), createBlock("div", {
                      key: 0,
                      class: "sm:col-span-9 mt-4 align-centre"
                    }, [
                      createVNode(_component_loading_button, { loading: $data.loading }, null, 8, ["loading"])
                    ])) : createCommentVNode("", true),
                    !(_ctx.isEmpty($data.fetchedCitations) || $options.fetchCitations == null) && !$data.loading ? (openBlock(), createBlock("div", {
                      key: 1,
                      class: "mt-4"
                    }, [
                      createVNode("fieldset", { class: "border rounded border-gray-200 overflow-auto" }, [
                        createVNode("legend", { class: "sr-only" }, " Notifications "),
                        createVNode("div", {
                          style: { "height": "40vh" },
                          class: "divide-y divide-gray-200"
                        }, [
                          createVNode("div", { class: "relative flex items-start p-4" }, [
                            createVNode("div", { class: "min-w-0 flex-1 text-sm" }, [
                              createVNode("label", {
                                for: "citation",
                                class: "font-medium text-gray-700"
                              }, toDisplayString($data.fetchedCitations.title), 1),
                              createVNode("p", {
                                id: "citation-authors",
                                class: "text-teal-500"
                              }, toDisplayString($data.fetchedCitations.authors), 1),
                              createVNode("p", {
                                id: "citation-text",
                                class: "text-gray-500"
                              }, toDisplayString($data.fetchedCitations.citation_text), 1),
                              createVNode("p", {
                                id: "citation-doi",
                                class: "text-gray-500 font-bold"
                              }, " DOI - " + toDisplayString($data.fetchedCitations.doi), 1),
                              $data.fetchedCitations.abstract ? (openBlock(), createBlock("p", {
                                key: 0,
                                id: "citation-doi",
                                class: "font-bold text-gray-500 mt-2"
                              }, " Abstract ")) : createCommentVNode("", true),
                              createVNode("div", {
                                id: "citation-abstract",
                                class: "text-xs text-gray-500",
                                innerHTML: $data.fetchedCitations.abstract
                              }, null, 8, ["innerHTML"])
                            ])
                          ])
                        ])
                      ]),
                      createVNode("div", null, [
                        createVNode(_component_jet_secondary_button, {
                          class: "float-right text-md font-bold text-teal-900 mt-4",
                          onClick: ($event) => $options.save("addFetched")
                        }, {
                          default: withCtx(() => [
                            createTextVNode(" Add ")
                          ]),
                          _: 1
                        }, 8, ["onClick"])
                      ])
                    ])) : createCommentVNode("", true)
                  ])
                ])
              ])
            ])) : createCommentVNode("", true),
            $data.citations.length > 0 && !$data.displayAddCitationForms ? (openBlock(), createBlock("div", {
              key: 1,
              style: { "height": "60vh" },
              class: "sm:rounded-md overflow-y-scroll"
            }, [
              createVNode(_component_draggable, {
                modelValue: $data.citations,
                "onUpdate:modelValue": ($event) => $data.citations = $event,
                "item-key": "citation.id",
                group: "author",
                onStart: ($event) => _ctx.drag = true,
                onEnd: ($event) => _ctx.drag = false
              }, {
                item: withCtx(({ element }) => [
                  createVNode("div", { class: "overflow-auto" }, [
                    createVNode("ul", {
                      role: "list",
                      class: "divide-y divide-gray-900"
                    }, [
                      createVNode("li", null, [
                        createVNode("div", { class: "px-4 border rounded-md mb-1 py-4 sm:px-6" }, [
                          createVNode("div", { class: "flex items-center cursor justify-between" }, [
                            createVNode("p", { class: "text-sm font-medium text-teal-900" }, toDisplayString(element.title), 1)
                          ]),
                          createVNode("div", { class: "mt-1 sm:flex sm:justify-between" }, [
                            createVNode("div", { class: "sm:flex" }, [
                              createVNode("p", { class: "flex items-center text-xs font-small text-gray-500 break-words" }, toDisplayString(element.authors), 1)
                            ]),
                            createVNode("div", { class: "mt-2 flex items-center text-sm text-gray-500 sm:mt-0" }, [
                              createVNode("button", {
                                type: "button",
                                class: "inline-flex items-center p-1 border border-transparent",
                                onClick: ($event) => $options.edit(element)
                              }, [
                                createVNode(_component_PencilIcon, { class: "w-3.5 h-3.5 mr-1 text-gray-600" })
                              ], 8, ["onClick"]),
                              createVNode("button", {
                                type: "button",
                                class: "inline-flex items-center p-1 border border-transparent",
                                onClick: ($event) => $options.confirmDeletion(
                                  element
                                )
                              }, [
                                createVNode(_component_TrashIcon, { class: "w-3.5 h-3.5 mr-1 text-gray-600" })
                              ], 8, ["onClick"])
                            ])
                          ]),
                          createVNode("div", { class: "sm:flex sm:justify-between" }, [
                            element.doi ? (openBlock(), createBlock("p", {
                              key: 0,
                              class: "text-xs font-medium text-teal-900"
                            }, [
                              createVNode("b", { class: "text-gray-500" }, "DOI: "),
                              createTextVNode(" " + toDisplayString(element.doi), 1)
                            ])) : createCommentVNode("", true)
                          ]),
                          createVNode("div", { class: "sm:flex sm:justify-between" }, [
                            element.abstract ? (openBlock(), createBlock("div", {
                              key: 0,
                              class: "text-xs font-medium text-gray-900",
                              innerHTML: element.abstract
                            }, null, 8, ["innerHTML"])) : createCommentVNode("", true)
                          ])
                        ])
                      ])
                    ])
                  ])
                ]),
                _: 1
              }, 8, ["modelValue", "onUpdate:modelValue", "onStart", "onEnd"])
            ])) : createCommentVNode("", true)
          ]),
          $data.citations.length == 0 && !$data.displayAddCitationForms ? (openBlock(), createBlock("div", {
            key: 0,
            class: "py-5"
          }, [
            createVNode("div", { class: "text-center" }, [
              createVNode(_component_FolderPlusIcon, { class: "mx-auto h-12 w-12 text-gray-400" }),
              createVNode("h3", { class: "mt-2 text-sm font-medium text-gray-900" }, " No Citations Listed "),
              createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " Get started by adding a new citation. "),
              createVNode("div", { class: "mt-6" }, [
                createVNode("button", {
                  type: "button",
                  class: "inline-flex items-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2",
                  onClick: ($event) => $data.displayAddCitationForms = true
                }, [
                  createVNode(_component_PlusIcon, { class: "w-5 h-5 mr-1 text-white" }),
                  createTextVNode(" Add Citation ")
                ], 8, ["onClick"])
              ])
            ])
          ])) : createCommentVNode("", true),
          createVNode(_component_jet_dialog_modal, {
            show: $data.confirmDelete,
            onClose: ($event) => $data.confirmDelete = false
          }, {
            title: withCtx(() => [
              createTextVNode(" Delete Citation ")
            ]),
            content: withCtx(() => [
              createTextVNode(" Are you sure you want to delete this citation? "),
              createVNode("div", { class: "mt-4" })
            ]),
            footer: withCtx(() => [
              createVNode(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmDelete = false
              }, {
                default: withCtx(() => [
                  createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              createVNode(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                disabled: $data.form.processing,
                onClick: ($event) => $options.deleteCitation()
              }, {
                default: withCtx(() => [
                  createTextVNode(" Delete Citation ")
                ]),
                _: 1
              }, 8, ["class", "disabled", "onClick"])
            ]),
            _: 1
          }, 8, ["show", "onClose"])
        ];
      }
    }),
    footer: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_secondary_button, {
          class: "float-left",
          onClick: $options.onClose
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Close `);
            } else {
              return [
                createTextVNode(" Close ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "flex" }, [
            createVNode(_component_jet_secondary_button, {
              class: "float-left",
              onClick: $options.onClose
            }, {
              default: withCtx(() => [
                createTextVNode(" Close ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$10 = _sfc_main$10.setup;
_sfc_main$10.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/ManageCitation.vue");
  return _sfc_setup$10 ? _sfc_setup$10(props, ctx) : void 0;
};
const ManageCitation = /* @__PURE__ */ _export_sfc(_sfc_main$10, [["ssrRender", _sfc_ssrRender$$]]);
const _sfc_main$$ = {
  components: {},
  props: ["doi", "model"],
  data() {
    return {
      formats: {
        APA: "apa",
        Harvard: "harvard-cite-them-right",
        MLA: "modern-language-association",
        Vancouver: "vancouver",
        Chicago: "chicago-fullnote-bibliography",
        IEEE: "ieee"
      },
      selectedFormat: "APA",
      citationText: null
    };
  },
  computed: {
    dataciteURL() {
      return this.$page.props.dataciteURL ? String(this.$page.props.dataciteURL) + "/dois/" : "https://api.datacite.org/dois/";
    }
  },
  watch: {
    doi(newDOI, oldDOI) {
      if (newDOI != oldDOI) {
        this.queryDataCite();
      }
    }
  },
  mounted() {
    if (this.doi) {
      this.queryDataCite();
    }
  },
  methods: {
    queryDataCite() {
      let config = {
        headers: {
          Accept: "text/x-bibliography; charset=utf-8"
        }
      };
      axios$1.get(
        this.dataciteURL + this.doi + "?style=" + this.formats[this.selectedFormat],
        config
      ).then(
        (response) => {
          this.citationText = response.data;
        },
        (error) => {
          console.log(error);
        }
      );
    }
  }
};
function _sfc_ssrRender$_(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  if ($data.citationText) {
    _push(`<div${ssrRenderAttrs(mergeProps({ class: "p-4" }, _attrs))}><div class="rounded-md bg-blue-50 p-4"><div class="flex"><div class="flex-shrink-0"><svg class="h-5 w-5 text-blue-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"><path fill-rule="evenodd" d="M19 10.5a8.5 8.5 0 11-17 0 8.5 8.5 0 0117 0zM8.25 9.75A.75.75 0 019 9h.253a1.75 1.75 0 011.709 2.13l-.46 2.066a.25.25 0 00.245.304H11a.75.75 0 010 1.5h-.253a1.75 1.75 0 01-1.709-2.13l.46-2.066a.25.25 0 00-.245-.304H9a.75.75 0 01-.75-.75zM10 7a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd"></path></svg></div><div class="ml-3 w-full"><p class="text-md text-blue-700"> Cite this ${ssrInterpolate($props.model)} <select class="-mt-2 -mr-2 block rounded-md border-gray-300 py-1 pl-3 pr-10 text-base focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm float-right"><option name="citation" value="APA"${ssrIncludeBooleanAttr(Array.isArray($data.selectedFormat) ? ssrLooseContain($data.selectedFormat, "APA") : ssrLooseEqual($data.selectedFormat, "APA")) ? " selected" : ""}>APA</option><option name="citation" value="Harvard"${ssrIncludeBooleanAttr(Array.isArray($data.selectedFormat) ? ssrLooseContain($data.selectedFormat, "Harvard") : ssrLooseEqual($data.selectedFormat, "Harvard")) ? " selected" : ""}> Harvard </option><option name="citation" value="MLA"${ssrIncludeBooleanAttr(Array.isArray($data.selectedFormat) ? ssrLooseContain($data.selectedFormat, "MLA") : ssrLooseEqual($data.selectedFormat, "MLA")) ? " selected" : ""}>MLA</option><option name="citation" value="Vancouver"${ssrIncludeBooleanAttr(Array.isArray($data.selectedFormat) ? ssrLooseContain($data.selectedFormat, "Vancouver") : ssrLooseEqual($data.selectedFormat, "Vancouver")) ? " selected" : ""}> Vancouver </option><option name="citation" value="Chicago"${ssrIncludeBooleanAttr(Array.isArray($data.selectedFormat) ? ssrLooseContain($data.selectedFormat, "Chicago") : ssrLooseEqual($data.selectedFormat, "Chicago")) ? " selected" : ""}> Chicago </option><option name="citation" value="IEEE"${ssrIncludeBooleanAttr(Array.isArray($data.selectedFormat) ? ssrLooseContain($data.selectedFormat, "IEEE") : ssrLooseEqual($data.selectedFormat, "IEEE")) ? " selected" : ""}>IEEE</option></select></p><p class="text-md font-bold mt-1 text-gray-900">${$data.citationText}</p></div></div></div></div>`);
  } else {
    _push(`<!---->`);
  }
}
const _sfc_setup$$ = _sfc_main$$.setup;
_sfc_main$$.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/Citation.vue");
  return _sfc_setup$$ ? _sfc_setup$$(props, ctx) : void 0;
};
const Citation = /* @__PURE__ */ _export_sfc(_sfc_main$$, [["ssrRender", _sfc_ssrRender$_]]);
const _sfc_main$_ = {
  components: {
    Link,
    MagnifyingGlassIcon: MagnifyingGlassIcon$1,
    ChevronRightIcon: ChevronRightIcon$1,
    UsersIcon,
    Combobox,
    ComboboxInput,
    ComboboxOptions,
    ComboboxOption,
    Dialog,
    DialogPanel,
    TransitionChild,
    TransitionRoot,
    Datepicker
  },
  props: ["project"],
  data() {
    return {
      open: ref(false),
      query: ref(""),
      errors: null,
      status: null,
      form: this.$inertia.form({
        _method: "POST",
        conditions: false,
        terms: false,
        releaseDate: this.setReleaseDate()
      })
    };
  },
  mounted() {
    if (this.project && this.project.status != "" && this.project.status != "complete" && this.project.status != null) {
      this.status = this.project.status;
      this.open = true;
      this.trackProject();
    }
  },
  methods: {
    setReleaseDate() {
      var current_date = /* @__PURE__ */ new Date();
      var relase_date = /* @__PURE__ */ new Date();
      relase_date.setDate(current_date.getDate());
      return relase_date;
    },
    publish() {
      if (this.form.conditions && this.form.terms) {
        this.errors = null;
        axios.post(
          route("dashboard.project.publish", this.project.id),
          this.form
        ).catch((err) => {
          this.errors = err.response.data.errors;
        }).then((response) => {
          this.status = response.data.project.status;
          this.trackProject();
        });
      }
    },
    trackProject() {
      axios.get("/projects/status/" + this.project.id + "/queue").then((response) => {
        this.status = response.data.status;
        if (this.status != "complete") {
          setTimeout(() => this.trackProject(), 1e4);
        } else {
          return this.$inertia.visit(
            this.route("dashboard.projects", [this.project.id])
          );
        }
      });
    }
  }
};
function _sfc_ssrRender$Z(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Link = resolveComponent("Link");
  if ($props.project.validation_status) {
    _push(`<div${ssrRenderAttrs(_attrs)}><a${ssrRenderAttr("href", "/publish/" + $props.project.id)} class="ml-4 inline-flex items-center justify-center whitespace-nowrap rounded-md border border-transparent bg-indigo-700 px-4 py-2 text-base font-medium text-white shadow-sm"> Publish </a></div>`);
  } else {
    _push(`<div${ssrRenderAttrs(_attrs)}>`);
    _push(ssrRenderComponent(_component_Link, {
      href: _ctx.route("dashboard.project.validation", [$props.project.id]),
      class: "text-gray-900 text-sm font-bold hover:text-blue-700"
    }, {
      default: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` Why can&#39;t I publish? `);
        } else {
          return [
            createTextVNode(" Why can't I publish? ")
          ];
        }
      }),
      _: 1
    }, _parent));
    _push(`<button${ssrIncludeBooleanAttr(true) ? " disabled" : ""} class="ml-4 inline-flex items-center justify-center whitespace-nowrap rounded-md border border-transparent bg-indigo-300 px-4 py-2 text-base font-medium cursor-not-allowed text-white shadow-sm"> Publish </button></div>`);
  }
}
const _sfc_setup$_ = _sfc_main$_.setup;
_sfc_main$_.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/Publish.vue");
  return _sfc_setup$_ ? _sfc_setup$_(props, ctx) : void 0;
};
const Publish$1 = /* @__PURE__ */ _export_sfc(_sfc_main$_, [["ssrRender", _sfc_ssrRender$Z]]);
const _sfc_main$Z = {
  components: {},
  props: ["authors"],
  methods: {
    getOrcidLink(orcidId) {
      var link = "#";
      if (orcidId) {
        link = "https://orcid.org/" + orcidId;
      }
      return link;
    },
    getTarget(id2) {
      var target = null;
      if (id2) {
        target = "_blank";
      }
      return target;
    }
  }
};
function _sfc_ssrRender$Y(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<!--[-->`);
  ssrRenderList($props.authors, (author) => {
    _push(`<div class="select-text relative rounded-lg border border-gray-300 bg-white px-6 py-5 shadow-sm flex items-top space-x-3 hover:border-gray-400 focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-teal-500"><div class="flex-1 min-w-0"><div><a class="focus:outline-none cursor-pointer select-text"${ssrRenderAttr("href", $options.getOrcidLink(author.orcid_id))}${ssrRenderAttr("target", $options.getTarget(author.orcid_id))}><div class="mb-1 flex items-center justify-between"><span class="text-sm font-medium text-teal-900">${ssrInterpolate(author.title)} ${ssrInterpolate(author.given_name)} ${ssrInterpolate(author.family_name)}</span>`);
    if (author.pivot && author.pivot.contributor_type) {
      _push(`<button class="text-sm text-gray-400"><span class="px-2 inline-flex text-xs leading-5 font-semibold capitalize rounded-full bg-green-100 text-green-800">${ssrInterpolate(author.pivot.contributor_type ? author.pivot.contributor_type : "Researcher")}</span></button>`);
    } else {
      _push(`<!---->`);
    }
    _push(`</div>`);
    if (author.affiliation) {
      _push(`<p class="text-xs text-gray-500">${ssrInterpolate(author.affiliation)}</p>`);
    } else {
      _push(`<!---->`);
    }
    if (author.orcid_id) {
      _push(`<p class="text-xs text-teal-900"><b class="text-gray-500">ORCID iD:</b> ${ssrInterpolate(author.orcid_id)}</p>`);
    } else {
      _push(`<!---->`);
    }
    if (author.email_id) {
      _push(`<p class="text-xs text-gray-500"><b class="text-gray-500">Email-Id:</b> ${ssrInterpolate(author.email_id)}</p>`);
    } else {
      _push(`<!---->`);
    }
    _push(`</a></div></div></div>`);
  });
  _push(`<!--]-->`);
}
const _sfc_setup$Z = _sfc_main$Z.setup;
_sfc_main$Z.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/AuthorCard.vue");
  return _sfc_setup$Z ? _sfc_setup$Z(props, ctx) : void 0;
};
const AuthorCard = /* @__PURE__ */ _export_sfc(_sfc_main$Z, [["ssrRender", _sfc_ssrRender$Y]]);
const _sfc_main$Y = {
  components: {},
  props: ["citations"],
  methods: {
    getCitationLink(doi) {
      var link = "#";
      if (doi) {
        link = "https://doi.org/" + doi;
      }
      return link;
    },
    getTarget(id2) {
      var target = null;
      if (id2) {
        target = "_blank";
      }
      return target;
    }
  }
};
function _sfc_ssrRender$X(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<!--[-->`);
  ssrRenderList($props.citations, (citation) => {
    _push(`<div class="relative rounded-lg border border-gray-300 bg-white px-6 py-5 shadow-sm flex items-top space-x-3 hover:border-gray-400 focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-teal-500"><div class="flex-1 min-w-0"><a class="focus:outline-none cursor-pointer select-text"${ssrRenderAttr("href", $options.getCitationLink(citation.doi))}${ssrRenderAttr("target", $options.getTarget(citation.doi))}><p class="text-sm font-medium text-gray-900">${ssrInterpolate(citation.title)}</p><p class="text-sm text-teal-500">${ssrInterpolate(citation.authors)}</p><p class="text-sm text-gray-500">${ssrInterpolate(citation.citation_text)}</p>`);
    if (citation.doi) {
      _push(`<p class="text-sm font-sm text-gray-500"> DOI - <a${ssrRenderAttr("href", citation.doi)} class="text-teal-900">${ssrInterpolate(citation.doi)}</a></p>`);
    } else {
      _push(`<!---->`);
    }
    _push(`<div class="text-sm text-gray-500 truncate line-clamp-2 ...">${citation.abstract}</div></a></div></div>`);
  });
  _push(`<!--]-->`);
}
const _sfc_setup$Y = _sfc_main$Y.setup;
_sfc_main$Y.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/CitationCard.vue");
  return _sfc_setup$Y ? _sfc_setup$Y(props, ctx) : void 0;
};
const CitationCard = /* @__PURE__ */ _export_sfc(_sfc_main$Y, [["ssrRender", _sfc_ssrRender$X]]);
const _sfc_main$X = {
  components: {},
  props: ["doi", "color"],
  data() {
    return {
      isVisible: false
    };
  },
  methods: {
    copyDOIToClipboard(event) {
      let targetInput = event.target.parentElement.getElementsByTagName("input")[0];
      if (targetInput) {
        this.isVisible = true;
        setTimeout(() => {
          this.isVisible = false;
        }, 2500);
        this.copyToClipboard(this.doi, targetInput);
      }
    }
  }
};
function _sfc_ssrRender$W(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}>`);
  if ($props.doi) {
    _push(`<div><div class="inline-flex items-center cursor-pointer"><span class="inline-flex items-center rounded-l-md border-r bg-gray-800 px-2 py-1 text-sm font-medium text-white">DOI:</span><span class="${ssrRenderClass([
      $props.color ? $props.color : "bg-blue-100",
      "inline-flex items-center rounded-r-md px-2 py-1 text-sm font-medium text-gray-900"
    ])}">${ssrInterpolate($props.doi)}</span><input readonly type="hidden"${ssrRenderAttr("value", $props.doi)} class="rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300">`);
    if ($data.isVisible) {
      _push(`<span class="text-gray-500 text-xs ml-2">Copied to clipboard!</span>`);
    } else {
      _push(`<!---->`);
    }
    _push(`</div></div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div>`);
}
const _sfc_setup$X = _sfc_main$X.setup;
_sfc_main$X.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/DOIBadge.vue");
  return _sfc_setup$X ? _sfc_setup$X(props, ctx) : void 0;
};
const DOIBadge = /* @__PURE__ */ _export_sfc(_sfc_main$X, [["ssrRender", _sfc_ssrRender$W]]);
const _sfc_main$W = {
  components: {
    Link,
    AppLayout,
    StudyIndex,
    ProjectDetails,
    StarIcon: StarIcon$1,
    PencilIcon,
    AccessDialogue,
    ManageAuthor,
    ToolTip,
    ManageCitation,
    CalendarIcon,
    Citation,
    Publish: Publish$1,
    AuthorCard,
    CitationCard,
    DOIBadge
  },
  props: [
    "project",
    "team",
    "members",
    "availableRoles",
    "projectPermissions",
    "role",
    "teamRole",
    "license"
  ],
  setup() {
    const projectDetailsElement = ref(null);
    const manageAuthorElement = ref(null);
    const manageCitationElement = ref(null);
    return {
      projectDetailsElement,
      manageAuthorElement,
      manageCitationElement
    };
  },
  data() {
    return {};
  },
  computed: {
    canDeleteProject() {
      return this.projectPermissions ? this.projectPermissions.canDeleteProject : false;
    },
    canUpdateProject() {
      return this.projectPermissions ? this.projectPermissions.canUpdateProject : false;
    }
  },
  mounted() {
    const urlSearchParams = new URLSearchParams(window.location.search);
    const params = Object.fromEntries(urlSearchParams.entries());
    let editOperation = params["edit"];
    if (editOperation) {
      if (editOperation == "license" || editOperation == "title" || editOperation == "description" || editOperation == "keywords" || editOperation == "profile_image") {
        this.toggleDetails();
      } else if (editOperation == "citation") {
        this.toggleManageCitation();
      } else if (editOperation == "authors") {
        this.toggleManageAuthor();
      }
    }
  },
  methods: {
    toogleStarred() {
      const url = "/projects/" + this.project.id + "/toggleStarred";
      axios.get(url).catch((err) => {
        if (err.response.status !== 200 || err.response.status !== 201) {
          throw new Error(
            `API call failed with status code: ${err.response.status}`
          );
        }
      }).then(function(response) {
        router$1.reload({ only: ["project"] });
      });
    },
    toggleDetails() {
      this.projectDetailsElement.toggleDetails();
    },
    toggleManageAuthor() {
      this.manageAuthorElement.toggleDialog();
    },
    toggleManageCitation() {
      this.manageCitationElement.toggleDialog();
    }
  }
};
function _sfc_ssrRender$V(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_Citation = resolveComponent("Citation");
  const _component_StarIcon = resolveComponent("StarIcon");
  const _component_access_dialogue = resolveComponent("access-dialogue");
  const _component_project_details = resolveComponent("project-details");
  const _component_manage_author = resolveComponent("manage-author");
  const _component_manage_citation = resolveComponent("manage-citation");
  const _component_Link = resolveComponent("Link");
  const _component_DOIBadge = resolveComponent("DOIBadge");
  const _component_CalendarIcon = resolveComponent("CalendarIcon");
  const _component_Publish = resolveComponent("Publish");
  const _component_PencilIcon = resolveComponent("PencilIcon");
  const _component_ToolTip = resolveComponent("ToolTip");
  const _component_citation_card = resolveComponent("citation-card");
  const _component_author_card = resolveComponent("author-card");
  const _component_study_index = resolveComponent("study-index");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({
    title: $props.project.name
  }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($props.project.is_deleted) {
          _push2(`<div class="text-center px-3 py-2 bg-red-50 text-red-700 border-b"${_scopeId}><b${_scopeId}>Warning: </b> This project is deleted. At the end of the 30-day period, this project and all of its resources will be deleted permanently and cannot be recovered. You can only restore a deleted project within the 30-day recovery period. </div>`);
        } else {
          _push2(`<!---->`);
        }
        if (!$props.project.is_public && $props.project.is_published) {
          _push2(`<div class="text-center px-3 py-2 bg-green-50 text-green-700 border-b"${_scopeId}><b${_scopeId}>Info: </b> This project is published and set to be released on ${ssrInterpolate(_ctx.formatDate($props.project.release_date))}. You cannot edit a published project, please create a new version to updated the project. </div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($props.project.is_public) {
          _push2(`<div${_scopeId}>`);
          if ($props.project.is_archived) {
            _push2(`<div class="text-center px-3 py-2 bg-yellow-50 text-yellow-700 border-b"${_scopeId}><b${_scopeId}>Warning: </b> This project is archived. It is now read-only. </div>`);
          } else {
            _push2(`<div class="text-center px-3 py-2 bg-green-50 text-green-700 border-b"${_scopeId}><b${_scopeId}>Info: </b> This project is published. You cannot edit a published project, please create a new version to updated the project. </div>`);
          }
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($props.project.is_public && $props.project.doi != null) {
          _push2(`<div${_scopeId}>`);
          _push2(ssrRenderComponent(_component_Citation, {
            model: "project",
            doi: $props.project.doi
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="bg-white border-b"${_scopeId}><div class="px-12"${_scopeId}><div class="flex flex-nowrap justify-between pt-6 w-full"${_scopeId}><div class=""${_scopeId}><div class="flex pr-20 cursor-pointer items-center text-xl text-gray-700 font-bold"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_StarIcon, {
          class: [
            $props.project.is_bookmarked ? "text-yellow-400" : "text-gray-200",
            "h-5 w-5 flex-shrink-0 -ml-1 mr-1"
          ],
          "aria-hidden": "true",
          onClick: $options.toogleStarred
        }, null, _parent2, _scopeId));
        _push2(` ${ssrInterpolate($props.project.name)} `);
        if ($options.canUpdateProject) {
          _push2(`<button type="button" class="inline-flex items-center shadow-sm px-4 py-1.5 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="w-4 h-4 mr-2 text-gray-600"${_scopeId}><path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"${_scopeId}></path></svg><span${_scopeId}>Edit</span></button>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div>`);
        if (!$props.project.is_deleted) {
          _push2(`<div class="inline-flex items-center mt-3"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_access_dialogue, {
            "available-roles": $props.availableRoles,
            role: $props.role,
            team: $props.team,
            members: $props.members,
            project: $props.project,
            "called-from": "projectView",
            model: "project"
          }, null, _parent2, _scopeId));
          _push2(`<a class="cursor-pointer hover:text-teal-900 inline-flex items-center ml-7"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="w-4 h-4"${_scopeId}><path d="M4 15a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7a1 1 0 0 1 .7.3L13.42 5H21a1 1 0 0 1 .9 1.45L19.61 11l2.27 4.55A1 1 0 0 1 21 17h-8a1 1 0 0 1-.7-.3L10.58 15H4z" class="fill-current text-gray-400"${_scopeId}></path><rect width="2" height="20" x="2" y="2" rx="1" class="fill-current text-gray-600"${_scopeId}></rect></svg><span class="ml-2"${_scopeId}>View details</span></a><a${_scopeId}>`);
          if ($props.project.is_public) {
            _push2(`<span class="inline-flex items-center"${_scopeId}><svg class="h-3 w-3 ml-4 text-green-400 inline" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 64 64" width="512" height="512"${_scopeId}><g id="globe"${_scopeId}><path d="M53.85,47.85A27,27,0,0,1,24,57.8V56l3-3V49l4-4V42l4,4h5l2-2h8Z"${_scopeId}></path><path d="M42,20.59v2.56L38.07,27H31l-5.36,5.26L31,37.51v5.06L27.44,39H22.86L16,32.11V24.2L11.8,20h-4A27,27,0,0,1,32,5a26.55,26.55,0,0,1,7.06.94L36,9H30v4l4,4h4.33Z"${_scopeId}></path><path d="M32,60A28,28,0,1,1,60,32,28,28,0,0,1,32,60ZM32,6A26,26,0,1,0,58,32,26,26,0,0,0,32,6Z"${_scopeId}></path></g></svg><span class="ml-2"${_scopeId}>Public</span></span>`);
          } else {
            _push2(`<span class="inline-flex ml-7 items-center"${_scopeId}><svg id="Capa_1" class="h-3 w-3 text-gray-400 inline" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 512 512" style="${ssrRenderStyle({ "enable-background": "new 0 0 512\n                                                    512" })}" xml:space="preserve"${_scopeId}><g${_scopeId}><g${_scopeId}><path d="M437.333,192h-32v-42.667C405.333,66.99,338.344,0,256,0S106.667,66.99,106.667,149.333V192h-32
                                C68.771,192,64,196.771,64,202.667v266.667C64,492.865,83.135,512,106.667,512h298.667C428.865,512,448,492.865,448,469.333
                                V202.667C448,196.771,443.229,192,437.333,192z M287.938,414.823c0.333,3.01-0.635,6.031-2.656,8.292
                                c-2.021,2.26-4.917,3.552-7.948,3.552h-42.667c-3.031,0-5.927-1.292-7.948-3.552c-2.021-2.26-2.99-5.281-2.656-8.292l6.729-60.51
                                c-10.927-7.948-17.458-20.521-17.458-34.313c0-23.531,19.135-42.667,42.667-42.667s42.667,19.135,42.667,42.667
                                c0,13.792-6.531,26.365-17.458,34.313L287.938,414.823z M341.333,192H170.667v-42.667C170.667,102.281,208.948,64,256,64
                                s85.333,38.281,85.333,85.333V192z"${_scopeId}></path></g></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g></svg><span class="ml-2"${_scopeId}>Private</span></span>`);
          }
          _push2(`</a>`);
          _push2(ssrRenderComponent(_component_project_details, {
            ref: "projectDetailsElement",
            role: $props.role,
            "project-permissions": $props.projectPermissions,
            project: $props.project
          }, null, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_manage_author, {
            ref: "manageAuthorElement",
            project: $props.project
          }, null, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_manage_citation, {
            ref: "manageCitationElement",
            project: $props.project
          }, null, _parent2, _scopeId));
          _push2(`<span class="capitalize inline-flex pr-4 ml-7 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800"${_scopeId}>`);
          if ($props.role == "reviewer") {
            _push2(`<span${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 py-1 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"${_scopeId}></path><path stroke-linecap="round" stroke-linejoin="round" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"${_scopeId}></path></svg></span>`);
          } else {
            _push2(`<!---->`);
          }
          if ($props.role == "collaborator") {
            _push2(`<span${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 py-1 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"${_scopeId}></path></svg></span>`);
          } else {
            _push2(`<!---->`);
          }
          if ($props.role == "owner" || $props.role == "creator") {
            _push2(`<span${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 py-1 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M14 10l-2 1m0 0l-2-1m2 1v2.5M20 7l-2 1m2-1l-2-1m2 1v2.5M14 4l-2-1-2 1M4 7l2-1M4 7l2 1M4 7v2.5M12 21l-2-1m2 1l2-1m-2 1v-2.5M6 18l-2-1v-2.5M18 18l2-1v-2.5"${_scopeId}></path></svg></span>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(` ${ssrInterpolate($props.role)}</span>`);
          if ($props.project.identifier) {
            _push2(`<span class="inline-flex pr-4 ml-4 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 py-1" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M5.25 8.25h15m-16.5 7.5h15m-1.8-13.5l-3.9 19.5m-2.1-19.5l-3.9 19.5"${_scopeId}></path></svg><b${_scopeId}>${ssrInterpolate($props.project.identifier)}</b></span>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div><div class="flex-nowrap"${_scopeId}>`);
        if ($options.canDeleteProject) {
          _push2(ssrRenderComponent(_component_Link, {
            href: _ctx.route(
              "dashboard.project.settings",
              $props.project.id
            ),
            class: "text-sm flex-nowrap text-gray-800 font-bold"
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Project Settings `);
              } else {
                return [
                  createTextVNode(" Project Settings ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div><div class="flex flex-nowrap justify-between pb-3"${_scopeId}>`);
        if ($props.project.identifier) {
          _push2(`<div class="text-gray-400 mt-2"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_DOIBadge, {
            doi: $props.project.doi
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="mt-2 flex items-center text-xs text-gray-400"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_CalendarIcon, {
          class: "flex-shrink-0 mr-1.5 h-5 w-5 text-gray-300",
          "aria-hidden": "true"
        }, null, _parent2, _scopeId));
        _push2(` Updated on ${ssrInterpolate(_ctx.formatDateTime($props.project.updated_at))}</div>`);
        if (!$props.project.is_public && !$props.project.is_published && !$props.project.is_deleted) {
          _push2(`<div class="flex-nowrap"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_Publish, { project: $props.project }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        if (!$props.project.is_public && $props.project.is_published) {
          _push2(`<div${_scopeId}><span class="ml-4 inline-flex items-center px-3 py-0.5 rounded-full text-sm font-medium bg-yellow-100 text-red-800 capitalize"${_scopeId}> PUBLISHED -  <b${_scopeId}>Release date: ${ssrInterpolate(_ctx.formatDate($props.project.release_date))}</b></span></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div></div>`);
      } else {
        return [
          $props.project.is_deleted ? (openBlock(), createBlock("div", {
            key: 0,
            class: "text-center px-3 py-2 bg-red-50 text-red-700 border-b"
          }, [
            createVNode("b", null, "Warning: "),
            createTextVNode(" This project is deleted. At the end of the 30-day period, this project and all of its resources will be deleted permanently and cannot be recovered. You can only restore a deleted project within the 30-day recovery period. ")
          ])) : createCommentVNode("", true),
          !$props.project.is_public && $props.project.is_published ? (openBlock(), createBlock("div", {
            key: 1,
            class: "text-center px-3 py-2 bg-green-50 text-green-700 border-b"
          }, [
            createVNode("b", null, "Info: "),
            createTextVNode(" This project is published and set to be released on " + toDisplayString(_ctx.formatDate($props.project.release_date)) + ". You cannot edit a published project, please create a new version to updated the project. ", 1)
          ])) : createCommentVNode("", true),
          $props.project.is_public ? (openBlock(), createBlock("div", { key: 2 }, [
            $props.project.is_archived ? (openBlock(), createBlock("div", {
              key: 0,
              class: "text-center px-3 py-2 bg-yellow-50 text-yellow-700 border-b"
            }, [
              createVNode("b", null, "Warning: "),
              createTextVNode(" This project is archived. It is now read-only. ")
            ])) : (openBlock(), createBlock("div", {
              key: 1,
              class: "text-center px-3 py-2 bg-green-50 text-green-700 border-b"
            }, [
              createVNode("b", null, "Info: "),
              createTextVNode(" This project is published. You cannot edit a published project, please create a new version to updated the project. ")
            ]))
          ])) : createCommentVNode("", true),
          $props.project.is_public && $props.project.doi != null ? (openBlock(), createBlock("div", { key: 3 }, [
            createVNode(_component_Citation, {
              model: "project",
              doi: $props.project.doi
            }, null, 8, ["doi"])
          ])) : createCommentVNode("", true),
          createVNode("div", { class: "bg-white border-b" }, [
            createVNode("div", { class: "px-12" }, [
              createVNode("div", { class: "flex flex-nowrap justify-between pt-6 w-full" }, [
                createVNode("div", { class: "" }, [
                  createVNode("div", { class: "flex pr-20 cursor-pointer items-center text-xl text-gray-700 font-bold" }, [
                    createVNode(_component_StarIcon, {
                      class: [
                        $props.project.is_bookmarked ? "text-yellow-400" : "text-gray-200",
                        "h-5 w-5 flex-shrink-0 -ml-1 mr-1"
                      ],
                      "aria-hidden": "true",
                      onClick: $options.toogleStarred
                    }, null, 8, ["class", "onClick"]),
                    createTextVNode(" " + toDisplayString($props.project.name) + " ", 1),
                    $options.canUpdateProject ? (openBlock(), createBlock("button", {
                      key: 0,
                      type: "button",
                      class: "inline-flex items-center shadow-sm px-4 py-1.5 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                      onClick: $options.toggleDetails
                    }, [
                      (openBlock(), createBlock("svg", {
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        class: "w-4 h-4 mr-2 text-gray-600"
                      }, [
                        createVNode("path", { d: "M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z" })
                      ])),
                      createVNode("span", null, "Edit")
                    ], 8, ["onClick"])) : createCommentVNode("", true)
                  ]),
                  !$props.project.is_deleted ? (openBlock(), createBlock("div", {
                    key: 0,
                    class: "inline-flex items-center mt-3"
                  }, [
                    createVNode(_component_access_dialogue, {
                      "available-roles": $props.availableRoles,
                      role: $props.role,
                      team: $props.team,
                      members: $props.members,
                      project: $props.project,
                      "called-from": "projectView",
                      model: "project"
                    }, null, 8, ["available-roles", "role", "team", "members", "project"]),
                    createVNode("a", {
                      class: "cursor-pointer hover:text-teal-900 inline-flex items-center ml-7",
                      onClick: $options.toggleDetails
                    }, [
                      (openBlock(), createBlock("svg", {
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        class: "w-4 h-4"
                      }, [
                        createVNode("path", {
                          d: "M4 15a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7a1 1 0 0 1 .7.3L13.42 5H21a1 1 0 0 1 .9 1.45L19.61 11l2.27 4.55A1 1 0 0 1 21 17h-8a1 1 0 0 1-.7-.3L10.58 15H4z",
                          class: "fill-current text-gray-400"
                        }),
                        createVNode("rect", {
                          width: "2",
                          height: "20",
                          x: "2",
                          y: "2",
                          rx: "1",
                          class: "fill-current text-gray-600"
                        })
                      ])),
                      createVNode("span", { class: "ml-2" }, "View details")
                    ], 8, ["onClick"]),
                    createVNode("a", null, [
                      $props.project.is_public ? (openBlock(), createBlock("span", {
                        key: 0,
                        class: "inline-flex items-center"
                      }, [
                        (openBlock(), createBlock("svg", {
                          class: "h-3 w-3 ml-4 text-green-400 inline",
                          xmlns: "http://www.w3.org/2000/svg",
                          viewBox: "0 0 64 64",
                          width: "512",
                          height: "512"
                        }, [
                          createVNode("g", { id: "globe" }, [
                            createVNode("path", { d: "M53.85,47.85A27,27,0,0,1,24,57.8V56l3-3V49l4-4V42l4,4h5l2-2h8Z" }),
                            createVNode("path", { d: "M42,20.59v2.56L38.07,27H31l-5.36,5.26L31,37.51v5.06L27.44,39H22.86L16,32.11V24.2L11.8,20h-4A27,27,0,0,1,32,5a26.55,26.55,0,0,1,7.06.94L36,9H30v4l4,4h4.33Z" }),
                            createVNode("path", { d: "M32,60A28,28,0,1,1,60,32,28,28,0,0,1,32,60ZM32,6A26,26,0,1,0,58,32,26,26,0,0,0,32,6Z" })
                          ])
                        ])),
                        createVNode("span", { class: "ml-2" }, "Public")
                      ])) : (openBlock(), createBlock("span", {
                        key: 1,
                        class: "inline-flex ml-7 items-center"
                      }, [
                        (openBlock(), createBlock("svg", {
                          id: "Capa_1",
                          class: "h-3 w-3 text-gray-400 inline",
                          version: "1.1",
                          xmlns: "http://www.w3.org/2000/svg",
                          "xmlns:xlink": "http://www.w3.org/1999/xlink",
                          x: "0px",
                          y: "0px",
                          viewBox: "0 0 512 512",
                          style: { "enable-background": "new 0 0 512\n                                                    512" },
                          "xml:space": "preserve"
                        }, [
                          createVNode("g", null, [
                            createVNode("g", null, [
                              createVNode("path", { d: "M437.333,192h-32v-42.667C405.333,66.99,338.344,0,256,0S106.667,66.99,106.667,149.333V192h-32\n                                C68.771,192,64,196.771,64,202.667v266.667C64,492.865,83.135,512,106.667,512h298.667C428.865,512,448,492.865,448,469.333\n                                V202.667C448,196.771,443.229,192,437.333,192z M287.938,414.823c0.333,3.01-0.635,6.031-2.656,8.292\n                                c-2.021,2.26-4.917,3.552-7.948,3.552h-42.667c-3.031,0-5.927-1.292-7.948-3.552c-2.021-2.26-2.99-5.281-2.656-8.292l6.729-60.51\n                                c-10.927-7.948-17.458-20.521-17.458-34.313c0-23.531,19.135-42.667,42.667-42.667s42.667,19.135,42.667,42.667\n                                c0,13.792-6.531,26.365-17.458,34.313L287.938,414.823z M341.333,192H170.667v-42.667C170.667,102.281,208.948,64,256,64\n                                s85.333,38.281,85.333,85.333V192z" })
                            ])
                          ]),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g"),
                          createVNode("g")
                        ])),
                        createVNode("span", { class: "ml-2" }, "Private")
                      ]))
                    ]),
                    createVNode(_component_project_details, {
                      ref: "projectDetailsElement",
                      role: $props.role,
                      "project-permissions": $props.projectPermissions,
                      project: $props.project
                    }, null, 8, ["role", "project-permissions", "project"]),
                    createVNode(_component_manage_author, {
                      ref: "manageAuthorElement",
                      project: $props.project
                    }, null, 8, ["project"]),
                    createVNode(_component_manage_citation, {
                      ref: "manageCitationElement",
                      project: $props.project
                    }, null, 8, ["project"]),
                    createVNode("span", { class: "capitalize inline-flex pr-4 ml-7 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800" }, [
                      $props.role == "reviewer" ? (openBlock(), createBlock("span", { key: 0 }, [
                        (openBlock(), createBlock("svg", {
                          xmlns: "http://www.w3.org/2000/svg",
                          class: "h-6 w-6 py-1 mr-1",
                          fill: "none",
                          viewBox: "0 0 24 24",
                          stroke: "currentColor",
                          "stroke-width": "2"
                        }, [
                          createVNode("path", {
                            "stroke-linecap": "round",
                            "stroke-linejoin": "round",
                            d: "M15 12a3 3 0 11-6 0 3 3 0 016 0z"
                          }),
                          createVNode("path", {
                            "stroke-linecap": "round",
                            "stroke-linejoin": "round",
                            d: "M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                          })
                        ]))
                      ])) : createCommentVNode("", true),
                      $props.role == "collaborator" ? (openBlock(), createBlock("span", { key: 1 }, [
                        (openBlock(), createBlock("svg", {
                          xmlns: "http://www.w3.org/2000/svg",
                          class: "h-6 w-6 py-1 mr-1",
                          fill: "none",
                          viewBox: "0 0 24 24",
                          stroke: "currentColor",
                          "stroke-width": "2"
                        }, [
                          createVNode("path", {
                            "stroke-linecap": "round",
                            "stroke-linejoin": "round",
                            d: "M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"
                          })
                        ]))
                      ])) : createCommentVNode("", true),
                      $props.role == "owner" || $props.role == "creator" ? (openBlock(), createBlock("span", { key: 2 }, [
                        (openBlock(), createBlock("svg", {
                          xmlns: "http://www.w3.org/2000/svg",
                          class: "h-6 w-6 py-1 mr-1",
                          fill: "none",
                          viewBox: "0 0 24 24",
                          stroke: "currentColor",
                          "stroke-width": "2"
                        }, [
                          createVNode("path", {
                            "stroke-linecap": "round",
                            "stroke-linejoin": "round",
                            d: "M14 10l-2 1m0 0l-2-1m2 1v2.5M20 7l-2 1m2-1l-2-1m2 1v2.5M14 4l-2-1-2 1M4 7l2-1M4 7l2 1M4 7v2.5M12 21l-2-1m2 1l2-1m-2 1v-2.5M6 18l-2-1v-2.5M18 18l2-1v-2.5"
                          })
                        ]))
                      ])) : createCommentVNode("", true),
                      createTextVNode(" " + toDisplayString($props.role), 1)
                    ]),
                    $props.project.identifier ? (openBlock(), createBlock("span", {
                      key: 0,
                      class: "inline-flex pr-4 ml-4 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800"
                    }, [
                      (openBlock(), createBlock("svg", {
                        xmlns: "http://www.w3.org/2000/svg",
                        class: "h-6 w-6 py-1",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        stroke: "currentColor",
                        "stroke-width": "2"
                      }, [
                        createVNode("path", {
                          "stroke-linecap": "round",
                          "stroke-linejoin": "round",
                          d: "M5.25 8.25h15m-16.5 7.5h15m-1.8-13.5l-3.9 19.5m-2.1-19.5l-3.9 19.5"
                        })
                      ])),
                      createVNode("b", null, toDisplayString($props.project.identifier), 1)
                    ])) : createCommentVNode("", true)
                  ])) : createCommentVNode("", true)
                ]),
                createVNode("div", { class: "flex-nowrap" }, [
                  $options.canDeleteProject ? (openBlock(), createBlock(_component_Link, {
                    key: 0,
                    href: _ctx.route(
                      "dashboard.project.settings",
                      $props.project.id
                    ),
                    class: "text-sm flex-nowrap text-gray-800 font-bold"
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Project Settings ")
                    ]),
                    _: 1
                  }, 8, ["href"])) : createCommentVNode("", true)
                ])
              ]),
              createVNode("div", { class: "flex flex-nowrap justify-between pb-3" }, [
                $props.project.identifier ? (openBlock(), createBlock("div", {
                  key: 0,
                  class: "text-gray-400 mt-2"
                }, [
                  createVNode(_component_DOIBadge, {
                    doi: $props.project.doi
                  }, null, 8, ["doi"])
                ])) : createCommentVNode("", true),
                createVNode("div", { class: "mt-2 flex items-center text-xs text-gray-400" }, [
                  createVNode(_component_CalendarIcon, {
                    class: "flex-shrink-0 mr-1.5 h-5 w-5 text-gray-300",
                    "aria-hidden": "true"
                  }),
                  createTextVNode(" Updated on " + toDisplayString(_ctx.formatDateTime($props.project.updated_at)), 1)
                ]),
                !$props.project.is_public && !$props.project.is_published && !$props.project.is_deleted ? (openBlock(), createBlock("div", {
                  key: 1,
                  class: "flex-nowrap"
                }, [
                  createVNode(_component_Publish, { project: $props.project }, null, 8, ["project"])
                ])) : createCommentVNode("", true),
                !$props.project.is_public && $props.project.is_published ? (openBlock(), createBlock("div", { key: 2 }, [
                  createVNode("span", { class: "ml-4 inline-flex items-center px-3 py-0.5 rounded-full text-sm font-medium bg-yellow-100 text-red-800 capitalize" }, [
                    createTextVNode(" PUBLISHED -  "),
                    createVNode("b", null, "Release date: " + toDisplayString(_ctx.formatDate($props.project.release_date)), 1)
                  ])
                ])) : createCommentVNode("", true)
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="p-12 pt-8"${_scopeId}><div${_scopeId}><div class="mb-8"${_scopeId}><div class="relative"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-300"${_scopeId}></div></div><div class="relative flex items-center justify-between"${_scopeId}><span class="px-3 -ml-4 rounded text-sm bg-gray-100 font-medium text-gray-500"${_scopeId}> Description </span>`);
        if ($options.canUpdateProject) {
          _push2(`<button type="button" class="inline-flex items-center shadow-sm px-4 py-1.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_PencilIcon, { class: "w-4 h-4 mr-1 text-gray-600" }, null, _parent2, _scopeId));
          _push2(`<span${_scopeId}>Edit</span></button>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div><dd class="mt-1 text-gray-900 space-y-5"${_scopeId}><p style="${ssrRenderStyle({ "max-width": "100ch !important" })}" class="prose mt-1 text-sm text-blue-gray-500"${_scopeId}>${_ctx.md($props.project.description)}</p></dd></div><div class="mb-8"${_scopeId}><div class="relative"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-300"${_scopeId}></div></div><div class="relative flex items-center justify-between"${_scopeId}><span class="px-3 -ml-4 rounded text-sm bg-gray-100 font-medium text-gray-500"${_scopeId}> Keywords </span>`);
        if ($options.canUpdateProject) {
          _push2(`<button type="button" class="inline-flex items-center shadow-sm px-4 py-1.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_PencilIcon, { class: "w-4 h-4 mr-1 text-gray-600" }, null, _parent2, _scopeId));
          _push2(`<span${_scopeId}>Edit</span></button>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div><dd class="mt-1 text-md text-gray-900 space-y-5"${_scopeId}><p${_scopeId}><!--[-->`);
        ssrRenderList($props.project.tags, (tag) => {
          _push2(`<span class="mt-1 inline-flex items-center rounded-full bg-gray-50 px-2 py-1 text-xs font-medium text-gray-600 ring-1 ring-inset ring-gray-500/10"${_scopeId}>${ssrInterpolate(tag.name["en"])}</span>`);
        });
        _push2(`<!--]--></p></dd></div><div class="mb-4"${_scopeId}><div class="relative"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-300"${_scopeId}></div></div><div class="relative flex items-center justify-between"${_scopeId}><span class="px-3 -ml-4 rounded text-sm bg-gray-100 font-medium text-gray-500"${_scopeId}> License </span>`);
        if ($options.canUpdateProject) {
          _push2(`<button type="button" class="inline-flex items-center shadow-sm px-4 py-1.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_PencilIcon, { class: "w-4 h-4 mr-1 text-gray-600" }, null, _parent2, _scopeId));
          _push2(`<span${_scopeId}>Edit</span></button>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div><div${_scopeId}>`);
        if ($props.license) {
          _push2(`<dd class="mt-1 text-gray-900 space-y-5"${_scopeId}><p style="${ssrRenderStyle({ "max-width": "100ch !important" })}" class="prose mt-1 text-sm text-blue-gray-500"${_scopeId}>${ssrInterpolate($props.license.title)} `);
          if ($props.project.license_id) {
            _push2(ssrRenderComponent(_component_ToolTip, {
              class: "inline h-4 w-4 ml-0",
              text: $props.license.description
            }, null, _parent2, _scopeId));
          } else {
            _push2(`<!---->`);
          }
          _push2(`</p></dd>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div><div class="mb-8"${_scopeId}><div class="relative"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-300"${_scopeId}></div></div><div class="relative flex items-center justify-between"${_scopeId}><span class="px-3 -ml-4 rounded text-sm bg-gray-100 font-medium text-gray-500"${_scopeId}> Citation </span>`);
        if ($options.canUpdateProject) {
          _push2(`<button type="button" class="inline-flex items-center shadow-sm px-4 py-1.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_PencilIcon, { class: "w-4 h-4 mr-1 text-gray-600" }, null, _parent2, _scopeId));
          _push2(`<span${_scopeId}>Edit</span></button>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div><dd class="mt-2 text-md text-gray-900 space-y-5 focus:pointer-events-auto"${_scopeId}><div class="mt-1 grid grid-cols-1 gap-4 sm:grid-cols-2"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_citation_card, {
          citations: $props.project.citations
        }, null, _parent2, _scopeId));
        _push2(`</div></dd></div><div class="mb-8"${_scopeId}><div class="relative"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-300"${_scopeId}></div></div><div class="relative flex items-center justify-between"${_scopeId}><span class="px-3 -ml-4 rounded text-sm bg-gray-100 font-medium text-gray-500"${_scopeId}> Author </span>`);
        if ($options.canUpdateProject) {
          _push2(`<button type="button" class="inline-flex items-center shadow-sm px-4 py-1.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_PencilIcon, { class: "w-4 h-4 mr-1 text-gray-600" }, null, _parent2, _scopeId));
          _push2(`<span${_scopeId}>Edit</span></button>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div><dd class="mt-2 text-md text-gray-900 space-y-5"${_scopeId}><div class="mt-1 grid grid-cols-1 gap-4 sm:grid-cols-3"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_author_card, {
          authors: $props.project.authors
        }, null, _parent2, _scopeId));
        _push2(`</div></dd></div><div class="relative py-5"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-100"${_scopeId}></div></div></div>`);
        _push2(ssrRenderComponent(_component_study_index, {
          editable: _ctx.editable,
          project: $props.project,
          role: $props.role,
          "team-role": $props.teamRole
        }, null, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          createVNode("div", { class: "p-12 pt-8" }, [
            createVNode("div", null, [
              createVNode("div", { class: "mb-8" }, [
                createVNode("div", { class: "relative" }, [
                  createVNode("div", {
                    class: "absolute inset-0 flex items-center",
                    "aria-hidden": "true"
                  }, [
                    createVNode("div", { class: "w-full border-t border-gray-300" })
                  ]),
                  createVNode("div", { class: "relative flex items-center justify-between" }, [
                    createVNode("span", { class: "px-3 -ml-4 rounded text-sm bg-gray-100 font-medium text-gray-500" }, " Description "),
                    $options.canUpdateProject ? (openBlock(), createBlock("button", {
                      key: 0,
                      type: "button",
                      class: "inline-flex items-center shadow-sm px-4 py-1.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                      onClick: $options.toggleDetails
                    }, [
                      createVNode(_component_PencilIcon, { class: "w-4 h-4 mr-1 text-gray-600" }),
                      createVNode("span", null, "Edit")
                    ], 8, ["onClick"])) : createCommentVNode("", true)
                  ])
                ]),
                createVNode("dd", { class: "mt-1 text-gray-900 space-y-5" }, [
                  createVNode("p", {
                    style: { "max-width": "100ch !important" },
                    class: "prose mt-1 text-sm text-blue-gray-500",
                    innerHTML: _ctx.md($props.project.description)
                  }, null, 8, ["innerHTML"])
                ])
              ]),
              createVNode("div", { class: "mb-8" }, [
                createVNode("div", { class: "relative" }, [
                  createVNode("div", {
                    class: "absolute inset-0 flex items-center",
                    "aria-hidden": "true"
                  }, [
                    createVNode("div", { class: "w-full border-t border-gray-300" })
                  ]),
                  createVNode("div", { class: "relative flex items-center justify-between" }, [
                    createVNode("span", { class: "px-3 -ml-4 rounded text-sm bg-gray-100 font-medium text-gray-500" }, " Keywords "),
                    $options.canUpdateProject ? (openBlock(), createBlock("button", {
                      key: 0,
                      type: "button",
                      class: "inline-flex items-center shadow-sm px-4 py-1.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                      onClick: $options.toggleDetails
                    }, [
                      createVNode(_component_PencilIcon, { class: "w-4 h-4 mr-1 text-gray-600" }),
                      createVNode("span", null, "Edit")
                    ], 8, ["onClick"])) : createCommentVNode("", true)
                  ])
                ]),
                createVNode("dd", { class: "mt-1 text-md text-gray-900 space-y-5" }, [
                  createVNode("p", null, [
                    (openBlock(true), createBlock(Fragment, null, renderList($props.project.tags, (tag) => {
                      return openBlock(), createBlock("span", {
                        key: tag.id,
                        class: "mt-1 inline-flex items-center rounded-full bg-gray-50 px-2 py-1 text-xs font-medium text-gray-600 ring-1 ring-inset ring-gray-500/10"
                      }, toDisplayString(tag.name["en"]), 1);
                    }), 128))
                  ])
                ])
              ]),
              createVNode("div", { class: "mb-4" }, [
                createVNode("div", { class: "relative" }, [
                  createVNode("div", {
                    class: "absolute inset-0 flex items-center",
                    "aria-hidden": "true"
                  }, [
                    createVNode("div", { class: "w-full border-t border-gray-300" })
                  ]),
                  createVNode("div", { class: "relative flex items-center justify-between" }, [
                    createVNode("span", { class: "px-3 -ml-4 rounded text-sm bg-gray-100 font-medium text-gray-500" }, " License "),
                    $options.canUpdateProject ? (openBlock(), createBlock("button", {
                      key: 0,
                      type: "button",
                      class: "inline-flex items-center shadow-sm px-4 py-1.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                      onClick: $options.toggleDetails
                    }, [
                      createVNode(_component_PencilIcon, { class: "w-4 h-4 mr-1 text-gray-600" }),
                      createVNode("span", null, "Edit")
                    ], 8, ["onClick"])) : createCommentVNode("", true)
                  ])
                ]),
                createVNode("div", null, [
                  $props.license ? (openBlock(), createBlock("dd", {
                    key: 0,
                    class: "mt-1 text-gray-900 space-y-5"
                  }, [
                    createVNode("p", {
                      style: { "max-width": "100ch !important" },
                      class: "prose mt-1 text-sm text-blue-gray-500"
                    }, [
                      createTextVNode(toDisplayString($props.license.title) + " ", 1),
                      $props.project.license_id ? (openBlock(), createBlock(_component_ToolTip, {
                        key: 0,
                        class: "inline h-4 w-4 ml-0",
                        text: $props.license.description
                      }, null, 8, ["text"])) : createCommentVNode("", true)
                    ])
                  ])) : createCommentVNode("", true)
                ])
              ]),
              createVNode("div", { class: "mb-8" }, [
                createVNode("div", { class: "relative" }, [
                  createVNode("div", {
                    class: "absolute inset-0 flex items-center",
                    "aria-hidden": "true"
                  }, [
                    createVNode("div", { class: "w-full border-t border-gray-300" })
                  ]),
                  createVNode("div", { class: "relative flex items-center justify-between" }, [
                    createVNode("span", { class: "px-3 -ml-4 rounded text-sm bg-gray-100 font-medium text-gray-500" }, " Citation "),
                    $options.canUpdateProject ? (openBlock(), createBlock("button", {
                      key: 0,
                      type: "button",
                      class: "inline-flex items-center shadow-sm px-4 py-1.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                      onClick: $options.toggleManageCitation
                    }, [
                      createVNode(_component_PencilIcon, { class: "w-4 h-4 mr-1 text-gray-600" }),
                      createVNode("span", null, "Edit")
                    ], 8, ["onClick"])) : createCommentVNode("", true)
                  ])
                ]),
                createVNode("dd", { class: "mt-2 text-md text-gray-900 space-y-5 focus:pointer-events-auto" }, [
                  createVNode("div", { class: "mt-1 grid grid-cols-1 gap-4 sm:grid-cols-2" }, [
                    createVNode(_component_citation_card, {
                      citations: $props.project.citations
                    }, null, 8, ["citations"])
                  ])
                ])
              ]),
              createVNode("div", { class: "mb-8" }, [
                createVNode("div", { class: "relative" }, [
                  createVNode("div", {
                    class: "absolute inset-0 flex items-center",
                    "aria-hidden": "true"
                  }, [
                    createVNode("div", { class: "w-full border-t border-gray-300" })
                  ]),
                  createVNode("div", { class: "relative flex items-center justify-between" }, [
                    createVNode("span", { class: "px-3 -ml-4 rounded text-sm bg-gray-100 font-medium text-gray-500" }, " Author "),
                    $options.canUpdateProject ? (openBlock(), createBlock("button", {
                      key: 0,
                      type: "button",
                      class: "inline-flex items-center shadow-sm px-4 py-1.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                      onClick: $options.toggleManageAuthor
                    }, [
                      createVNode(_component_PencilIcon, { class: "w-4 h-4 mr-1 text-gray-600" }),
                      createVNode("span", null, "Edit")
                    ], 8, ["onClick"])) : createCommentVNode("", true)
                  ])
                ]),
                createVNode("dd", { class: "mt-2 text-md text-gray-900 space-y-5" }, [
                  createVNode("div", { class: "mt-1 grid grid-cols-1 gap-4 sm:grid-cols-3" }, [
                    createVNode(_component_author_card, {
                      authors: $props.project.authors
                    }, null, 8, ["authors"])
                  ])
                ])
              ]),
              createVNode("div", { class: "relative py-5" }, [
                createVNode("div", {
                  class: "absolute inset-0 flex items-center",
                  "aria-hidden": "true"
                }, [
                  createVNode("div", { class: "w-full border-t border-gray-100" })
                ])
              ]),
              createVNode(_component_study_index, {
                editable: _ctx.editable,
                project: $props.project,
                role: $props.role,
                "team-role": $props.teamRole
              }, null, 8, ["editable", "project", "role", "team-role"])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$W = _sfc_main$W.setup;
_sfc_main$W.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Project/Show.vue");
  return _sfc_setup$W ? _sfc_setup$W(props, ctx) : void 0;
};
const Show$3 = /* @__PURE__ */ _export_sfc(_sfc_main$W, [["ssrRender", _sfc_ssrRender$V]]);
const __vite_glob_0_38 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Show$3
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$V = {
  components: {
    Link,
    AppLayout,
    Validation: Validation$1
  },
  props: ["project", "validation"]
};
function _sfc_ssrRender$U(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_Link = resolveComponent("Link");
  const _component_Validation = resolveComponent("Validation", true);
  _push(ssrRenderComponent(_component_app_layout, mergeProps({
    title: $props.project.name
  }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white border-b"${_scopeId}><div class="px-12"${_scopeId}><div class="flex flex-nowrap justify-between py-6"${_scopeId}><div${_scopeId}><div class="flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_Link, {
          href: _ctx.route("dashboard.projects", $props.project.id)
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`${ssrInterpolate($props.project.name)}`);
            } else {
              return [
                createTextVNode(toDisplayString($props.project.name), 1)
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(` / Validation </div></div></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white border-b" }, [
            createVNode("div", { class: "px-12" }, [
              createVNode("div", { class: "flex flex-nowrap justify-between py-6" }, [
                createVNode("div", null, [
                  createVNode("div", { class: "flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest" }, [
                    createVNode(_component_Link, {
                      href: _ctx.route("dashboard.projects", $props.project.id)
                    }, {
                      default: withCtx(() => [
                        createTextVNode(toDisplayString($props.project.name), 1)
                      ]),
                      _: 1
                    }, 8, ["href"]),
                    createTextVNode(" / Validation ")
                  ])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="py-8 px-10"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_Validation, {
          project: $props.project,
          validation: $props.validation.report
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "py-8 px-10" }, [
            createVNode(_component_Validation, {
              project: $props.project,
              validation: $props.validation.report
            }, null, 8, ["project", "validation"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$V = _sfc_main$V.setup;
_sfc_main$V.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Project/Validation.vue");
  return _sfc_setup$V ? _sfc_setup$V(props, ctx) : void 0;
};
const Validation = /* @__PURE__ */ _export_sfc(_sfc_main$V, [["ssrRender", _sfc_ssrRender$U]]);
const __vite_glob_0_39 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Validation
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$U = {
  components: {
    Depictor2D,
    Link
  },
  props: ["molecule"],
  computed: {},
  data() {
    return {
      results: []
    };
  },
  mounted() {
  },
  methods: {}
};
function _sfc_ssrRender$T(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Link = resolveComponent("Link");
  const _component_Depictor2D = resolveComponent("Depictor2D");
  _push(`<a${ssrRenderAttrs(_attrs)}><div>`);
  _push(ssrRenderComponent(_component_Link, {
    href: "/spectra?compound=" + $props.molecule.identifier
  }, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="rounded overflow-hidden"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_Depictor2D, {
          class: "p-4 border-b",
          molecule: $props.molecule.canonical_smiles
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="py-4 px-4"${_scopeId}><div class="flex items-center"${_scopeId}><div class="mb-1 flex items-center"${_scopeId}><!--[-->`);
        ssrRenderList($props.molecule.annotation_level, (index) => {
          _push2(`<svg class="inline text-yellow-400 h-4 w-4 flex-shrink-0" x-state:on="Active" x-state:off="Inactive" x-state-description="Active: &quot;text-yellow-400&quot;, Inactive: &quot;text-gray-200&quot;" x-description="Heroicon name: mini/star" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"${_scopeId}><path fill-rule="evenodd" d="M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z" clip-rule="evenodd"${_scopeId}></path></svg>`);
        });
        _push2(`<!--]--><!--[-->`);
        ssrRenderList(5 - $props.molecule.annotation_level, (index) => {
          _push2(`<svg class="inline text-gray-200 h-4 w-4 flex-shrink-0" x-state-description="undefined: &quot;text-yellow-400&quot;, undefined: &quot;text-gray-200&quot;" x-description="Heroicon name: mini/star" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"${_scopeId}><path fill-rule="evenodd" d="M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z" clip-rule="evenodd"${_scopeId}></path></svg>`);
        });
        _push2(`<!--]--></div></div><div class="font-bold text-md mb-2"${_scopeId}><a class="font-semibold text-gray-600 hover:underline"${_scopeId}>#NMRXIV:${ssrInterpolate($props.molecule.identifier)}</a></div>`);
        if ($props.molecule.iupac_name && $props.molecule.iupac_name != "") {
          _push2(`<div class="text-gray-700 text-base break-all text-sm capitalize"${_scopeId}>${ssrInterpolate($props.molecule.iupac_name)}</div>`);
        } else {
          _push2(`<div class="text-gray-700 text-base break-all text-sm"${_scopeId}>${ssrInterpolate($props.molecule.canonical_smiles)}</div>`);
        }
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "rounded overflow-hidden" }, [
            createVNode(_component_Depictor2D, {
              class: "p-4 border-b",
              molecule: $props.molecule.canonical_smiles
            }, null, 8, ["molecule"])
          ]),
          createVNode("div", { class: "py-4 px-4" }, [
            createVNode("div", { class: "flex items-center" }, [
              createVNode("div", { class: "mb-1 flex items-center" }, [
                (openBlock(true), createBlock(Fragment, null, renderList($props.molecule.annotation_level, (index) => {
                  return openBlock(), createBlock("svg", {
                    key: index,
                    class: "inline text-yellow-400 h-4 w-4 flex-shrink-0",
                    "x-state:on": "Active",
                    "x-state:off": "Inactive",
                    "x-state-description": 'Active: "text-yellow-400", Inactive: "text-gray-200"',
                    "x-description": "Heroicon name: mini/star",
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 20 20",
                    fill: "currentColor",
                    "aria-hidden": "true"
                  }, [
                    createVNode("path", {
                      "fill-rule": "evenodd",
                      d: "M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z",
                      "clip-rule": "evenodd"
                    })
                  ]);
                }), 128)),
                (openBlock(true), createBlock(Fragment, null, renderList(5 - $props.molecule.annotation_level, (index) => {
                  return openBlock(), createBlock("svg", {
                    key: index,
                    class: "inline text-gray-200 h-4 w-4 flex-shrink-0",
                    "x-state-description": 'undefined: "text-yellow-400", undefined: "text-gray-200"',
                    "x-description": "Heroicon name: mini/star",
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 20 20",
                    fill: "currentColor",
                    "aria-hidden": "true"
                  }, [
                    createVNode("path", {
                      "fill-rule": "evenodd",
                      d: "M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z",
                      "clip-rule": "evenodd"
                    })
                  ]);
                }), 128))
              ])
            ]),
            createVNode("div", { class: "font-bold text-md mb-2" }, [
              createVNode("a", { class: "font-semibold text-gray-600 hover:underline" }, "#NMRXIV:" + toDisplayString($props.molecule.identifier), 1)
            ]),
            $props.molecule.iupac_name && $props.molecule.iupac_name != "" ? (openBlock(), createBlock("div", {
              key: 0,
              class: "text-gray-700 text-base break-all text-sm capitalize"
            }, toDisplayString($props.molecule.iupac_name), 1)) : (openBlock(), createBlock("div", {
              key: 1,
              class: "text-gray-700 text-base break-all text-sm"
            }, toDisplayString($props.molecule.canonical_smiles), 1))
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div></a>`);
}
const _sfc_setup$U = _sfc_main$U.setup;
_sfc_main$U.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/App/MoleculeCard.vue");
  return _sfc_setup$U ? _sfc_setup$U(props, ctx) : void 0;
};
const MoleculeCard = /* @__PURE__ */ _export_sfc(_sfc_main$U, [["ssrRender", _sfc_ssrRender$T]]);
const _sfc_main$T = {
  components: {
    Combobox,
    ComboboxInput,
    ComboboxOptions,
    ComboboxOption,
    Dialog,
    DialogPanel,
    TransitionChild,
    TransitionRoot
  },
  props: [],
  computed: {},
  data() {
    return {
      editor: "",
      open: ref(false),
      query: ref(""),
      smiles: null,
      type: "exact"
    };
  },
  mounted() {
  },
  methods: {
    openDialog(value) {
      this.open = value;
      if (value) {
        this.$nextTick(() => {
          this.editor = OCL$1.StructureEditor.createSVGEditor(
            "structureSearchEditor",
            1
          );
        });
      }
    },
    search() {
      this.$page.props.query = this.editor.getSmiles();
      this.$page.props.queryType = this.type;
      window.location = "/compounds/?query=" + encodeURI(this.editor.getSmiles()) + "&type=" + this.type;
    }
  }
};
function _sfc_ssrRender$S(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_TransitionRoot = resolveComponent("TransitionRoot");
  const _component_Dialog = resolveComponent("Dialog");
  const _component_TransitionChild = resolveComponent("TransitionChild");
  const _component_DialogPanel = resolveComponent("DialogPanel");
  _push(`<div${ssrRenderAttrs(_attrs)}><button type="button" class="px-4 shadow py-3 rounded-full bg-white p-1 text-gray-400 hover:bg-gray-100 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-secondary-dark focus:ring-offset-2"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true" class="mr-3 ml-2 h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M9.75 3.104v5.714a2.25 2.25 0 01-.659 1.591L5 14.5M9.75 3.104c-.251.023-.501.05-.75.082m.75-.082a24.301 24.301 0 014.5 0m0 0v5.714c0 .597.237 1.17.659 1.591L19.8 15.3M14.25 3.104c.251.023.501.05.75.082M19.8 15.3l-1.57.393A9.065 9.065 0 0112 15a9.065 9.065 0 00-6.23-.693L5 14.5m14.8.8l1.402 1.402c1.232 1.232.65 3.318-1.067 3.611A48.309 48.309 0 0112 21c-2.773 0-5.491-.235-8.135-.687-1.718-.293-2.3-2.379-1.067-3.61L5 14.5"></path></svg></button>`);
  _push(ssrRenderComponent(_component_TransitionRoot, {
    show: $data.open,
    as: "template",
    onAfterLeave: ($event) => $data.query = "",
    appear: ""
  }, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_Dialog, {
          as: "div",
          class: "relative z-10",
          onClose: ($event) => $data.open = false
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_TransitionChild, {
                as: "template",
                enter: "ease-out duration-300",
                "enter-from": "opacity-0",
                "enter-to": "opacity-100",
                leave: "ease-in duration-200",
                "leave-from": "opacity-100",
                "leave-to": "opacity-0"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<div class="fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity"${_scopeId3}></div>`);
                  } else {
                    return [
                      createVNode("div", { class: "fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity" })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`<div class="fixed inset-0 z-10 overflow-y-auto p-4 sm:p-6 md:p-20"${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_TransitionChild, {
                as: "template",
                enter: "ease-out duration-300",
                "enter-from": "opacity-0 scale-95",
                "enter-to": "opacity-100 scale-100",
                leave: "ease-in duration-200",
                "leave-from": "opacity-100 scale-100",
                "leave-to": "opacity-0 scale-95"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(ssrRenderComponent(_component_DialogPanel, { class: "mx-auto max-w-3xl transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all" }, {
                      default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`<div class="border-b border-gray-200 bg-white px-4 py-5 sm:px-6"${_scopeId4}><h3 class="text-lg font-medium leading-6 text-gray-900"${_scopeId4}> Structure Search </h3></div><div class="p-4"${_scopeId4}><div id="structureSearchEditor" class="w-full border rounded-md" style="${ssrRenderStyle({ "height": "400px" })}"${_scopeId4}></div><div class="mt-6"${_scopeId4}><fieldset class="mt-6"${_scopeId4}><legend class="contents text-base font-medium text-gray-900"${_scopeId4}> Select search type </legend><div class="mt-4 space-y-4"${_scopeId4}><div class="flex items-center"${_scopeId4}><label for="search-type-exact" class="block cursor-pointer text-sm font-medium text-gray-700"${_scopeId4}><input id="search-type-exact" name="search-type"${ssrIncludeBooleanAttr(ssrLooseEqual($data.type, "exact")) ? " checked" : ""} value="exact" type="radio" class="mr-3 h-4 w-4 border-gray-300 text-secondary-dark focus:ring-secondary-dark"${_scopeId4}> Exact match</label></div><div class="flex items-center"${_scopeId4}><label for="search-type-sub" class="block cursor-pointer text-sm font-medium text-gray-700"${_scopeId4}><input id="search-type-sub" name="search-type"${ssrIncludeBooleanAttr(ssrLooseEqual($data.type, "substructure")) ? " checked" : ""} type="radio" value="substructure" class="mr-3 h-4 w-4 border-gray-300 text-secondary-dark focus:ring-secondary-dark"${_scopeId4}>Substructure Search</label></div><div class="flex items-center"${_scopeId4}><label for="search-type-similar" class="block cursor-pointer text-sm font-medium text-gray-700"${_scopeId4}><input id="search-type-similar"${ssrIncludeBooleanAttr(ssrLooseEqual($data.type, "similarity")) ? " checked" : ""} name="search-type" value="similarity" type="radio" class="mr-3 h-4 w-4 border-gray-300 text-secondary-dark focus:ring-secondary-dark"${_scopeId4}>Similarity Search (tanimoto_threshold=0.5)</label></div></div></fieldset></div></div><div class="p-4"${_scopeId4}><div class="flex justify-end"${_scopeId4}><button type="button" class="rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-secondary-dark focus:ring-offset-2"${_scopeId4}> Cancel </button><button class="ml-3 inline-flex justify-center rounded-md bg-gray-700 text-white py-2 px-4 text-sm font-medium shadow-sm hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-secondary-dark focus:ring-offset-2"${_scopeId4}> Search </button></div></div>`);
                        } else {
                          return [
                            createVNode("div", { class: "border-b border-gray-200 bg-white px-4 py-5 sm:px-6" }, [
                              createVNode("h3", { class: "text-lg font-medium leading-6 text-gray-900" }, " Structure Search ")
                            ]),
                            createVNode("div", { class: "p-4" }, [
                              createVNode("div", {
                                id: "structureSearchEditor",
                                class: "w-full border rounded-md",
                                style: { "height": "400px" }
                              }),
                              createVNode("div", { class: "mt-6" }, [
                                createVNode("fieldset", { class: "mt-6" }, [
                                  createVNode("legend", { class: "contents text-base font-medium text-gray-900" }, " Select search type "),
                                  createVNode("div", { class: "mt-4 space-y-4" }, [
                                    createVNode("div", { class: "flex items-center" }, [
                                      createVNode("label", {
                                        for: "search-type-exact",
                                        class: "block cursor-pointer text-sm font-medium text-gray-700"
                                      }, [
                                        withDirectives(createVNode("input", {
                                          id: "search-type-exact",
                                          name: "search-type",
                                          "onUpdate:modelValue": ($event) => $data.type = $event,
                                          value: "exact",
                                          type: "radio",
                                          class: "mr-3 h-4 w-4 border-gray-300 text-secondary-dark focus:ring-secondary-dark"
                                        }, null, 8, ["onUpdate:modelValue"]), [
                                          [vModelRadio, $data.type]
                                        ]),
                                        createTextVNode(" Exact match")
                                      ])
                                    ]),
                                    createVNode("div", { class: "flex items-center" }, [
                                      createVNode("label", {
                                        for: "search-type-sub",
                                        class: "block cursor-pointer text-sm font-medium text-gray-700"
                                      }, [
                                        withDirectives(createVNode("input", {
                                          id: "search-type-sub",
                                          name: "search-type",
                                          "onUpdate:modelValue": ($event) => $data.type = $event,
                                          type: "radio",
                                          value: "substructure",
                                          class: "mr-3 h-4 w-4 border-gray-300 text-secondary-dark focus:ring-secondary-dark"
                                        }, null, 8, ["onUpdate:modelValue"]), [
                                          [vModelRadio, $data.type]
                                        ]),
                                        createTextVNode("Substructure Search")
                                      ])
                                    ]),
                                    createVNode("div", { class: "flex items-center" }, [
                                      createVNode("label", {
                                        for: "search-type-similar",
                                        class: "block cursor-pointer text-sm font-medium text-gray-700"
                                      }, [
                                        withDirectives(createVNode("input", {
                                          id: "search-type-similar",
                                          "onUpdate:modelValue": ($event) => $data.type = $event,
                                          name: "search-type",
                                          value: "similarity",
                                          type: "radio",
                                          class: "mr-3 h-4 w-4 border-gray-300 text-secondary-dark focus:ring-secondary-dark"
                                        }, null, 8, ["onUpdate:modelValue"]), [
                                          [vModelRadio, $data.type]
                                        ]),
                                        createTextVNode("Similarity Search (tanimoto_threshold=0.5)")
                                      ])
                                    ])
                                  ])
                                ])
                              ])
                            ]),
                            createVNode("div", { class: "p-4" }, [
                              createVNode("div", { class: "flex justify-end" }, [
                                createVNode("button", {
                                  onClick: ($event) => $options.openDialog(false),
                                  type: "button",
                                  class: "rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-secondary-dark focus:ring-offset-2"
                                }, " Cancel ", 8, ["onClick"]),
                                createVNode("button", {
                                  class: "ml-3 inline-flex justify-center rounded-md bg-gray-700 text-white py-2 px-4 text-sm font-medium shadow-sm hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-secondary-dark focus:ring-offset-2",
                                  onClick: $options.search
                                }, " Search ", 8, ["onClick"])
                              ])
                            ])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                  } else {
                    return [
                      createVNode(_component_DialogPanel, { class: "mx-auto max-w-3xl transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all" }, {
                        default: withCtx(() => [
                          createVNode("div", { class: "border-b border-gray-200 bg-white px-4 py-5 sm:px-6" }, [
                            createVNode("h3", { class: "text-lg font-medium leading-6 text-gray-900" }, " Structure Search ")
                          ]),
                          createVNode("div", { class: "p-4" }, [
                            createVNode("div", {
                              id: "structureSearchEditor",
                              class: "w-full border rounded-md",
                              style: { "height": "400px" }
                            }),
                            createVNode("div", { class: "mt-6" }, [
                              createVNode("fieldset", { class: "mt-6" }, [
                                createVNode("legend", { class: "contents text-base font-medium text-gray-900" }, " Select search type "),
                                createVNode("div", { class: "mt-4 space-y-4" }, [
                                  createVNode("div", { class: "flex items-center" }, [
                                    createVNode("label", {
                                      for: "search-type-exact",
                                      class: "block cursor-pointer text-sm font-medium text-gray-700"
                                    }, [
                                      withDirectives(createVNode("input", {
                                        id: "search-type-exact",
                                        name: "search-type",
                                        "onUpdate:modelValue": ($event) => $data.type = $event,
                                        value: "exact",
                                        type: "radio",
                                        class: "mr-3 h-4 w-4 border-gray-300 text-secondary-dark focus:ring-secondary-dark"
                                      }, null, 8, ["onUpdate:modelValue"]), [
                                        [vModelRadio, $data.type]
                                      ]),
                                      createTextVNode(" Exact match")
                                    ])
                                  ]),
                                  createVNode("div", { class: "flex items-center" }, [
                                    createVNode("label", {
                                      for: "search-type-sub",
                                      class: "block cursor-pointer text-sm font-medium text-gray-700"
                                    }, [
                                      withDirectives(createVNode("input", {
                                        id: "search-type-sub",
                                        name: "search-type",
                                        "onUpdate:modelValue": ($event) => $data.type = $event,
                                        type: "radio",
                                        value: "substructure",
                                        class: "mr-3 h-4 w-4 border-gray-300 text-secondary-dark focus:ring-secondary-dark"
                                      }, null, 8, ["onUpdate:modelValue"]), [
                                        [vModelRadio, $data.type]
                                      ]),
                                      createTextVNode("Substructure Search")
                                    ])
                                  ]),
                                  createVNode("div", { class: "flex items-center" }, [
                                    createVNode("label", {
                                      for: "search-type-similar",
                                      class: "block cursor-pointer text-sm font-medium text-gray-700"
                                    }, [
                                      withDirectives(createVNode("input", {
                                        id: "search-type-similar",
                                        "onUpdate:modelValue": ($event) => $data.type = $event,
                                        name: "search-type",
                                        value: "similarity",
                                        type: "radio",
                                        class: "mr-3 h-4 w-4 border-gray-300 text-secondary-dark focus:ring-secondary-dark"
                                      }, null, 8, ["onUpdate:modelValue"]), [
                                        [vModelRadio, $data.type]
                                      ]),
                                      createTextVNode("Similarity Search (tanimoto_threshold=0.5)")
                                    ])
                                  ])
                                ])
                              ])
                            ])
                          ]),
                          createVNode("div", { class: "p-4" }, [
                            createVNode("div", { class: "flex justify-end" }, [
                              createVNode("button", {
                                onClick: ($event) => $options.openDialog(false),
                                type: "button",
                                class: "rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-secondary-dark focus:ring-offset-2"
                              }, " Cancel ", 8, ["onClick"]),
                              createVNode("button", {
                                class: "ml-3 inline-flex justify-center rounded-md bg-gray-700 text-white py-2 px-4 text-sm font-medium shadow-sm hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-secondary-dark focus:ring-offset-2",
                                onClick: $options.search
                              }, " Search ", 8, ["onClick"])
                            ])
                          ])
                        ]),
                        _: 1
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</div>`);
            } else {
              return [
                createVNode(_component_TransitionChild, {
                  as: "template",
                  enter: "ease-out duration-300",
                  "enter-from": "opacity-0",
                  "enter-to": "opacity-100",
                  leave: "ease-in duration-200",
                  "leave-from": "opacity-100",
                  "leave-to": "opacity-0"
                }, {
                  default: withCtx(() => [
                    createVNode("div", { class: "fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity" })
                  ]),
                  _: 1
                }),
                createVNode("div", { class: "fixed inset-0 z-10 overflow-y-auto p-4 sm:p-6 md:p-20" }, [
                  createVNode(_component_TransitionChild, {
                    as: "template",
                    enter: "ease-out duration-300",
                    "enter-from": "opacity-0 scale-95",
                    "enter-to": "opacity-100 scale-100",
                    leave: "ease-in duration-200",
                    "leave-from": "opacity-100 scale-100",
                    "leave-to": "opacity-0 scale-95"
                  }, {
                    default: withCtx(() => [
                      createVNode(_component_DialogPanel, { class: "mx-auto max-w-3xl transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all" }, {
                        default: withCtx(() => [
                          createVNode("div", { class: "border-b border-gray-200 bg-white px-4 py-5 sm:px-6" }, [
                            createVNode("h3", { class: "text-lg font-medium leading-6 text-gray-900" }, " Structure Search ")
                          ]),
                          createVNode("div", { class: "p-4" }, [
                            createVNode("div", {
                              id: "structureSearchEditor",
                              class: "w-full border rounded-md",
                              style: { "height": "400px" }
                            }),
                            createVNode("div", { class: "mt-6" }, [
                              createVNode("fieldset", { class: "mt-6" }, [
                                createVNode("legend", { class: "contents text-base font-medium text-gray-900" }, " Select search type "),
                                createVNode("div", { class: "mt-4 space-y-4" }, [
                                  createVNode("div", { class: "flex items-center" }, [
                                    createVNode("label", {
                                      for: "search-type-exact",
                                      class: "block cursor-pointer text-sm font-medium text-gray-700"
                                    }, [
                                      withDirectives(createVNode("input", {
                                        id: "search-type-exact",
                                        name: "search-type",
                                        "onUpdate:modelValue": ($event) => $data.type = $event,
                                        value: "exact",
                                        type: "radio",
                                        class: "mr-3 h-4 w-4 border-gray-300 text-secondary-dark focus:ring-secondary-dark"
                                      }, null, 8, ["onUpdate:modelValue"]), [
                                        [vModelRadio, $data.type]
                                      ]),
                                      createTextVNode(" Exact match")
                                    ])
                                  ]),
                                  createVNode("div", { class: "flex items-center" }, [
                                    createVNode("label", {
                                      for: "search-type-sub",
                                      class: "block cursor-pointer text-sm font-medium text-gray-700"
                                    }, [
                                      withDirectives(createVNode("input", {
                                        id: "search-type-sub",
                                        name: "search-type",
                                        "onUpdate:modelValue": ($event) => $data.type = $event,
                                        type: "radio",
                                        value: "substructure",
                                        class: "mr-3 h-4 w-4 border-gray-300 text-secondary-dark focus:ring-secondary-dark"
                                      }, null, 8, ["onUpdate:modelValue"]), [
                                        [vModelRadio, $data.type]
                                      ]),
                                      createTextVNode("Substructure Search")
                                    ])
                                  ]),
                                  createVNode("div", { class: "flex items-center" }, [
                                    createVNode("label", {
                                      for: "search-type-similar",
                                      class: "block cursor-pointer text-sm font-medium text-gray-700"
                                    }, [
                                      withDirectives(createVNode("input", {
                                        id: "search-type-similar",
                                        "onUpdate:modelValue": ($event) => $data.type = $event,
                                        name: "search-type",
                                        value: "similarity",
                                        type: "radio",
                                        class: "mr-3 h-4 w-4 border-gray-300 text-secondary-dark focus:ring-secondary-dark"
                                      }, null, 8, ["onUpdate:modelValue"]), [
                                        [vModelRadio, $data.type]
                                      ]),
                                      createTextVNode("Similarity Search (tanimoto_threshold=0.5)")
                                    ])
                                  ])
                                ])
                              ])
                            ])
                          ]),
                          createVNode("div", { class: "p-4" }, [
                            createVNode("div", { class: "flex justify-end" }, [
                              createVNode("button", {
                                onClick: ($event) => $options.openDialog(false),
                                type: "button",
                                class: "rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-secondary-dark focus:ring-offset-2"
                              }, " Cancel ", 8, ["onClick"]),
                              createVNode("button", {
                                class: "ml-3 inline-flex justify-center rounded-md bg-gray-700 text-white py-2 px-4 text-sm font-medium shadow-sm hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-secondary-dark focus:ring-offset-2",
                                onClick: $options.search
                              }, " Search ", 8, ["onClick"])
                            ])
                          ])
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  })
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_Dialog, {
            as: "div",
            class: "relative z-10",
            onClose: ($event) => $data.open = false
          }, {
            default: withCtx(() => [
              createVNode(_component_TransitionChild, {
                as: "template",
                enter: "ease-out duration-300",
                "enter-from": "opacity-0",
                "enter-to": "opacity-100",
                leave: "ease-in duration-200",
                "leave-from": "opacity-100",
                "leave-to": "opacity-0"
              }, {
                default: withCtx(() => [
                  createVNode("div", { class: "fixed inset-0 bg-gray-500 bg-opacity-25 transition-opacity" })
                ]),
                _: 1
              }),
              createVNode("div", { class: "fixed inset-0 z-10 overflow-y-auto p-4 sm:p-6 md:p-20" }, [
                createVNode(_component_TransitionChild, {
                  as: "template",
                  enter: "ease-out duration-300",
                  "enter-from": "opacity-0 scale-95",
                  "enter-to": "opacity-100 scale-100",
                  leave: "ease-in duration-200",
                  "leave-from": "opacity-100 scale-100",
                  "leave-to": "opacity-0 scale-95"
                }, {
                  default: withCtx(() => [
                    createVNode(_component_DialogPanel, { class: "mx-auto max-w-3xl transform divide-y divide-gray-100 overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all" }, {
                      default: withCtx(() => [
                        createVNode("div", { class: "border-b border-gray-200 bg-white px-4 py-5 sm:px-6" }, [
                          createVNode("h3", { class: "text-lg font-medium leading-6 text-gray-900" }, " Structure Search ")
                        ]),
                        createVNode("div", { class: "p-4" }, [
                          createVNode("div", {
                            id: "structureSearchEditor",
                            class: "w-full border rounded-md",
                            style: { "height": "400px" }
                          }),
                          createVNode("div", { class: "mt-6" }, [
                            createVNode("fieldset", { class: "mt-6" }, [
                              createVNode("legend", { class: "contents text-base font-medium text-gray-900" }, " Select search type "),
                              createVNode("div", { class: "mt-4 space-y-4" }, [
                                createVNode("div", { class: "flex items-center" }, [
                                  createVNode("label", {
                                    for: "search-type-exact",
                                    class: "block cursor-pointer text-sm font-medium text-gray-700"
                                  }, [
                                    withDirectives(createVNode("input", {
                                      id: "search-type-exact",
                                      name: "search-type",
                                      "onUpdate:modelValue": ($event) => $data.type = $event,
                                      value: "exact",
                                      type: "radio",
                                      class: "mr-3 h-4 w-4 border-gray-300 text-secondary-dark focus:ring-secondary-dark"
                                    }, null, 8, ["onUpdate:modelValue"]), [
                                      [vModelRadio, $data.type]
                                    ]),
                                    createTextVNode(" Exact match")
                                  ])
                                ]),
                                createVNode("div", { class: "flex items-center" }, [
                                  createVNode("label", {
                                    for: "search-type-sub",
                                    class: "block cursor-pointer text-sm font-medium text-gray-700"
                                  }, [
                                    withDirectives(createVNode("input", {
                                      id: "search-type-sub",
                                      name: "search-type",
                                      "onUpdate:modelValue": ($event) => $data.type = $event,
                                      type: "radio",
                                      value: "substructure",
                                      class: "mr-3 h-4 w-4 border-gray-300 text-secondary-dark focus:ring-secondary-dark"
                                    }, null, 8, ["onUpdate:modelValue"]), [
                                      [vModelRadio, $data.type]
                                    ]),
                                    createTextVNode("Substructure Search")
                                  ])
                                ]),
                                createVNode("div", { class: "flex items-center" }, [
                                  createVNode("label", {
                                    for: "search-type-similar",
                                    class: "block cursor-pointer text-sm font-medium text-gray-700"
                                  }, [
                                    withDirectives(createVNode("input", {
                                      id: "search-type-similar",
                                      "onUpdate:modelValue": ($event) => $data.type = $event,
                                      name: "search-type",
                                      value: "similarity",
                                      type: "radio",
                                      class: "mr-3 h-4 w-4 border-gray-300 text-secondary-dark focus:ring-secondary-dark"
                                    }, null, 8, ["onUpdate:modelValue"]), [
                                      [vModelRadio, $data.type]
                                    ]),
                                    createTextVNode("Similarity Search (tanimoto_threshold=0.5)")
                                  ])
                                ])
                              ])
                            ])
                          ])
                        ]),
                        createVNode("div", { class: "p-4" }, [
                          createVNode("div", { class: "flex justify-end" }, [
                            createVNode("button", {
                              onClick: ($event) => $options.openDialog(false),
                              type: "button",
                              class: "rounded-md border border-gray-300 bg-white py-2 px-4 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-secondary-dark focus:ring-offset-2"
                            }, " Cancel ", 8, ["onClick"]),
                            createVNode("button", {
                              class: "ml-3 inline-flex justify-center rounded-md bg-gray-700 text-white py-2 px-4 text-sm font-medium shadow-sm hover:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-secondary-dark focus:ring-offset-2",
                              onClick: $options.search
                            }, " Search ", 8, ["onClick"])
                          ])
                        ])
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                })
              ])
            ]),
            _: 1
          }, 8, ["onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$T = _sfc_main$T.setup;
_sfc_main$T.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/App/StructureSearch.vue");
  return _sfc_setup$T ? _sfc_setup$T(props, ctx) : void 0;
};
const StructureSearch = /* @__PURE__ */ _export_sfc(_sfc_main$T, [["ssrRender", _sfc_ssrRender$S]]);
const _sfc_main$S = {
  components: {
    AppLayout,
    MoleculeCard,
    StructureSearch,
    JetDropdownLink,
    Menu,
    MenuItems,
    MenuButton
  },
  props: ["page", "query", "limit", "tagType"],
  data() {
    return {
      results: null,
      loading: false,
      searchTerm: "",
      recentQueries: [],
      type: null,
      error: null
    };
  },
  mounted() {
    this.searchTerm = "";
    if (this.query) {
      this.searchTerm = this.query;
      this.fetchCompounds();
    } else {
      this.searchTerm = "";
      this.fetchCompounds();
    }
    if (typeof window !== "undefined") {
      let recentQueries = localStorage.getItem("recentQueries");
      if (recentQueries) {
        this.recentQueries = JSON.parse(recentQueries);
      }
    }
    if (window.location.hash) {
      if (window.location.hash == "#structure") {
        this.$refs["structure-search"].openDialog(true);
      } else if (window.location.hash == "#advanced") {
        this.$refs["advanced-search"].openDialog(true);
      }
    }
  },
  methods: {
    fetchCompounds(queryT) {
      this.error = null;
      this.results = null;
      this.loading = true;
      let queryTerm = null;
      if (queryT) {
        queryTerm = queryT;
      } else {
        queryTerm = this.searchTerm ? this.searchTerm : "";
      }
      if (queryTerm && queryTerm != "") {
        let queryType = this.getParameterByName("type");
        this.type = queryType && queryType != "" ? this.getParameterByName("type") : this.tagQuery(queryTerm);
      }
      let sort = this.getParameterByName("sort");
      if (typeof window !== "undefined") {
        let recentQueries = localStorage.getItem("recentQueries");
        recentQueries = recentQueries ? JSON.parse(recentQueries) : [];
        recentQueries.push(queryTerm);
        recentQueries = [...new Set(recentQueries)].filter((n2) => n2);
        localStorage.setItem(
          "recentQueries",
          JSON.stringify(recentQueries)
        );
      }
      let url = new URL(window.location);
      url.searchParams.set("query", queryTerm);
      url.searchParams.set("page", 1);
      url = this.sanitiseURL(url);
      window.history.pushState(
        null,
        "",
        queryTerm == "" ? window.location.href.split("?")[0] : url.toString()
      );
      let page = this.page ? this.page : 1;
      let urlEndpoint = "/api/v1/search/?limit=" + this.limit + "&page=" + page;
      if (sort) {
        urlEndpoint = urlEndpoint + "&sort=" + sort;
      }
      if (queryTerm == "") {
        this.type = "";
      }
      axios.post(urlEndpoint, {
        query: queryTerm,
        type: this.type,
        tagType: this.tagType ? this.tagType : null
      }).then((response) => {
        this.results = response.data;
        this.loading = false;
      }).catch((err) => {
        this.loading = false;
        this.results = {};
        this.results["data"] = [];
        this.error = err.response;
      });
    },
    sanitiseURL(url) {
      for (const [key, value] of url.searchParams.entries()) {
        if (value == "null" || value == null || value == "" || value == "undefined") {
          url.searchParams.delete(key);
        }
      }
      return url;
    },
    search(query) {
      if (query) {
        this.searchTerm = query;
        this.type = "text";
      }
      this.fetchCompounds(query);
    },
    removeSearchQuery(query) {
      if (typeof window !== "undefined") {
        let recentQueries = localStorage.getItem("recentQueries");
        recentQueries = recentQueries ? JSON.parse(recentQueries) : [];
        recentQueries = recentQueries.filter(function(item) {
          return item !== query;
        });
        recentQueries = [...new Set(recentQueries)].filter((n2) => n2);
        this.recentQueries = recentQueries;
        localStorage.setItem(
          "recentQueries",
          JSON.stringify(recentQueries)
        );
      }
    },
    navigateTo(link) {
      let queryType = this.getParameterByName("type");
      let searchTerm = this.searchTerm;
      let tagType = this.tagType;
      let location = "/compounds" + link.url;
      let query = queryType ? "&type=" + queryType : "";
      query += searchTerm ? "&query=" + searchTerm : "";
      tagType = tagType ? "&tagType=" + tagType : "";
      window.location = location + query + tagType;
    },
    getParameterByName(name, url = window.location.href) {
      name = name.replace(/[\[\]]/g, "\\$&");
      var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"), results = regex.exec(url);
      if (!results)
        return null;
      if (!results[2])
        return "";
      return decodeURIComponent(results[2].replace(/\+/g, " "));
    },
    downloadSmilesData(downloadType) {
      console.log("Download Data");
      console.log(this.$page.props.queryType);
      axios.post("/downloadSmiles", {
        query: this.$page.props.query,
        type: this.$page.props.queryType,
        downloadType
      }).then((response) => {
        const { url, filename, mimeType } = response.data;
        const link = document.createElement("a");
        link.href = url;
        link.download = filename;
        link.type = mimeType;
        link.click();
      }).catch((error) => {
        console.error(error);
      });
    }
  }
};
function _sfc_ssrRender$R(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_StructureSearch = resolveComponent("StructureSearch");
  const _component_MoleculeCard = resolveComponent("MoleculeCard");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({ title: "Compounds" }, _attrs), {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}><div class="mx-auto"${_scopeId}><div class="space-y-6 sm:px-6 lg:col-span-9 lg:px-0"${_scopeId}><section class="mb-20 bg-white shadow sm:overflow-hidden"${_scopeId}><div${_scopeId}><div class="relative border-b border-zinc-900/5"${_scopeId}><div class="relative pt-10 dark:border-white/5 mx-8 max-w-7xl py-12 sm:py-12"${_scopeId}><div class="absolute inset-0 bg-gradient-to-r from-[#36b49f] to-[#DBFF75] opacity-40 [mask-image:radial-gradient(farthest-side_at_top,white,transparent)] dark:from-[#36b49f]/30 dark:to-[#DBFF75]/30 dark:opacity-100"${_scopeId}><svg aria-hidden="true" class="absolute inset-x-0 inset-y-[-50%] h-[200%] w-full skew-y-[-18deg] fill-black/40 stroke-black/50 mix-blend-overlay dark:fill-white/2.5 dark:stroke-white/5"${_scopeId}><defs${_scopeId}><pattern id=":r99:" width="72" height="56" patternUnits="userSpaceOnUse" x="-12" y="4"${_scopeId}><path d="M.5 56V.5H72" fill="none"${_scopeId}></path></pattern></defs><rect width="100%" height="100%" stroke-width="0" fill="url(#:r99:)"${_scopeId}></rect><svg x="-12" y="4" class="overflow-visible"${_scopeId}><rect stroke-width="0" width="73" height="57" x="288" y="168"${_scopeId}></rect><rect stroke-width="0" width="73" height="57" x="144" y="56"${_scopeId}></rect><rect stroke-width="0" width="73" height="57" x="504" y="168"${_scopeId}></rect><rect stroke-width="0" width="73" height="57" x="720" y="336"${_scopeId}></rect></svg></svg></div><div class="text-4xl mb-3 font-bold tracking-tight text-gray-900"${_scopeId}> Browse Compounds </div><p${_scopeId}> Search spectra by compound names, structure, sub-structures and smiliarity. </p></div></div><div${_scopeId}><div class="bg-white"${_scopeId}><section aria-labelledby="filter-heading"${_scopeId}><div class="bg-gray-100 border-t border-b"${_scopeId}><div class="mx-auto py-3 px-4 sm:px-6 lg:px-8"${_scopeId}><div class="flex items-center"${_scopeId}><div class="flex w-full bg-white shadow rounded-full"${_scopeId}><form class="flex w-full md:ml-0" action="#" method="GET"${_scopeId}><label for="mobile-search-field" class="sr-only"${_scopeId}>Search</label><label for="desktop-search-field" class="sr-only"${_scopeId}>Search</label><div class="relative w-full text-gray-400 focus-within:text-gray-600"${_scopeId}><div class="pointer-events-none absolute inset-y-0 left-0 flex items-center"${_scopeId}><svg class="h-5 w-5 flex-shrink-0" x-description="Heroicon name: mini/magnifying-glass" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"${_scopeId}><path fill-rule="evenodd" d="M9 3.5a5.5 5.5 0 100 11 5.5 5.5 0 000-11zM2 9a7 7 0 1112.452 4.391l3.328 3.329a.75.75 0 11-1.06 1.06l-3.329-3.328A7 7 0 012 9z" clip-rule="evenodd"${_scopeId}></path></svg></div><input name="mobile-search-field" id="mobile-search-field" class="h-full w-full border-transparent py-2 pl-8 pr-3 text-base text-gray-900 placeholder-gray-500 focus:border-transparent focus:placeholder-gray-400 focus:outline-none focus:ring-0 sm:hidden" placeholder="Search" type="search" autofocus${_scopeId}><input name="desktop-search-field" id="desktop-search-field" class="relative w-full border-0 px-6 py-3 rounded-full focus:shadow-outline hidden h-full w-full border-transparent text-gray-900 placeholder-gray-500 focus:border-transparent focus:placeholder-gray-400 focus:outline-none focus:ring-0 sm:block" placeholder="Search by Compound name, SMILES, InChI, InChI Key" type="search"${ssrRenderAttr(
          "value",
          $data.searchTerm
        )} autofocus${_scopeId}></div></form></div><div class="flex items-center md:ml-6"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_StructureSearch, { ref: "structure-search" }, null, _parent2, _scopeId));
        _push2(`</div></div></div></div></section></div></div></div>`);
        if ($data.recentQueries && $data.recentQueries.length > 0) {
          _push2(`<div${_scopeId}><div class="bg-gray-100"${_scopeId}><div class="mx-auto border-y max-w-7xl py-3 px-4 sm:flex sm:items-center sm:px-6 lg:px-16"${_scopeId}><h3 class="text-sm font-medium text-gray-500"${_scopeId}> Filters </h3><div aria-hidden="true" class="hidden h-5 w-px bg-gray-300 sm:ml-4 sm:block"${_scopeId}></div><div class="mt-2 sm:mt-0 sm:ml-4"${_scopeId}><div class="-m-1 flex flex-wrap items-center"${_scopeId}>`);
          if ($data.type) {
            _push2(`<span class="m-1 inline-flex items-center rounded-full border border-gray-200 bg-white py-1.5 pl-3 pr-2 text-sm font-medium text-gray-900"${_scopeId}><a class="mr-1"${_scopeId}>${ssrInterpolate($data.type)}</a></span>`);
          } else {
            _push2(`<!---->`);
          }
          if ($props.limit) {
            _push2(`<span class="m-1 inline-flex items-center rounded-full border border-gray-200 bg-white py-1.5 pl-3 pr-2 text-sm font-medium text-gray-900"${_scopeId}><a class="cursor-pointer"${_scopeId}>LIMIT: ${ssrInterpolate($props.limit)}</a></span>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div></div></div></div></div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($data.results) {
          _push2(`<div${_scopeId}><div class="py-6 px-4 lg:px-12 sm:p-6 border-b border-gray-200"${_scopeId}>`);
          if ($data.results.data.length > 0) {
            _push2(`<div class="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between"${_scopeId}><div${_scopeId}><p class="text-sm text-gray-700"${_scopeId}> Showing <span class="font-medium"${_scopeId}>${ssrInterpolate($data.results.from)}</span> to <span class="font-medium"${_scopeId}>${ssrInterpolate($data.results.to)}</span> of <span class="font-medium"${_scopeId}>${ssrInterpolate($data.results.total)}</span> results </p></div><div${_scopeId}><nav class="isolate inline-flex -space-x-px shadow-sm" aria-label="Pagination"${_scopeId}><!--[-->`);
            ssrRenderList($data.results.links, (link) => {
              _push2(`<a class="${ssrRenderClass([
                link.active ? "bg-gray-200" : "",
                "first:rounded-l-lg last:rounded-r-lg relative cursor-pointer inline-flex items-center border border-gray-300 bg-white px-2 py-2 text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-20"
              ])}"${_scopeId}>${link.label}</a>`);
            });
            _push2(`<!--]--></nav></div></div>`);
          } else {
            _push2(`<!---->`);
          }
          if ($data.results.data.length > 0) {
            _push2(`<div class="mx-auto grid mt-6 gap-5 lg:max-w-none md:grid-cols-3 lg:grid-cols-4 2xl:grid-cols-6"${_scopeId}><!--[-->`);
            ssrRenderList($data.results.data, (result) => {
              _push2(`<span class="rounded-lg hover:shadow-lg shadow border"${_scopeId}>`);
              _push2(ssrRenderComponent(_component_MoleculeCard, { molecule: result }, null, _parent2, _scopeId));
              _push2(`</span>`);
            });
            _push2(`<!--]--></div>`);
          } else {
            _push2(`<div${_scopeId}>`);
            if ($data.error) {
              _push2(`<div${_scopeId}><div class="bg-white"${_scopeId}><div class="mx-auto w-full max-w-7xl px-6 pb-16 sm:pb-24 lg:px-8"${_scopeId}><div class="mx-auto mt-20 max-w-2xl text-center sm:mt-24"${_scopeId}><p class="text-base font-semibold leading-8 text-indigo-600"${_scopeId}>${ssrInterpolate($data.error.status)}</p><h1 class="mt-4 text-3xl font-bold tracking-tight text-gray-900 sm:text-5xl"${_scopeId}>${ssrInterpolate($data.error.statusText)}</h1><p class="mt-4 text-base leading-7 text-gray-600 sm:mt-6 sm:text-lg sm:leading-8"${_scopeId}>${ssrInterpolate($data.error.data.message)}</p></div><div class="mx-auto mt-16 flow-root max-w-lg sm:mt-20"${_scopeId}><div class="mt-10 flex justify-center"${_scopeId}><a href="/" class="text-sm font-semibold leading-6 text-indigo-600"${_scopeId}><span aria-hidden="true"${_scopeId}>←</span> Back to home </a></div></div></div></div></div>`);
            } else {
              _push2(`<div class="bg-white px-4 py-12"${_scopeId}><div class="text-center"${_scopeId}><svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true"${_scopeId}><path vector-effect="non-scaling-stroke" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"${_scopeId}></path></svg><h3 class="mt-2 text-sm font-semibold text-gray-900"${_scopeId}> No records were found </h3><p class="mt-1 text-sm text-gray-500"${_scopeId}> Try to refine your search query. If the problem persist please contact us. </p></div></div>`);
            }
            _push2(`</div>`);
          }
          _push2(`</div>`);
          if ($data.results.data.length > 0) {
            _push2(`<div class="flex items-center justify-between bg-white px-12 py-3 rounded-md"${_scopeId}><div class="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between"${_scopeId}><div${_scopeId}><p class="text-sm text-gray-700"${_scopeId}> Showing <span class="font-medium"${_scopeId}>${ssrInterpolate($data.results.from)}</span> to <span class="font-medium"${_scopeId}>${ssrInterpolate($data.results.to)}</span> of <span class="font-medium"${_scopeId}>${ssrInterpolate($data.results.total)}</span> results </p></div><div${_scopeId}><nav class="isolate inline-flex -space-x-px shadow-sm" aria-label="Pagination"${_scopeId}><!--[-->`);
            ssrRenderList($data.results.links, (link) => {
              _push2(`<a class="${ssrRenderClass([
                link.active ? "bg-gray-200" : "",
                "first:rounded-l-lg last:rounded-r-lg relative cursor-pointer inline-flex items-center border border-gray-300 bg-white px-2 py-2 text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-20"
              ])}"${_scopeId}>${link.label}</a>`);
            });
            _push2(`<!--]--></nav></div></div></div>`);
          } else {
            _push2(`<!---->`);
          }
          if ($data.recentQueries.length > 0) {
            _push2(`<div class="bg-gray-100 border-t"${_scopeId}><div class="mx-auto max-w-7xl py-3 px-4 sm:flex sm:items-center sm:px-6 lg:px-16"${_scopeId}><h3 class="text-sm font-medium text-gray-500"${_scopeId}> Recent Searches </h3><div aria-hidden="true" class="hidden h-5 w-px bg-gray-300 sm:ml-4 sm:block"${_scopeId}></div><div class="mt-2 sm:mt-0 sm:ml-4"${_scopeId}><div class="-m-1 flex flex-wrap items-center"${_scopeId}><!--[-->`);
            ssrRenderList($data.recentQueries, (query) => {
              _push2(`<span class="m-1 inline-flex items-center rounded-full border border-gray-200 bg-white py-1.5 pl-3 pr-2 text-sm font-medium text-gray-900"${_scopeId}><a class="cursor-pointer"${_scopeId}>${ssrInterpolate(query)}</a><button type="button" class="ml-1 inline-flex h-4 w-4 flex-shrink-0 rounded-full p-1 text-gray-400 hover:bg-gray-200 hover:text-gray-500"${_scopeId}><span class="sr-only"${_scopeId}>Remove filter for Objects</span><svg class="h-2 w-2" stroke="currentColor" fill="none" viewBox="0 0 8 8"${_scopeId}><path stroke-linecap="round" stroke-width="1.5" d="M1 1l6 6m0-6L1 7"${_scopeId}></path></svg></button></span>`);
            });
            _push2(`<!--]--></div></div></div></div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($data.loading) {
          _push2(`<div${_scopeId}><div class="text-center py-20"${_scopeId}><svg class="animate-spin -ml-1 mr-3 h-5 w-5 inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"${_scopeId}><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"${_scopeId}></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"${_scopeId}></path></svg> Loading... </div></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</section></div></div></div>`);
      } else {
        return [
          createVNode("div", null, [
            createVNode("div", { class: "mx-auto" }, [
              createVNode("div", { class: "space-y-6 sm:px-6 lg:col-span-9 lg:px-0" }, [
                createVNode("section", { class: "mb-20 bg-white shadow sm:overflow-hidden" }, [
                  createVNode("div", null, [
                    createVNode("div", { class: "relative border-b border-zinc-900/5" }, [
                      createVNode("div", { class: "relative pt-10 dark:border-white/5 mx-8 max-w-7xl py-12 sm:py-12" }, [
                        createVNode("div", { class: "absolute inset-0 bg-gradient-to-r from-[#36b49f] to-[#DBFF75] opacity-40 [mask-image:radial-gradient(farthest-side_at_top,white,transparent)] dark:from-[#36b49f]/30 dark:to-[#DBFF75]/30 dark:opacity-100" }, [
                          (openBlock(), createBlock("svg", {
                            "aria-hidden": "true",
                            class: "absolute inset-x-0 inset-y-[-50%] h-[200%] w-full skew-y-[-18deg] fill-black/40 stroke-black/50 mix-blend-overlay dark:fill-white/2.5 dark:stroke-white/5"
                          }, [
                            createVNode("defs", null, [
                              createVNode("pattern", {
                                id: ":r99:",
                                width: "72",
                                height: "56",
                                patternUnits: "userSpaceOnUse",
                                x: "-12",
                                y: "4"
                              }, [
                                createVNode("path", {
                                  d: "M.5 56V.5H72",
                                  fill: "none"
                                })
                              ])
                            ]),
                            createVNode("rect", {
                              width: "100%",
                              height: "100%",
                              "stroke-width": "0",
                              fill: "url(#:r99:)"
                            }),
                            (openBlock(), createBlock("svg", {
                              x: "-12",
                              y: "4",
                              class: "overflow-visible"
                            }, [
                              createVNode("rect", {
                                "stroke-width": "0",
                                width: "73",
                                height: "57",
                                x: "288",
                                y: "168"
                              }),
                              createVNode("rect", {
                                "stroke-width": "0",
                                width: "73",
                                height: "57",
                                x: "144",
                                y: "56"
                              }),
                              createVNode("rect", {
                                "stroke-width": "0",
                                width: "73",
                                height: "57",
                                x: "504",
                                y: "168"
                              }),
                              createVNode("rect", {
                                "stroke-width": "0",
                                width: "73",
                                height: "57",
                                x: "720",
                                y: "336"
                              })
                            ]))
                          ]))
                        ]),
                        createVNode("div", { class: "text-4xl mb-3 font-bold tracking-tight text-gray-900" }, " Browse Compounds "),
                        createVNode("p", null, " Search spectra by compound names, structure, sub-structures and smiliarity. ")
                      ])
                    ]),
                    createVNode("div", null, [
                      createVNode("div", { class: "bg-white" }, [
                        createVNode("section", { "aria-labelledby": "filter-heading" }, [
                          createVNode("div", { class: "bg-gray-100 border-t border-b" }, [
                            createVNode("div", { class: "mx-auto py-3 px-4 sm:px-6 lg:px-8" }, [
                              createVNode("div", { class: "flex items-center" }, [
                                createVNode("div", { class: "flex w-full bg-white shadow rounded-full" }, [
                                  createVNode("form", {
                                    class: "flex w-full md:ml-0",
                                    action: "#",
                                    method: "GET"
                                  }, [
                                    createVNode("label", {
                                      for: "mobile-search-field",
                                      class: "sr-only"
                                    }, "Search"),
                                    createVNode("label", {
                                      for: "desktop-search-field",
                                      class: "sr-only"
                                    }, "Search"),
                                    createVNode("div", { class: "relative w-full text-gray-400 focus-within:text-gray-600" }, [
                                      createVNode("div", { class: "pointer-events-none absolute inset-y-0 left-0 flex items-center" }, [
                                        (openBlock(), createBlock("svg", {
                                          class: "h-5 w-5 flex-shrink-0",
                                          "x-description": "Heroicon name: mini/magnifying-glass",
                                          xmlns: "http://www.w3.org/2000/svg",
                                          viewBox: "0 0 20 20",
                                          fill: "currentColor",
                                          "aria-hidden": "true"
                                        }, [
                                          createVNode("path", {
                                            "fill-rule": "evenodd",
                                            d: "M9 3.5a5.5 5.5 0 100 11 5.5 5.5 0 000-11zM2 9a7 7 0 1112.452 4.391l3.328 3.329a.75.75 0 11-1.06 1.06l-3.329-3.328A7 7 0 012 9z",
                                            "clip-rule": "evenodd"
                                          })
                                        ]))
                                      ]),
                                      createVNode("input", {
                                        name: "mobile-search-field",
                                        id: "mobile-search-field",
                                        class: "h-full w-full border-transparent py-2 pl-8 pr-3 text-base text-gray-900 placeholder-gray-500 focus:border-transparent focus:placeholder-gray-400 focus:outline-none focus:ring-0 sm:hidden",
                                        placeholder: "Search",
                                        type: "search",
                                        autofocus: ""
                                      }),
                                      withDirectives(createVNode("input", {
                                        name: "desktop-search-field",
                                        id: "desktop-search-field",
                                        class: "relative w-full border-0 px-6 py-3 rounded-full focus:shadow-outline hidden h-full w-full border-transparent text-gray-900 placeholder-gray-500 focus:border-transparent focus:placeholder-gray-400 focus:outline-none focus:ring-0 sm:block",
                                        placeholder: "Search by Compound name, SMILES, InChI, InChI Key",
                                        type: "search",
                                        "onUpdate:modelValue": ($event) => $data.searchTerm = $event,
                                        autofocus: "",
                                        onChange: ($event) => $options.search(),
                                        onSearch: ($event) => $options.search(
                                          ""
                                        )
                                      }, null, 40, ["onUpdate:modelValue", "onChange", "onSearch"]), [
                                        [
                                          vModelText,
                                          $data.searchTerm
                                        ]
                                      ])
                                    ])
                                  ])
                                ]),
                                createVNode("div", { class: "flex items-center md:ml-6" }, [
                                  createVNode(_component_StructureSearch, { ref: "structure-search" }, null, 512)
                                ])
                              ])
                            ])
                          ])
                        ])
                      ])
                    ])
                  ]),
                  $data.recentQueries && $data.recentQueries.length > 0 ? (openBlock(), createBlock("div", { key: 0 }, [
                    createVNode("div", { class: "bg-gray-100" }, [
                      createVNode("div", { class: "mx-auto border-y max-w-7xl py-3 px-4 sm:flex sm:items-center sm:px-6 lg:px-16" }, [
                        createVNode("h3", { class: "text-sm font-medium text-gray-500" }, " Filters "),
                        createVNode("div", {
                          "aria-hidden": "true",
                          class: "hidden h-5 w-px bg-gray-300 sm:ml-4 sm:block"
                        }),
                        createVNode("div", { class: "mt-2 sm:mt-0 sm:ml-4" }, [
                          createVNode("div", { class: "-m-1 flex flex-wrap items-center" }, [
                            $data.type ? (openBlock(), createBlock("span", {
                              key: 0,
                              class: "m-1 inline-flex items-center rounded-full border border-gray-200 bg-white py-1.5 pl-3 pr-2 text-sm font-medium text-gray-900"
                            }, [
                              createVNode("a", { class: "mr-1" }, toDisplayString($data.type), 1)
                            ])) : createCommentVNode("", true),
                            $props.limit ? (openBlock(), createBlock("span", {
                              key: 1,
                              class: "m-1 inline-flex items-center rounded-full border border-gray-200 bg-white py-1.5 pl-3 pr-2 text-sm font-medium text-gray-900"
                            }, [
                              createVNode("a", { class: "cursor-pointer" }, "LIMIT: " + toDisplayString($props.limit), 1)
                            ])) : createCommentVNode("", true)
                          ])
                        ])
                      ])
                    ])
                  ])) : createCommentVNode("", true),
                  $data.results ? (openBlock(), createBlock("div", { key: 1 }, [
                    createVNode("div", { class: "py-6 px-4 lg:px-12 sm:p-6 border-b border-gray-200" }, [
                      $data.results.data.length > 0 ? (openBlock(), createBlock("div", {
                        key: 0,
                        class: "hidden sm:flex sm:flex-1 sm:items-center sm:justify-between"
                      }, [
                        createVNode("div", null, [
                          createVNode("p", { class: "text-sm text-gray-700" }, [
                            createTextVNode(" Showing "),
                            createVNode("span", { class: "font-medium" }, toDisplayString($data.results.from), 1),
                            createTextVNode(" to "),
                            createVNode("span", { class: "font-medium" }, toDisplayString($data.results.to), 1),
                            createTextVNode(" of "),
                            createVNode("span", { class: "font-medium" }, toDisplayString($data.results.total), 1),
                            createTextVNode(" results ")
                          ])
                        ]),
                        createVNode("div", null, [
                          createVNode("nav", {
                            class: "isolate inline-flex -space-x-px shadow-sm",
                            "aria-label": "Pagination"
                          }, [
                            (openBlock(true), createBlock(Fragment, null, renderList($data.results.links, (link) => {
                              return openBlock(), createBlock("a", {
                                onClick: ($event) => $options.navigateTo(link),
                                key: link.label,
                                class: [
                                  link.active ? "bg-gray-200" : "",
                                  "first:rounded-l-lg last:rounded-r-lg relative cursor-pointer inline-flex items-center border border-gray-300 bg-white px-2 py-2 text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-20"
                                ],
                                innerHTML: link.label
                              }, null, 10, ["onClick", "innerHTML"]);
                            }), 128))
                          ])
                        ])
                      ])) : createCommentVNode("", true),
                      $data.results.data.length > 0 ? (openBlock(), createBlock("div", {
                        key: 1,
                        class: "mx-auto grid mt-6 gap-5 lg:max-w-none md:grid-cols-3 lg:grid-cols-4 2xl:grid-cols-6"
                      }, [
                        (openBlock(true), createBlock(Fragment, null, renderList($data.results.data, (result) => {
                          return openBlock(), createBlock("span", {
                            class: "rounded-lg hover:shadow-lg shadow border",
                            key: result.id
                          }, [
                            createVNode(_component_MoleculeCard, { molecule: result }, null, 8, ["molecule"])
                          ]);
                        }), 128))
                      ])) : (openBlock(), createBlock("div", { key: 2 }, [
                        $data.error ? (openBlock(), createBlock("div", { key: 0 }, [
                          createVNode("div", { class: "bg-white" }, [
                            createVNode("div", { class: "mx-auto w-full max-w-7xl px-6 pb-16 sm:pb-24 lg:px-8" }, [
                              createVNode("div", { class: "mx-auto mt-20 max-w-2xl text-center sm:mt-24" }, [
                                createVNode("p", { class: "text-base font-semibold leading-8 text-indigo-600" }, toDisplayString($data.error.status), 1),
                                createVNode("h1", { class: "mt-4 text-3xl font-bold tracking-tight text-gray-900 sm:text-5xl" }, toDisplayString($data.error.statusText), 1),
                                createVNode("p", { class: "mt-4 text-base leading-7 text-gray-600 sm:mt-6 sm:text-lg sm:leading-8" }, toDisplayString($data.error.data.message), 1)
                              ]),
                              createVNode("div", { class: "mx-auto mt-16 flow-root max-w-lg sm:mt-20" }, [
                                createVNode("div", { class: "mt-10 flex justify-center" }, [
                                  createVNode("a", {
                                    href: "/",
                                    class: "text-sm font-semibold leading-6 text-indigo-600"
                                  }, [
                                    createVNode("span", { "aria-hidden": "true" }, "←"),
                                    createTextVNode(" Back to home ")
                                  ])
                                ])
                              ])
                            ])
                          ])
                        ])) : (openBlock(), createBlock("div", {
                          key: 1,
                          class: "bg-white px-4 py-12"
                        }, [
                          createVNode("div", { class: "text-center" }, [
                            (openBlock(), createBlock("svg", {
                              class: "mx-auto h-12 w-12 text-gray-400",
                              fill: "none",
                              viewBox: "0 0 24 24",
                              stroke: "currentColor",
                              "aria-hidden": "true"
                            }, [
                              createVNode("path", {
                                "vector-effect": "non-scaling-stroke",
                                "stroke-linecap": "round",
                                "stroke-linejoin": "round",
                                "stroke-width": "2",
                                d: "M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"
                              })
                            ])),
                            createVNode("h3", { class: "mt-2 text-sm font-semibold text-gray-900" }, " No records were found "),
                            createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " Try to refine your search query. If the problem persist please contact us. ")
                          ])
                        ]))
                      ]))
                    ]),
                    $data.results.data.length > 0 ? (openBlock(), createBlock("div", {
                      key: 0,
                      class: "flex items-center justify-between bg-white px-12 py-3 rounded-md"
                    }, [
                      createVNode("div", { class: "hidden sm:flex sm:flex-1 sm:items-center sm:justify-between" }, [
                        createVNode("div", null, [
                          createVNode("p", { class: "text-sm text-gray-700" }, [
                            createTextVNode(" Showing "),
                            createVNode("span", { class: "font-medium" }, toDisplayString($data.results.from), 1),
                            createTextVNode(" to "),
                            createVNode("span", { class: "font-medium" }, toDisplayString($data.results.to), 1),
                            createTextVNode(" of "),
                            createVNode("span", { class: "font-medium" }, toDisplayString($data.results.total), 1),
                            createTextVNode(" results ")
                          ])
                        ]),
                        createVNode("div", null, [
                          createVNode("nav", {
                            class: "isolate inline-flex -space-x-px shadow-sm",
                            "aria-label": "Pagination"
                          }, [
                            (openBlock(true), createBlock(Fragment, null, renderList($data.results.links, (link) => {
                              return openBlock(), createBlock("a", {
                                onClick: ($event) => $options.navigateTo(link),
                                key: link.label,
                                class: [
                                  link.active ? "bg-gray-200" : "",
                                  "first:rounded-l-lg last:rounded-r-lg relative cursor-pointer inline-flex items-center border border-gray-300 bg-white px-2 py-2 text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-20"
                                ],
                                innerHTML: link.label
                              }, null, 10, ["onClick", "innerHTML"]);
                            }), 128))
                          ])
                        ])
                      ])
                    ])) : createCommentVNode("", true),
                    $data.recentQueries.length > 0 ? (openBlock(), createBlock("div", {
                      key: 1,
                      class: "bg-gray-100 border-t"
                    }, [
                      createVNode("div", { class: "mx-auto max-w-7xl py-3 px-4 sm:flex sm:items-center sm:px-6 lg:px-16" }, [
                        createVNode("h3", { class: "text-sm font-medium text-gray-500" }, " Recent Searches "),
                        createVNode("div", {
                          "aria-hidden": "true",
                          class: "hidden h-5 w-px bg-gray-300 sm:ml-4 sm:block"
                        }),
                        createVNode("div", { class: "mt-2 sm:mt-0 sm:ml-4" }, [
                          createVNode("div", { class: "-m-1 flex flex-wrap items-center" }, [
                            (openBlock(true), createBlock(Fragment, null, renderList($data.recentQueries, (query) => {
                              return openBlock(), createBlock("span", {
                                key: query,
                                class: "m-1 inline-flex items-center rounded-full border border-gray-200 bg-white py-1.5 pl-3 pr-2 text-sm font-medium text-gray-900"
                              }, [
                                createVNode("a", {
                                  class: "cursor-pointer",
                                  onClick: ($event) => $options.search(query)
                                }, toDisplayString(query), 9, ["onClick"]),
                                createVNode("button", {
                                  type: "button",
                                  onClick: ($event) => $options.removeSearchQuery(query),
                                  class: "ml-1 inline-flex h-4 w-4 flex-shrink-0 rounded-full p-1 text-gray-400 hover:bg-gray-200 hover:text-gray-500"
                                }, [
                                  createVNode("span", { class: "sr-only" }, "Remove filter for Objects"),
                                  (openBlock(), createBlock("svg", {
                                    class: "h-2 w-2",
                                    stroke: "currentColor",
                                    fill: "none",
                                    viewBox: "0 0 8 8"
                                  }, [
                                    createVNode("path", {
                                      "stroke-linecap": "round",
                                      "stroke-width": "1.5",
                                      d: "M1 1l6 6m0-6L1 7"
                                    })
                                  ]))
                                ], 8, ["onClick"])
                              ]);
                            }), 128))
                          ])
                        ])
                      ])
                    ])) : createCommentVNode("", true)
                  ])) : createCommentVNode("", true),
                  $data.loading ? (openBlock(), createBlock("div", { key: 2 }, [
                    createVNode("div", { class: "text-center py-20" }, [
                      (openBlock(), createBlock("svg", {
                        class: "animate-spin -ml-1 mr-3 h-5 w-5 inline",
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24"
                      }, [
                        createVNode("circle", {
                          class: "opacity-25",
                          cx: "12",
                          cy: "12",
                          r: "10",
                          stroke: "currentColor",
                          "stroke-width": "4"
                        }),
                        createVNode("path", {
                          class: "opacity-75",
                          fill: "currentColor",
                          d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                        })
                      ])),
                      createTextVNode(" Loading... ")
                    ])
                  ])) : createCommentVNode("", true)
                ])
              ])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$S = _sfc_main$S.setup;
_sfc_main$S.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Public/Compounds.vue");
  return _sfc_setup$S ? _sfc_setup$S(props, ctx) : void 0;
};
const Compounds = /* @__PURE__ */ _export_sfc(_sfc_main$S, [["ssrRender", _sfc_ssrRender$R]]);
const __vite_glob_0_40 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Compounds
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$R = {
  components: {
    Dropdown
  },
  props: {
    modelValue: String,
    maxWidth: {
      type: Number,
      default: 300
    }
  }
};
function _sfc_ssrRender$Q(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex items-center" }, _attrs))}><div class="flex w-full bg-white shadow rounded-full"><input class="relative w-full border-0 px-6 py-3 rounded-full focus:shadow-outline" autocomplete="off" type="text" name="search" placeholder="Search"${ssrRenderAttr("value", $props.modelValue)}></div><button class="ml-3 text-sm text-gray-500 hover:text-gray-700 focus:text-indigo-500" type="button"> Reset </button></div>`);
}
const _sfc_setup$R = _sfc_main$R.setup;
_sfc_main$R.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/DatasetSearch.vue");
  return _sfc_setup$R ? _sfc_setup$R(props, ctx) : void 0;
};
const DatasetSearch = /* @__PURE__ */ _export_sfc(_sfc_main$R, [["ssrRender", _sfc_ssrRender$Q]]);
const _sfc_main$Q = {
  components: {
    Head,
    Link,
    LockClosedIcon,
    LockOpenIcon,
    ArrowDownTrayIcon,
    EnvelopeIcon,
    PencilIcon,
    ScaleIcon,
    Menu,
    MenuButton,
    MenuItem,
    MenuItems,
    EllipsisVerticalIcon
  },
  props: ["dataset", "mode"],
  setup() {
  },
  data() {
    return {};
  },
  computed: {
    url() {
      return String(this.$page.props.url);
    }
  },
  methods: {
    toggleUpVote() {
      if (this.$page.props.auth.user.username && this.$page.props.auth.user.username != "") {
        const url = "/projects/" + this.dataset.id + "/toggleUpVote";
        axios.get(url).catch((err) => {
          if (err.response.status !== 200 || err.response.status !== 201) {
            throw new Error(
              `API call failed with status code: ${err.response.status} after multiple attempts`
            );
          }
        }).then(function(response) {
          router$1.reload({ only: ["datasets"] });
        });
      } else {
        this.$inertia.visit(route("login"));
      }
    }
  }
};
function _sfc_ssrRender$P(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Link = resolveComponent("Link");
  const _component_ScaleIcon = resolveComponent("ScaleIcon");
  _push(`<div${ssrRenderAttrs(_attrs)}>`);
  if ($props.dataset) {
    _push(`<div class="hover:shadow-lg">`);
    if ($props.mode == "mini" || $props.mode == "grid") {
      _push(`<div><div class="flex flex-col rounded-lg shadow-lg"><div class="relative rounded-t lg:h-32 xl:h-32">`);
      if ($props.dataset.dataset_photo_url) {
        _push(`<div class="flex-shrink-0 h-32 p-3 border rounded-t border-gray-100"><img${ssrRenderAttr("src", $props.dataset.dataset_photo_url)} alt="" class="w-full h-full object-center object-cover"></div>`);
      } else {
        _push(`<div class="flex-shrink-0 h-32 pattern-diagonal-lines pattern-gray-400 pattern-bg-white pattern-size-2 pattern-opacity-20 border-b border-gray-400"></div>`);
      }
      _push(`</div><div class="${ssrRenderClass([
        $props.mode != "mini" ? "" : "rounded-b-lg",
        "flex-1 bg-white flex flex-col justify-between"
      ])}"><div style="${ssrRenderStyle({ "min-height": "100px", "max-height": "168px" })}" class="flex-1 p-3">`);
      _push(ssrRenderComponent(_component_Link, {
        href: $props.dataset.public_url,
        class: "block"
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            if ($props.dataset.identifier) {
              _push2(`<small class="text-gray-500"${_scopeId}>#${ssrInterpolate($props.dataset.identifier)}</small>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`<p class="text-lg font-black text-gray-900 line-clamp-2"${_scopeId}>${ssrInterpolate($props.dataset.name)} `);
            if ($props.dataset.type) {
              _push2(`<span${_scopeId}>(${ssrInterpolate($props.dataset.type.replace(/,\s*$/, ""))})</span>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</p><p class="mt-0 text-sm text-gray-800 line-clamp-4"${_scopeId}><small class="text-gray-400"${_scopeId}>Project:</small><br${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Link, {
              href: $props.dataset.project.public_url,
              class: "hover:underline hover:text-teal-900"
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`${ssrInterpolate($props.dataset.project.name)}`);
                } else {
                  return [
                    createTextVNode(toDisplayString($props.dataset.project.name), 1)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(` / `);
            _push2(ssrRenderComponent(_component_Link, {
              class: "hover:underline hover:text-teal-900",
              href: $props.dataset.study.public_url
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`${ssrInterpolate($props.dataset.study.name)}`);
                } else {
                  return [
                    createTextVNode(toDisplayString($props.dataset.study.name), 1)
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</p>`);
          } else {
            return [
              $props.dataset.identifier ? (openBlock(), createBlock("small", {
                key: 0,
                class: "text-gray-500"
              }, "#" + toDisplayString($props.dataset.identifier), 1)) : createCommentVNode("", true),
              createVNode("p", { class: "text-lg font-black text-gray-900 line-clamp-2" }, [
                createTextVNode(toDisplayString($props.dataset.name) + " ", 1),
                $props.dataset.type ? (openBlock(), createBlock("span", { key: 0 }, "(" + toDisplayString($props.dataset.type.replace(/,\s*$/, "")) + ")", 1)) : createCommentVNode("", true)
              ]),
              createVNode("p", { class: "mt-0 text-sm text-gray-800 line-clamp-4" }, [
                createVNode("small", { class: "text-gray-400" }, "Project:"),
                createVNode("br"),
                createVNode(_component_Link, {
                  href: $props.dataset.project.public_url,
                  class: "hover:underline hover:text-teal-900"
                }, {
                  default: withCtx(() => [
                    createTextVNode(toDisplayString($props.dataset.project.name), 1)
                  ]),
                  _: 1
                }, 8, ["href"]),
                createTextVNode(" / "),
                createVNode(_component_Link, {
                  class: "hover:underline hover:text-teal-900",
                  href: $props.dataset.study.public_url
                }, {
                  default: withCtx(() => [
                    createTextVNode(toDisplayString($props.dataset.study.name), 1)
                  ]),
                  _: 1
                }, 8, ["href"])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div>`);
      if ($props.mode != "mini") {
        _push(`<div class="p-3 rounded-b-lg bg-white border-t flex"><div class="flex-0.5 self-center align-middle"><img class="h-7 w-7 rounded-full"${ssrRenderAttr("src", $props.dataset.owner.profile_photo_url)}></div><div class="flex-auto pl-4"><p class="text-xs font-xs font-semibold text-black">`);
        _push(ssrRenderComponent(_component_Link, null, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`${ssrInterpolate($props.dataset.owner.first_name)} ${ssrInterpolate($props.dataset.owner.last_name)}`);
            } else {
              return [
                createTextVNode(toDisplayString($props.dataset.owner.first_name) + " " + toDisplayString($props.dataset.owner.last_name), 1)
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(`</p><div class="flex-1 space-x-1 text-xs font-xs text-gray-500"><time datetime="2020-03-16">${ssrInterpolate(_ctx.formatDate($props.dataset.created_at))}</time></div></div></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div>`);
    } else {
      _push(`<!---->`);
    }
    if ($props.mode == "list") {
      _push(`<div><li class="flex border-b bprder-gray-100"><div class="flex-shrink-0">`);
      if ($props.dataset.dataset_photo_url) {
        _push(`<div class="flex-shrink-0 w-64 border-r h-36 p-3"><img${ssrRenderAttr("src", $props.dataset.dataset_photo_url)} alt="" class="w-full h-full object-center object-cover"></div>`);
      } else {
        _push(`<div class="flex-shrink-0 h-36 w-64 border-r pattern-diagonal-lines pattern-gray-400 pattern-bg-white pattern-size-2 pattern-opacity-20 border-b border-gray-400"></div>`);
      }
      _push(`</div><div class="flex-1 flex flex-col px-4 py-2 sm:px-6 justify-between"><div class="flex items-center justify-between"><div>`);
      if ($props.dataset.identifier) {
        _push(`<small class="text-gray-500">#${ssrInterpolate($props.dataset.identifier)}</small>`);
      } else {
        _push(`<!---->`);
      }
      _push(`<p class="text-lg font-black text-gray-900 line-clamp-2 font-black">`);
      _push(ssrRenderComponent(_component_Link, {
        href: $props.dataset.public_url,
        class: "block"
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate($props.dataset.name)}`);
          } else {
            return [
              createTextVNode(toDisplayString($props.dataset.name), 1)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</p><p class="mt-0 text-sm text-gray-800 line-clamp-4"><small class="text-gray-400">Project:</small><br>`);
      _push(ssrRenderComponent(_component_Link, {
        href: $props.dataset.project.public_url,
        class: "hover:underline hover:text-teal-900"
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate($props.dataset.project.name)}`);
          } else {
            return [
              createTextVNode(toDisplayString($props.dataset.project.name), 1)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(` / `);
      _push(ssrRenderComponent(_component_Link, {
        class: "hover:underline hover:text-teal-900",
        href: $props.dataset.study.public_url
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate($props.dataset.study.name)}`);
          } else {
            return [
              createTextVNode(toDisplayString($props.dataset.study.name), 1)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</p></div></div><div class="mt-2 sm:flex sm:justify-between"><div class="sm:flex"><p class="flex items-center text-sm text-gray-500"><img class="h-7 w-5 mr-2 rounded-full"${ssrRenderAttr("src", $props.dataset.owner.profile_photo_url)}> ${ssrInterpolate($props.dataset.owner.first_name)} ${ssrInterpolate($props.dataset.owner.last_name)}</p>`);
      if ($props.dataset.license) {
        _push(`<p class="flex items-center text-sm text-gray-500 sm:mt-0 sm:ml-3">`);
        _push(ssrRenderComponent(_component_ScaleIcon, { class: "text-gray-400 h-5 w-5 mr-1.5" }, null, _parent));
        _push(` ${ssrInterpolate($props.dataset.license.title)}</p>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div><div class="mt-2 flex items-center text-sm text-gray-500 sm:mt-0"><svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"><path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"></path></svg><p><time datetime="2020-03-16">${ssrInterpolate(_ctx.formatDate($props.dataset.created_at))}</time></p></div></div></div></li></div>`);
    } else {
      _push(`<!---->`);
    }
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div>`);
}
const _sfc_setup$Q = _sfc_main$Q.setup;
_sfc_main$Q.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/DatasetCard.vue");
  return _sfc_setup$Q ? _sfc_setup$Q(props, ctx) : void 0;
};
const DatasetCard = /* @__PURE__ */ _export_sfc(_sfc_main$Q, [["ssrRender", _sfc_ssrRender$P]]);
const _sfc_main$P = {
  components: {
    Link
  },
  props: {
    links: Array
  }
};
function _sfc_ssrRender$O(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Link = resolveComponent("Link");
  _push(`<div${ssrRenderAttrs(_attrs)}><nav aria-label="Pagination" class="mx-auto mt-6 flex justify-between text-sm font-medium text-gray-700"><div class="min-w-0 flex-1">`);
  if ($props.links[0].url) {
    _push(ssrRenderComponent(_component_Link, {
      href: $props.links[0].url,
      class: "inline-flex items-center px-4 h-10 border border-gray-300 rounded-md bg-white hover:bg-gray-100 focus:outline-none focus:border-indigo-600 focus:ring-2 focus:ring-offset-1 focus:ring-offset-indigo-600 focus:ring-indigo-600 focus:ring-opacity-25"
    }, {
      default: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` Previous `);
        } else {
          return [
            createTextVNode(" Previous ")
          ];
        }
      }),
      _: 1
    }, _parent));
  } else {
    _push(`<!---->`);
  }
  _push(`</div><div class="hidden space-x-2 sm:flex"><!--[-->`);
  ssrRenderList($props.links.slice(1, -1), (link) => {
    _push(ssrRenderComponent(_component_Link, {
      key: link.url,
      href: link.url,
      class: [
        link.active ? "border-indigo-600 ring-1 ring-indigo-600 " : "",
        "inline-flex items-center px-4 h-10 border border-gray-300 rounded-md bg-white hover:bg-gray-100 focus:outline-none focus:border-indigo-600 focus:ring-2 focus:ring-offset-1 focus:ring-offset-indigo-600 focus:ring-indigo-600 focus:ring-opacity-25"
      ]
    }, {
      default: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`${ssrInterpolate(link.label)}`);
        } else {
          return [
            createTextVNode(toDisplayString(link.label), 1)
          ];
        }
      }),
      _: 2
    }, _parent));
  });
  _push(`<!--]--></div><div class="min-w-0 flex-1 flex justify-end">`);
  if ($props.links[$props.links.length - 1].url) {
    _push(ssrRenderComponent(_component_Link, {
      href: $props.links[$props.links.length - 1].url,
      class: "inline-flex items-center px-4 h-10 border border-gray-300 rounded-md bg-white hover:bg-gray-100 focus:outline-none focus:border-indigo-600 focus:ring-2 focus:ring-offset-1 focus:ring-offset-indigo-600 focus:ring-indigo-600 focus:ring-opacity-25"
    }, {
      default: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` Next `);
        } else {
          return [
            createTextVNode(" Next ")
          ];
        }
      }),
      _: 1
    }, _parent));
  } else {
    _push(`<!---->`);
  }
  _push(`</div></nav></div>`);
}
const _sfc_setup$P = _sfc_main$P.setup;
_sfc_main$P.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/Pagination.vue");
  return _sfc_setup$P ? _sfc_setup$P(props, ctx) : void 0;
};
const Pagination = /* @__PURE__ */ _export_sfc(_sfc_main$P, [["ssrRender", _sfc_ssrRender$O]]);
const _sfc_main$O = {
  components: {
    AppLayout,
    Link,
    DatasetSearch,
    Pagination,
    Dialog,
    DialogPanel,
    Disclosure,
    DisclosureButton,
    DisclosurePanel,
    Menu,
    MenuButton,
    MenuItem,
    MenuItems,
    Popover,
    PopoverButton,
    PopoverGroup,
    PopoverPanel,
    TransitionChild,
    TransitionRoot,
    XMarkIcon,
    ChevronDownIcon,
    QueueListIcon,
    Squares2X2Icon: Squares2X2Icon$1,
    DatasetCard
  },
  props: {
    datasets: {
      default: [],
      type: Object
    },
    filters: {
      default: {
        search: "",
        sort: "newest",
        mode: "grid"
      },
      type: Object
    }
  },
  data() {
    return {
      sortOptions: [
        { name: "Creation", value: "creation", current: true },
        { name: "Newest", value: "newest", current: false }
      ],
      open: ref(false),
      form: {
        search: this.filters.search,
        sort: "newest",
        mode: "grid"
      }
    };
  },
  mounted() {
    if (this.filters) {
      if (this.filters.search == null) {
        this.filters.search = "";
      }
      if (this.filters.mode == null) {
        this.filters.mode = "grid";
      }
      if (this.filters.sort == null) {
        this.filters.sort = "newest";
      }
    }
  },
  watch: {
    form: {
      deep: true,
      handler: throttle(function() {
        this.$inertia.get("/spectra", pickBy(this.form), {
          preserveState: true
        });
      }, 150)
    }
  },
  methods: {
    reset() {
      this.form = {
        search: "",
        sort: "newest",
        mode: "grid"
      };
    }
  }
};
function _sfc_ssrRender$N(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_dataset_search = resolveComponent("dataset-search");
  const _component_Menu = resolveComponent("Menu");
  const _component_MenuButton = resolveComponent("MenuButton");
  const _component_ChevronDownIcon = resolveComponent("ChevronDownIcon");
  const _component_MenuItems = resolveComponent("MenuItems");
  const _component_MenuItem = resolveComponent("MenuItem");
  const _component_QueueListIcon = resolveComponent("QueueListIcon");
  const _component_Squares2X2Icon = resolveComponent("Squares2X2Icon");
  const _component_dataset_card = resolveComponent("dataset-card");
  const _component_Pagination = resolveComponent("Pagination");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({ title: "Spectra" }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white mb-0"${_scopeId}><div class="px-8"${_scopeId}><div class="flex flex-nowrap justify-between py-6"${_scopeId}><div${_scopeId}><div class="text-4xl mb-3 font-bold tracking-tight text-gray-900"${_scopeId}> Spectra </div><p${_scopeId}> Explore, analyse, and share raw spectra and assignments. Learn more about <a class="text-teal-900" href="https://docs.nmrxiv.org/docs/introduction/intro" target="_blank"${_scopeId}>spectra</a>. </p></div></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white mb-0" }, [
            createVNode("div", { class: "px-8" }, [
              createVNode("div", { class: "flex flex-nowrap justify-between py-6" }, [
                createVNode("div", null, [
                  createVNode("div", { class: "text-4xl mb-3 font-bold tracking-tight text-gray-900" }, " Spectra "),
                  createVNode("p", null, [
                    createTextVNode(" Explore, analyse, and share raw spectra and assignments. Learn more about "),
                    createVNode("a", {
                      class: "text-teal-900",
                      href: "https://docs.nmrxiv.org/docs/introduction/intro",
                      target: "_blank"
                    }, "spectra"),
                    createTextVNode(". ")
                  ])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}><div class="bg-white"${_scopeId}><section aria-labelledby="filter-heading"${_scopeId}><div class="bg-gray-100 border-t border-b"${_scopeId}><div class="mx-auto py-3 px-4 sm:flex sm:items-center sm:px-6 lg:px-8"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_dataset_search, {
          modelValue: $data.form.search,
          "onUpdate:modelValue": ($event) => $data.form.search = $event,
          class: "mr-4 w-full",
          onReset: $options.reset
        }, null, _parent2, _scopeId));
        _push2(`</div></div></section></div></div><div class="min-h-[calc(100vh-500px)] px-12 mb-24 mx-auto"${_scopeId}><div class="relative border-gray-200 pt-4"${_scopeId}><div class="mx-auto flex items-center justify-between"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_Menu, {
          as: "div",
          class: "relative inline-block text-left z-10"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_MenuButton, { class: "group inline-flex justify-center text-sm font-medium text-gray-700 hover:text-gray-900" }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Sort by: <span class="capitalize font-black text-gray-900"${_scopeId3}>${ssrInterpolate($data.form.sort)}</span>`);
                    _push4(ssrRenderComponent(_component_ChevronDownIcon, {
                      class: "flex-shrink-0 -mr-1 ml-1 h-5 w-5 text-gray-400 group-hover:text-gray-500",
                      "aria-hidden": "true"
                    }, null, _parent4, _scopeId3));
                  } else {
                    return [
                      createTextVNode(" Sort by: "),
                      createVNode("span", { class: "capitalize font-black text-gray-900" }, toDisplayString($data.form.sort), 1),
                      createVNode(_component_ChevronDownIcon, {
                        class: "flex-shrink-0 -mr-1 ml-1 h-5 w-5 text-gray-400 group-hover:text-gray-500",
                        "aria-hidden": "true"
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</div>`);
              _push3(ssrRenderComponent(_component_MenuItems, { class: "origin-top-left absolute left-0 mt-2 w-40 rounded-md shadow-2xl bg-white ring-1 ring-black ring-opacity-5 focus:outline-none" }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<div class="py-1"${_scopeId3}><!--[-->`);
                    ssrRenderList($data.sortOptions, (option) => {
                      _push4(ssrRenderComponent(_component_MenuItem, {
                        key: option.name
                      }, {
                        default: withCtx(({ active }, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(`<a class="${ssrRenderClass([
                              option.current ? "font-medium text-gray-900" : "text-gray-500",
                              active ? "bg-gray-100" : "",
                              "block px-4 py-2 text-sm cursor-pointer"
                            ])}"${_scopeId4}>${ssrInterpolate(option.name)}</a>`);
                          } else {
                            return [
                              createVNode("a", {
                                class: [
                                  option.current ? "font-medium text-gray-900" : "text-gray-500",
                                  active ? "bg-gray-100" : "",
                                  "block px-4 py-2 text-sm cursor-pointer"
                                ],
                                onClick: ($event) => $data.form.sort = option.value
                              }, toDisplayString(option.name), 11, ["onClick"])
                            ];
                          }
                        }),
                        _: 2
                      }, _parent4, _scopeId3));
                    });
                    _push4(`<!--]--></div>`);
                  } else {
                    return [
                      createVNode("div", { class: "py-1" }, [
                        (openBlock(true), createBlock(Fragment, null, renderList($data.sortOptions, (option) => {
                          return openBlock(), createBlock(_component_MenuItem, {
                            key: option.name
                          }, {
                            default: withCtx(({ active }) => [
                              createVNode("a", {
                                class: [
                                  option.current ? "font-medium text-gray-900" : "text-gray-500",
                                  active ? "bg-gray-100" : "",
                                  "block px-4 py-2 text-sm cursor-pointer"
                                ],
                                onClick: ($event) => $data.form.sort = option.value
                              }, toDisplayString(option.name), 11, ["onClick"])
                            ]),
                            _: 2
                          }, 1024);
                        }), 128))
                      ])
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                createVNode("div", null, [
                  createVNode(_component_MenuButton, { class: "group inline-flex justify-center text-sm font-medium text-gray-700 hover:text-gray-900" }, {
                    default: withCtx(() => [
                      createTextVNode(" Sort by: "),
                      createVNode("span", { class: "capitalize font-black text-gray-900" }, toDisplayString($data.form.sort), 1),
                      createVNode(_component_ChevronDownIcon, {
                        class: "flex-shrink-0 -mr-1 ml-1 h-5 w-5 text-gray-400 group-hover:text-gray-500",
                        "aria-hidden": "true"
                      })
                    ]),
                    _: 1
                  })
                ]),
                createVNode(Transition, {
                  "enter-active-class": "transition ease-out duration-100",
                  "enter-from-class": "transform opacity-0 scale-95",
                  "enter-to-class": "transform opacity-100 scale-100",
                  "leave-active-class": "transition ease-in duration-75",
                  "leave-from-class": "transform opacity-100 scale-100",
                  "leave-to-class": "transform opacity-0 scale-95"
                }, {
                  default: withCtx(() => [
                    createVNode(_component_MenuItems, { class: "origin-top-left absolute left-0 mt-2 w-40 rounded-md shadow-2xl bg-white ring-1 ring-black ring-opacity-5 focus:outline-none" }, {
                      default: withCtx(() => [
                        createVNode("div", { class: "py-1" }, [
                          (openBlock(true), createBlock(Fragment, null, renderList($data.sortOptions, (option) => {
                            return openBlock(), createBlock(_component_MenuItem, {
                              key: option.name
                            }, {
                              default: withCtx(({ active }) => [
                                createVNode("a", {
                                  class: [
                                    option.current ? "font-medium text-gray-900" : "text-gray-500",
                                    active ? "bg-gray-100" : "",
                                    "block px-4 py-2 text-sm cursor-pointer"
                                  ],
                                  onClick: ($event) => $data.form.sort = option.value
                                }, toDisplayString(option.name), 11, ["onClick"])
                              ]),
                              _: 2
                            }, 1024);
                          }), 128))
                        ])
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`<div class="float-right"${_scopeId}><span class="relative z-0 inline-flex shadow-sm rounded-md"${_scopeId}><button type="button" class="${ssrRenderClass([
          $props.filters.mode == "list" ? "bg-gray-300 text-gray-900" : "",
          "relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50"
        ])}"${_scopeId}><span class="sr-only"${_scopeId}>List</span>`);
        _push2(ssrRenderComponent(_component_QueueListIcon, {
          class: "h-5 w-5",
          "aria-hidden": "true"
        }, null, _parent2, _scopeId));
        _push2(`</button><button type="button" class="${ssrRenderClass([
          $props.filters.mode == "grid" ? "bg-gray-300 text-gray-900" : "",
          "-ml-px relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50"
        ])}"${_scopeId}><span class="sr-only"${_scopeId}>Grid</span>`);
        _push2(ssrRenderComponent(_component_Squares2X2Icon, {
          class: "h-5 w-5",
          "aria-hidden": "true"
        }, null, _parent2, _scopeId));
        _push2(`</button></span></div></div></div>`);
        if ($props.datasets.meta.total > 0) {
          _push2(`<div${_scopeId}><div class="border-t mt-3 border-gray-100"${_scopeId}><h2 class="text-gray-600 text-md mt-4 font-bold"${_scopeId}> Results (${ssrInterpolate($props.datasets.meta.total)}) </h2></div>`);
          if ($props.filters.mode == "grid") {
            _push2(`<div${_scopeId}><div class="mt-4 mx-auto max-w-md grid gap-8 sm:max-w-lg lg:grid-cols-4 lg:max-w-7xl"${_scopeId}><!--[-->`);
            ssrRenderList($props.datasets.data, (dataset) => {
              _push2(`<span${_scopeId}>`);
              _push2(ssrRenderComponent(_component_dataset_card, {
                mode: $props.filters.mode,
                dataset
              }, null, _parent2, _scopeId));
              _push2(`</span>`);
            });
            _push2(`<!--]--></div></div>`);
          } else {
            _push2(`<!---->`);
          }
          if ($props.filters.mode == "list") {
            _push2(`<div${_scopeId}><div class="mt-4 bg-white shadow overflow-hidden sm:rounded-md"${_scopeId}><ul role="list" class="divide-y border rounded-md divide-gray-200"${_scopeId}><!--[-->`);
            ssrRenderList($props.datasets.data, (dataset) => {
              _push2(`<span${_scopeId}>`);
              _push2(ssrRenderComponent(_component_dataset_card, {
                mode: $props.filters.mode ? $props.filters.mode : "grid",
                dataset
              }, null, _parent2, _scopeId));
              _push2(`</span>`);
            });
            _push2(`<!--]--></ul></div></div>`);
          } else {
            _push2(`<!---->`);
          }
          if ($props.datasets.meta.total > $props.datasets.meta.per_page) {
            _push2(`<div class="py-10"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Pagination, {
              links: $props.datasets.meta.links
            }, null, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div>`);
        } else {
          _push2(`<div${_scopeId}><div class="text-center rounded-lg border-2 border-dashed border-gray-300 p-12 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 mt-5"${_scopeId}><svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true"${_scopeId}><path vector-effect="non-scaling-stroke" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"${_scopeId}></path></svg><h3 class="mt-2 text-sm font-medium text-gray-900"${_scopeId}> No datasets </h3></div></div>`);
        }
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", null, [
            createVNode("div", { class: "bg-white" }, [
              createVNode("section", { "aria-labelledby": "filter-heading" }, [
                createVNode("div", { class: "bg-gray-100 border-t border-b" }, [
                  createVNode("div", { class: "mx-auto py-3 px-4 sm:flex sm:items-center sm:px-6 lg:px-8" }, [
                    createVNode(_component_dataset_search, {
                      modelValue: $data.form.search,
                      "onUpdate:modelValue": ($event) => $data.form.search = $event,
                      class: "mr-4 w-full",
                      onReset: $options.reset
                    }, null, 8, ["modelValue", "onUpdate:modelValue", "onReset"])
                  ])
                ])
              ])
            ])
          ]),
          createVNode("div", { class: "min-h-[calc(100vh-500px)] px-12 mb-24 mx-auto" }, [
            createVNode("div", { class: "relative border-gray-200 pt-4" }, [
              createVNode("div", { class: "mx-auto flex items-center justify-between" }, [
                createVNode(_component_Menu, {
                  as: "div",
                  class: "relative inline-block text-left z-10"
                }, {
                  default: withCtx(() => [
                    createVNode("div", null, [
                      createVNode(_component_MenuButton, { class: "group inline-flex justify-center text-sm font-medium text-gray-700 hover:text-gray-900" }, {
                        default: withCtx(() => [
                          createTextVNode(" Sort by: "),
                          createVNode("span", { class: "capitalize font-black text-gray-900" }, toDisplayString($data.form.sort), 1),
                          createVNode(_component_ChevronDownIcon, {
                            class: "flex-shrink-0 -mr-1 ml-1 h-5 w-5 text-gray-400 group-hover:text-gray-500",
                            "aria-hidden": "true"
                          })
                        ]),
                        _: 1
                      })
                    ]),
                    createVNode(Transition, {
                      "enter-active-class": "transition ease-out duration-100",
                      "enter-from-class": "transform opacity-0 scale-95",
                      "enter-to-class": "transform opacity-100 scale-100",
                      "leave-active-class": "transition ease-in duration-75",
                      "leave-from-class": "transform opacity-100 scale-100",
                      "leave-to-class": "transform opacity-0 scale-95"
                    }, {
                      default: withCtx(() => [
                        createVNode(_component_MenuItems, { class: "origin-top-left absolute left-0 mt-2 w-40 rounded-md shadow-2xl bg-white ring-1 ring-black ring-opacity-5 focus:outline-none" }, {
                          default: withCtx(() => [
                            createVNode("div", { class: "py-1" }, [
                              (openBlock(true), createBlock(Fragment, null, renderList($data.sortOptions, (option) => {
                                return openBlock(), createBlock(_component_MenuItem, {
                                  key: option.name
                                }, {
                                  default: withCtx(({ active }) => [
                                    createVNode("a", {
                                      class: [
                                        option.current ? "font-medium text-gray-900" : "text-gray-500",
                                        active ? "bg-gray-100" : "",
                                        "block px-4 py-2 text-sm cursor-pointer"
                                      ],
                                      onClick: ($event) => $data.form.sort = option.value
                                    }, toDisplayString(option.name), 11, ["onClick"])
                                  ]),
                                  _: 2
                                }, 1024);
                              }), 128))
                            ])
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                }),
                createVNode("div", { class: "float-right" }, [
                  createVNode("span", { class: "relative z-0 inline-flex shadow-sm rounded-md" }, [
                    createVNode("button", {
                      type: "button",
                      class: [
                        $props.filters.mode == "list" ? "bg-gray-300 text-gray-900" : "",
                        "relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50"
                      ],
                      onClick: ($event) => $data.form.mode = "list"
                    }, [
                      createVNode("span", { class: "sr-only" }, "List"),
                      createVNode(_component_QueueListIcon, {
                        class: "h-5 w-5",
                        "aria-hidden": "true"
                      })
                    ], 10, ["onClick"]),
                    createVNode("button", {
                      type: "button",
                      class: [
                        $props.filters.mode == "grid" ? "bg-gray-300 text-gray-900" : "",
                        "-ml-px relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50"
                      ],
                      onClick: ($event) => $data.form.mode = "grid"
                    }, [
                      createVNode("span", { class: "sr-only" }, "Grid"),
                      createVNode(_component_Squares2X2Icon, {
                        class: "h-5 w-5",
                        "aria-hidden": "true"
                      })
                    ], 10, ["onClick"])
                  ])
                ])
              ])
            ]),
            $props.datasets.meta.total > 0 ? (openBlock(), createBlock("div", { key: 0 }, [
              createVNode("div", { class: "border-t mt-3 border-gray-100" }, [
                createVNode("h2", { class: "text-gray-600 text-md mt-4 font-bold" }, " Results (" + toDisplayString($props.datasets.meta.total) + ") ", 1)
              ]),
              $props.filters.mode == "grid" ? (openBlock(), createBlock("div", { key: 0 }, [
                createVNode("div", { class: "mt-4 mx-auto max-w-md grid gap-8 sm:max-w-lg lg:grid-cols-4 lg:max-w-7xl" }, [
                  (openBlock(true), createBlock(Fragment, null, renderList($props.datasets.data, (dataset) => {
                    return openBlock(), createBlock("span", {
                      key: dataset.id
                    }, [
                      createVNode(_component_dataset_card, {
                        mode: $props.filters.mode,
                        dataset
                      }, null, 8, ["mode", "dataset"])
                    ]);
                  }), 128))
                ])
              ])) : createCommentVNode("", true),
              $props.filters.mode == "list" ? (openBlock(), createBlock("div", { key: 1 }, [
                createVNode("div", { class: "mt-4 bg-white shadow overflow-hidden sm:rounded-md" }, [
                  createVNode("ul", {
                    role: "list",
                    class: "divide-y border rounded-md divide-gray-200"
                  }, [
                    (openBlock(true), createBlock(Fragment, null, renderList($props.datasets.data, (dataset) => {
                      return openBlock(), createBlock("span", {
                        key: dataset.id
                      }, [
                        createVNode(_component_dataset_card, {
                          mode: $props.filters.mode ? $props.filters.mode : "grid",
                          dataset
                        }, null, 8, ["mode", "dataset"])
                      ]);
                    }), 128))
                  ])
                ])
              ])) : createCommentVNode("", true),
              $props.datasets.meta.total > $props.datasets.meta.per_page ? (openBlock(), createBlock("div", {
                key: 2,
                class: "py-10"
              }, [
                createVNode(_component_Pagination, {
                  links: $props.datasets.meta.links
                }, null, 8, ["links"])
              ])) : createCommentVNode("", true)
            ])) : (openBlock(), createBlock("div", { key: 1 }, [
              createVNode("div", { class: "text-center rounded-lg border-2 border-dashed border-gray-300 p-12 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 mt-5" }, [
                (openBlock(), createBlock("svg", {
                  class: "mx-auto h-12 w-12 text-gray-400",
                  fill: "none",
                  viewBox: "0 0 24 24",
                  stroke: "currentColor",
                  "aria-hidden": "true"
                }, [
                  createVNode("path", {
                    "vector-effect": "non-scaling-stroke",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round",
                    "stroke-width": "2",
                    d: "M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"
                  })
                ])),
                createVNode("h3", { class: "mt-2 text-sm font-medium text-gray-900" }, " No datasets ")
              ])
            ]))
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$O = _sfc_main$O.setup;
_sfc_main$O.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Public/Datasets.vue");
  return _sfc_setup$O ? _sfc_setup$O(props, ctx) : void 0;
};
const Datasets$1 = /* @__PURE__ */ _export_sfc(_sfc_main$O, [["ssrRender", _sfc_ssrRender$N]]);
const __vite_glob_0_41 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Datasets$1
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$N = {
  props: {
    dataset: Object,
    project: Object,
    study: Object
  },
  data() {
    return {
      spectraError: null,
      selectedSpectraData: null,
      currentMolecules: [],
      info: null
    };
  },
  computed: {
    url() {
      return String(this.$page.props.url);
    },
    nmriumURL() {
      return this.$page.props.nmriumURL ? String(this.$page.props.nmriumURL + "&id=" + Math.random()) : "https://nmriumdev.nmrxiv.org?defaultEmptyMessage=''&workspace=embedded&id=" + Math.random();
    }
  },
  watch: {
    // dataset: {
    //     immediate: true,
    //     handler() {
    //        this.loadSpectra();
    //     },
    // },
  },
  methods: {
    loadSpectra() {
      if (this.study) {
        const iframe = window.frames.NMRiumIframe;
        this.spectraError = null;
        this.currentMolecules = [];
        this.updateLoadingStatus(true);
        if (iframe) {
          if (this.dataset && this.dataset.has_nmrium) {
            this.infoLog("Loading Spectra from NMRium JSON..");
            axios.get("/datasets/" + this.dataset.id + "/nmriumInfo").then((response) => {
              let nmrium_info = response.data;
              if (nmrium_info) {
                let data = {
                  data: nmrium_info,
                  type: "nmrium"
                };
                iframe.postMessage(
                  { type: `nmr-wrapper:load`, data },
                  "*"
                );
              } else {
                let urls = [];
                urls.push(this.study.download_url);
                this.loadFromURL(urls);
              }
            });
          } else {
            if (this.study.has_nmrium) {
              this.infoLog("Loading Spectra from NMRium JSON..");
              axios.get(
                "/studies/" + this.study.id + "/nmriumInfo"
              ).then((response) => {
                let nmrium_info = response.data;
                if (nmrium_info) {
                  let data = {
                    data: nmrium_info,
                    type: "nmrium"
                  };
                  iframe.postMessage(
                    { type: `nmr-wrapper:load`, data },
                    "*"
                  );
                } else {
                  let urls = [];
                  urls.push(this.study.download_url);
                  this.loadFromURL(urls);
                }
              });
            } else {
              if (this.study.download_url) {
                let urls = [];
                urls.push(this.study.download_url);
                this.loadFromURL(urls);
              }
            }
          }
        }
      }
    },
    loadFromURL(urls) {
      this.infoLog("Loading Spectra from URL..");
      const iframe = window.frames.NMRiumIframe;
      let data = {
        data: urls,
        type: "url"
      };
      iframe.postMessage({ type: `nmr-wrapper:load`, data }, "*");
    },
    loadMol(molFile) {
      let svgString = null;
      let mol = OCL.Molecule.fromMolfile(molFile);
      if (mol.toIsomericSmiles() != "") {
        svgString = mol.toSVG(300, 300);
      }
      return svgString;
    },
    getSVGString(molecule) {
      if (molecule.MOL) {
        let mol = OCL.Molecule.fromMolfile(
          "\n  " + molecule.MOL.replaceAll('"', "")
        );
        return mol.toSVG(200, 200);
      }
    },
    updateLoadingStatus(status) {
      this.$emit("loading", status);
    },
    infoLog(message, reset) {
      this.info = message;
      if (reset) {
        setTimeout(() => {
          this.info = "";
        }, 5e3);
      }
    }
  }
};
function _sfc_ssrRender$M(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}>`);
  if ($data.spectraError) {
    _push(`<div><div class="rounded-md bg-red-50 p-4"><div class="flex"><div class="flex-shrink-0"><svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z" clip-rule="evenodd"></path></svg></div><div class="ml-3"><h3 class="text-sm font-medium text-red-800"> There were errors loading spectra </h3><div class="mt-2 text-sm text-red-700"><ul role="list" class="list-disc space-y-1 pl-5"><li>${ssrInterpolate($data.spectraError)}</li></ul></div></div></div></div></div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`<iframe name="NMRiumIframe" frameborder="0" allowfullscreen class="rounded-md border" style="${ssrRenderStyle({ "width": "100%", "height": "75vh", "max-height": "600px" })}"${ssrRenderAttr("src", $options.nmriumURL)}></iframe>`);
  if ($data.currentMolecules.length > 0) {
    _push(`<div><ul role="list" class="grid grid-cols-2 gap-x-4 gap-y-8 sm:grid-cols-3 sm:gap-x-6 lg:grid-cols-4 xl:gap-x-8"><!--[-->`);
    ssrRenderList($data.currentMolecules, (molecule) => {
      _push(`<li class="relative">`);
      if (molecule.svg) {
        _push(`<div class="group flex justify-center block w-full aspect-w-10 aspect-h-7 rounded-lg bg-gray-100 focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-offset-gray-100 focus-within:ring-teal-500 overflow-hidden"><div class="p-4 object-cover pointer-events-none group-hover:opacity-75">${molecule.svg}</div></div>`);
      } else {
        _push(`<div><div class="rounded-md border my-3 flex justify-center items-center"><span>${$options.loadMol(molecule.molfile)}</span></div></div>`);
      }
      _push(`</li>`);
    });
    _push(`<!--]--></ul></div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`<div class="grid grid-cols-2 mt-3">`);
  if ($data.selectedSpectraData) {
    _push(`<div class="p-1 pr-2"><label id="tour-step-spectra-info" for="location" class="block text-sm font-medium text-gray-700">Info</label>`);
    if ($data.selectedSpectraData) {
      _push(`<div class="overflow-hidden ring-1 mt-3 ring-black ring-opacity-5 md:rounded-lg"><!--[-->`);
      ssrRenderList($data.selectedSpectraData, (spectra) => {
        _push(`<table class="min-w-full border divide-y divide-gray-300"><thead class="bg-gray-50"><tr><th scope="col" colspan="2" class="py-3.5 pl-4 pr-3 text-left text-sm font-bold text-blue-900 sm:pl-6 lg:pl-8"> Spectra :: ${ssrInterpolate(spectra.id)}</th></tr></thead><thead class="bg-gray-50"><tr><th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6 lg:pl-8"> Field </th><th scope="col" class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900"> Value </th></tr></thead><tbody class="divide-y divide-gray-200 bg-white"><!--[-->`);
        ssrRenderList(Object.keys(spectra.info), (key) => {
          _push(`<tr><td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-6 lg:pl-8">${ssrInterpolate(key)}</td><td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">${ssrInterpolate(spectra.info[key])}</td></tr>`);
        });
        _push(`<!--]--><tr><td class="whitespace-nowrap py-2 pl-2 pr-3 text-sm font-medium text-gray-900 sm:pl-6 bg-gray-100 lg:pl-8" colspan="2"> Meta </td></tr><!--[-->`);
        ssrRenderList(Object.keys(spectra.meta), (key) => {
          _push(`<tr><td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-6 lg:pl-8">${ssrInterpolate(key)}</td><td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">${ssrInterpolate(spectra.meta[key])}</td></tr>`);
        });
        _push(`<!--]--></tbody></table>`);
      });
      _push(`<!--]--></div>`);
    } else {
      _push(`<!---->`);
    }
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  if ($data.selectedSpectraData) {
    _push(`<div class="p-1 pr-2">`);
    if ($data.selectedSpectraData[0]["peaks"] && $data.selectedSpectraData[0]["peaks"]["values"].length) {
      _push(`<span><label id="tour-step-spectra-info" for="location" class="block text-sm font-medium text-gray-700">Peaks</label><div class="overflow-hidden shadow mt-3 ring-1 ring-black ring-opacity-5 md:rounded-lg"><table class="min-w-full divide-y divide-gray-300"><thead class="bg-gray-50"><tr><th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6"> # </th><th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6"> δ (ppm) </th><th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6"> Intensity </th></tr></thead><tbody class="bg-white"><!--[-->`);
      ssrRenderList($data.selectedSpectraData[0]["peaks"]["values"], (peak, $index) => {
        _push(`<tr><td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-6">${ssrInterpolate($index + 1)}</td><td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">${ssrInterpolate(peak.x)}</td><td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">${ssrInterpolate(peak.y)}</td></tr>`);
      });
      _push(`<!--]--></tbody></table></div></span>`);
    } else {
      _push(`<!---->`);
    }
    _push(`<div> </div>`);
    if ($data.selectedSpectraData[0]["ranges"] && $data.selectedSpectraData[0]["ranges"]["values"].length) {
      _push(`<span><label id="tour-step-spectra-info" for="location" class="block text-sm font-medium text-gray-700">Ranges</label><div class="overflow-hidden shadow mt-3 ring-1 ring-black ring-opacity-5 md:rounded-lg"><table class="min-w-full divide-y divide-gray-300"><thead class="bg-gray-50"><tr><th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6"> # </th><th scope="col" class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6"> δ (ppm) </th></tr></thead><tbody class="bg-white"><!--[-->`);
      ssrRenderList($data.selectedSpectraData[0]["ranges"]["values"], (range, $index) => {
        _push(`<tr><td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-6">${ssrInterpolate($index + 1)}</td><td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">${ssrInterpolate(range.from)} - ${ssrInterpolate(range.to)}</td></tr>`);
      });
      _push(`<!--]--></tbody></table></div></span>`);
    } else {
      _push(`<!---->`);
    }
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div></div>`);
}
const _sfc_setup$N = _sfc_main$N.setup;
_sfc_main$N.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/SpectraViewer.vue");
  return _sfc_setup$N ? _sfc_setup$N(props, ctx) : void 0;
};
const SpectraViewer = /* @__PURE__ */ _export_sfc(_sfc_main$N, [["ssrRender", _sfc_ssrRender$M]]);
const _sfc_main$M = {
  components: {
    SpectraViewer,
    Depictor2D,
    DOIBadge
  },
  props: ["study"],
  data() {
    return {};
  },
  computed: {},
  mounted() {
  },
  methods: {}
};
function _sfc_ssrRender$L(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_SpectraViewer = resolveComponent("SpectraViewer");
  _push(`<div${ssrRenderAttrs(_attrs)}>`);
  _push(ssrRenderComponent(_component_SpectraViewer, {
    ref: "spectraViewerREF",
    study: $props.study.data
  }, null, _parent));
  _push(`</div>`);
}
const _sfc_setup$M = _sfc_main$M.setup;
_sfc_main$M.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Public/Embed/Sample.vue");
  return _sfc_setup$M ? _sfc_setup$M(props, ctx) : void 0;
};
const Sample = /* @__PURE__ */ _export_sfc(_sfc_main$M, [["ssrRender", _sfc_ssrRender$L]]);
const __vite_glob_0_42 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Sample
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$L = {
  components: {
    AppLayout,
    Link,
    ArrowDownTrayIcon,
    DOIBadge
  },
  props: ["project", "selectedTab"],
  data() {
    return {
      tabs: [
        {
          name: "info",
          description: "",
          icon: ""
        },
        {
          name: "samples",
          description: "",
          icon: ""
        },
        {
          name: "files",
          description: "",
          icon: ""
        },
        {
          name: "license",
          description: "",
          icon: ""
        }
      ]
    };
  },
  computed: {
    url() {
      return String(this.$page.props.url);
    }
  },
  mounted() {
  },
  methods: {
    toggleUpVote() {
      if (this.$page.props.auth.user.username && this.$page.props.auth.user.username != "") {
        const url = "/projects/" + this.project.data.id + "/toggleUpVote";
        axios.get(url).catch((err) => {
          if (err.response.status !== 200 || err.response.status !== 201) {
            throw new Error(
              `API call failed with status code: ${err.response.status} after multiple attempts`
            );
          }
        }).then(function() {
          router$1.reload({ only: ["project"] });
        });
      } else {
        this.$inertia.visit(route("login"));
      }
    }
  }
};
function _sfc_ssrRender$K(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_DOIBadge = resolveComponent("DOIBadge");
  const _component_Link = resolveComponent("Link");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({
    title: $props.project.name
  }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white border-b"${_scopeId}><div class="border-b"${_scopeId}><div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-2"${_scopeId}>`);
        if ($props.project && $props.project.data.owner) {
          _push2(`<img class="inline h-7 w-7 rounded-full"${ssrRenderAttr("src", $props.project.data.owner.profile_photo_url)}${_scopeId}>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<p class="inline ml-3 text-xs font-bold text-gray-500 uppercase"${_scopeId}><a class="text-gray-900"${_scopeId}>${ssrInterpolate($props.project.data.owner.first_name + " " + $props.project.data.owner.last_name)}</a><span class="block md:inline ml-10 md:ml-0"${_scopeId}> updated on <time${_scopeId}>${ssrInterpolate(_ctx.formatDate($props.project.data.updated_at))}</time></span></p><div class="flex mt-2 md:inline"${_scopeId}>`);
        if ($props.project.data.download_url) {
          _push2(`<div class="float-left md:float-right"${_scopeId}><a class="md:ml-4 cursor-pointer relative inline-flex items-center px-4 py-1 rounded-full border border-gray-300 bg-white text-sm font-black text-dark hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500"${ssrRenderAttr("href", $props.project.data.download_url)}${_scopeId}> Download </a></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="float-left md:float-right"${_scopeId}><div class="flex-shrink-0"${_scopeId}>`);
        if ($props.project.data.stats) {
          _push2(`<span class="relative z-0 inline-flex shadow-sm rounded-full"${_scopeId}><button type="button" class="relative inline-flex items-center px-1 py-1 rounded-l-full border border-gray-300 bg-white text-sm font-medium text-gray-900 hover:bg-gray-50"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor"${_scopeId}><path fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" clip-rule="evenodd"${_scopeId}></path></svg></button><a class="-ml-px relative inline-flex items-center px-4 py-1 rounded-r-full border border-gray-300 bg-white text-sm font-black text-dark hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500"${_scopeId}>${ssrInterpolate($props.project.data.stats.likes)}</a></span>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div></div></div></div><div${_scopeId}><div class="pb-5"${_scopeId}><div${_scopeId}><div${_scopeId}><img class="h-32 w-full object-cover lg:h-48" src="https://images.unsplash.com/photo-1637625854255-d893202554f4?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=1950&amp;q=80" alt=""${_scopeId}></div><div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"${_scopeId}><div class="-mt-12 sm:-mt-16 sm:flex sm:items-end sm:space-x-5"${_scopeId}><div class="flex mb-12 h-24 w-72"${_scopeId}>`);
        if ($props.project.data.photo_url && $props.project.data.photo_url != "") {
          _push2(`<img class="h-24 w-72 object-cover border rounded ring-4 ring-white sm:h-32 sm:w-96"${ssrRenderAttr("src", $props.project.data.photo_url)} alt=""${_scopeId}>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div><div class="min-w-0 flex-1"${_scopeId}><h1 class="text-2xl pl-1 font-bold text-gray-900 break-words"${_scopeId}>${ssrInterpolate($props.project.data.name)} <a class="float-right font-light hover:text-blue-600 hover:cursor-pointer text-gray-200"${_scopeId}>#${ssrInterpolate($props.project.data.identifier)}</a></h1><p class="text-gray-700 pl-1 pt-2"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_DOIBadge, {
          doi: $props.project.data.doi
        }, null, _parent2, _scopeId));
        _push2(`</p><div class="sm:col-span-12 pt-4"${_scopeId}><!--[-->`);
        ssrRenderList($props.project.data.tags, (tag) => {
          _push2(`<span class="mt-1 mr-1 inline-flex items-center rounded-full bg-gray-50 px-2 py-1 text-sm font-medium text-gray-600 ring-1 ring-inset ring-gray-500/10" target="_blank"${ssrRenderAttr(
            "href",
            "/projects?tag=" + tag.name.en
          )}${_scopeId}>${ssrInterpolate(tag.name.en)}</span>`);
        });
        _push2(`<!--]--></div></div></div></div></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white border-b" }, [
            createVNode("div", { class: "border-b" }, [
              createVNode("div", { class: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-2" }, [
                $props.project && $props.project.data.owner ? (openBlock(), createBlock("img", {
                  key: 0,
                  class: "inline h-7 w-7 rounded-full",
                  src: $props.project.data.owner.profile_photo_url
                }, null, 8, ["src"])) : createCommentVNode("", true),
                createVNode("p", { class: "inline ml-3 text-xs font-bold text-gray-500 uppercase" }, [
                  createVNode("a", { class: "text-gray-900" }, toDisplayString($props.project.data.owner.first_name + " " + $props.project.data.owner.last_name), 1),
                  createVNode("span", { class: "block md:inline ml-10 md:ml-0" }, [
                    createTextVNode(" updated on "),
                    createVNode("time", null, toDisplayString(_ctx.formatDate($props.project.data.updated_at)), 1)
                  ])
                ]),
                createVNode("div", { class: "flex mt-2 md:inline" }, [
                  $props.project.data.download_url ? (openBlock(), createBlock("div", {
                    key: 0,
                    class: "float-left md:float-right"
                  }, [
                    createVNode("a", {
                      class: "md:ml-4 cursor-pointer relative inline-flex items-center px-4 py-1 rounded-full border border-gray-300 bg-white text-sm font-black text-dark hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500",
                      href: $props.project.data.download_url
                    }, " Download ", 8, ["href"])
                  ])) : createCommentVNode("", true),
                  createVNode("div", { class: "float-left md:float-right" }, [
                    createVNode("div", { class: "flex-shrink-0" }, [
                      $props.project.data.stats ? (openBlock(), createBlock("span", {
                        key: 0,
                        class: "relative z-0 inline-flex shadow-sm rounded-full"
                      }, [
                        createVNode("button", {
                          type: "button",
                          class: "relative inline-flex items-center px-1 py-1 rounded-l-full border border-gray-300 bg-white text-sm font-medium text-gray-900 hover:bg-gray-50",
                          onClick: ($event) => $options.toggleUpVote()
                        }, [
                          (openBlock(), createBlock("svg", {
                            xmlns: "http://www.w3.org/2000/svg",
                            class: "h-5 w-5",
                            viewBox: "0 0 20 20",
                            fill: "currentColor"
                          }, [
                            createVNode("path", {
                              "fill-rule": "evenodd",
                              d: "M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z",
                              "clip-rule": "evenodd"
                            })
                          ]))
                        ], 8, ["onClick"]),
                        createVNode("a", { class: "-ml-px relative inline-flex items-center px-4 py-1 rounded-r-full border border-gray-300 bg-white text-sm font-black text-dark hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500" }, toDisplayString($props.project.data.stats.likes), 1)
                      ])) : createCommentVNode("", true)
                    ])
                  ])
                ])
              ])
            ]),
            createVNode("div", null, [
              createVNode("div", { class: "pb-5" }, [
                createVNode("div", null, [
                  createVNode("div", null, [
                    createVNode("img", {
                      class: "h-32 w-full object-cover lg:h-48",
                      src: "https://images.unsplash.com/photo-1637625854255-d893202554f4?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80",
                      alt: ""
                    })
                  ]),
                  createVNode("div", { class: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" }, [
                    createVNode("div", { class: "-mt-12 sm:-mt-16 sm:flex sm:items-end sm:space-x-5" }, [
                      createVNode("div", { class: "flex mb-12 h-24 w-72" }, [
                        $props.project.data.photo_url && $props.project.data.photo_url != "" ? (openBlock(), createBlock("img", {
                          key: 0,
                          class: "h-24 w-72 object-cover border rounded ring-4 ring-white sm:h-32 sm:w-96",
                          src: $props.project.data.photo_url,
                          alt: ""
                        }, null, 8, ["src"])) : createCommentVNode("", true)
                      ])
                    ]),
                    createVNode("div", { class: "min-w-0 flex-1" }, [
                      createVNode("h1", { class: "text-2xl pl-1 font-bold text-gray-900 break-words" }, [
                        createTextVNode(toDisplayString($props.project.data.name) + " ", 1),
                        createVNode("a", { class: "float-right font-light hover:text-blue-600 hover:cursor-pointer text-gray-200" }, "#" + toDisplayString($props.project.data.identifier), 1)
                      ]),
                      createVNode("p", { class: "text-gray-700 pl-1 pt-2" }, [
                        createVNode(_component_DOIBadge, {
                          doi: $props.project.data.doi
                        }, null, 8, ["doi"])
                      ]),
                      createVNode("div", { class: "sm:col-span-12 pt-4" }, [
                        (openBlock(true), createBlock(Fragment, null, renderList($props.project.data.tags, (tag) => {
                          return openBlock(), createBlock("span", {
                            key: tag.id,
                            class: "mt-1 mr-1 inline-flex items-center rounded-full bg-gray-50 px-2 py-1 text-sm font-medium text-gray-600 ring-1 ring-inset ring-gray-500/10",
                            target: "_blank",
                            href: "/projects?tag=" + tag.name.en
                          }, toDisplayString(tag.name.en), 9, ["href"]);
                        }), 128))
                      ])
                    ])
                  ])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<main class="flex-1 relative z-0 overflow-y-auto focus:outline-none xl:order-last"${_scopeId}><div${_scopeId}><div class="mt-6 sm:mt-2 2xl:mt-5"${_scopeId}><div class="border-b border-gray-200"${_scopeId}><div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"${_scopeId}><nav class="-mb-px flex space-x-8" aria-label="Tabs"${_scopeId}><!--[-->`);
        ssrRenderList($data.tabs, (tab) => {
          _push2(ssrRenderComponent(_component_Link, {
            key: tab.name,
            href: $props.project.data.public_url + "?tab=" + tab.name,
            class: [
              $props.selectedTab == tab.name ? "border-pink-500 text-gray-900" : "",
              "cursor-pointer capitalize text-gray-900 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm"
            ],
            "aria-current": "page"
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`${ssrInterpolate(tab.name)}`);
              } else {
                return [
                  createTextVNode(toDisplayString(tab.name), 1)
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
        });
        _push2(`<!--]--></nav></div></div></div><div class="bg-white"${_scopeId}>`);
        ssrRenderSlot(_ctx.$slots, "project-content", {}, null, _push2, _parent2, _scopeId);
        _push2(`</div></div></main>`);
      } else {
        return [
          createVNode("main", { class: "flex-1 relative z-0 overflow-y-auto focus:outline-none xl:order-last" }, [
            createVNode("div", null, [
              createVNode("div", { class: "mt-6 sm:mt-2 2xl:mt-5" }, [
                createVNode("div", { class: "border-b border-gray-200" }, [
                  createVNode("div", { class: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" }, [
                    createVNode("nav", {
                      class: "-mb-px flex space-x-8",
                      "aria-label": "Tabs"
                    }, [
                      (openBlock(true), createBlock(Fragment, null, renderList($data.tabs, (tab) => {
                        return openBlock(), createBlock(_component_Link, {
                          key: tab.name,
                          href: $props.project.data.public_url + "?tab=" + tab.name,
                          class: [
                            $props.selectedTab == tab.name ? "border-pink-500 text-gray-900" : "",
                            "cursor-pointer capitalize text-gray-900 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm"
                          ],
                          "aria-current": "page"
                        }, {
                          default: withCtx(() => [
                            createTextVNode(toDisplayString(tab.name), 1)
                          ]),
                          _: 2
                        }, 1032, ["href", "class"]);
                      }), 128))
                    ])
                  ])
                ])
              ]),
              createVNode("div", { class: "bg-white" }, [
                renderSlot(_ctx.$slots, "project-content")
              ])
            ])
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$L = _sfc_main$L.setup;
_sfc_main$L.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Public/Project/Layout.vue");
  return _sfc_setup$L ? _sfc_setup$L(props, ctx) : void 0;
};
const ProjectLayout = /* @__PURE__ */ _export_sfc(_sfc_main$L, [["ssrRender", _sfc_ssrRender$K]]);
const __vite_glob_0_45 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ProjectLayout
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$K = {
  components: {
    ProjectLayout,
    ShareIcon,
    ClipboardDocumentIcon,
    Menu,
    MenuButton,
    MenuItem,
    MenuItems,
    SpectraViewer,
    DOIBadge,
    Depictor2D,
    Head
  },
  props: ["project", "tab", "study", "dataset"],
  data() {
    return {
      selectedSpectraData: null,
      schema: {}
    };
  },
  computed: {
    shareURL() {
      return this.dataset.data.public_url;
    },
    url() {
      return String(this.$page.props.url);
    }
  },
  mounted() {
    axios.get(route("bioschemas.id", this.dataset.data.identifier)).then((response) => {
      this.schema = response.data;
    });
  }
};
function _sfc_ssrRender$J(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = resolveComponent("Head");
  const _component_project_layout = resolveComponent("project-layout");
  const _component_DOIBadge = resolveComponent("DOIBadge");
  const _component_Menu = resolveComponent("Menu");
  const _component_MenuButton = resolveComponent("MenuButton");
  const _component_ShareIcon = resolveComponent("ShareIcon");
  const _component_MenuItems = resolveComponent("MenuItems");
  const _component_MenuItem = resolveComponent("MenuItem");
  const _component_ClipboardDocumentIcon = resolveComponent("ClipboardDocumentIcon");
  const _component_SpectraViewer = resolveComponent("SpectraViewer");
  const _component_Depictor2D = resolveComponent("Depictor2D");
  _push(`<!--[-->`);
  _push(ssrRenderComponent(_component_Head, null, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<title${_scopeId}>${ssrInterpolate($props.dataset.data.name + " - " + $props.study.data.name)}</title><meta name="description" content="Your nmrxiv description"${_scopeId}><meta property="og:title" content="nmrXiv-msXiv-VibSpecDB synergies weekly meeting agenda"${_scopeId}><meta property="og:type" content="article"${_scopeId}><meta property="og:site_name" content="Google Docs"${_scopeId}><meta property="og:url" content="https://docs.google.com/document/d/1kq53WvSkvlY5QdgU6-AP2szXuPAfUMxq4x7uAKP9aX4/edit?usp=embed_facebook"${_scopeId}><meta property="og:image" content="https://lh7-us.googleusercontent.com/docs/AHkbwyJM4oyOCYTE0UI2J6YeyMCjJtFVCYB3hNPlxoQeMvL5ULxddInOt7igI6zjTN0yo4wmjVvG-IpE1d3ZHuLyL2feyg2dzdw_FEaq4hUd6MY4jfM=w1200-h630-p"${_scopeId}><meta property="og:image:width" content="1200"${_scopeId}><meta property="og:image:height" content="630"${_scopeId}><meta name="google" content="notranslate"${_scopeId}><meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0"${_scopeId}><meta http-equiv="X-UA-Compatible" content="IE=edge;"${_scopeId}><meta name="fragment" content="!"${_scopeId}><meta name="referrer" content="strict-origin-when-cross-origin"${_scopeId}><link rel="shortcut icon" href="https://ssl.gstatic.com/docs/documents/images/kix-favicon-2023q4.ico"${_scopeId}><link rel="chrome-webstore-item" href="https://chrome.google.com/webstore/detail/ghbmnnjooekpmoecnnnilnnbdlolhkhi"${_scopeId}><link rel="chrome-webstore-item" href="https://chrome.google.com/webstore/detail/apdfllckaahabafndbhieahigkjlhalf"${_scopeId}><link rel="manifest" href="/document/manifest.json" crossorigin="use-credentials"${_scopeId}>`);
      } else {
        return [
          createVNode("title", null, toDisplayString($props.dataset.data.name + " - " + $props.study.data.name), 1),
          createVNode("meta", {
            name: "description",
            content: "Your nmrxiv description"
          }),
          createVNode("meta", {
            property: "og:title",
            content: "nmrXiv-msXiv-VibSpecDB synergies weekly meeting agenda"
          }),
          createVNode("meta", {
            property: "og:type",
            content: "article"
          }),
          createVNode("meta", {
            property: "og:site_name",
            content: "Google Docs"
          }),
          createVNode("meta", {
            property: "og:url",
            content: "https://docs.google.com/document/d/1kq53WvSkvlY5QdgU6-AP2szXuPAfUMxq4x7uAKP9aX4/edit?usp=embed_facebook"
          }),
          createVNode("meta", {
            property: "og:image",
            content: "https://lh7-us.googleusercontent.com/docs/AHkbwyJM4oyOCYTE0UI2J6YeyMCjJtFVCYB3hNPlxoQeMvL5ULxddInOt7igI6zjTN0yo4wmjVvG-IpE1d3ZHuLyL2feyg2dzdw_FEaq4hUd6MY4jfM=w1200-h630-p"
          }),
          createVNode("meta", {
            property: "og:image:width",
            content: "1200"
          }),
          createVNode("meta", {
            property: "og:image:height",
            content: "630"
          }),
          createVNode("meta", {
            name: "google",
            content: "notranslate"
          }),
          createVNode("meta", {
            name: "viewport",
            content: "width=device-width, user-scalable=no, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0"
          }),
          createVNode("meta", {
            "http-equiv": "X-UA-Compatible",
            content: "IE=edge;"
          }),
          createVNode("meta", {
            name: "fragment",
            content: "!"
          }),
          createVNode("meta", {
            name: "referrer",
            content: "strict-origin-when-cross-origin"
          }),
          createVNode("link", {
            rel: "shortcut icon",
            href: "https://ssl.gstatic.com/docs/documents/images/kix-favicon-2023q4.ico"
          }),
          createVNode("link", {
            rel: "chrome-webstore-item",
            href: "https://chrome.google.com/webstore/detail/ghbmnnjooekpmoecnnnilnnbdlolhkhi"
          }),
          createVNode("link", {
            rel: "chrome-webstore-item",
            href: "https://chrome.google.com/webstore/detail/apdfllckaahabafndbhieahigkjlhalf"
          }),
          createVNode("link", {
            rel: "manifest",
            href: "/document/manifest.json",
            crossorigin: "use-credentials"
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(ssrRenderComponent(_component_project_layout, {
    project: $props.project,
    "selected-tab": $props.tab
  }, {
    "project-content": withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="pb-10 mb-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6"${_scopeId}><h1 class="mt-2 text-2xl font-bold break-words text-gray-900"${_scopeId}><span${_scopeId}>${ssrInterpolate($props.study.data.name)} &gt; <span class="text-blue-500"${_scopeId}>${ssrInterpolate($props.dataset.data.name)} `);
        if ($props.dataset.data.type) {
          _push2(`<span${_scopeId}>- (${ssrInterpolate($props.dataset.data.type.replace(/,\s*$/, ""))})</span>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</span></span><div class="text-sm"${_scopeId}><span class="text-gray-400 pt-2"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_DOIBadge, {
          doi: $props.dataset.data.doi,
          color: "bg-green-100"
        }, null, _parent2, _scopeId));
        _push2(`</span></div><div class="float-right"${_scopeId}><span class="flex-0.5 self-center"${_scopeId}>`);
        if ($props.dataset && $props.study.data.is_public) {
          _push2(ssrRenderComponent(_component_Menu, {
            as: "div",
            class: "relative text-left"
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<div${_scopeId2}>`);
                _push3(ssrRenderComponent(_component_MenuButton, { class: "bg-white text-sm rounded-full flex items-center text-gray-400 hover:text-gray-600" }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(ssrRenderComponent(_component_ShareIcon, {
                        class: "h-4 w-4 text-gray-800 flex-shrink-0 mr-2",
                        "aria-hidden": "true"
                      }, null, _parent4, _scopeId3));
                      _push4(`Share `);
                    } else {
                      return [
                        createVNode(_component_ShareIcon, {
                          class: "h-4 w-4 text-gray-800 flex-shrink-0 mr-2",
                          "aria-hidden": "true"
                        }),
                        createTextVNode("Share ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                _push3(`</div>`);
                _push3(ssrRenderComponent(_component_MenuItems, { class: "origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50" }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`<div class="py-1"${_scopeId3}>`);
                      _push4(ssrRenderComponent(_component_MenuItem, null, {
                        default: withCtx(({ active }, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(`<div class="${ssrRenderClass([
                              active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                              "block px-4 py-2 text-sm flex"
                            ])}"${_scopeId4}><div class="flex-grow"${_scopeId4}><input id="datasetPublicURLCopy" readonly type="text"${ssrRenderAttr("value", $options.shareURL)} class="rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300"${_scopeId4}></div><button type="button" class="-ml-px relative inline-flex items-center space-x-2 px-2 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500"${_scopeId4}><span${_scopeId4}>`);
                            _push5(ssrRenderComponent(_component_ClipboardDocumentIcon, {
                              class: "h-5 w-5",
                              "aria-hidden": "true"
                            }, null, _parent5, _scopeId4));
                            _push5(`</span></button></div>`);
                          } else {
                            return [
                              createVNode("div", {
                                class: [
                                  active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                  "block px-4 py-2 text-sm flex"
                                ]
                              }, [
                                createVNode("div", { class: "flex-grow" }, [
                                  createVNode("input", {
                                    id: "datasetPublicURLCopy",
                                    readonly: "",
                                    type: "text",
                                    value: $options.shareURL,
                                    class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                    onFocus: ($event) => $event.target.select()
                                  }, null, 40, ["value", "onFocus"])
                                ]),
                                createVNode("button", {
                                  type: "button",
                                  class: "-ml-px relative inline-flex items-center space-x-2 px-2 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                  onClick: ($event) => _ctx.copyToClipboard(
                                    $options.shareURL,
                                    "datasetPublicURLCopy"
                                  )
                                }, [
                                  createVNode("span", null, [
                                    createVNode(_component_ClipboardDocumentIcon, {
                                      class: "h-5 w-5",
                                      "aria-hidden": "true"
                                    })
                                  ])
                                ], 8, ["onClick"])
                              ], 2)
                            ];
                          }
                        }),
                        _: 1
                      }, _parent4, _scopeId3));
                      _push4(`</div>`);
                    } else {
                      return [
                        createVNode("div", { class: "py-1" }, [
                          createVNode(_component_MenuItem, null, {
                            default: withCtx(({ active }) => [
                              createVNode("div", {
                                class: [
                                  active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                  "block px-4 py-2 text-sm flex"
                                ]
                              }, [
                                createVNode("div", { class: "flex-grow" }, [
                                  createVNode("input", {
                                    id: "datasetPublicURLCopy",
                                    readonly: "",
                                    type: "text",
                                    value: $options.shareURL,
                                    class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                    onFocus: ($event) => $event.target.select()
                                  }, null, 40, ["value", "onFocus"])
                                ]),
                                createVNode("button", {
                                  type: "button",
                                  class: "-ml-px relative inline-flex items-center space-x-2 px-2 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                  onClick: ($event) => _ctx.copyToClipboard(
                                    $options.shareURL,
                                    "datasetPublicURLCopy"
                                  )
                                }, [
                                  createVNode("span", null, [
                                    createVNode(_component_ClipboardDocumentIcon, {
                                      class: "h-5 w-5",
                                      "aria-hidden": "true"
                                    })
                                  ])
                                ], 8, ["onClick"])
                              ], 2)
                            ]),
                            _: 1
                          })
                        ])
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
              } else {
                return [
                  createVNode("div", null, [
                    createVNode(_component_MenuButton, { class: "bg-white text-sm rounded-full flex items-center text-gray-400 hover:text-gray-600" }, {
                      default: withCtx(() => [
                        createVNode(_component_ShareIcon, {
                          class: "h-4 w-4 text-gray-800 flex-shrink-0 mr-2",
                          "aria-hidden": "true"
                        }),
                        createTextVNode("Share ")
                      ]),
                      _: 1
                    })
                  ]),
                  createVNode(Transition, {
                    "enter-active-class": "transition ease-out duration-100",
                    "enter-from-class": "transform opacity-0 scale-95",
                    "enter-to-class": "transform opacity-100 scale-100",
                    "leave-active-class": "transition ease-in duration-75",
                    "leave-from-class": "transform opacity-100 scale-100",
                    "leave-to-class": "transform opacity-0 scale-95"
                  }, {
                    default: withCtx(() => [
                      createVNode(_component_MenuItems, { class: "origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50" }, {
                        default: withCtx(() => [
                          createVNode("div", { class: "py-1" }, [
                            createVNode(_component_MenuItem, null, {
                              default: withCtx(({ active }) => [
                                createVNode("div", {
                                  class: [
                                    active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                    "block px-4 py-2 text-sm flex"
                                  ]
                                }, [
                                  createVNode("div", { class: "flex-grow" }, [
                                    createVNode("input", {
                                      id: "datasetPublicURLCopy",
                                      readonly: "",
                                      type: "text",
                                      value: $options.shareURL,
                                      class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                      onFocus: ($event) => $event.target.select()
                                    }, null, 40, ["value", "onFocus"])
                                  ]),
                                  createVNode("button", {
                                    type: "button",
                                    class: "-ml-px relative inline-flex items-center space-x-2 px-2 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                    onClick: ($event) => _ctx.copyToClipboard(
                                      $options.shareURL,
                                      "datasetPublicURLCopy"
                                    )
                                  }, [
                                    createVNode("span", null, [
                                      createVNode(_component_ClipboardDocumentIcon, {
                                        class: "h-5 w-5",
                                        "aria-hidden": "true"
                                      })
                                    ])
                                  ], 8, ["onClick"])
                                ], 2)
                              ]),
                              _: 1
                            })
                          ])
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  })
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</span></div></h1><div class="mt-4"${_scopeId}><div class="relative"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-100"${_scopeId}></div></div><div class="relative flex items-center justify-between"${_scopeId}><span class="pr-3 text-md bg-white font-medium text-gray-400"${_scopeId}> Spectra </span></div></div><h1 class="mt-2 text-2xl font-bold break-words text-gray-900"${_scopeId}></h1><div class="my-7"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_SpectraViewer, {
          dataset: $props.dataset.data,
          project: $props.project.data,
          study: $props.study.data
        }, null, _parent2, _scopeId));
        _push2(`</div></div>`);
        if ($props.study.data.tags.length > 0) {
          _push2(`<div class="mt-4"${_scopeId}><div class="relative"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-100"${_scopeId}></div></div><div class="relative flex items-center justify-between"${_scopeId}><span class="pr-3 text-md bg-white font-medium text-gray-400"${_scopeId}> Keywords </span></div></div><div class="mt-3"${_scopeId}><dd class="mt-1 text-md text-gray-900 space-y-5"${_scopeId}><p${_scopeId}><!--[-->`);
          ssrRenderList($props.study.data.tags, (tag) => {
            _push2(`<span class="mr-2"${_scopeId}><span class="inline-flex items-center px-2.5 py-0.5 rounded-md text-sm font-medium bg-indigo-100 text-indigo-800"${_scopeId}><svg class="-ml-0.5 mr-1.5 h-2 w-2 text-indigo-400" fill="currentColor" viewBox="0 0 8 8"${_scopeId}><circle cx="4" cy="4" r="3"${_scopeId}></circle></svg> ${ssrInterpolate(tag.name["en"])}</span></span>`);
          });
          _push2(`<!--]--></p></dd></div></div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($props.study.data.sample.molecules.length > 0 || $props.study.data.sample.description == "") {
          _push2(`<div class="mt-4"${_scopeId}><div class="relative"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-100"${_scopeId}></div></div><div class="relative flex items-center justify-between"${_scopeId}><span class="pr-3 text-md bg-white font-medium text-gray-400"${_scopeId}> Sample </span></div></div>`);
          if ($props.study.data.sample.molecules.length > 0) {
            _push2(`<div class="mt-3"${_scopeId}><label${_scopeId}>Molecular Composition</label><div class="grid md:grid-cols-2 gap-2 mt-2"${_scopeId}><div class="pr-2"${_scopeId}>`);
            if ($props.study.data.sample.molecules.length > 0) {
              _push2(`<div class="flow-root"${_scopeId}><ul role="list" class="-mb-8"${_scopeId}><!--[-->`);
              ssrRenderList($props.study.data.sample.molecules, (molecule) => {
                _push2(`<li${_scopeId}><div class="relative pb-8"${_scopeId}><span class="absolute top-5 left-5 -ml-px h-full w-0.5 bg-gray-200" aria-hidden="true"${_scopeId}></span><div class="relative flex items-start space-x-3"${_scopeId}>`);
                if (molecule && molecule.pivot) {
                  _push2(`<div class="relative"${_scopeId}><div class="rounded-full border p-2 z-10 bg-gray-100 text-sm"${_scopeId}>${ssrInterpolate(molecule.pivot.percentage_composition)}% </div></div>`);
                } else {
                  _push2(`<!---->`);
                }
                _push2(`<div class="min-w-0 flex-1"${_scopeId}><div${_scopeId}><div class="text-sm"${_scopeId}><a class="font-medium text-gray-900"${_scopeId}>${ssrInterpolate(molecule.standard_inchi)}</a></div></div><div class="mt-2 text-sm text-gray-700"${_scopeId}><div class="rounded-md border my-3 flex justify-center items-center"${_scopeId}>`);
                _push2(ssrRenderComponent(_component_Depictor2D, {
                  class: "py-4 -px-4",
                  molecule: molecule.canonical_smiles
                }, null, _parent2, _scopeId));
                _push2(`</div></div></div></div></div></li>`);
              });
              _push2(`<!--]--></ul><div class="rounded-full border p-2 z-10 bg-gray-100 text-sm mt-14 text-center"${_scopeId}> Sample chemical composition </div></div>`);
            } else {
              _push2(`<div${_scopeId}><div class="text-center my-10 py-10"${_scopeId}><h3 class="mt-2 text-sm font-medium text-gray-900"${_scopeId}> No structures associated with the sample yet! </h3><p class="mt-1 text-sm text-gray-500"${_scopeId}> Get started by adding a new molecule. </p></div></div>`);
            }
            _push2(`</div></div></div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "pb-10 mb-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6" }, [
            createVNode("h1", { class: "mt-2 text-2xl font-bold break-words text-gray-900" }, [
              createVNode("span", null, [
                createTextVNode(toDisplayString($props.study.data.name) + " > ", 1),
                createVNode("span", { class: "text-blue-500" }, [
                  createTextVNode(toDisplayString($props.dataset.data.name) + " ", 1),
                  $props.dataset.data.type ? (openBlock(), createBlock("span", { key: 0 }, "- (" + toDisplayString($props.dataset.data.type.replace(/,\s*$/, "")) + ")", 1)) : createCommentVNode("", true)
                ])
              ]),
              createVNode("div", { class: "text-sm" }, [
                createVNode("span", { class: "text-gray-400 pt-2" }, [
                  createVNode(_component_DOIBadge, {
                    doi: $props.dataset.data.doi,
                    color: "bg-green-100"
                  }, null, 8, ["doi"])
                ])
              ]),
              createVNode("div", { class: "float-right" }, [
                createVNode("span", { class: "flex-0.5 self-center" }, [
                  $props.dataset && $props.study.data.is_public ? (openBlock(), createBlock(_component_Menu, {
                    key: 0,
                    as: "div",
                    class: "relative text-left"
                  }, {
                    default: withCtx(() => [
                      createVNode("div", null, [
                        createVNode(_component_MenuButton, { class: "bg-white text-sm rounded-full flex items-center text-gray-400 hover:text-gray-600" }, {
                          default: withCtx(() => [
                            createVNode(_component_ShareIcon, {
                              class: "h-4 w-4 text-gray-800 flex-shrink-0 mr-2",
                              "aria-hidden": "true"
                            }),
                            createTextVNode("Share ")
                          ]),
                          _: 1
                        })
                      ]),
                      createVNode(Transition, {
                        "enter-active-class": "transition ease-out duration-100",
                        "enter-from-class": "transform opacity-0 scale-95",
                        "enter-to-class": "transform opacity-100 scale-100",
                        "leave-active-class": "transition ease-in duration-75",
                        "leave-from-class": "transform opacity-100 scale-100",
                        "leave-to-class": "transform opacity-0 scale-95"
                      }, {
                        default: withCtx(() => [
                          createVNode(_component_MenuItems, { class: "origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50" }, {
                            default: withCtx(() => [
                              createVNode("div", { class: "py-1" }, [
                                createVNode(_component_MenuItem, null, {
                                  default: withCtx(({ active }) => [
                                    createVNode("div", {
                                      class: [
                                        active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                        "block px-4 py-2 text-sm flex"
                                      ]
                                    }, [
                                      createVNode("div", { class: "flex-grow" }, [
                                        createVNode("input", {
                                          id: "datasetPublicURLCopy",
                                          readonly: "",
                                          type: "text",
                                          value: $options.shareURL,
                                          class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                          onFocus: ($event) => $event.target.select()
                                        }, null, 40, ["value", "onFocus"])
                                      ]),
                                      createVNode("button", {
                                        type: "button",
                                        class: "-ml-px relative inline-flex items-center space-x-2 px-2 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                        onClick: ($event) => _ctx.copyToClipboard(
                                          $options.shareURL,
                                          "datasetPublicURLCopy"
                                        )
                                      }, [
                                        createVNode("span", null, [
                                          createVNode(_component_ClipboardDocumentIcon, {
                                            class: "h-5 w-5",
                                            "aria-hidden": "true"
                                          })
                                        ])
                                      ], 8, ["onClick"])
                                    ], 2)
                                  ]),
                                  _: 1
                                })
                              ])
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  })) : createCommentVNode("", true)
                ])
              ])
            ]),
            createVNode("div", { class: "mt-4" }, [
              createVNode("div", { class: "relative" }, [
                createVNode("div", {
                  class: "absolute inset-0 flex items-center",
                  "aria-hidden": "true"
                }, [
                  createVNode("div", { class: "w-full border-t border-gray-100" })
                ]),
                createVNode("div", { class: "relative flex items-center justify-between" }, [
                  createVNode("span", { class: "pr-3 text-md bg-white font-medium text-gray-400" }, " Spectra ")
                ])
              ]),
              createVNode("h1", { class: "mt-2 text-2xl font-bold break-words text-gray-900" }),
              createVNode("div", { class: "my-7" }, [
                createVNode(_component_SpectraViewer, {
                  dataset: $props.dataset.data,
                  project: $props.project.data,
                  study: $props.study.data
                }, null, 8, ["dataset", "project", "study"])
              ])
            ]),
            $props.study.data.tags.length > 0 ? (openBlock(), createBlock("div", {
              key: 0,
              class: "mt-4"
            }, [
              createVNode("div", { class: "relative" }, [
                createVNode("div", {
                  class: "absolute inset-0 flex items-center",
                  "aria-hidden": "true"
                }, [
                  createVNode("div", { class: "w-full border-t border-gray-100" })
                ]),
                createVNode("div", { class: "relative flex items-center justify-between" }, [
                  createVNode("span", { class: "pr-3 text-md bg-white font-medium text-gray-400" }, " Keywords ")
                ])
              ]),
              createVNode("div", { class: "mt-3" }, [
                createVNode("dd", { class: "mt-1 text-md text-gray-900 space-y-5" }, [
                  createVNode("p", null, [
                    (openBlock(true), createBlock(Fragment, null, renderList($props.study.data.tags, (tag) => {
                      return openBlock(), createBlock("span", {
                        key: tag.id,
                        class: "mr-2"
                      }, [
                        createVNode("span", { class: "inline-flex items-center px-2.5 py-0.5 rounded-md text-sm font-medium bg-indigo-100 text-indigo-800" }, [
                          (openBlock(), createBlock("svg", {
                            class: "-ml-0.5 mr-1.5 h-2 w-2 text-indigo-400",
                            fill: "currentColor",
                            viewBox: "0 0 8 8"
                          }, [
                            createVNode("circle", {
                              cx: "4",
                              cy: "4",
                              r: "3"
                            })
                          ])),
                          createTextVNode(" " + toDisplayString(tag.name["en"]), 1)
                        ])
                      ]);
                    }), 128))
                  ])
                ])
              ])
            ])) : createCommentVNode("", true),
            $props.study.data.sample.molecules.length > 0 || $props.study.data.sample.description == "" ? (openBlock(), createBlock("div", {
              key: 1,
              class: "mt-4"
            }, [
              createVNode("div", { class: "relative" }, [
                createVNode("div", {
                  class: "absolute inset-0 flex items-center",
                  "aria-hidden": "true"
                }, [
                  createVNode("div", { class: "w-full border-t border-gray-100" })
                ]),
                createVNode("div", { class: "relative flex items-center justify-between" }, [
                  createVNode("span", { class: "pr-3 text-md bg-white font-medium text-gray-400" }, " Sample ")
                ])
              ]),
              $props.study.data.sample.molecules.length > 0 ? (openBlock(), createBlock("div", {
                key: 0,
                class: "mt-3"
              }, [
                createVNode("label", null, "Molecular Composition"),
                createVNode("div", { class: "grid md:grid-cols-2 gap-2 mt-2" }, [
                  createVNode("div", { class: "pr-2" }, [
                    $props.study.data.sample.molecules.length > 0 ? (openBlock(), createBlock("div", {
                      key: 0,
                      class: "flow-root"
                    }, [
                      createVNode("ul", {
                        role: "list",
                        class: "-mb-8"
                      }, [
                        (openBlock(true), createBlock(Fragment, null, renderList($props.study.data.sample.molecules, (molecule) => {
                          return openBlock(), createBlock("li", {
                            key: molecule.standard_inchi
                          }, [
                            createVNode("div", { class: "relative pb-8" }, [
                              createVNode("span", {
                                class: "absolute top-5 left-5 -ml-px h-full w-0.5 bg-gray-200",
                                "aria-hidden": "true"
                              }),
                              createVNode("div", { class: "relative flex items-start space-x-3" }, [
                                molecule && molecule.pivot ? (openBlock(), createBlock("div", {
                                  key: 0,
                                  class: "relative"
                                }, [
                                  createVNode("div", { class: "rounded-full border p-2 z-10 bg-gray-100 text-sm" }, toDisplayString(molecule.pivot.percentage_composition) + "% ", 1)
                                ])) : createCommentVNode("", true),
                                createVNode("div", { class: "min-w-0 flex-1" }, [
                                  createVNode("div", null, [
                                    createVNode("div", { class: "text-sm" }, [
                                      createVNode("a", { class: "font-medium text-gray-900" }, toDisplayString(molecule.standard_inchi), 1)
                                    ])
                                  ]),
                                  createVNode("div", { class: "mt-2 text-sm text-gray-700" }, [
                                    createVNode("div", { class: "rounded-md border my-3 flex justify-center items-center" }, [
                                      createVNode(_component_Depictor2D, {
                                        class: "py-4 -px-4",
                                        molecule: molecule.canonical_smiles
                                      }, null, 8, ["molecule"])
                                    ])
                                  ])
                                ])
                              ])
                            ])
                          ]);
                        }), 128))
                      ]),
                      createVNode("div", { class: "rounded-full border p-2 z-10 bg-gray-100 text-sm mt-14 text-center" }, " Sample chemical composition ")
                    ])) : (openBlock(), createBlock("div", { key: 1 }, [
                      createVNode("div", { class: "text-center my-10 py-10" }, [
                        createVNode("h3", { class: "mt-2 text-sm font-medium text-gray-900" }, " No structures associated with the sample yet! "),
                        createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " Get started by adding a new molecule. ")
                      ])
                    ]))
                  ])
                ])
              ])) : createCommentVNode("", true)
            ])) : createCommentVNode("", true)
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  ssrRenderVNode(_push, createVNode(resolveDynamicComponent("script"), { type: "application/ld+json" }, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${ssrInterpolate($data.schema)}`);
      } else {
        return [
          createTextVNode(toDisplayString($data.schema), 1)
        ];
      }
    }),
    _: 1
  }), _parent);
  _push(`<!--]-->`);
}
const _sfc_setup$K = _sfc_main$K.setup;
_sfc_main$K.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Public/Project/Dataset.vue");
  return _sfc_setup$K ? _sfc_setup$K(props, ctx) : void 0;
};
const Dataset = /* @__PURE__ */ _export_sfc(_sfc_main$K, [["ssrRender", _sfc_ssrRender$J]]);
const __vite_glob_0_43 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Dataset
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$J = {
  components: {
    ProjectLayout,
    FolderIcon: FolderIcon$1,
    DocumentTextIcon,
    ChevronRightIcon,
    HomeIcon,
    FileSystemBrowser,
    Head
  },
  props: ["project", "tab"],
  data() {
    return {
      selectedFileSystemObject: null
    };
  },
  computed: {
    url() {
      return String(this.$page.props.url);
    },
    downloadURL() {
      return this.url + "/" + this.project.data.owner.username + "/download/" + this.project.data.slug + "?key=" + this.$page.props.selectedFileSystemObject.name + "&uuid=" + this.$page.props.selectedFileSystemObject.uuid;
    }
  },
  mounted() {
    this.$page.props.selectedFileSystemObject = this.project.data.files;
    this.$page.props.selectedFolder = "/";
    this.$nextTick(function() {
      if (this.$refs.fsbRef) {
        this.$refs.fsbRef.loadFiles();
      }
    });
  },
  methods: {}
};
function _sfc_ssrRender$I(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = resolveComponent("Head");
  const _component_project_layout = resolveComponent("project-layout");
  const _component_HomeIcon = resolveComponent("HomeIcon");
  const _component_ChevronRightIcon = resolveComponent("ChevronRightIcon");
  const _component_file_system_browser = resolveComponent("file-system-browser");
  _push(`<!--[-->`);
  _push(ssrRenderComponent(_component_Head, {
    title: "Files - " + $props.project.data.name
  }, null, _parent));
  _push(ssrRenderComponent(_component_project_layout, {
    project: $props.project,
    "selected-tab": $props.tab
  }, {
    "project-content": withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="pb-10 mb-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pt-4 pb-6"${_scopeId}>`);
        if ($props.project.data.files) {
          _push2(`<div${_scopeId}>`);
          if (_ctx.$page.props.selectedFolder) {
            _push2(`<nav class="flex p-3" aria-label="Breadcrumb"${_scopeId}><ol role="list" class="flex items-center space-x-2"${_scopeId}><li${_scopeId}><div${_scopeId}><a class="text-gray-400 hover:text-gray-900"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_HomeIcon, {
              class: "flex-shrink-0 h-5 w-5",
              "aria-hidden": "true"
            }, null, _parent2, _scopeId));
            _push2(`<span class="sr-only"${_scopeId}>Home</span></a></div></li><li${_scopeId}><div class="flex items-center"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_ChevronRightIcon, {
              class: "flex-shrink-0 h-5 w-5 text-gray-400",
              "aria-hidden": "true"
            }, null, _parent2, _scopeId));
            _push2(`<a class="ml-4 text-sm font-medium text-gray-500 hover:text-gray-700"${_scopeId}>${ssrInterpolate($props.project.data.name)}</a></div></li><!--[-->`);
            ssrRenderList(_ctx.$page.props.selectedFolder.split(
              "/"
            ), (page) => {
              _push2(`<li${_scopeId}>`);
              if (page != "") {
                _push2(`<div class="flex items-center"${_scopeId}>`);
                _push2(ssrRenderComponent(_component_ChevronRightIcon, {
                  class: "flex-shrink-0 h-5 w-5 text-gray-400",
                  "aria-hidden": "true"
                }, null, _parent2, _scopeId));
                _push2(`<a class="ml-4 text-sm font-medium text-gray-500 hover:text-gray-700"${ssrRenderAttr(
                  "aria-current",
                  page ? "page" : void 0
                )}${_scopeId}>${ssrInterpolate(page)}</a></div>`);
              } else {
                _push2(`<!---->`);
              }
              _push2(`</li>`);
            });
            _push2(`<!--]--></ol></nav>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`<div${_scopeId}>`);
          _push2(ssrRenderComponent(_component_file_system_browser, {
            ref: "fsbRef",
            readonly: true,
            height: "h-[calc(100vh-385px)]"
          }, null, _parent2, _scopeId));
          _push2(`</div></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "pb-10 mb-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pt-4 pb-6" }, [
            $props.project.data.files ? (openBlock(), createBlock("div", { key: 0 }, [
              _ctx.$page.props.selectedFolder ? (openBlock(), createBlock("nav", {
                key: 0,
                class: "flex p-3",
                "aria-label": "Breadcrumb"
              }, [
                createVNode("ol", {
                  role: "list",
                  class: "flex items-center space-x-2"
                }, [
                  createVNode("li", null, [
                    createVNode("div", null, [
                      createVNode("a", { class: "text-gray-400 hover:text-gray-900" }, [
                        createVNode(_component_HomeIcon, {
                          class: "flex-shrink-0 h-5 w-5",
                          "aria-hidden": "true"
                        }),
                        createVNode("span", { class: "sr-only" }, "Home")
                      ])
                    ])
                  ]),
                  createVNode("li", null, [
                    createVNode("div", { class: "flex items-center" }, [
                      createVNode(_component_ChevronRightIcon, {
                        class: "flex-shrink-0 h-5 w-5 text-gray-400",
                        "aria-hidden": "true"
                      }),
                      createVNode("a", { class: "ml-4 text-sm font-medium text-gray-500 hover:text-gray-700" }, toDisplayString($props.project.data.name), 1)
                    ])
                  ]),
                  (openBlock(true), createBlock(Fragment, null, renderList(_ctx.$page.props.selectedFolder.split(
                    "/"
                  ), (page) => {
                    return openBlock(), createBlock("li", {
                      key: page.name
                    }, [
                      page != "" ? (openBlock(), createBlock("div", {
                        key: 0,
                        class: "flex items-center"
                      }, [
                        createVNode(_component_ChevronRightIcon, {
                          class: "flex-shrink-0 h-5 w-5 text-gray-400",
                          "aria-hidden": "true"
                        }),
                        createVNode("a", {
                          class: "ml-4 text-sm font-medium text-gray-500 hover:text-gray-700",
                          "aria-current": page ? "page" : void 0
                        }, toDisplayString(page), 9, ["aria-current"])
                      ])) : createCommentVNode("", true)
                    ]);
                  }), 128))
                ])
              ])) : createCommentVNode("", true),
              createVNode("div", null, [
                createVNode(_component_file_system_browser, {
                  ref: "fsbRef",
                  readonly: true,
                  height: "h-[calc(100vh-385px)]"
                }, null, 8, ["height"])
              ])
            ])) : createCommentVNode("", true)
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$J = _sfc_main$J.setup;
_sfc_main$J.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Public/Project/Files.vue");
  return _sfc_setup$J ? _sfc_setup$J(props, ctx) : void 0;
};
const Files$1 = /* @__PURE__ */ _export_sfc(_sfc_main$J, [["ssrRender", _sfc_ssrRender$I]]);
const __vite_glob_0_44 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Files$1
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$I = {
  components: {
    ProjectLayout,
    Head
  },
  props: ["project", "tab"],
  data() {
    return {};
  },
  computed: {},
  mounted() {
  },
  methods: {}
};
function _sfc_ssrRender$H(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = resolveComponent("Head");
  const _component_project_layout = resolveComponent("project-layout");
  _push(`<!--[-->`);
  _push(ssrRenderComponent(_component_Head, {
    title: "License - " + $props.project.data.name
  }, null, _parent));
  _push(ssrRenderComponent(_component_project_layout, {
    project: $props.project,
    "selected-tab": $props.tab
  }, {
    "project-content": withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="pb-10 mb-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6"${_scopeId}><h3 class="text-xl font-extrabold text-blue-gray-900"${_scopeId}>${ssrInterpolate($props.project.data.license.title)}</h3><div class="mt-3 space-y-8 divide-y divide-y-blue-gray-200"${_scopeId}><div class="grid grid-cols-1 gap-y-6 sm:grid-cols-6 sm:gap-x-6"${_scopeId}><div class="sm:col-span-6"${_scopeId}><p style="${ssrRenderStyle({ "max-width": "100ch !important" })}" class="prose mt-1 text-sm text-blue-gray-500"${_scopeId}>${$props.project.data.license.body}</p></div></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "pb-10 mb-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6" }, [
            createVNode("h3", { class: "text-xl font-extrabold text-blue-gray-900" }, toDisplayString($props.project.data.license.title), 1),
            createVNode("div", { class: "mt-3 space-y-8 divide-y divide-y-blue-gray-200" }, [
              createVNode("div", { class: "grid grid-cols-1 gap-y-6 sm:grid-cols-6 sm:gap-x-6" }, [
                createVNode("div", { class: "sm:col-span-6" }, [
                  createVNode("p", {
                    style: { "max-width": "100ch !important" },
                    class: "prose mt-1 text-sm text-blue-gray-500",
                    innerHTML: $props.project.data.license.body
                  }, null, 8, ["innerHTML"])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$I = _sfc_main$I.setup;
_sfc_main$I.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Public/Project/License.vue");
  return _sfc_setup$I ? _sfc_setup$I(props, ctx) : void 0;
};
const License = /* @__PURE__ */ _export_sfc(_sfc_main$I, [["ssrRender", _sfc_ssrRender$H]]);
const __vite_glob_0_46 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: License
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$H = {
  components: {
    LockClosedIcon,
    LockOpenIcon,
    EnvelopeIcon,
    PencilIcon,
    Link,
    Depictor2D
  },
  props: ["study", "project"],
  setup() {
  },
  data() {
    return {
      selectedPreviewIndex: 0
    };
  },
  methods: {}
};
function _sfc_ssrRender$G(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Link = resolveComponent("Link");
  const _component_LockOpenIcon = resolveComponent("LockOpenIcon");
  const _component_LockClosedIcon = resolveComponent("LockClosedIcon");
  if ($props.study) {
    _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex flex-col border rounded-lg shadow-lg transition ease-in-out delay-150 duration-300 overflow-hidden" }, _attrs))}>`);
    _push(ssrRenderComponent(_component_Link, {
      href: $props.study.public_url
    }, {
      default: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`<div${_scopeId}><div${_scopeId}>`);
          if ($props.study.study_preview_urls && $props.study.study_preview_urls.length > 0) {
            _push2(`<span${_scopeId}>`);
            if ($props.study.study_preview_urls.length == 1) {
              _push2(`<span${_scopeId}><img class="h-48 w-full rounded-t-md"${ssrRenderAttr("src", $props.study.study_preview_urls[0])} alt=""${_scopeId}></span>`);
            } else {
              _push2(`<span${_scopeId}><div class="relative"${_scopeId}><!--[-->`);
              ssrRenderList($props.study.study_preview_urls, (url, index) => {
                _push2(`<span${_scopeId}>`);
                if (index == $data.selectedPreviewIndex) {
                  _push2(`<span${_scopeId}><img class="h-48 w-full rounded-t-md"${ssrRenderAttr("src", url)} alt=""${_scopeId}></span>`);
                } else {
                  _push2(`<!---->`);
                }
                _push2(`</span>`);
              });
              _push2(`<!--]--><div class="absolute w-full py-2.5 bottom-0 inset-x-0 pl-4 text-white text-xs text-center leading-4"${_scopeId}><div${_scopeId}><ol role="list" class="flex items-center space-x-2"${_scopeId}><!--[-->`);
              ssrRenderList($props.study.study_preview_urls, (url, index) => {
                _push2(`<li${_scopeId}>`);
                if (index === $data.selectedPreviewIndex) {
                  _push2(`<a class="block w-2.5 h-2.5 bg-teal-200 rounded-full hover:bg-teal-400"${_scopeId}></a>`);
                } else {
                  _push2(`<a class="cursor-pointer block w-2.5 h-2.5 bg-gray-200 rounded-full hover:bg-gray-400"${_scopeId}></a>`);
                }
                _push2(`</li>`);
              });
              _push2(`<!--]--></ol></div></div></div><span class="bg-gradient-to-r from-cyan-500 to-blue-500"${_scopeId}></span></span>`);
            }
            _push2(`</span>`);
          } else {
            _push2(`<span${_scopeId}><img class="h-48 w-full rounded-t-md" src="https://via.placeholder.com/340x180/FFF/f1f1f4?text=No preview" alt=""${_scopeId}></span>`);
          }
          _push2(`</div></div><div class="flex-1 bg-white p-3 border-t mt-1 flex flex-col justify-between"${_scopeId}><div${_scopeId}>`);
          if ($props.study.identifier) {
            _push2(`<small class="float-left text-gray-500"${_scopeId}>#${ssrInterpolate($props.study.identifier)}</small>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`<div class="float-right"${_scopeId}>`);
          if ($props.study.is_public) {
            _push2(`<div class="flex items-center"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_LockOpenIcon, { class: "w-3 h-3 mr-1 text-green-600" }, null, _parent2, _scopeId));
            _push2(`<p class="text-xs text-gray-600"${_scopeId}>Public</p></div>`);
          } else {
            _push2(`<div class="flex items-center"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_LockClosedIcon, { class: "w-3 h-3 mr-1 text-teal-600" }, null, _parent2, _scopeId));
            _push2(`<p class="text-xs text-gray-600"${_scopeId}>Private</p></div>`);
          }
          _push2(`</div></div><div class="flex-1"${_scopeId}><p class="text-lg mt-2 font-semibold text-gray-900 line-clamp-1"${_scopeId}>${ssrInterpolate($props.study.name)}</p>`);
          if ($props.study.experiment_types && $props.study.experiment_types.length > 0) {
            _push2(`<div class="mt-1 h-14 overflow-hidden"${_scopeId}><!--[-->`);
            ssrRenderList($props.study.experiment_types, (type) => {
              _push2(`<div${_scopeId}>`);
              if (type && type != null) {
                _push2(`<span class="mt-1 inline-flex items-center rounded-full bg-gray-50 px-2 py-1 text-xs font-medium text-gray-600 ring-1 ring-inset ring-gray-500/10"${_scopeId}>${ssrInterpolate(type)}</span>`);
              } else {
                _push2(`<!---->`);
              }
              _push2(`</div>`);
            });
            _push2(`<!--]--></div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div><div class="pt-1"${_scopeId}><div class="text-xs text-gray-600"${_scopeId}><span class="text-gray-400"${_scopeId}>Last updated on</span> ${ssrInterpolate(_ctx.formatDate($props.study.updated_at))}</div></div></div>`);
        } else {
          return [
            createVNode("div", null, [
              createVNode("div", null, [
                $props.study.study_preview_urls && $props.study.study_preview_urls.length > 0 ? (openBlock(), createBlock("span", { key: 0 }, [
                  $props.study.study_preview_urls.length == 1 ? (openBlock(), createBlock("span", { key: 0 }, [
                    createVNode("img", {
                      class: "h-48 w-full rounded-t-md",
                      src: $props.study.study_preview_urls[0],
                      alt: ""
                    }, null, 8, ["src"])
                  ])) : (openBlock(), createBlock("span", { key: 1 }, [
                    createVNode("div", { class: "relative" }, [
                      (openBlock(true), createBlock(Fragment, null, renderList($props.study.study_preview_urls, (url, index) => {
                        return openBlock(), createBlock("span", { key: url }, [
                          index == $data.selectedPreviewIndex ? (openBlock(), createBlock("span", { key: 0 }, [
                            createVNode("img", {
                              class: "h-48 w-full rounded-t-md",
                              src: url,
                              alt: ""
                            }, null, 8, ["src"])
                          ])) : createCommentVNode("", true)
                        ]);
                      }), 128)),
                      createVNode("div", { class: "absolute w-full py-2.5 bottom-0 inset-x-0 pl-4 text-white text-xs text-center leading-4" }, [
                        createVNode("div", null, [
                          createVNode("ol", {
                            role: "list",
                            class: "flex items-center space-x-2"
                          }, [
                            (openBlock(true), createBlock(Fragment, null, renderList($props.study.study_preview_urls, (url, index) => {
                              return openBlock(), createBlock("li", { key: index }, [
                                index === $data.selectedPreviewIndex ? (openBlock(), createBlock("a", {
                                  key: 0,
                                  class: "block w-2.5 h-2.5 bg-teal-200 rounded-full hover:bg-teal-400",
                                  onClick: withModifiers(($event) => $data.selectedPreviewIndex = index, ["prevent"])
                                }, null, 8, ["onClick"])) : (openBlock(), createBlock("a", {
                                  key: 1,
                                  class: "cursor-pointer block w-2.5 h-2.5 bg-gray-200 rounded-full hover:bg-gray-400",
                                  onClick: withModifiers(($event) => $data.selectedPreviewIndex = index, ["prevent"])
                                }, null, 8, ["onClick"]))
                              ]);
                            }), 128))
                          ])
                        ])
                      ])
                    ]),
                    createVNode("span", { class: "bg-gradient-to-r from-cyan-500 to-blue-500" })
                  ]))
                ])) : (openBlock(), createBlock("span", { key: 1 }, [
                  createVNode("img", {
                    class: "h-48 w-full rounded-t-md",
                    src: "https://via.placeholder.com/340x180/FFF/f1f1f4?text=No preview",
                    alt: ""
                  })
                ]))
              ])
            ]),
            createVNode("div", { class: "flex-1 bg-white p-3 border-t mt-1 flex flex-col justify-between" }, [
              createVNode("div", null, [
                $props.study.identifier ? (openBlock(), createBlock("small", {
                  key: 0,
                  class: "float-left text-gray-500"
                }, "#" + toDisplayString($props.study.identifier), 1)) : createCommentVNode("", true),
                createVNode("div", { class: "float-right" }, [
                  $props.study.is_public ? (openBlock(), createBlock("div", {
                    key: 0,
                    class: "flex items-center"
                  }, [
                    createVNode(_component_LockOpenIcon, { class: "w-3 h-3 mr-1 text-green-600" }),
                    createVNode("p", { class: "text-xs text-gray-600" }, "Public")
                  ])) : (openBlock(), createBlock("div", {
                    key: 1,
                    class: "flex items-center"
                  }, [
                    createVNode(_component_LockClosedIcon, { class: "w-3 h-3 mr-1 text-teal-600" }),
                    createVNode("p", { class: "text-xs text-gray-600" }, "Private")
                  ]))
                ])
              ]),
              createVNode("div", { class: "flex-1" }, [
                createVNode("p", { class: "text-lg mt-2 font-semibold text-gray-900 line-clamp-1" }, toDisplayString($props.study.name), 1),
                $props.study.experiment_types && $props.study.experiment_types.length > 0 ? (openBlock(), createBlock("div", {
                  key: 0,
                  class: "mt-1 h-14 overflow-hidden"
                }, [
                  (openBlock(true), createBlock(Fragment, null, renderList($props.study.experiment_types, (type) => {
                    return openBlock(), createBlock("div", { key: type }, [
                      type && type != null ? (openBlock(), createBlock("span", {
                        key: 0,
                        class: "mt-1 inline-flex items-center rounded-full bg-gray-50 px-2 py-1 text-xs font-medium text-gray-600 ring-1 ring-inset ring-gray-500/10"
                      }, toDisplayString(type), 1)) : createCommentVNode("", true)
                    ]);
                  }), 128))
                ])) : createCommentVNode("", true)
              ]),
              createVNode("div", { class: "pt-1" }, [
                createVNode("div", { class: "text-xs text-gray-600" }, [
                  createVNode("span", { class: "text-gray-400" }, "Last updated on"),
                  createTextVNode(" " + toDisplayString(_ctx.formatDate($props.study.updated_at)), 1)
                ])
              ])
            ])
          ];
        }
      }),
      _: 1
    }, _parent));
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
}
const _sfc_setup$H = _sfc_main$H.setup;
_sfc_main$H.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/StudyCardPublic.vue");
  return _sfc_setup$H ? _sfc_setup$H(props, ctx) : void 0;
};
const StudyPublicCard = /* @__PURE__ */ _export_sfc(_sfc_main$H, [["ssrRender", _sfc_ssrRender$G]]);
const _sfc_main$G = {
  components: {
    ProjectLayout,
    StudyCard: StudyPublicCard,
    Head
  },
  props: ["project", "tab"],
  data() {
    return {
      loading: false,
      studies: [],
      query: ""
    };
  },
  computed: {},
  mounted() {
    if (this.project) {
      this.fetchStudies(route("project.studies", this.project.data.id));
    }
  },
  methods: {
    fetchStudies(url) {
      axios.get(url).then((response) => {
        this.loading = false;
        this.studies = response.data;
      });
    },
    update(link) {
      if (!link && this.query != "") {
        link = {};
        link["url"] = route("project.studies", this.project.data.id) + "?page=1";
      }
      if (link.url) {
        this.loading = true;
        this.executeQuery(link);
      }
    },
    reset() {
      let link = {};
      link["url"] = route("project.studies", this.project.data.id) + "?page=1";
      this.query = "";
      this.loading = true;
      this.executeQuery(link);
    },
    executeQuery(link) {
      this.fetchStudies(link.url + "&search=" + this.query);
    }
  }
};
function _sfc_ssrRender$F(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = resolveComponent("Head");
  const _component_project_layout = resolveComponent("project-layout");
  const _component_study_card = resolveComponent("study-card");
  _push(`<!--[-->`);
  _push(ssrRenderComponent(_component_Head, {
    title: "Samples - " + $props.project.data.name
  }, null, _parent));
  _push(ssrRenderComponent(_component_project_layout, {
    project: $props.project,
    "selected-tab": $props.tab
  }, {
    "project-content": withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="pb-10 mb-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pt-4 pb-6"${_scopeId}><div class="flex items-baseline justify-between"${_scopeId}><div${_scopeId}><h2 class="text-lg mb-3 font-bold"${_scopeId}>Studies</h2>`);
        if (!$data.loading) {
          _push2(`<div class="flex items-center mr-4 w-full"${_scopeId}><div class="flex w-full bg-white shadow rounded-full"${_scopeId}><input${ssrRenderAttr("value", $data.query)} class="relative w-full border-0 px-6 py-3 rounded-full focus:shadow-outline" autocomplete="off" type="text" name="search" placeholder="Search…"${_scopeId}></div><button type="button" class="ml-2 inline-flex items-center rounded-full px-6 py-3 shadow rounded-full text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"${_scopeId}> GO </button><button class="ml-3 text-sm text-gray-500 hover:text-gray-700 focus:text-indigo-500" type="button"${_scopeId}> Reset </button></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div>`);
        if (!$data.loading && $data.studies.data) {
          _push2(`<div${_scopeId}>`);
          if ($data.studies.data.length <= 0) {
            _push2(`<div${_scopeId}><div class="mt-4 px-12 py-8 mx-auto max-w-4xl"${_scopeId}><div class="px-6 py-4 bg-white shadow-md rounded-lg"${_scopeId}><div class="flex items-center"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="h-6 w-6"${_scopeId}><path d="M3 6l9 4v12l-9-4V6zm14-3v2c0 1.1-2.24 2-5 2s-5-.9-5-2V3c0 1.1 2.24 2 5 2s5-.9 5-2z" class="fill-current text-gray-400"${_scopeId}></path><polygon points="21 6 12 10 12 22 21 18" class="fill-current text-gray-600"${_scopeId}></polygon></svg><div class="ml-3 font-semibold text-sm text-gray-600 uppercase tracking-wider"${_scopeId}> No studies </div></div></div></div></div>`);
          } else {
            _push2(`<div${_scopeId}><div class="mt-8 mx-auto max-w-md grid gap-8 sm:max-w-lg lg:grid-cols-4 lg:max-w-7xl"${_scopeId}><!--[-->`);
            ssrRenderList($data.studies.data, (study) => {
              _push2(`<div${_scopeId}>`);
              _push2(ssrRenderComponent(_component_study_card, {
                project: $props.project.data,
                study
              }, null, _parent2, _scopeId));
              _push2(`</div>`);
            });
            _push2(`<!--]--></div>`);
            if ($data.studies.meta && $data.studies.meta.total > $data.studies.meta.per_page) {
              _push2(`<div class="block w-100 mt-10"${_scopeId}><nav class="border-t border-gray-200 px-4 flex items-center justify-between sm:px-0"${_scopeId}><div class="-mt-px w-0 flex-1 flex"${_scopeId}> </div><div class="hidden md:-mt-px md:flex"${_scopeId}><!--[-->`);
              ssrRenderList($data.studies.meta.links, (link) => {
                _push2(`<div class="${ssrRenderClass([
                  link.active ? "text-teal-600 border-teal-500" : "",
                  "cursor-pointer border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 border-t-2 pt-4 px-4 inline-flex items-center text-sm font-medium"
                ])}"${_scopeId}>${link.label}</div>`);
              });
              _push2(`<!--]--></div><div class="-mt-px w-0 flex-1 flex justify-end"${_scopeId}>   </div></nav></div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div>`);
          }
          _push2(`</div>`);
        } else {
          _push2(`<div class="text-gray-400 mt-10"${_scopeId}><svg class="animate-spin inline -ml-1 mr-2 h-5 w-5 text-dark" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"${_scopeId}><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"${_scopeId}></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"${_scopeId}></path></svg> Loading... </div>`);
        }
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "pb-10 mb-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pt-4 pb-6" }, [
            createVNode("div", { class: "flex items-baseline justify-between" }, [
              createVNode("div", null, [
                createVNode("h2", { class: "text-lg mb-3 font-bold" }, "Studies"),
                !$data.loading ? (openBlock(), createBlock("div", {
                  key: 0,
                  class: "flex items-center mr-4 w-full"
                }, [
                  createVNode("div", { class: "flex w-full bg-white shadow rounded-full" }, [
                    withDirectives(createVNode("input", {
                      "onUpdate:modelValue": ($event) => $data.query = $event,
                      class: "relative w-full border-0 px-6 py-3 rounded-full focus:shadow-outline",
                      autocomplete: "off",
                      type: "text",
                      name: "search",
                      placeholder: "Search…"
                    }, null, 8, ["onUpdate:modelValue"]), [
                      [vModelText, $data.query]
                    ])
                  ]),
                  createVNode("button", {
                    type: "button",
                    class: "ml-2 inline-flex items-center rounded-full px-6 py-3 shadow rounded-full text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                    onClick: ($event) => $options.update()
                  }, " GO ", 8, ["onClick"]),
                  createVNode("button", {
                    class: "ml-3 text-sm text-gray-500 hover:text-gray-700 focus:text-indigo-500",
                    type: "button",
                    onClick: ($event) => $options.reset()
                  }, " Reset ", 8, ["onClick"])
                ])) : createCommentVNode("", true)
              ])
            ]),
            !$data.loading && $data.studies.data ? (openBlock(), createBlock("div", { key: 0 }, [
              $data.studies.data.length <= 0 ? (openBlock(), createBlock("div", { key: 0 }, [
                createVNode("div", { class: "mt-4 px-12 py-8 mx-auto max-w-4xl" }, [
                  createVNode("div", { class: "px-6 py-4 bg-white shadow-md rounded-lg" }, [
                    createVNode("div", { class: "flex items-center" }, [
                      (openBlock(), createBlock("svg", {
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        class: "h-6 w-6"
                      }, [
                        createVNode("path", {
                          d: "M3 6l9 4v12l-9-4V6zm14-3v2c0 1.1-2.24 2-5 2s-5-.9-5-2V3c0 1.1 2.24 2 5 2s5-.9 5-2z",
                          class: "fill-current text-gray-400"
                        }),
                        createVNode("polygon", {
                          points: "21 6 12 10 12 22 21 18",
                          class: "fill-current text-gray-600"
                        })
                      ])),
                      createVNode("div", { class: "ml-3 font-semibold text-sm text-gray-600 uppercase tracking-wider" }, " No studies ")
                    ])
                  ])
                ])
              ])) : (openBlock(), createBlock("div", { key: 1 }, [
                createVNode("div", { class: "mt-8 mx-auto max-w-md grid gap-8 sm:max-w-lg lg:grid-cols-4 lg:max-w-7xl" }, [
                  (openBlock(true), createBlock(Fragment, null, renderList($data.studies.data, (study) => {
                    return openBlock(), createBlock("div", {
                      key: study.uuid
                    }, [
                      createVNode(_component_study_card, {
                        project: $props.project.data,
                        study
                      }, null, 8, ["project", "study"])
                    ]);
                  }), 128))
                ]),
                $data.studies.meta && $data.studies.meta.total > $data.studies.meta.per_page ? (openBlock(), createBlock("div", {
                  key: 0,
                  class: "block w-100 mt-10"
                }, [
                  createVNode("nav", { class: "border-t border-gray-200 px-4 flex items-center justify-between sm:px-0" }, [
                    createVNode("div", { class: "-mt-px w-0 flex-1 flex" }, " "),
                    createVNode("div", { class: "hidden md:-mt-px md:flex" }, [
                      (openBlock(true), createBlock(Fragment, null, renderList($data.studies.meta.links, (link) => {
                        return openBlock(), createBlock("div", {
                          key: link.url,
                          class: [
                            link.active ? "text-teal-600 border-teal-500" : "",
                            "cursor-pointer border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 border-t-2 pt-4 px-4 inline-flex items-center text-sm font-medium"
                          ],
                          onClick: ($event) => $options.update(link),
                          innerHTML: link.label
                        }, null, 10, ["onClick", "innerHTML"]);
                      }), 128))
                    ]),
                    createVNode("div", { class: "-mt-px w-0 flex-1 flex justify-end" }, "   ")
                  ])
                ])) : createCommentVNode("", true)
              ]))
            ])) : (openBlock(), createBlock("div", {
              key: 1,
              class: "text-gray-400 mt-10"
            }, [
              (openBlock(), createBlock("svg", {
                class: "animate-spin inline -ml-1 mr-2 h-5 w-5 text-dark",
                xmlns: "http://www.w3.org/2000/svg",
                fill: "none",
                viewBox: "0 0 24 24"
              }, [
                createVNode("circle", {
                  class: "opacity-25",
                  cx: "12",
                  cy: "12",
                  r: "10",
                  stroke: "currentColor",
                  "stroke-width": "4"
                }),
                createVNode("path", {
                  class: "opacity-75",
                  fill: "currentColor",
                  d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                })
              ])),
              createTextVNode(" Loading... ")
            ]))
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<!--]-->`);
}
const _sfc_setup$G = _sfc_main$G.setup;
_sfc_main$G.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Public/Project/Samples.vue");
  return _sfc_setup$G ? _sfc_setup$G(props, ctx) : void 0;
};
const Samples = /* @__PURE__ */ _export_sfc(_sfc_main$G, [["ssrRender", _sfc_ssrRender$F]]);
const __vite_glob_0_47 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Samples
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$F = {
  components: {
    ProjectLayout,
    AuthorCard,
    CitationCard,
    Citation,
    Head
  },
  props: ["project", "tab"],
  data() {
    return {
      schema: {}
    };
  },
  computed: {},
  mounted() {
    axios.get(route("bioschemas.id", this.project.data.identifier)).then((response) => {
      this.schema = response.data;
    });
  },
  methods: {}
};
function _sfc_ssrRender$E(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = resolveComponent("Head");
  const _component_project_layout = resolveComponent("project-layout");
  const _component_Citation = resolveComponent("Citation");
  const _component_author_card = resolveComponent("author-card");
  const _component_citation_card = resolveComponent("citation-card");
  _push(`<!--[-->`);
  _push(ssrRenderComponent(_component_Head, {
    title: $props.project.data.name
  }, null, _parent));
  _push(ssrRenderComponent(_component_project_layout, {
    project: $props.project,
    "selected-tab": $props.tab
  }, {
    "project-content": withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="pb-10 mb-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pt-4 pb-6"${_scopeId}>`);
        if ($props.project.data.is_public && $props.project.data.doi != null) {
          _push2(`<div class="-mx-4"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_Citation, {
            model: "project",
            doi: $props.project.data.doi
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="mt-2 space-y-4 divide-y divide-y-blue-gray-200"${_scopeId}><div${_scopeId}><h3 class="text-xl font-extrabold text-blue-gray-900"${_scopeId}> About project </h3><div class="grid grid-cols-1 gap-y-6 sm:grid-cols-6 sm:gap-x-6"${_scopeId}><div class="col-span-6"${_scopeId}><p style="${ssrRenderStyle({ "max-width": "100ch !important" })}" class="prose mt-1 text-sm text-blue-gray-500"${_scopeId}>${_ctx.md($props.project.data.description)}</p></div></div></div>`);
        if ($props.project.data.species) {
          _push2(`<div class="pt-2"${_scopeId}><h3 class="text-xl font-extrabold text-blue-gray-900"${_scopeId}> Organism </h3><div class="pt-3"${_scopeId}><!--[-->`);
          ssrRenderList($props.project.data.species, (species, $index) => {
            _push2(`<div class="bg-gray-100 text-gray-800 mb-0.5 inline-flex truncate break-words items-center px-3 py-2 rounded-full text-sm font-medium mr-1"${_scopeId}><ontology-term-annotation${ssrRenderAttr("annotation", species)}${_scopeId}></ontology-term-annotation></div>`);
          });
          _push2(`<!--]--></div></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="gap-y-6 sm:grid-cols-6 sm:gap-x-6"${_scopeId}><div class="pt-2 sm:col-span-6"${_scopeId}><h2 class="text-xl font-extrabold mb-3 text-blue-gray-900"${_scopeId}> Submitter(s) </h2></div><div class="mt-1 grid grid-cols-1 gap-4 sm:grid-cols-2"${_scopeId}><!--[-->`);
        ssrRenderList($props.project.data.users, (user) => {
          _push2(`<div class="relative rounded-lg border border-gray-300 bg-white p-5 shadow-sm flex items-center space-x-3 hover:border-gray-400 focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-pink-500"${_scopeId}><div class="flex-shrink-0"${_scopeId}><img class="h-10 w-10 rounded-full"${ssrRenderAttr("src", user.profile_photo_url)} alt=""${_scopeId}></div><div class="flex-1 min-w-0"${_scopeId}><a class="focus:outline-none"${_scopeId}><span class="absolute inset-0" aria-hidden="true"${_scopeId}></span><p class="text-sm font-medium text-gray-900"${_scopeId}>${ssrInterpolate(user.first_name + " " + user.last_name)}</p><p class="text-sm text-gray-500 truncate"${_scopeId}> @ ${ssrInterpolate(user.username)}</p></a></div></div>`);
        });
        _push2(`<!--]--></div>`);
        if ($props.project.data.authors && $props.project.data.authors.length > 0) {
          _push2(`<div class="pt-8 gap-y-6 sm:grid-cols-6 sm:gap-x-6"${_scopeId}><div class="sm:col-span-6"${_scopeId}><h2 class="text-xl font-extrabold mb-3 text-blue-gray-900"${_scopeId}> Author(s) </h2></div><div class="mt-1 grid grid-cols-1 gap-4 sm:grid-cols-2"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_author_card, {
            authors: $props.project.data.authors
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
          if ($props.project.data.citations && $props.project.data.citations.length > 0) {
            _push2(`<div class="pt-8 gap-y-6 sm:grid-cols-6 sm:gap-x-6"${_scopeId}><div class="sm:col-span-6"${_scopeId}><h2 class="text-xl font-extrabold mb-3 text-blue-gray-900"${_scopeId}> Citation(s) </h2></div><dd class="mt-2 text-md text-gray-900 space-y-5 focus:pointer-events-auto"${_scopeId}><div class="mt-1 grid grid-cols-1 gap-4 sm:grid-cols-2"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_citation_card, {
              citations: $props.project.data.citations
            }, null, _parent2, _scopeId));
            _push2(`</div></dd></div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "pb-10 mb-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pt-4 pb-6" }, [
            $props.project.data.is_public && $props.project.data.doi != null ? (openBlock(), createBlock("div", {
              key: 0,
              class: "-mx-4"
            }, [
              createVNode(_component_Citation, {
                model: "project",
                doi: $props.project.data.doi
              }, null, 8, ["doi"])
            ])) : createCommentVNode("", true),
            createVNode("div", { class: "mt-2 space-y-4 divide-y divide-y-blue-gray-200" }, [
              createVNode("div", null, [
                createVNode("h3", { class: "text-xl font-extrabold text-blue-gray-900" }, " About project "),
                createVNode("div", { class: "grid grid-cols-1 gap-y-6 sm:grid-cols-6 sm:gap-x-6" }, [
                  createVNode("div", { class: "col-span-6" }, [
                    createVNode("p", {
                      style: { "max-width": "100ch !important" },
                      class: "prose mt-1 text-sm text-blue-gray-500",
                      innerHTML: _ctx.md($props.project.data.description)
                    }, null, 8, ["innerHTML"])
                  ])
                ])
              ]),
              $props.project.data.species ? (openBlock(), createBlock("div", {
                key: 0,
                class: "pt-2"
              }, [
                createVNode("h3", { class: "text-xl font-extrabold text-blue-gray-900" }, " Organism "),
                createVNode("div", { class: "pt-3" }, [
                  (openBlock(true), createBlock(Fragment, null, renderList($props.project.data.species, (species, $index) => {
                    return openBlock(), createBlock("div", {
                      key: $index,
                      class: "bg-gray-100 text-gray-800 mb-0.5 inline-flex truncate break-words items-center px-3 py-2 rounded-full text-sm font-medium mr-1"
                    }, [
                      createVNode("ontology-term-annotation", { annotation: species }, null, 8, ["annotation"])
                    ]);
                  }), 128))
                ])
              ])) : createCommentVNode("", true),
              createVNode("div", { class: "gap-y-6 sm:grid-cols-6 sm:gap-x-6" }, [
                createVNode("div", { class: "pt-2 sm:col-span-6" }, [
                  createVNode("h2", { class: "text-xl font-extrabold mb-3 text-blue-gray-900" }, " Submitter(s) ")
                ]),
                createVNode("div", { class: "mt-1 grid grid-cols-1 gap-4 sm:grid-cols-2" }, [
                  (openBlock(true), createBlock(Fragment, null, renderList($props.project.data.users, (user) => {
                    return openBlock(), createBlock("div", {
                      key: user.email,
                      class: "relative rounded-lg border border-gray-300 bg-white p-5 shadow-sm flex items-center space-x-3 hover:border-gray-400 focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-pink-500"
                    }, [
                      createVNode("div", { class: "flex-shrink-0" }, [
                        createVNode("img", {
                          class: "h-10 w-10 rounded-full",
                          src: user.profile_photo_url,
                          alt: ""
                        }, null, 8, ["src"])
                      ]),
                      createVNode("div", { class: "flex-1 min-w-0" }, [
                        createVNode("a", { class: "focus:outline-none" }, [
                          createVNode("span", {
                            class: "absolute inset-0",
                            "aria-hidden": "true"
                          }),
                          createVNode("p", { class: "text-sm font-medium text-gray-900" }, toDisplayString(user.first_name + " " + user.last_name), 1),
                          createVNode("p", { class: "text-sm text-gray-500 truncate" }, " @ " + toDisplayString(user.username), 1)
                        ])
                      ])
                    ]);
                  }), 128))
                ]),
                $props.project.data.authors && $props.project.data.authors.length > 0 ? (openBlock(), createBlock("div", {
                  key: 0,
                  class: "pt-8 gap-y-6 sm:grid-cols-6 sm:gap-x-6"
                }, [
                  createVNode("div", { class: "sm:col-span-6" }, [
                    createVNode("h2", { class: "text-xl font-extrabold mb-3 text-blue-gray-900" }, " Author(s) ")
                  ]),
                  createVNode("div", { class: "mt-1 grid grid-cols-1 gap-4 sm:grid-cols-2" }, [
                    createVNode(_component_author_card, {
                      authors: $props.project.data.authors
                    }, null, 8, ["authors"])
                  ]),
                  $props.project.data.citations && $props.project.data.citations.length > 0 ? (openBlock(), createBlock("div", {
                    key: 0,
                    class: "pt-8 gap-y-6 sm:grid-cols-6 sm:gap-x-6"
                  }, [
                    createVNode("div", { class: "sm:col-span-6" }, [
                      createVNode("h2", { class: "text-xl font-extrabold mb-3 text-blue-gray-900" }, " Citation(s) ")
                    ]),
                    createVNode("dd", { class: "mt-2 text-md text-gray-900 space-y-5 focus:pointer-events-auto" }, [
                      createVNode("div", { class: "mt-1 grid grid-cols-1 gap-4 sm:grid-cols-2" }, [
                        createVNode(_component_citation_card, {
                          citations: $props.project.data.citations
                        }, null, 8, ["citations"])
                      ])
                    ])
                  ])) : createCommentVNode("", true)
                ])) : createCommentVNode("", true)
              ])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  ssrRenderVNode(_push, createVNode(resolveDynamicComponent("script"), { type: "application/ld+json" }, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${ssrInterpolate($data.schema)}`);
      } else {
        return [
          createTextVNode(toDisplayString($data.schema), 1)
        ];
      }
    }),
    _: 1
  }), _parent);
  _push(`<!--]-->`);
}
const _sfc_setup$F = _sfc_main$F.setup;
_sfc_main$F.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Public/Project/Show.vue");
  return _sfc_setup$F ? _sfc_setup$F(props, ctx) : void 0;
};
const Show$2 = /* @__PURE__ */ _export_sfc(_sfc_main$F, [["ssrRender", _sfc_ssrRender$E]]);
const __vite_glob_0_48 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Show$2
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$E = {
  components: {
    ProjectLayout,
    ShareIcon,
    ClipboardDocumentIcon,
    Menu,
    MenuButton,
    MenuItem,
    MenuItems,
    SpectraViewer,
    Depictor2D,
    DOIBadge,
    Head
  },
  props: ["project", "tab", "study"],
  data() {
    return {
      selectedDataset: null,
      selectedSpectraData: null,
      schema: {}
    };
  },
  computed: {
    shareURL() {
      return this.selectedDataset.public_url;
    },
    url() {
      return String(this.$page.props.url);
    }
  },
  mounted() {
    const urlSearchParams = new URLSearchParams(window.location.search);
    const params = Object.fromEntries(urlSearchParams.entries());
    let dsId = params["dsid"];
    this.study.data.datasets.forEach((ds) => {
      if (ds.slug == dsId) {
        this.selectedDataset = ds;
      }
    });
    if (!this.selectedDataset) {
      this.selectedDataset = this.study.data.datasets[0];
    }
    axios.get(route("bioschemas.id", this.study.data.identifier)).then((response) => {
      this.schema = response.data;
    });
  },
  methods: {
    getSVGString(molecule) {
      if (molecule.MOL) {
        let mol = OCL.Molecule.fromMolfile(
          "\n  " + molecule.MOL.replaceAll('"', "")
        );
        return mol.toSVG(200, 200);
      }
    }
  }
};
function _sfc_ssrRender$D(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = resolveComponent("Head");
  const _component_project_layout = resolveComponent("project-layout");
  const _component_DOIBadge = resolveComponent("DOIBadge");
  const _component_Menu = resolveComponent("Menu");
  const _component_MenuButton = resolveComponent("MenuButton");
  const _component_ShareIcon = resolveComponent("ShareIcon");
  const _component_MenuItems = resolveComponent("MenuItems");
  const _component_MenuItem = resolveComponent("MenuItem");
  const _component_ClipboardDocumentIcon = resolveComponent("ClipboardDocumentIcon");
  const _component_Depictor2D = resolveComponent("Depictor2D");
  const _component_SpectraViewer = resolveComponent("SpectraViewer");
  _push(`<!--[-->`);
  _push(ssrRenderComponent(_component_Head, {
    title: $props.study.data.name
  }, null, _parent));
  _push(ssrRenderComponent(_component_project_layout, {
    project: $props.project,
    "selected-tab": $props.tab
  }, {
    "project-content": withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="pb-10 mb-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6"${_scopeId}><h1 class="mt-2 text-2xl font-bold break-words text-gray-900"${_scopeId}><div class="text-blue-500"${_scopeId}>${ssrInterpolate($props.study.data.name)}</div><div class="text-sm float-left my-3"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_DOIBadge, {
          doi: $props.study.data.doi,
          color: "bg-yellow-300"
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="float-right"${_scopeId}><span class="flex-0.5 self-center"${_scopeId}>`);
        if ($data.selectedDataset && $props.study.data.is_public) {
          _push2(ssrRenderComponent(_component_Menu, {
            as: "div",
            class: "relative text-left"
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<div${_scopeId2}>`);
                _push3(ssrRenderComponent(_component_MenuButton, { class: "bg-white text-sm rounded-full flex items-center text-gray-400 hover:text-gray-600" }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(ssrRenderComponent(_component_ShareIcon, {
                        class: "h-4 w-4 text-gray-800 flex-shrink-0 mr-2",
                        "aria-hidden": "true"
                      }, null, _parent4, _scopeId3));
                      _push4(`Share `);
                    } else {
                      return [
                        createVNode(_component_ShareIcon, {
                          class: "h-4 w-4 text-gray-800 flex-shrink-0 mr-2",
                          "aria-hidden": "true"
                        }),
                        createTextVNode("Share ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                _push3(`</div>`);
                _push3(ssrRenderComponent(_component_MenuItems, { class: "origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50" }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`<div class="py-1"${_scopeId3}>`);
                      _push4(ssrRenderComponent(_component_MenuItem, null, {
                        default: withCtx(({ active }, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(`<div class="${ssrRenderClass([
                              active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                              "block px-4 py-2 text-sm flex"
                            ])}"${_scopeId4}><div class="flex-grow"${_scopeId4}><input id="datasetPublicURLCopy" readonly type="text"${ssrRenderAttr("value", $options.shareURL)} class="rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300"${_scopeId4}></div><button type="button" class="-ml-px relative inline-flex items-center space-x-2 px-2 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500"${_scopeId4}><span${_scopeId4}>`);
                            _push5(ssrRenderComponent(_component_ClipboardDocumentIcon, {
                              class: "h-5 w-5",
                              "aria-hidden": "true"
                            }, null, _parent5, _scopeId4));
                            _push5(`</span></button></div>`);
                          } else {
                            return [
                              createVNode("div", {
                                class: [
                                  active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                  "block px-4 py-2 text-sm flex"
                                ]
                              }, [
                                createVNode("div", { class: "flex-grow" }, [
                                  createVNode("input", {
                                    id: "datasetPublicURLCopy",
                                    readonly: "",
                                    type: "text",
                                    value: $options.shareURL,
                                    class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                    onFocus: ($event) => $event.target.select()
                                  }, null, 40, ["value", "onFocus"])
                                ]),
                                createVNode("button", {
                                  type: "button",
                                  class: "-ml-px relative inline-flex items-center space-x-2 px-2 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                  onClick: ($event) => _ctx.copyToClipboard(
                                    $options.shareURL,
                                    "datasetPublicURLCopy"
                                  )
                                }, [
                                  createVNode("span", null, [
                                    createVNode(_component_ClipboardDocumentIcon, {
                                      class: "h-5 w-5",
                                      "aria-hidden": "true"
                                    })
                                  ])
                                ], 8, ["onClick"])
                              ], 2)
                            ];
                          }
                        }),
                        _: 1
                      }, _parent4, _scopeId3));
                      _push4(`</div>`);
                    } else {
                      return [
                        createVNode("div", { class: "py-1" }, [
                          createVNode(_component_MenuItem, null, {
                            default: withCtx(({ active }) => [
                              createVNode("div", {
                                class: [
                                  active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                  "block px-4 py-2 text-sm flex"
                                ]
                              }, [
                                createVNode("div", { class: "flex-grow" }, [
                                  createVNode("input", {
                                    id: "datasetPublicURLCopy",
                                    readonly: "",
                                    type: "text",
                                    value: $options.shareURL,
                                    class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                    onFocus: ($event) => $event.target.select()
                                  }, null, 40, ["value", "onFocus"])
                                ]),
                                createVNode("button", {
                                  type: "button",
                                  class: "-ml-px relative inline-flex items-center space-x-2 px-2 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                  onClick: ($event) => _ctx.copyToClipboard(
                                    $options.shareURL,
                                    "datasetPublicURLCopy"
                                  )
                                }, [
                                  createVNode("span", null, [
                                    createVNode(_component_ClipboardDocumentIcon, {
                                      class: "h-5 w-5",
                                      "aria-hidden": "true"
                                    })
                                  ])
                                ], 8, ["onClick"])
                              ], 2)
                            ]),
                            _: 1
                          })
                        ])
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
              } else {
                return [
                  createVNode("div", null, [
                    createVNode(_component_MenuButton, { class: "bg-white text-sm rounded-full flex items-center text-gray-400 hover:text-gray-600" }, {
                      default: withCtx(() => [
                        createVNode(_component_ShareIcon, {
                          class: "h-4 w-4 text-gray-800 flex-shrink-0 mr-2",
                          "aria-hidden": "true"
                        }),
                        createTextVNode("Share ")
                      ]),
                      _: 1
                    })
                  ]),
                  createVNode(Transition, {
                    "enter-active-class": "transition ease-out duration-100",
                    "enter-from-class": "transform opacity-0 scale-95",
                    "enter-to-class": "transform opacity-100 scale-100",
                    "leave-active-class": "transition ease-in duration-75",
                    "leave-from-class": "transform opacity-100 scale-100",
                    "leave-to-class": "transform opacity-0 scale-95"
                  }, {
                    default: withCtx(() => [
                      createVNode(_component_MenuItems, { class: "origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50" }, {
                        default: withCtx(() => [
                          createVNode("div", { class: "py-1" }, [
                            createVNode(_component_MenuItem, null, {
                              default: withCtx(({ active }) => [
                                createVNode("div", {
                                  class: [
                                    active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                    "block px-4 py-2 text-sm flex"
                                  ]
                                }, [
                                  createVNode("div", { class: "flex-grow" }, [
                                    createVNode("input", {
                                      id: "datasetPublicURLCopy",
                                      readonly: "",
                                      type: "text",
                                      value: $options.shareURL,
                                      class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                      onFocus: ($event) => $event.target.select()
                                    }, null, 40, ["value", "onFocus"])
                                  ]),
                                  createVNode("button", {
                                    type: "button",
                                    class: "-ml-px relative inline-flex items-center space-x-2 px-2 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                    onClick: ($event) => _ctx.copyToClipboard(
                                      $options.shareURL,
                                      "datasetPublicURLCopy"
                                    )
                                  }, [
                                    createVNode("span", null, [
                                      createVNode(_component_ClipboardDocumentIcon, {
                                        class: "h-5 w-5",
                                        "aria-hidden": "true"
                                      })
                                    ])
                                  ], 8, ["onClick"])
                                ], 2)
                              ]),
                              _: 1
                            })
                          ])
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  })
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</span></div><div class="text-sm float-right mr-4"${_scopeId}><div class="inline hover:text-blue-600 hover:cursor-pointer text-gray-200"${_scopeId}> #${ssrInterpolate($props.study.data.identifier)}</div></div></h1><br${_scopeId}><br${_scopeId}>`);
        if ($props.study.data.description && $props.study.data.description.length > 0) {
          _push2(`<div class="mt-4"${_scopeId}><div class="relative"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-100"${_scopeId}></div></div><div class="relative flex items-center justify-between"${_scopeId}><span class="pr-3 text-md bg-white font-medium text-gray-400"${_scopeId}> Description </span></div></div><p style="${ssrRenderStyle({ "max-width": "100ch !important" })}" class="prose mt-1 text-sm text-blue-gray-500"${_scopeId}>${_ctx.md($props.study.data.description)}</p></div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($props.study.data.tags.length > 0) {
          _push2(`<div class="mt-4"${_scopeId}><div class="relative"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-100"${_scopeId}></div></div><div class="relative flex items-center justify-between"${_scopeId}><span class="pr-3 text-md bg-white font-medium text-gray-400"${_scopeId}> Keywords </span></div></div><div class="mt-3"${_scopeId}><dd class="mt-1 text-md text-gray-900 space-y-5"${_scopeId}><p${_scopeId}><!--[-->`);
          ssrRenderList($props.study.data.tags, (tag) => {
            _push2(`<span class="mr-2"${_scopeId}><span class="inline-flex items-center px-2.5 py-0.5 rounded-md text-sm font-medium bg-indigo-100 text-indigo-800"${_scopeId}><svg class="-ml-0.5 mr-1.5 h-2 w-2 text-indigo-400" fill="currentColor" viewBox="0 0 8 8"${_scopeId}><circle cx="4" cy="4" r="3"${_scopeId}></circle></svg> ${ssrInterpolate(tag.name["en"])}</span></span>`);
          });
          _push2(`<!--]--></p></dd></div></div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($props.study.data.sample.molecules.length > 0 || $props.study.data.sample.description == "") {
          _push2(`<div class="mt-4"${_scopeId}><div class="relative"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-100"${_scopeId}></div></div><div class="relative flex items-center justify-between"${_scopeId}><span class="pr-3 text-md bg-white font-medium text-gray-400"${_scopeId}> Sample </span></div></div>`);
          if ($props.study.data.sample.molecules.length > 0) {
            _push2(`<div class="mt-3"${_scopeId}><label${_scopeId}>Molecular Composition</label><div class="grid md:grid-cols-2 gap-2 mt-2"${_scopeId}><div class="pr-2"${_scopeId}>`);
            if ($props.study.data.sample.molecules.length > 0) {
              _push2(`<div class="flow-root"${_scopeId}><ul role="list" class="-mb-8"${_scopeId}><!--[-->`);
              ssrRenderList($props.study.data.sample.molecules, (molecule) => {
                _push2(`<li${_scopeId}><div class="relative pb-8"${_scopeId}><span class="absolute top-5 left-5 -ml-px h-full w-0.5 bg-gray-200" aria-hidden="true"${_scopeId}></span><div class="relative flex items-start space-x-3"${_scopeId}>`);
                if (molecule && molecule.pivot) {
                  _push2(`<div class="relative"${_scopeId}><div class="rounded-full border p-2 z-10 bg-gray-100 text-sm"${_scopeId}>${ssrInterpolate(molecule.pivot.percentage_composition)}% </div></div>`);
                } else {
                  _push2(`<!---->`);
                }
                _push2(`<div class="min-w-0 flex-1"${_scopeId}><div${_scopeId}><div class="text-sm"${_scopeId}><a class="font-medium text-gray-900"${_scopeId}>${ssrInterpolate(molecule.standard_inchi)}</a></div></div><div class="mt-2 text-sm text-gray-700"${_scopeId}><div class="rounded-md border my-3 flex justify-center items-center"${_scopeId}>`);
                _push2(ssrRenderComponent(_component_Depictor2D, {
                  class: "py-4 -px-4",
                  molecule: molecule.canonical_smiles
                }, null, _parent2, _scopeId));
                _push2(`</div></div></div></div></div></li>`);
              });
              _push2(`<!--]--></ul><div class="rounded-full border p-2 z-10 bg-gray-100 text-sm mt-14 text-center"${_scopeId}> Sample chemical composition </div></div>`);
            } else {
              _push2(`<div${_scopeId}><div class="text-center my-10 py-10"${_scopeId}><h3 class="mt-2 text-sm font-medium text-gray-900"${_scopeId}> No structures associated with the sample yet! </h3><p class="mt-1 text-sm text-gray-500"${_scopeId}> Get started by adding a new molecule. </p></div></div>`);
            }
            _push2(`</div></div></div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="mt-4"${_scopeId}><div class="relative"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-100"${_scopeId}></div></div><div class="relative flex items-center justify-between"${_scopeId}><span class="pr-3 text-md bg-white font-medium text-gray-400"${_scopeId}> Spectra </span></div></div><div class="mt-3"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_SpectraViewer, {
          ref: "spectraViewerREF",
          project: $props.project.data,
          study: $props.study.data
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="my-2"${_scopeId}><div${_scopeId}><h2 class="text-sm font-medium text-gray-500"${_scopeId}> Spectra Datasets </h2><ul role="list" class="mt-3 grid grid-cols-1 gap-5 sm:grid-cols-2 sm:gap-6 lg:grid-cols-3"${_scopeId}><!--[-->`);
        ssrRenderList($props.study.data.datasets.sort(
          (a2, b2) => a2.name > b2.name ? 1 : -1
        ), (dataset) => {
          _push2(`<li class="col-span-1 flex rounded-md shadow-sm"${_scopeId}><a class="cursor-pointer"${ssrRenderAttr(
            "href",
            "/" + dataset.identifier.replace(
              "NMRXIV:",
              ""
            )
          )} target="_blank"${_scopeId}><div class="flex flex-1 border-l rounded-md items-center justify-between truncate rounded-r-md border-b border-r border-t border-gray-200 bg-white"${_scopeId}><div class="flex-1 truncate px-4 py-2 text-sm"${_scopeId}><a class="font-medium text-lg text-gray-900 hover:text-gray-600"${_scopeId}>${ssrInterpolate(dataset.name)} `);
          if (dataset.type) {
            _push2(`<span${_scopeId}>(${ssrInterpolate(dataset.type.replace(
              /,\s*$/,
              ""
            ))})</span>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</a><p class="text-gray-500"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_DOIBadge, {
            color: "bg-green-100",
            doi: dataset.doi
          }, null, _parent2, _scopeId));
          _push2(`</p></div><div class="flex-shrink-0 pr-2"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="h-5 w-5 text-gray-600 ml-4"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25"${_scopeId}></path></svg></div></div></a></li>`);
        });
        _push2(`<!--]--></ul></div></div><div${_scopeId}> </div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "pb-10 mb-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6" }, [
            createVNode("h1", { class: "mt-2 text-2xl font-bold break-words text-gray-900" }, [
              createVNode("div", { class: "text-blue-500" }, toDisplayString($props.study.data.name), 1),
              createVNode("div", { class: "text-sm float-left my-3" }, [
                createVNode(_component_DOIBadge, {
                  doi: $props.study.data.doi,
                  color: "bg-yellow-300"
                }, null, 8, ["doi"])
              ]),
              createVNode("div", { class: "float-right" }, [
                createVNode("span", { class: "flex-0.5 self-center" }, [
                  $data.selectedDataset && $props.study.data.is_public ? (openBlock(), createBlock(_component_Menu, {
                    key: 0,
                    as: "div",
                    class: "relative text-left"
                  }, {
                    default: withCtx(() => [
                      createVNode("div", null, [
                        createVNode(_component_MenuButton, { class: "bg-white text-sm rounded-full flex items-center text-gray-400 hover:text-gray-600" }, {
                          default: withCtx(() => [
                            createVNode(_component_ShareIcon, {
                              class: "h-4 w-4 text-gray-800 flex-shrink-0 mr-2",
                              "aria-hidden": "true"
                            }),
                            createTextVNode("Share ")
                          ]),
                          _: 1
                        })
                      ]),
                      createVNode(Transition, {
                        "enter-active-class": "transition ease-out duration-100",
                        "enter-from-class": "transform opacity-0 scale-95",
                        "enter-to-class": "transform opacity-100 scale-100",
                        "leave-active-class": "transition ease-in duration-75",
                        "leave-from-class": "transform opacity-100 scale-100",
                        "leave-to-class": "transform opacity-0 scale-95"
                      }, {
                        default: withCtx(() => [
                          createVNode(_component_MenuItems, { class: "origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50" }, {
                            default: withCtx(() => [
                              createVNode("div", { class: "py-1" }, [
                                createVNode(_component_MenuItem, null, {
                                  default: withCtx(({ active }) => [
                                    createVNode("div", {
                                      class: [
                                        active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                        "block px-4 py-2 text-sm flex"
                                      ]
                                    }, [
                                      createVNode("div", { class: "flex-grow" }, [
                                        createVNode("input", {
                                          id: "datasetPublicURLCopy",
                                          readonly: "",
                                          type: "text",
                                          value: $options.shareURL,
                                          class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                          onFocus: ($event) => $event.target.select()
                                        }, null, 40, ["value", "onFocus"])
                                      ]),
                                      createVNode("button", {
                                        type: "button",
                                        class: "-ml-px relative inline-flex items-center space-x-2 px-2 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                        onClick: ($event) => _ctx.copyToClipboard(
                                          $options.shareURL,
                                          "datasetPublicURLCopy"
                                        )
                                      }, [
                                        createVNode("span", null, [
                                          createVNode(_component_ClipboardDocumentIcon, {
                                            class: "h-5 w-5",
                                            "aria-hidden": "true"
                                          })
                                        ])
                                      ], 8, ["onClick"])
                                    ], 2)
                                  ]),
                                  _: 1
                                })
                              ])
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  })) : createCommentVNode("", true)
                ])
              ]),
              createVNode("div", { class: "text-sm float-right mr-4" }, [
                createVNode("div", { class: "inline hover:text-blue-600 hover:cursor-pointer text-gray-200" }, " #" + toDisplayString($props.study.data.identifier), 1)
              ])
            ]),
            createVNode("br"),
            createVNode("br"),
            $props.study.data.description && $props.study.data.description.length > 0 ? (openBlock(), createBlock("div", {
              key: 0,
              class: "mt-4"
            }, [
              createVNode("div", { class: "relative" }, [
                createVNode("div", {
                  class: "absolute inset-0 flex items-center",
                  "aria-hidden": "true"
                }, [
                  createVNode("div", { class: "w-full border-t border-gray-100" })
                ]),
                createVNode("div", { class: "relative flex items-center justify-between" }, [
                  createVNode("span", { class: "pr-3 text-md bg-white font-medium text-gray-400" }, " Description ")
                ])
              ]),
              createVNode("p", {
                style: { "max-width": "100ch !important" },
                class: "prose mt-1 text-sm text-blue-gray-500",
                innerHTML: _ctx.md($props.study.data.description)
              }, null, 8, ["innerHTML"])
            ])) : createCommentVNode("", true),
            $props.study.data.tags.length > 0 ? (openBlock(), createBlock("div", {
              key: 1,
              class: "mt-4"
            }, [
              createVNode("div", { class: "relative" }, [
                createVNode("div", {
                  class: "absolute inset-0 flex items-center",
                  "aria-hidden": "true"
                }, [
                  createVNode("div", { class: "w-full border-t border-gray-100" })
                ]),
                createVNode("div", { class: "relative flex items-center justify-between" }, [
                  createVNode("span", { class: "pr-3 text-md bg-white font-medium text-gray-400" }, " Keywords ")
                ])
              ]),
              createVNode("div", { class: "mt-3" }, [
                createVNode("dd", { class: "mt-1 text-md text-gray-900 space-y-5" }, [
                  createVNode("p", null, [
                    (openBlock(true), createBlock(Fragment, null, renderList($props.study.data.tags, (tag) => {
                      return openBlock(), createBlock("span", {
                        key: tag.id,
                        class: "mr-2"
                      }, [
                        createVNode("span", { class: "inline-flex items-center px-2.5 py-0.5 rounded-md text-sm font-medium bg-indigo-100 text-indigo-800" }, [
                          (openBlock(), createBlock("svg", {
                            class: "-ml-0.5 mr-1.5 h-2 w-2 text-indigo-400",
                            fill: "currentColor",
                            viewBox: "0 0 8 8"
                          }, [
                            createVNode("circle", {
                              cx: "4",
                              cy: "4",
                              r: "3"
                            })
                          ])),
                          createTextVNode(" " + toDisplayString(tag.name["en"]), 1)
                        ])
                      ]);
                    }), 128))
                  ])
                ])
              ])
            ])) : createCommentVNode("", true),
            $props.study.data.sample.molecules.length > 0 || $props.study.data.sample.description == "" ? (openBlock(), createBlock("div", {
              key: 2,
              class: "mt-4"
            }, [
              createVNode("div", { class: "relative" }, [
                createVNode("div", {
                  class: "absolute inset-0 flex items-center",
                  "aria-hidden": "true"
                }, [
                  createVNode("div", { class: "w-full border-t border-gray-100" })
                ]),
                createVNode("div", { class: "relative flex items-center justify-between" }, [
                  createVNode("span", { class: "pr-3 text-md bg-white font-medium text-gray-400" }, " Sample ")
                ])
              ]),
              $props.study.data.sample.molecules.length > 0 ? (openBlock(), createBlock("div", {
                key: 0,
                class: "mt-3"
              }, [
                createVNode("label", null, "Molecular Composition"),
                createVNode("div", { class: "grid md:grid-cols-2 gap-2 mt-2" }, [
                  createVNode("div", { class: "pr-2" }, [
                    $props.study.data.sample.molecules.length > 0 ? (openBlock(), createBlock("div", {
                      key: 0,
                      class: "flow-root"
                    }, [
                      createVNode("ul", {
                        role: "list",
                        class: "-mb-8"
                      }, [
                        (openBlock(true), createBlock(Fragment, null, renderList($props.study.data.sample.molecules, (molecule) => {
                          return openBlock(), createBlock("li", {
                            key: molecule.standard_inchi
                          }, [
                            createVNode("div", { class: "relative pb-8" }, [
                              createVNode("span", {
                                class: "absolute top-5 left-5 -ml-px h-full w-0.5 bg-gray-200",
                                "aria-hidden": "true"
                              }),
                              createVNode("div", { class: "relative flex items-start space-x-3" }, [
                                molecule && molecule.pivot ? (openBlock(), createBlock("div", {
                                  key: 0,
                                  class: "relative"
                                }, [
                                  createVNode("div", { class: "rounded-full border p-2 z-10 bg-gray-100 text-sm" }, toDisplayString(molecule.pivot.percentage_composition) + "% ", 1)
                                ])) : createCommentVNode("", true),
                                createVNode("div", { class: "min-w-0 flex-1" }, [
                                  createVNode("div", null, [
                                    createVNode("div", { class: "text-sm" }, [
                                      createVNode("a", { class: "font-medium text-gray-900" }, toDisplayString(molecule.standard_inchi), 1)
                                    ])
                                  ]),
                                  createVNode("div", { class: "mt-2 text-sm text-gray-700" }, [
                                    createVNode("div", { class: "rounded-md border my-3 flex justify-center items-center" }, [
                                      createVNode(_component_Depictor2D, {
                                        class: "py-4 -px-4",
                                        molecule: molecule.canonical_smiles
                                      }, null, 8, ["molecule"])
                                    ])
                                  ])
                                ])
                              ])
                            ])
                          ]);
                        }), 128))
                      ]),
                      createVNode("div", { class: "rounded-full border p-2 z-10 bg-gray-100 text-sm mt-14 text-center" }, " Sample chemical composition ")
                    ])) : (openBlock(), createBlock("div", { key: 1 }, [
                      createVNode("div", { class: "text-center my-10 py-10" }, [
                        createVNode("h3", { class: "mt-2 text-sm font-medium text-gray-900" }, " No structures associated with the sample yet! "),
                        createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " Get started by adding a new molecule. ")
                      ])
                    ]))
                  ])
                ])
              ])) : createCommentVNode("", true)
            ])) : createCommentVNode("", true),
            createVNode("div", { class: "mt-4" }, [
              createVNode("div", { class: "relative" }, [
                createVNode("div", {
                  class: "absolute inset-0 flex items-center",
                  "aria-hidden": "true"
                }, [
                  createVNode("div", { class: "w-full border-t border-gray-100" })
                ]),
                createVNode("div", { class: "relative flex items-center justify-between" }, [
                  createVNode("span", { class: "pr-3 text-md bg-white font-medium text-gray-400" }, " Spectra ")
                ])
              ]),
              createVNode("div", { class: "mt-3" }, [
                createVNode(_component_SpectraViewer, {
                  ref: "spectraViewerREF",
                  project: $props.project.data,
                  study: $props.study.data
                }, null, 8, ["project", "study"])
              ]),
              createVNode("div", { class: "my-2" }, [
                createVNode("div", null, [
                  createVNode("h2", { class: "text-sm font-medium text-gray-500" }, " Spectra Datasets "),
                  createVNode("ul", {
                    role: "list",
                    class: "mt-3 grid grid-cols-1 gap-5 sm:grid-cols-2 sm:gap-6 lg:grid-cols-3"
                  }, [
                    (openBlock(true), createBlock(Fragment, null, renderList($props.study.data.datasets.sort(
                      (a2, b2) => a2.name > b2.name ? 1 : -1
                    ), (dataset) => {
                      return openBlock(), createBlock("li", {
                        key: dataset.slug,
                        class: "col-span-1 flex rounded-md shadow-sm"
                      }, [
                        createVNode("a", {
                          class: "cursor-pointer",
                          href: "/" + dataset.identifier.replace(
                            "NMRXIV:",
                            ""
                          ),
                          target: "_blank"
                        }, [
                          createVNode("div", { class: "flex flex-1 border-l rounded-md items-center justify-between truncate rounded-r-md border-b border-r border-t border-gray-200 bg-white" }, [
                            createVNode("div", { class: "flex-1 truncate px-4 py-2 text-sm" }, [
                              createVNode("a", { class: "font-medium text-lg text-gray-900 hover:text-gray-600" }, [
                                createTextVNode(toDisplayString(dataset.name) + " ", 1),
                                dataset.type ? (openBlock(), createBlock("span", { key: 0 }, "(" + toDisplayString(dataset.type.replace(
                                  /,\s*$/,
                                  ""
                                )) + ")", 1)) : createCommentVNode("", true)
                              ]),
                              createVNode("p", { class: "text-gray-500" }, [
                                createVNode(_component_DOIBadge, {
                                  color: "bg-green-100",
                                  doi: dataset.doi
                                }, null, 8, ["doi"])
                              ])
                            ]),
                            createVNode("div", { class: "flex-shrink-0 pr-2" }, [
                              (openBlock(), createBlock("svg", {
                                xmlns: "http://www.w3.org/2000/svg",
                                fill: "none",
                                viewBox: "0 0 24 24",
                                "stroke-width": "1.5",
                                stroke: "currentColor",
                                class: "h-5 w-5 text-gray-600 ml-4"
                              }, [
                                createVNode("path", {
                                  "stroke-linecap": "round",
                                  "stroke-linejoin": "round",
                                  d: "M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25"
                                })
                              ]))
                            ])
                          ])
                        ], 8, ["href"])
                      ]);
                    }), 128))
                  ])
                ])
              ]),
              createVNode("div", null, " ")
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  ssrRenderVNode(_push, createVNode(resolveDynamicComponent("script"), { type: "application/ld+json" }, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${ssrInterpolate($data.schema)}`);
      } else {
        return [
          createTextVNode(toDisplayString($data.schema), 1)
        ];
      }
    }),
    _: 1
  }), _parent);
  _push(`<!--]-->`);
}
const _sfc_setup$E = _sfc_main$E.setup;
_sfc_main$E.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Public/Project/Study.vue");
  return _sfc_setup$E ? _sfc_setup$E(props, ctx) : void 0;
};
const Study = /* @__PURE__ */ _export_sfc(_sfc_main$E, [["ssrRender", _sfc_ssrRender$D]]);
const __vite_glob_0_49 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Study
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$D = {
  components: {
    Link,
    EllipsisVerticalIcon,
    Menu,
    MenuButton,
    MenuItem,
    MenuItems,
    ArrowDownTrayIcon,
    ScaleIcon
  },
  props: ["project", "mode"],
  methods: {
    toggleUpVote() {
      if (this.$page.props.auth.user.username && this.$page.props.auth.user.username != "") {
        const url = "/projects/" + this.project.id + "/toggleUpVote";
        axios.get(url).catch((err) => {
          if (err.response.status !== 200 || err.response.status !== 201) {
            throw new Error(
              `API call failed with status code: ${err.response.status} after multiple attempts`
            );
          }
        }).then(function() {
          router$1.reload({ only: ["projects"] });
        });
      } else {
        this.$inertia.visit(route("login"));
      }
    }
  }
};
function _sfc_ssrRender$C(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Link = resolveComponent("Link");
  const _component_Menu = resolveComponent("Menu");
  const _component_MenuButton = resolveComponent("MenuButton");
  const _component_EllipsisVerticalIcon = resolveComponent("EllipsisVerticalIcon");
  const _component_MenuItems = resolveComponent("MenuItems");
  const _component_MenuItem = resolveComponent("MenuItem");
  const _component_ArrowDownTrayIcon = resolveComponent("ArrowDownTrayIcon");
  const _component_ScaleIcon = resolveComponent("ScaleIcon");
  _push(`<div${ssrRenderAttrs(_attrs)}>`);
  if ($props.project) {
    _push(`<div class="hover:shadow-lg">`);
    if ($props.mode == "mini" || $props.mode == "grid") {
      _push(`<div><div class="flex flex-col rounded-lg shadow-lg">`);
      _push(ssrRenderComponent(_component_Link, {
        href: $props.project.public_url,
        class: "block cursor-pointer"
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="relative rounded-t-lg lg:h-36 xl:h-36"${_scopeId}>`);
            if ($props.project.photo_url && $props.project.photo_url != "") {
              _push2(`<img${ssrRenderAttr("src", $props.project.photo_url)} alt="" class="w-full h-full object-center rounded-t-lg object-cover"${_scopeId}>`);
            } else {
              _push2(`<div class="flex-shrink-0 lg:h-36 xl:h-36 pattern-diagonal-lines pattern-gray-400 pattern-bg-white pattern-size-2 pattern-opacity-20 border-b border-gray-400"${_scopeId}></div>`);
            }
            _push2(`<div class="absolute top-0 right-0"${_scopeId}><div class="p-2 flex items-center"${_scopeId}><div class="flex-shrink-0"${_scopeId}>`);
            if ($props.project.stats) {
              _push2(`<span class="relative z-0 inline-flex shadow-sm rounded-md"${_scopeId}><button type="button" class="relative inline-flex items-center px-1 py-1 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-900 hover:bg-gray-50"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor"${_scopeId}><path fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" clip-rule="evenodd"${_scopeId}></path></svg></button><a class="-ml-px relative inline-flex items-center px-2 py-1 rounded-r-md border border-gray-300 bg-white text-sm font-black text-dark hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500"${_scopeId}>${ssrInterpolate($props.project.stats.likes)}</a></span>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div></div></div></div>`);
          } else {
            return [
              createVNode("div", { class: "relative rounded-t-lg lg:h-36 xl:h-36" }, [
                $props.project.photo_url && $props.project.photo_url != "" ? (openBlock(), createBlock("img", {
                  key: 0,
                  src: $props.project.photo_url,
                  alt: "",
                  class: "w-full h-full object-center rounded-t-lg object-cover"
                }, null, 8, ["src"])) : (openBlock(), createBlock("div", {
                  key: 1,
                  class: "flex-shrink-0 lg:h-36 xl:h-36 pattern-diagonal-lines pattern-gray-400 pattern-bg-white pattern-size-2 pattern-opacity-20 border-b border-gray-400"
                })),
                createVNode("div", { class: "absolute top-0 right-0" }, [
                  createVNode("div", { class: "p-2 flex items-center" }, [
                    createVNode("div", { class: "flex-shrink-0" }, [
                      $props.project.stats ? (openBlock(), createBlock("span", {
                        key: 0,
                        class: "relative z-0 inline-flex shadow-sm rounded-md"
                      }, [
                        createVNode("button", {
                          type: "button",
                          class: "relative inline-flex items-center px-1 py-1 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-900 hover:bg-gray-50",
                          onClick: ($event) => $options.toggleUpVote()
                        }, [
                          (openBlock(), createBlock("svg", {
                            xmlns: "http://www.w3.org/2000/svg",
                            class: "h-5 w-5",
                            viewBox: "0 0 20 20",
                            fill: "currentColor"
                          }, [
                            createVNode("path", {
                              "fill-rule": "evenodd",
                              d: "M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z",
                              "clip-rule": "evenodd"
                            })
                          ]))
                        ], 8, ["onClick"]),
                        createVNode("a", { class: "-ml-px relative inline-flex items-center px-2 py-1 rounded-r-md border border-gray-300 bg-white text-sm font-black text-dark hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500" }, toDisplayString($props.project.stats.likes), 1)
                      ])) : createCommentVNode("", true)
                    ])
                  ])
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<div class="${ssrRenderClass([
        $props.mode != "mini" ? "" : "rounded-b-lg",
        "flex-1 bg-white flex flex-col justify-between"
      ])}"><div style="${ssrRenderStyle({ "min-height": "168px" })}" class="flex-1 p-3">`);
      if ($props.project.identifier) {
        _push(`<small class="text-gray-500">#${ssrInterpolate($props.project.identifier)}</small>`);
      } else {
        _push(`<!---->`);
      }
      _push(ssrRenderComponent(_component_Link, {
        href: $props.project.public_url,
        class: "block cursor-pointer"
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<p class="text-lg h-14 font-black text-gray-900 line-clamp-2"${_scopeId}>${ssrInterpolate($props.project.name)}</p><p class="text-xs text-gray-500 line-clamp-3"${_scopeId}>${ssrInterpolate($props.project.description)}</p><div class="mt-1 h-14 overflow-hidden"${_scopeId}><!--[-->`);
            ssrRenderList($props.project.tags, (tag) => {
              _push2(`<span class="mt-1 inline-flex items-center rounded-full bg-gray-50 px-2 py-1 text-xs font-medium text-gray-600 ring-1 ring-inset ring-gray-500/10"${_scopeId}>${ssrInterpolate(tag.name["en"])}</span>`);
            });
            _push2(`<!--]--></div>`);
          } else {
            return [
              createVNode("p", { class: "text-lg h-14 font-black text-gray-900 line-clamp-2" }, toDisplayString($props.project.name), 1),
              createVNode("p", { class: "text-xs text-gray-500 line-clamp-3" }, toDisplayString($props.project.description), 1),
              createVNode("div", { class: "mt-1 h-14 overflow-hidden" }, [
                (openBlock(true), createBlock(Fragment, null, renderList($props.project.tags, (tag) => {
                  return openBlock(), createBlock("span", {
                    key: tag.id,
                    class: "mt-1 inline-flex items-center rounded-full bg-gray-50 px-2 py-1 text-xs font-medium text-gray-600 ring-1 ring-inset ring-gray-500/10"
                  }, toDisplayString(tag.name["en"]), 1);
                }), 128))
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</div></div>`);
      if ($props.mode != "mini") {
        _push(`<div class="p-3 rounded-b-lg bg-white border-t flex"><div class="flex-0.5 self-center align-middle"><img class="h-7 w-7 rounded-full"${ssrRenderAttr("src", $props.project.owner.profile_photo_url)}></div><div class="flex-auto pl-4 text-xs font-xs font-semibold text-black"><p class="text-ellipsis overflow-hidden ...">${ssrInterpolate($props.project.owner.first_name)} ${ssrInterpolate($props.project.owner.last_name)}</p><div class="flex-1 space-x-1 text-xs font-xs text-gray-500"><time datetime="2020-03-16">${ssrInterpolate(_ctx.formatDate($props.project.created_at))}</time></div></div><div class="flex-0.5 self-center">`);
        _push(ssrRenderComponent(_component_Menu, {
          as: "div",
          class: "relative text-left"
        }, {
          default: withCtx((_, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<div${_scopeId}>`);
              _push2(ssrRenderComponent(_component_MenuButton, { class: "bg-white rounded-full flex items-center text-gray-400 hover:text-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-indigo-500" }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`<span class="sr-only"${_scopeId2}>Open options</span>`);
                    _push3(ssrRenderComponent(_component_EllipsisVerticalIcon, {
                      class: "h-5 w-5",
                      "aria-hidden": "true"
                    }, null, _parent3, _scopeId2));
                  } else {
                    return [
                      createVNode("span", { class: "sr-only" }, "Open options"),
                      createVNode(_component_EllipsisVerticalIcon, {
                        class: "h-5 w-5",
                        "aria-hidden": "true"
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</div>`);
              _push2(ssrRenderComponent(_component_MenuItems, { class: "absolute -right-2 mt-2 z-50 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none" }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`<div${_scopeId2}>`);
                    if ($props.project.download_url) {
                      _push3(ssrRenderComponent(_component_MenuItem, { class: "border-b" }, {
                        default: withCtx(({ active }, _push4, _parent4, _scopeId3) => {
                          if (_push4) {
                            _push4(`<a${ssrRenderAttr("href", $props.project.download_url)} class="${ssrRenderClass([
                              active ? "bg-gray-100 text-gray-600" : "text-gray-700",
                              "block px-4 py-4 text-sm cursor-pointer hover:text-gray-900"
                            ])}"${_scopeId3}>`);
                            _push4(ssrRenderComponent(_component_ArrowDownTrayIcon, {
                              class: "h-5 w-5 inline",
                              "aria-hidden": "true"
                            }, null, _parent4, _scopeId3));
                            _push4(` Download</a>`);
                          } else {
                            return [
                              createVNode("a", {
                                href: $props.project.download_url,
                                class: [
                                  active ? "bg-gray-100 text-gray-600" : "text-gray-700",
                                  "block px-4 py-4 text-sm cursor-pointer hover:text-gray-900"
                                ]
                              }, [
                                createVNode(_component_ArrowDownTrayIcon, {
                                  class: "h-5 w-5 inline",
                                  "aria-hidden": "true"
                                }),
                                createTextVNode(" Download")
                              ], 10, ["href"])
                            ];
                          }
                        }),
                        _: 1
                      }, _parent3, _scopeId2));
                    } else {
                      _push3(`<!---->`);
                    }
                    _push3(ssrRenderComponent(_component_MenuItem, null, {
                      default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                        if (_push4) {
                          _push4(`<div class="px-4 py-2"${_scopeId3}><p class="pb-2"${_scopeId3}><small class="text-gray-500"${_scopeId3}>License</small><br${_scopeId3}><span class="mt-2 float text-xs whitespace-nowrap border-gray-200 items-center py-1.5 bg-white text-gray-900 ellipsis ..."${_scopeId3}>${ssrInterpolate($props.project.license.title)}</span></p></div>`);
                        } else {
                          return [
                            createVNode("div", { class: "px-4 py-2" }, [
                              createVNode("p", { class: "pb-2" }, [
                                createVNode("small", { class: "text-gray-500" }, "License"),
                                createVNode("br"),
                                createVNode("span", { class: "mt-2 float text-xs whitespace-nowrap border-gray-200 items-center py-1.5 bg-white text-gray-900 ellipsis ..." }, toDisplayString($props.project.license.title), 1)
                              ])
                            ])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent3, _scopeId2));
                    _push3(`</div>`);
                  } else {
                    return [
                      createVNode("div", null, [
                        $props.project.download_url ? (openBlock(), createBlock(_component_MenuItem, {
                          key: 0,
                          class: "border-b"
                        }, {
                          default: withCtx(({ active }) => [
                            createVNode("a", {
                              href: $props.project.download_url,
                              class: [
                                active ? "bg-gray-100 text-gray-600" : "text-gray-700",
                                "block px-4 py-4 text-sm cursor-pointer hover:text-gray-900"
                              ]
                            }, [
                              createVNode(_component_ArrowDownTrayIcon, {
                                class: "h-5 w-5 inline",
                                "aria-hidden": "true"
                              }),
                              createTextVNode(" Download")
                            ], 10, ["href"])
                          ]),
                          _: 1
                        })) : createCommentVNode("", true),
                        createVNode(_component_MenuItem, null, {
                          default: withCtx(() => [
                            createVNode("div", { class: "px-4 py-2" }, [
                              createVNode("p", { class: "pb-2" }, [
                                createVNode("small", { class: "text-gray-500" }, "License"),
                                createVNode("br"),
                                createVNode("span", { class: "mt-2 float text-xs whitespace-nowrap border-gray-200 items-center py-1.5 bg-white text-gray-900 ellipsis ..." }, toDisplayString($props.project.license.title), 1)
                              ])
                            ])
                          ]),
                          _: 1
                        })
                      ])
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
            } else {
              return [
                createVNode("div", null, [
                  createVNode(_component_MenuButton, { class: "bg-white rounded-full flex items-center text-gray-400 hover:text-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-indigo-500" }, {
                    default: withCtx(() => [
                      createVNode("span", { class: "sr-only" }, "Open options"),
                      createVNode(_component_EllipsisVerticalIcon, {
                        class: "h-5 w-5",
                        "aria-hidden": "true"
                      })
                    ]),
                    _: 1
                  })
                ]),
                createVNode(Transition, {
                  "enter-active-class": "transition ease-out duration-100",
                  "enter-from-class": "transform opacity-0 scale-95",
                  "enter-to-class": "transform opacity-100 scale-100",
                  "leave-active-class": "transition ease-in duration-75",
                  "leave-from-class": "transform opacity-100 scale-100",
                  "leave-to-class": "transform opacity-0 scale-95"
                }, {
                  default: withCtx(() => [
                    createVNode(_component_MenuItems, { class: "absolute -right-2 mt-2 z-50 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none" }, {
                      default: withCtx(() => [
                        createVNode("div", null, [
                          $props.project.download_url ? (openBlock(), createBlock(_component_MenuItem, {
                            key: 0,
                            class: "border-b"
                          }, {
                            default: withCtx(({ active }) => [
                              createVNode("a", {
                                href: $props.project.download_url,
                                class: [
                                  active ? "bg-gray-100 text-gray-600" : "text-gray-700",
                                  "block px-4 py-4 text-sm cursor-pointer hover:text-gray-900"
                                ]
                              }, [
                                createVNode(_component_ArrowDownTrayIcon, {
                                  class: "h-5 w-5 inline",
                                  "aria-hidden": "true"
                                }),
                                createTextVNode(" Download")
                              ], 10, ["href"])
                            ]),
                            _: 1
                          })) : createCommentVNode("", true),
                          createVNode(_component_MenuItem, null, {
                            default: withCtx(() => [
                              createVNode("div", { class: "px-4 py-2" }, [
                                createVNode("p", { class: "pb-2" }, [
                                  createVNode("small", { class: "text-gray-500" }, "License"),
                                  createVNode("br"),
                                  createVNode("span", { class: "mt-2 float text-xs whitespace-nowrap border-gray-200 items-center py-1.5 bg-white text-gray-900 ellipsis ..." }, toDisplayString($props.project.license.title), 1)
                                ])
                              ])
                            ]),
                            _: 1
                          })
                        ])
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent));
        _push(`</div></div>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div>`);
    } else {
      _push(`<!---->`);
    }
    if ($props.mode == "list") {
      _push(`<div><li class="flex border-b bprder-gray-100"><div class="flex-shrink-0">`);
      if ($props.project.photo_url && $props.project.photo_url != "") {
        _push(`<img${ssrRenderAttr("src", $props.project.photo_url)} alt="" class="border w-36 lg:h-36 xl:h-36 m-2 mr-0 h-full object-center object-cover">`);
      } else {
        _push(`<div class="w-36 m-2 flex-shrink-0 border mr-0 lg:h-36 xl:h-36 pattern-diagonal-lines pattern-gray-400 pattern-bg-white pattern-size-2 pattern-opacity-20 border-b border-gray-400"></div>`);
      }
      _push(`</div><div class="flex-1 flex flex-col px-4 py-2 sm:px-6 justify-between"><div class="flex items-center justify-between"><div>`);
      if ($props.project.identifier) {
        _push(`<small class="text-gray-500">#${ssrInterpolate($props.project.identifier)}</small>`);
      } else {
        _push(`<!---->`);
      }
      _push(`<p class="text-lg font-black text-gray-900 line-clamp-2 font-black">`);
      _push(ssrRenderComponent(_component_Link, {
        href: $props.project.public_url,
        class: "block cursor-pointer"
      }, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`${ssrInterpolate($props.project.name)}`);
          } else {
            return [
              createTextVNode(toDisplayString($props.project.name), 1)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`</p><p class="my-2 text-sm text-gray-500 line-clamp-2 pr-8">${ssrInterpolate($props.project.description)}</p></div><div class="ml-2 flex-shrink-0 flex"><div><div class="p-2 flex items-center"><div class="flex-shrink-0">`);
      if ($props.project.stats) {
        _push(`<span class="relative z-0 inline-flex shadow-sm rounded-md"><button type="button" class="relative inline-flex items-center px-1 py-1 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-900 hover:bg-gray-50"><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" clip-rule="evenodd"></path></svg></button><a class="-ml-px relative inline-flex items-center px-2 py-1 rounded-r-md border border-gray-300 bg-white text-sm font-black text-dark hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500">${ssrInterpolate($props.project.stats.likes)}</a></span>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div></div></div></div></div><div class="mt-2 sm:flex sm:justify-between"><div class="sm:flex"><p class="flex items-center text-sm text-gray-500"><img class="h-7 w-5 mr-2 rounded-full"${ssrRenderAttr("src", $props.project.owner.profile_photo_url)}> ${ssrInterpolate($props.project.owner.first_name)} ${ssrInterpolate($props.project.owner.last_name)}</p><p class="flex items-center text-sm text-gray-500 sm:mt-0 sm:ml-3">`);
      _push(ssrRenderComponent(_component_ScaleIcon, { class: "text-gray-400 h-5 w-5 mr-1.5" }, null, _parent));
      _push(` ${ssrInterpolate($props.project.license.title)}</p>`);
      if ($props.project.download_url) {
        _push(`<p class="flex items-center text-sm text-gray-500 sm:mt-0 sm:ml-2"><a${ssrRenderAttr("href", $props.project.download_url)} class="block px-4 text-sm cursor-pointer hover:text-gray-900&#39;, ]">`);
        _push(ssrRenderComponent(_component_ArrowDownTrayIcon, {
          class: "h-5 w-5 inline",
          "aria-hidden": "true"
        }, null, _parent));
        _push(`</a></p>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</div><div class="mt-2 flex items-center text-sm text-gray-500 sm:mt-0"><svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"><path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"></path></svg><p><time datetime="2020-03-16">${ssrInterpolate(_ctx.formatDate($props.project.created_at))}</time></p></div></div></div></li></div>`);
    } else {
      _push(`<!---->`);
    }
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div>`);
}
const _sfc_setup$D = _sfc_main$D.setup;
_sfc_main$D.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/ProjectCard.vue");
  return _sfc_setup$D ? _sfc_setup$D(props, ctx) : void 0;
};
const ProjectCard = /* @__PURE__ */ _export_sfc(_sfc_main$D, [["ssrRender", _sfc_ssrRender$C]]);
const _sfc_main$C = {
  components: {
    Dropdown
  },
  props: {
    modelValue: String,
    maxWidth: {
      type: Number,
      default: 300
    }
  }
};
function _sfc_ssrRender$B(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex items-center" }, _attrs))}><div class="flex w-full bg-white shadow rounded-full"><input class="relative w-full border-0 px-6 py-3 rounded-full focus:shadow-outline" autocomplete="off" type="text" name="search" placeholder="Search"${ssrRenderAttr("value", $props.modelValue)}></div><button class="ml-3 text-sm text-gray-500 hover:text-gray-700 focus:text-indigo-500" type="button"> Reset </button></div>`);
}
const _sfc_setup$C = _sfc_main$C.setup;
_sfc_main$C.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/ProjectSearch.vue");
  return _sfc_setup$C ? _sfc_setup$C(props, ctx) : void 0;
};
const ProjectSearch = /* @__PURE__ */ _export_sfc(_sfc_main$C, [["ssrRender", _sfc_ssrRender$B]]);
const _sfc_main$B = {
  components: {
    AppLayout,
    ProjectCard,
    Dialog,
    DialogPanel,
    Disclosure,
    DisclosureButton,
    DisclosurePanel,
    Menu,
    MenuButton,
    MenuItem,
    MenuItems,
    Popover,
    PopoverButton,
    PopoverGroup,
    PopoverPanel,
    TransitionChild,
    TransitionRoot,
    XMarkIcon,
    ChevronDownIcon,
    QueueListIcon,
    Link,
    ProjectSearch,
    Pagination,
    Squares2X2Icon: Squares2X2Icon$1
  },
  props: {
    projects: {
      default: [],
      type: Object
    },
    filters: {
      default: {
        search: "",
        sort: "newest",
        mode: "grid"
      },
      type: Object
    }
  },
  data() {
    return {
      sortOptions: [
        { name: "Creation", value: "creation", current: true },
        { name: "Newest", value: "newest", current: false }
      ],
      open: ref(false),
      form: {
        search: this.filters.search,
        sort: "newest",
        mode: "grid"
      }
    };
  },
  mounted() {
    if (this.filters) {
      if (this.filters.search == null) {
        this.filters.search = "";
      }
      if (this.filters.mode == null) {
        this.filters.mode = "grid";
      }
      if (this.filters.sort == null) {
        this.filters.sort = "newest";
      }
    }
  },
  watch: {
    form: {
      deep: true,
      handler: throttle(function() {
        this.$inertia.get("/projects", pickBy(this.form), {
          preserveState: true
        });
      }, 150)
    }
  },
  methods: {
    reset() {
      this.form = {
        search: "",
        sort: "newest",
        mode: "grid"
      };
    }
  }
};
function _sfc_ssrRender$A(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_project_search = resolveComponent("project-search");
  const _component_Menu = resolveComponent("Menu");
  const _component_MenuButton = resolveComponent("MenuButton");
  const _component_ChevronDownIcon = resolveComponent("ChevronDownIcon");
  const _component_MenuItems = resolveComponent("MenuItems");
  const _component_MenuItem = resolveComponent("MenuItem");
  const _component_QueueListIcon = resolveComponent("QueueListIcon");
  const _component_Squares2X2Icon = resolveComponent("Squares2X2Icon");
  const _component_project_card = resolveComponent("project-card");
  const _component_Pagination = resolveComponent("Pagination");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({ title: "Projects" }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="relative border-b border-zinc-900/5"${_scopeId}><div class="relative pt-10 dark:border-white/5 mx-8 py-12 sm:py-12"${_scopeId}><div class="absolute inset-0 bg-gradient-to-r from-[#36b49f] to-[#DBFF75] opacity-40 [mask-image:radial-gradient(farthest-side_at_top,white,transparent)] dark:from-[#36b49f]/30 dark:to-[#DBFF75]/30 dark:opacity-100"${_scopeId}><svg aria-hidden="true" class="absolute inset-x-0 inset-y-[-50%] h-[200%] w-full skew-y-[-18deg] fill-black/40 stroke-black/50 mix-blend-overlay dark:fill-white/2.5 dark:stroke-white/5"${_scopeId}><defs${_scopeId}><pattern id=":r99:" width="72" height="56" patternUnits="userSpaceOnUse" x="-12" y="4"${_scopeId}><path d="M.5 56V.5H72" fill="none"${_scopeId}></path></pattern></defs><rect width="100%" height="100%" stroke-width="0" fill="url(#:r99:)"${_scopeId}></rect><svg x="-12" y="4" class="overflow-visible"${_scopeId}><rect stroke-width="0" width="73" height="57" x="288" y="168"${_scopeId}></rect><rect stroke-width="0" width="73" height="57" x="144" y="56"${_scopeId}></rect><rect stroke-width="0" width="73" height="57" x="504" y="168"${_scopeId}></rect><rect stroke-width="0" width="73" height="57" x="720" y="336"${_scopeId}></rect></svg></svg></div><div class="text-4xl mb-3 font-bold tracking-tight text-gray-900"${_scopeId}> Browse Projects </div><p${_scopeId}> Explore, analyse, and share raw spectral data and assignments. Learn more about <a class="text-teal-900" href="https://docs.nmrxiv.org/docs/introduction/intro" target="_blank"${_scopeId}>projects</a>. </p></div></div>`);
      } else {
        return [
          createVNode("div", { class: "relative border-b border-zinc-900/5" }, [
            createVNode("div", { class: "relative pt-10 dark:border-white/5 mx-8 py-12 sm:py-12" }, [
              createVNode("div", { class: "absolute inset-0 bg-gradient-to-r from-[#36b49f] to-[#DBFF75] opacity-40 [mask-image:radial-gradient(farthest-side_at_top,white,transparent)] dark:from-[#36b49f]/30 dark:to-[#DBFF75]/30 dark:opacity-100" }, [
                (openBlock(), createBlock("svg", {
                  "aria-hidden": "true",
                  class: "absolute inset-x-0 inset-y-[-50%] h-[200%] w-full skew-y-[-18deg] fill-black/40 stroke-black/50 mix-blend-overlay dark:fill-white/2.5 dark:stroke-white/5"
                }, [
                  createVNode("defs", null, [
                    createVNode("pattern", {
                      id: ":r99:",
                      width: "72",
                      height: "56",
                      patternUnits: "userSpaceOnUse",
                      x: "-12",
                      y: "4"
                    }, [
                      createVNode("path", {
                        d: "M.5 56V.5H72",
                        fill: "none"
                      })
                    ])
                  ]),
                  createVNode("rect", {
                    width: "100%",
                    height: "100%",
                    "stroke-width": "0",
                    fill: "url(#:r99:)"
                  }),
                  (openBlock(), createBlock("svg", {
                    x: "-12",
                    y: "4",
                    class: "overflow-visible"
                  }, [
                    createVNode("rect", {
                      "stroke-width": "0",
                      width: "73",
                      height: "57",
                      x: "288",
                      y: "168"
                    }),
                    createVNode("rect", {
                      "stroke-width": "0",
                      width: "73",
                      height: "57",
                      x: "144",
                      y: "56"
                    }),
                    createVNode("rect", {
                      "stroke-width": "0",
                      width: "73",
                      height: "57",
                      x: "504",
                      y: "168"
                    }),
                    createVNode("rect", {
                      "stroke-width": "0",
                      width: "73",
                      height: "57",
                      x: "720",
                      y: "336"
                    })
                  ]))
                ]))
              ]),
              createVNode("div", { class: "text-4xl mb-3 font-bold tracking-tight text-gray-900" }, " Browse Projects "),
              createVNode("p", null, [
                createTextVNode(" Explore, analyse, and share raw spectral data and assignments. Learn more about "),
                createVNode("a", {
                  class: "text-teal-900",
                  href: "https://docs.nmrxiv.org/docs/introduction/intro",
                  target: "_blank"
                }, "projects"),
                createTextVNode(". ")
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}><div class="bg-white"${_scopeId}><section aria-labelledby="filter-heading"${_scopeId}><div class="bg-gray-100 border-t border-b"${_scopeId}><div class="mx-auto py-3 px-4 sm:flex sm:items-center sm:px-6 lg:px-8"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_project_search, {
          modelValue: $data.form.search,
          "onUpdate:modelValue": ($event) => $data.form.search = $event,
          class: "mr-4 w-full",
          onReset: $options.reset
        }, null, _parent2, _scopeId));
        _push2(`</div></div></section></div></div><div class="min-h-[calc(100vh-500px)] px-12 mb-24 mx-auto"${_scopeId}><div class="relative border-gray-200 pt-4"${_scopeId}><div class="mx-auto flex items-center justify-between"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_Menu, {
          as: "div",
          class: "relative inline-block text-left"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_MenuButton, { class: "group inline-flex justify-center text-sm font-medium text-gray-700 hover:text-gray-900" }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Sort by: <span class="capitalize font-black text-gray-900"${_scopeId3}>${ssrInterpolate($data.form.sort)}</span>`);
                    _push4(ssrRenderComponent(_component_ChevronDownIcon, {
                      class: "flex-shrink-0 -mr-1 ml-1 h-5 w-5 text-gray-400 group-hover:text-gray-500",
                      "aria-hidden": "true"
                    }, null, _parent4, _scopeId3));
                  } else {
                    return [
                      createTextVNode(" Sort by: "),
                      createVNode("span", { class: "capitalize font-black text-gray-900" }, toDisplayString($data.form.sort), 1),
                      createVNode(_component_ChevronDownIcon, {
                        class: "flex-shrink-0 -mr-1 ml-1 h-5 w-5 text-gray-400 group-hover:text-gray-500",
                        "aria-hidden": "true"
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</div>`);
              _push3(ssrRenderComponent(_component_MenuItems, { class: "origin-top-left absolute left-0 mt-2 w-40 rounded-md shadow-2xl bg-white ring-1 ring-black ring-opacity-5 focus:outline-none" }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<div class="py-1"${_scopeId3}><!--[-->`);
                    ssrRenderList($data.sortOptions, (option) => {
                      _push4(ssrRenderComponent(_component_MenuItem, {
                        key: option.name
                      }, {
                        default: withCtx(({ active }, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(`<a class="${ssrRenderClass([
                              option.current ? "font-medium text-gray-900" : "text-gray-500",
                              active ? "bg-gray-100" : "",
                              "block px-4 py-2 text-sm cursor-pointer"
                            ])}"${_scopeId4}>${ssrInterpolate(option.name)}</a>`);
                          } else {
                            return [
                              createVNode("a", {
                                class: [
                                  option.current ? "font-medium text-gray-900" : "text-gray-500",
                                  active ? "bg-gray-100" : "",
                                  "block px-4 py-2 text-sm cursor-pointer"
                                ],
                                onClick: ($event) => $data.form.sort = option.value
                              }, toDisplayString(option.name), 11, ["onClick"])
                            ];
                          }
                        }),
                        _: 2
                      }, _parent4, _scopeId3));
                    });
                    _push4(`<!--]--></div>`);
                  } else {
                    return [
                      createVNode("div", { class: "py-1" }, [
                        (openBlock(true), createBlock(Fragment, null, renderList($data.sortOptions, (option) => {
                          return openBlock(), createBlock(_component_MenuItem, {
                            key: option.name
                          }, {
                            default: withCtx(({ active }) => [
                              createVNode("a", {
                                class: [
                                  option.current ? "font-medium text-gray-900" : "text-gray-500",
                                  active ? "bg-gray-100" : "",
                                  "block px-4 py-2 text-sm cursor-pointer"
                                ],
                                onClick: ($event) => $data.form.sort = option.value
                              }, toDisplayString(option.name), 11, ["onClick"])
                            ]),
                            _: 2
                          }, 1024);
                        }), 128))
                      ])
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                createVNode("div", null, [
                  createVNode(_component_MenuButton, { class: "group inline-flex justify-center text-sm font-medium text-gray-700 hover:text-gray-900" }, {
                    default: withCtx(() => [
                      createTextVNode(" Sort by: "),
                      createVNode("span", { class: "capitalize font-black text-gray-900" }, toDisplayString($data.form.sort), 1),
                      createVNode(_component_ChevronDownIcon, {
                        class: "flex-shrink-0 -mr-1 ml-1 h-5 w-5 text-gray-400 group-hover:text-gray-500",
                        "aria-hidden": "true"
                      })
                    ]),
                    _: 1
                  })
                ]),
                createVNode(Transition, {
                  "enter-active-class": "transition ease-out duration-100",
                  "enter-from-class": "transform opacity-0 scale-95",
                  "enter-to-class": "transform opacity-100 scale-100",
                  "leave-active-class": "transition ease-in duration-75",
                  "leave-from-class": "transform opacity-100 scale-100",
                  "leave-to-class": "transform opacity-0 scale-95"
                }, {
                  default: withCtx(() => [
                    createVNode(_component_MenuItems, { class: "origin-top-left absolute left-0 mt-2 w-40 rounded-md shadow-2xl bg-white ring-1 ring-black ring-opacity-5 focus:outline-none" }, {
                      default: withCtx(() => [
                        createVNode("div", { class: "py-1" }, [
                          (openBlock(true), createBlock(Fragment, null, renderList($data.sortOptions, (option) => {
                            return openBlock(), createBlock(_component_MenuItem, {
                              key: option.name
                            }, {
                              default: withCtx(({ active }) => [
                                createVNode("a", {
                                  class: [
                                    option.current ? "font-medium text-gray-900" : "text-gray-500",
                                    active ? "bg-gray-100" : "",
                                    "block px-4 py-2 text-sm cursor-pointer"
                                  ],
                                  onClick: ($event) => $data.form.sort = option.value
                                }, toDisplayString(option.name), 11, ["onClick"])
                              ]),
                              _: 2
                            }, 1024);
                          }), 128))
                        ])
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`<div class="float-right"${_scopeId}><span class="relative z-0 inline-flex shadow-sm rounded-md"${_scopeId}><button type="button" class="${ssrRenderClass([
          $props.filters.mode == "list" ? "bg-gray-300 text-gray-900" : "",
          "relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-10"
        ])}"${_scopeId}><span class="sr-only"${_scopeId}>List</span>`);
        _push2(ssrRenderComponent(_component_QueueListIcon, {
          class: "h-5 w-5",
          "aria-hidden": "true"
        }, null, _parent2, _scopeId));
        _push2(`</button><button type="button" class="${ssrRenderClass([
          $props.filters.mode == "grid" ? "bg-gray-300 text-gray-900" : "",
          "-ml-px relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50"
        ])}"${_scopeId}><span class="sr-only"${_scopeId}>Grid</span>`);
        _push2(ssrRenderComponent(_component_Squares2X2Icon, {
          class: "h-5 w-5",
          "aria-hidden": "true"
        }, null, _parent2, _scopeId));
        _push2(`</button></span></div></div></div>`);
        if ($props.projects.meta.total > 0) {
          _push2(`<div${_scopeId}><div class="border-t mt-3 border-gray-100"${_scopeId}><h2 class="text-gray-600 text-md mt-4 font-bold"${_scopeId}> Results (${ssrInterpolate($props.projects.meta.total)}) </h2></div>`);
          if ($props.filters.mode == "grid") {
            _push2(`<div${_scopeId}><div class="mt-4 mx-auto grid gap-8 lg:grid-cols-4 2xl:grid-cols-6 w-full"${_scopeId}><!--[-->`);
            ssrRenderList($props.projects.data.filter(
              (p2) => p2.owner
            ), (project) => {
              _push2(`<span${_scopeId}>`);
              _push2(ssrRenderComponent(_component_project_card, {
                mode: $props.filters.mode,
                project
              }, null, _parent2, _scopeId));
              _push2(`</span>`);
            });
            _push2(`<!--]--></div></div>`);
          } else {
            _push2(`<!---->`);
          }
          if ($props.filters.mode == "list") {
            _push2(`<div${_scopeId}><div class="mt-4 bg-white shadow overflow-hidden sm:rounded-md"${_scopeId}><ul role="list" class="divide-y border rounded-md divide-gray-200"${_scopeId}><!--[-->`);
            ssrRenderList($props.projects.data.filter(
              (p2) => p2.owner
            ), (project) => {
              _push2(`<span${_scopeId}>`);
              _push2(ssrRenderComponent(_component_project_card, {
                mode: $props.filters.mode ? $props.filters.mode : "grid",
                project
              }, null, _parent2, _scopeId));
              _push2(`</span>`);
            });
            _push2(`<!--]--></ul></div></div>`);
          } else {
            _push2(`<!---->`);
          }
          if ($props.projects.meta.total > $props.projects.meta.per_page) {
            _push2(`<div class="py-10"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Pagination, {
              links: $props.projects.meta.links
            }, null, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div>`);
        } else {
          _push2(`<div${_scopeId}><div class="text-center rounded-lg border-2 border-dashed border-gray-300 p-12 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 mt-5"${_scopeId}><svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true"${_scopeId}><path vector-effect="non-scaling-stroke" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"${_scopeId}></path></svg><h3 class="mt-2 text-sm font-medium text-gray-900"${_scopeId}> No projects </h3></div></div>`);
        }
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", null, [
            createVNode("div", { class: "bg-white" }, [
              createVNode("section", { "aria-labelledby": "filter-heading" }, [
                createVNode("div", { class: "bg-gray-100 border-t border-b" }, [
                  createVNode("div", { class: "mx-auto py-3 px-4 sm:flex sm:items-center sm:px-6 lg:px-8" }, [
                    createVNode(_component_project_search, {
                      modelValue: $data.form.search,
                      "onUpdate:modelValue": ($event) => $data.form.search = $event,
                      class: "mr-4 w-full",
                      onReset: $options.reset
                    }, null, 8, ["modelValue", "onUpdate:modelValue", "onReset"])
                  ])
                ])
              ])
            ])
          ]),
          createVNode("div", { class: "min-h-[calc(100vh-500px)] px-12 mb-24 mx-auto" }, [
            createVNode("div", { class: "relative border-gray-200 pt-4" }, [
              createVNode("div", { class: "mx-auto flex items-center justify-between" }, [
                createVNode(_component_Menu, {
                  as: "div",
                  class: "relative inline-block text-left"
                }, {
                  default: withCtx(() => [
                    createVNode("div", null, [
                      createVNode(_component_MenuButton, { class: "group inline-flex justify-center text-sm font-medium text-gray-700 hover:text-gray-900" }, {
                        default: withCtx(() => [
                          createTextVNode(" Sort by: "),
                          createVNode("span", { class: "capitalize font-black text-gray-900" }, toDisplayString($data.form.sort), 1),
                          createVNode(_component_ChevronDownIcon, {
                            class: "flex-shrink-0 -mr-1 ml-1 h-5 w-5 text-gray-400 group-hover:text-gray-500",
                            "aria-hidden": "true"
                          })
                        ]),
                        _: 1
                      })
                    ]),
                    createVNode(Transition, {
                      "enter-active-class": "transition ease-out duration-100",
                      "enter-from-class": "transform opacity-0 scale-95",
                      "enter-to-class": "transform opacity-100 scale-100",
                      "leave-active-class": "transition ease-in duration-75",
                      "leave-from-class": "transform opacity-100 scale-100",
                      "leave-to-class": "transform opacity-0 scale-95"
                    }, {
                      default: withCtx(() => [
                        createVNode(_component_MenuItems, { class: "origin-top-left absolute left-0 mt-2 w-40 rounded-md shadow-2xl bg-white ring-1 ring-black ring-opacity-5 focus:outline-none" }, {
                          default: withCtx(() => [
                            createVNode("div", { class: "py-1" }, [
                              (openBlock(true), createBlock(Fragment, null, renderList($data.sortOptions, (option) => {
                                return openBlock(), createBlock(_component_MenuItem, {
                                  key: option.name
                                }, {
                                  default: withCtx(({ active }) => [
                                    createVNode("a", {
                                      class: [
                                        option.current ? "font-medium text-gray-900" : "text-gray-500",
                                        active ? "bg-gray-100" : "",
                                        "block px-4 py-2 text-sm cursor-pointer"
                                      ],
                                      onClick: ($event) => $data.form.sort = option.value
                                    }, toDisplayString(option.name), 11, ["onClick"])
                                  ]),
                                  _: 2
                                }, 1024);
                              }), 128))
                            ])
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                }),
                createVNode("div", { class: "float-right" }, [
                  createVNode("span", { class: "relative z-0 inline-flex shadow-sm rounded-md" }, [
                    createVNode("button", {
                      type: "button",
                      class: [
                        $props.filters.mode == "list" ? "bg-gray-300 text-gray-900" : "",
                        "relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-10"
                      ],
                      onClick: ($event) => $data.form.mode = "list"
                    }, [
                      createVNode("span", { class: "sr-only" }, "List"),
                      createVNode(_component_QueueListIcon, {
                        class: "h-5 w-5",
                        "aria-hidden": "true"
                      })
                    ], 10, ["onClick"]),
                    createVNode("button", {
                      type: "button",
                      class: [
                        $props.filters.mode == "grid" ? "bg-gray-300 text-gray-900" : "",
                        "-ml-px relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50"
                      ],
                      onClick: ($event) => $data.form.mode = "grid"
                    }, [
                      createVNode("span", { class: "sr-only" }, "Grid"),
                      createVNode(_component_Squares2X2Icon, {
                        class: "h-5 w-5",
                        "aria-hidden": "true"
                      })
                    ], 10, ["onClick"])
                  ])
                ])
              ])
            ]),
            $props.projects.meta.total > 0 ? (openBlock(), createBlock("div", { key: 0 }, [
              createVNode("div", { class: "border-t mt-3 border-gray-100" }, [
                createVNode("h2", { class: "text-gray-600 text-md mt-4 font-bold" }, " Results (" + toDisplayString($props.projects.meta.total) + ") ", 1)
              ]),
              $props.filters.mode == "grid" ? (openBlock(), createBlock("div", { key: 0 }, [
                createVNode("div", { class: "mt-4 mx-auto grid gap-8 lg:grid-cols-4 2xl:grid-cols-6 w-full" }, [
                  (openBlock(true), createBlock(Fragment, null, renderList($props.projects.data.filter(
                    (p2) => p2.owner
                  ), (project) => {
                    return openBlock(), createBlock("span", {
                      key: project.id
                    }, [
                      createVNode(_component_project_card, {
                        mode: $props.filters.mode,
                        project
                      }, null, 8, ["mode", "project"])
                    ]);
                  }), 128))
                ])
              ])) : createCommentVNode("", true),
              $props.filters.mode == "list" ? (openBlock(), createBlock("div", { key: 1 }, [
                createVNode("div", { class: "mt-4 bg-white shadow overflow-hidden sm:rounded-md" }, [
                  createVNode("ul", {
                    role: "list",
                    class: "divide-y border rounded-md divide-gray-200"
                  }, [
                    (openBlock(true), createBlock(Fragment, null, renderList($props.projects.data.filter(
                      (p2) => p2.owner
                    ), (project) => {
                      return openBlock(), createBlock("span", {
                        key: project.id
                      }, [
                        createVNode(_component_project_card, {
                          mode: $props.filters.mode ? $props.filters.mode : "grid",
                          project
                        }, null, 8, ["mode", "project"])
                      ]);
                    }), 128))
                  ])
                ])
              ])) : createCommentVNode("", true),
              $props.projects.meta.total > $props.projects.meta.per_page ? (openBlock(), createBlock("div", {
                key: 2,
                class: "py-10"
              }, [
                createVNode(_component_Pagination, {
                  links: $props.projects.meta.links
                }, null, 8, ["links"])
              ])) : createCommentVNode("", true)
            ])) : (openBlock(), createBlock("div", { key: 1 }, [
              createVNode("div", { class: "text-center rounded-lg border-2 border-dashed border-gray-300 p-12 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 mt-5" }, [
                (openBlock(), createBlock("svg", {
                  class: "mx-auto h-12 w-12 text-gray-400",
                  fill: "none",
                  viewBox: "0 0 24 24",
                  stroke: "currentColor",
                  "aria-hidden": "true"
                }, [
                  createVNode("path", {
                    "vector-effect": "non-scaling-stroke",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round",
                    "stroke-width": "2",
                    d: "M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"
                  })
                ])),
                createVNode("h3", { class: "mt-2 text-sm font-medium text-gray-900" }, " No projects ")
              ])
            ]))
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$B = _sfc_main$B.setup;
_sfc_main$B.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Public/Projects.vue");
  return _sfc_setup$B ? _sfc_setup$B(props, ctx) : void 0;
};
const Projects$1 = /* @__PURE__ */ _export_sfc(_sfc_main$B, [["ssrRender", _sfc_ssrRender$A]]);
const __vite_glob_0_50 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Projects$1
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$A = {
  components: {
    AppLayout,
    Link,
    ArrowDownTrayIcon,
    DOIBadge
  },
  props: ["study"],
  data() {
    return {
      tabs: []
    };
  },
  computed: {},
  mounted() {
  },
  methods: {}
};
function _sfc_ssrRender$z(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_Link = resolveComponent("Link");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({
    title: $props.study.name
  }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}><div class="border-b"${_scopeId}><div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-2"${_scopeId}>`);
        if ($props.study && $props.study.owner) {
          _push2(`<img class="inline h-7 w-7 rounded-full"${ssrRenderAttr("src", $props.study.owner.profile_photo_url)}${_scopeId}>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<p class="inline ml-3 text-xs font-bold text-gray-500 uppercase"${_scopeId}><a class="text-gray-900"${_scopeId}>${ssrInterpolate($props.study.owner.first_name + " " + $props.study.owner.last_name)}</a><span class="block md:inline ml-10 md:ml-0"${_scopeId}> updated on <time${_scopeId}>${ssrInterpolate(_ctx.formatDate($props.study.updated_at))}</time></span></p><div class="flex mt-2 md:inline"${_scopeId}>`);
        if ($props.study.download_url) {
          _push2(`<div class="float-left md:float-right"${_scopeId}><a class="md:ml-4 cursor-pointer relative inline-flex items-center px-4 py-1 rounded-full border border-gray-300 bg-white text-sm font-black text-dark hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500"${ssrRenderAttr("href", $props.study.download_url)}${_scopeId}> Download </a></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="float-left md:float-right"${_scopeId}><div class="flex-shrink-0"${_scopeId}>`);
        if ($props.study.stats) {
          _push2(`<span class="relative z-0 inline-flex shadow-sm rounded-full"${_scopeId}><button type="button" class="relative inline-flex items-center px-1 py-1 rounded-l-full border border-gray-300 bg-white text-sm font-medium text-gray-900 hover:bg-gray-50"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor"${_scopeId}><path fill-rule="evenodd" d="M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z" clip-rule="evenodd"${_scopeId}></path></svg></button><a class="-ml-px relative inline-flex items-center px-4 py-1 rounded-r-full border border-gray-300 bg-white text-sm font-black text-dark hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500"${_scopeId}>${ssrInterpolate($props.study.stats.likes)}</a></span>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div></div></div></div><img class="h-32 w-full object-cover lg:h-48" src="https://images.unsplash.com/photo-1637625854255-d893202554f4?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&amp;ixlib=rb-1.2.1&amp;auto=format&amp;fit=crop&amp;w=1950&amp;q=80"${_scopeId}></div>`);
      } else {
        return [
          createVNode("div", null, [
            createVNode("div", { class: "border-b" }, [
              createVNode("div", { class: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-2" }, [
                $props.study && $props.study.owner ? (openBlock(), createBlock("img", {
                  key: 0,
                  class: "inline h-7 w-7 rounded-full",
                  src: $props.study.owner.profile_photo_url
                }, null, 8, ["src"])) : createCommentVNode("", true),
                createVNode("p", { class: "inline ml-3 text-xs font-bold text-gray-500 uppercase" }, [
                  createVNode("a", { class: "text-gray-900" }, toDisplayString($props.study.owner.first_name + " " + $props.study.owner.last_name), 1),
                  createVNode("span", { class: "block md:inline ml-10 md:ml-0" }, [
                    createTextVNode(" updated on "),
                    createVNode("time", null, toDisplayString(_ctx.formatDate($props.study.updated_at)), 1)
                  ])
                ]),
                createVNode("div", { class: "flex mt-2 md:inline" }, [
                  $props.study.download_url ? (openBlock(), createBlock("div", {
                    key: 0,
                    class: "float-left md:float-right"
                  }, [
                    createVNode("a", {
                      class: "md:ml-4 cursor-pointer relative inline-flex items-center px-4 py-1 rounded-full border border-gray-300 bg-white text-sm font-black text-dark hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500",
                      href: $props.study.download_url
                    }, " Download ", 8, ["href"])
                  ])) : createCommentVNode("", true),
                  createVNode("div", { class: "float-left md:float-right" }, [
                    createVNode("div", { class: "flex-shrink-0" }, [
                      $props.study.stats ? (openBlock(), createBlock("span", {
                        key: 0,
                        class: "relative z-0 inline-flex shadow-sm rounded-full"
                      }, [
                        createVNode("button", {
                          type: "button",
                          class: "relative inline-flex items-center px-1 py-1 rounded-l-full border border-gray-300 bg-white text-sm font-medium text-gray-900 hover:bg-gray-50",
                          onClick: ($event) => _ctx.toggleUpVote()
                        }, [
                          (openBlock(), createBlock("svg", {
                            xmlns: "http://www.w3.org/2000/svg",
                            class: "h-5 w-5",
                            viewBox: "0 0 20 20",
                            fill: "currentColor"
                          }, [
                            createVNode("path", {
                              "fill-rule": "evenodd",
                              d: "M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z",
                              "clip-rule": "evenodd"
                            })
                          ]))
                        ], 8, ["onClick"]),
                        createVNode("a", { class: "-ml-px relative inline-flex items-center px-4 py-1 rounded-r-full border border-gray-300 bg-white text-sm font-black text-dark hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500" }, toDisplayString($props.study.stats.likes), 1)
                      ])) : createCommentVNode("", true)
                    ])
                  ])
                ])
              ])
            ]),
            createVNode("img", {
              class: "h-32 w-full object-cover lg:h-48",
              src: "https://images.unsplash.com/photo-1637625854255-d893202554f4?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80"
            })
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<main class="flex-1 relative z-0 overflow-y-auto focus:outline-none xl:order-last"${_scopeId}><div${_scopeId}><div class="mt-6 sm:mt-2 2xl:mt-5"${_scopeId}><div class="border-b border-gray-200"${_scopeId}><div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"${_scopeId}><nav class="-mb-px flex space-x-8" aria-label="Tabs"${_scopeId}><!--[-->`);
        ssrRenderList($data.tabs, (tab) => {
          _push2(ssrRenderComponent(_component_Link, {
            key: tab.name,
            href: $props.study.public_url + "?tab=" + tab.name,
            class: [
              _ctx.selectedTab == tab.name ? "border-pink-500 text-gray-900" : "",
              "cursor-pointer capitalize text-gray-900 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm"
            ],
            "aria-current": "page"
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`${ssrInterpolate(tab.name)}`);
              } else {
                return [
                  createTextVNode(toDisplayString(tab.name), 1)
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
        });
        _push2(`<!--]--></nav></div></div></div><div class="bg-white"${_scopeId}>`);
        ssrRenderSlot(_ctx.$slots, "sample-content", {}, null, _push2, _parent2, _scopeId);
        _push2(`</div></div></main>`);
      } else {
        return [
          createVNode("main", { class: "flex-1 relative z-0 overflow-y-auto focus:outline-none xl:order-last" }, [
            createVNode("div", null, [
              createVNode("div", { class: "mt-6 sm:mt-2 2xl:mt-5" }, [
                createVNode("div", { class: "border-b border-gray-200" }, [
                  createVNode("div", { class: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8" }, [
                    createVNode("nav", {
                      class: "-mb-px flex space-x-8",
                      "aria-label": "Tabs"
                    }, [
                      (openBlock(true), createBlock(Fragment, null, renderList($data.tabs, (tab) => {
                        return openBlock(), createBlock(_component_Link, {
                          key: tab.name,
                          href: $props.study.public_url + "?tab=" + tab.name,
                          class: [
                            _ctx.selectedTab == tab.name ? "border-pink-500 text-gray-900" : "",
                            "cursor-pointer capitalize text-gray-900 whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm"
                          ],
                          "aria-current": "page"
                        }, {
                          default: withCtx(() => [
                            createTextVNode(toDisplayString(tab.name), 1)
                          ]),
                          _: 2
                        }, 1032, ["href", "class"]);
                      }), 128))
                    ])
                  ])
                ])
              ]),
              createVNode("div", { class: "bg-white" }, [
                renderSlot(_ctx.$slots, "sample-content")
              ])
            ])
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$A = _sfc_main$A.setup;
_sfc_main$A.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Public/Sample/Layout.vue");
  return _sfc_setup$A ? _sfc_setup$A(props, ctx) : void 0;
};
const SampleLayout = /* @__PURE__ */ _export_sfc(_sfc_main$A, [["ssrRender", _sfc_ssrRender$z]]);
const __vite_glob_0_51 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: SampleLayout
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$z = {
  components: {
    SampleLayout,
    ShareIcon,
    ClipboardDocumentIcon,
    Menu,
    MenuButton,
    MenuItem,
    MenuItems,
    SpectraViewer,
    Depictor2D,
    DOIBadge,
    Head
  },
  props: ["project", "tab", "study"],
  data() {
    return {
      schema: {}
    };
  },
  computed: {
    shareURL() {
      return this.study.data.public_url;
    },
    url() {
      return String(this.$page.props.url);
    }
  },
  mounted() {
    axios.get(route("bioschemas.id", this.study.data.identifier)).then((response) => {
      this.schema = response.data;
    });
  },
  methods: {}
};
function _sfc_ssrRender$y(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = resolveComponent("Head");
  const _component_sample_layout = resolveComponent("sample-layout");
  const _component_DOIBadge = resolveComponent("DOIBadge");
  const _component_Menu = resolveComponent("Menu");
  const _component_MenuButton = resolveComponent("MenuButton");
  const _component_ShareIcon = resolveComponent("ShareIcon");
  const _component_MenuItems = resolveComponent("MenuItems");
  const _component_MenuItem = resolveComponent("MenuItem");
  const _component_ClipboardDocumentIcon = resolveComponent("ClipboardDocumentIcon");
  const _component_Depictor2D = resolveComponent("Depictor2D");
  const _component_SpectraViewer = resolveComponent("SpectraViewer");
  _push(`<!--[-->`);
  _push(ssrRenderComponent(_component_Head, {
    title: $props.study.data.name
  }, null, _parent));
  _push(ssrRenderComponent(_component_sample_layout, {
    study: $props.study.data
  }, {
    "sample-content": withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="pb-10 mb-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6"${_scopeId}><div class="border-b border-gray-200 pb-5"${_scopeId}><div class="sm:flex sm:items-baseline sm:justify-between"${_scopeId}><div class="sm:w-0 sm:flex-1"${_scopeId}><h1 class="mt-2 text-3xl font-extrabold tracking-tight font-bold break-words text-blue-500 text-base"${_scopeId}>${ssrInterpolate($props.study.data.name)}</h1><p class="mt-1 truncate text-sm text-gray-500"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_DOIBadge, {
          doi: $props.study.data.doi,
          color: "bg-yellow-300"
        }, null, _parent2, _scopeId));
        _push2(`</p></div><div class="mt-4 flex items-center justify-between sm:ml-6 sm:mt-0 sm:flex-shrink-0 sm:justify-start"${_scopeId}><div class="inline hover:text-blue-600 mr-6 hover:cursor-pointer text-gray-200"${_scopeId}> #${ssrInterpolate($props.study.data.identifier)}</div><span class="flex-0.5 self-center"${_scopeId}>`);
        if ($props.study.data.is_public) {
          _push2(ssrRenderComponent(_component_Menu, {
            as: "div",
            class: "relative text-left"
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<div${_scopeId2}>`);
                _push3(ssrRenderComponent(_component_MenuButton, { class: "bg-white text-sm rounded-full flex items-center text-gray-400 hover:text-gray-600" }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(ssrRenderComponent(_component_ShareIcon, {
                        class: "h-4 w-4 text-gray-800 flex-shrink-0 mr-2",
                        "aria-hidden": "true"
                      }, null, _parent4, _scopeId3));
                      _push4(`Share `);
                    } else {
                      return [
                        createVNode(_component_ShareIcon, {
                          class: "h-4 w-4 text-gray-800 flex-shrink-0 mr-2",
                          "aria-hidden": "true"
                        }),
                        createTextVNode("Share ")
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
                _push3(`</div>`);
                _push3(ssrRenderComponent(_component_MenuItems, { class: "origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50" }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`<div class="py-1"${_scopeId3}>`);
                      _push4(ssrRenderComponent(_component_MenuItem, null, {
                        default: withCtx(({ active }, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(`<div class="${ssrRenderClass([
                              active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                              "block px-4 py-2 text-sm flex"
                            ])}"${_scopeId4}><div class="flex-grow"${_scopeId4}><input id="datasetPublicURLCopy" readonly type="text"${ssrRenderAttr(
                              "value",
                              $options.shareURL
                            )} class="rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300"${_scopeId4}></div><button type="button" class="-ml-px relative inline-flex items-center space-x-2 px-2 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500"${_scopeId4}><span${_scopeId4}>`);
                            _push5(ssrRenderComponent(_component_ClipboardDocumentIcon, {
                              class: "h-5 w-5",
                              "aria-hidden": "true"
                            }, null, _parent5, _scopeId4));
                            _push5(`</span></button></div>`);
                          } else {
                            return [
                              createVNode("div", {
                                class: [
                                  active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                  "block px-4 py-2 text-sm flex"
                                ]
                              }, [
                                createVNode("div", { class: "flex-grow" }, [
                                  createVNode("input", {
                                    id: "datasetPublicURLCopy",
                                    readonly: "",
                                    type: "text",
                                    value: $options.shareURL,
                                    class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                    onFocus: ($event) => $event.target.select()
                                  }, null, 40, ["value", "onFocus"])
                                ]),
                                createVNode("button", {
                                  type: "button",
                                  class: "-ml-px relative inline-flex items-center space-x-2 px-2 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                  onClick: ($event) => _ctx.copyToClipboard(
                                    $options.shareURL,
                                    "datasetPublicURLCopy"
                                  )
                                }, [
                                  createVNode("span", null, [
                                    createVNode(_component_ClipboardDocumentIcon, {
                                      class: "h-5 w-5",
                                      "aria-hidden": "true"
                                    })
                                  ])
                                ], 8, ["onClick"])
                              ], 2)
                            ];
                          }
                        }),
                        _: 1
                      }, _parent4, _scopeId3));
                      _push4(`</div>`);
                    } else {
                      return [
                        createVNode("div", { class: "py-1" }, [
                          createVNode(_component_MenuItem, null, {
                            default: withCtx(({ active }) => [
                              createVNode("div", {
                                class: [
                                  active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                  "block px-4 py-2 text-sm flex"
                                ]
                              }, [
                                createVNode("div", { class: "flex-grow" }, [
                                  createVNode("input", {
                                    id: "datasetPublicURLCopy",
                                    readonly: "",
                                    type: "text",
                                    value: $options.shareURL,
                                    class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                    onFocus: ($event) => $event.target.select()
                                  }, null, 40, ["value", "onFocus"])
                                ]),
                                createVNode("button", {
                                  type: "button",
                                  class: "-ml-px relative inline-flex items-center space-x-2 px-2 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                  onClick: ($event) => _ctx.copyToClipboard(
                                    $options.shareURL,
                                    "datasetPublicURLCopy"
                                  )
                                }, [
                                  createVNode("span", null, [
                                    createVNode(_component_ClipboardDocumentIcon, {
                                      class: "h-5 w-5",
                                      "aria-hidden": "true"
                                    })
                                  ])
                                ], 8, ["onClick"])
                              ], 2)
                            ]),
                            _: 1
                          })
                        ])
                      ];
                    }
                  }),
                  _: 1
                }, _parent3, _scopeId2));
              } else {
                return [
                  createVNode("div", null, [
                    createVNode(_component_MenuButton, { class: "bg-white text-sm rounded-full flex items-center text-gray-400 hover:text-gray-600" }, {
                      default: withCtx(() => [
                        createVNode(_component_ShareIcon, {
                          class: "h-4 w-4 text-gray-800 flex-shrink-0 mr-2",
                          "aria-hidden": "true"
                        }),
                        createTextVNode("Share ")
                      ]),
                      _: 1
                    })
                  ]),
                  createVNode(Transition, {
                    "enter-active-class": "transition ease-out duration-100",
                    "enter-from-class": "transform opacity-0 scale-95",
                    "enter-to-class": "transform opacity-100 scale-100",
                    "leave-active-class": "transition ease-in duration-75",
                    "leave-from-class": "transform opacity-100 scale-100",
                    "leave-to-class": "transform opacity-0 scale-95"
                  }, {
                    default: withCtx(() => [
                      createVNode(_component_MenuItems, { class: "origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50" }, {
                        default: withCtx(() => [
                          createVNode("div", { class: "py-1" }, [
                            createVNode(_component_MenuItem, null, {
                              default: withCtx(({ active }) => [
                                createVNode("div", {
                                  class: [
                                    active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                    "block px-4 py-2 text-sm flex"
                                  ]
                                }, [
                                  createVNode("div", { class: "flex-grow" }, [
                                    createVNode("input", {
                                      id: "datasetPublicURLCopy",
                                      readonly: "",
                                      type: "text",
                                      value: $options.shareURL,
                                      class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                      onFocus: ($event) => $event.target.select()
                                    }, null, 40, ["value", "onFocus"])
                                  ]),
                                  createVNode("button", {
                                    type: "button",
                                    class: "-ml-px relative inline-flex items-center space-x-2 px-2 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                    onClick: ($event) => _ctx.copyToClipboard(
                                      $options.shareURL,
                                      "datasetPublicURLCopy"
                                    )
                                  }, [
                                    createVNode("span", null, [
                                      createVNode(_component_ClipboardDocumentIcon, {
                                        class: "h-5 w-5",
                                        "aria-hidden": "true"
                                      })
                                    ])
                                  ], 8, ["onClick"])
                                ], 2)
                              ]),
                              _: 1
                            })
                          ])
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  })
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          _push2(`<!---->`);
        }
        _push2(`</span></div></div></div>`);
        if ($props.study.data.tags.length > 0) {
          _push2(`<div class="relative mt-4"${_scopeId}><div class="relative"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-100"${_scopeId}></div></div><div class="relative flex items-center justify-between"${_scopeId}><span class="pr-3 text-md bg-white font-medium text-gray-400"${_scopeId}> Keywords </span></div></div><div class="mt-3"${_scopeId}><dd class="mt-1 text-md text-gray-900 space-y-5"${_scopeId}><p${_scopeId}><!--[-->`);
          ssrRenderList($props.study.data.tags, (tag) => {
            _push2(`<span class="mr-2"${_scopeId}><span class="inline-flex items-center px-2.5 py-0.5 rounded-md text-sm font-medium bg-indigo-100 text-indigo-800"${_scopeId}><svg class="-ml-0.5 mr-1.5 h-2 w-2 text-indigo-400" fill="currentColor" viewBox="0 0 8 8"${_scopeId}><circle cx="4" cy="4" r="3"${_scopeId}></circle></svg> ${ssrInterpolate(tag.name["en"])}</span></span>`);
          });
          _push2(`<!--]--></p></dd></div></div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($props.study.data.sample.molecules.length > 0 || $props.study.data.sample.description == "") {
          _push2(`<div class="mt-4"${_scopeId}><div class="relative"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-100"${_scopeId}></div></div><div class="relative flex items-center justify-between"${_scopeId}><span class="pr-3 text-md bg-white font-medium text-gray-400"${_scopeId}> Sample </span></div></div>`);
          if ($props.study.data.sample.molecules.length > 0) {
            _push2(`<div class="mt-3"${_scopeId}><label${_scopeId}>Molecular Composition</label><div class="grid md:grid-cols-2 gap-2 mt-2"${_scopeId}><div class="pr-2"${_scopeId}>`);
            if ($props.study.data.sample.molecules.length > 0) {
              _push2(`<div class="flow-root"${_scopeId}><ul role="list" class="-mb-8"${_scopeId}><!--[-->`);
              ssrRenderList($props.study.data.sample.molecules, (molecule) => {
                _push2(`<li${_scopeId}><div class="relative pb-8"${_scopeId}><span class="absolute top-5 left-5 -ml-px h-full w-0.5 bg-gray-200" aria-hidden="true"${_scopeId}></span><div class="relative flex items-start space-x-3"${_scopeId}>`);
                if (molecule && molecule.pivot) {
                  _push2(`<div class="relative"${_scopeId}><div class="rounded-full border p-2 z-10 bg-gray-100 text-sm"${_scopeId}>${ssrInterpolate(molecule.pivot.percentage_composition)}% </div></div>`);
                } else {
                  _push2(`<!---->`);
                }
                _push2(`<div class="min-w-0 flex-1"${_scopeId}><div${_scopeId}><div class="text-sm"${_scopeId}><a class="font-medium text-gray-900"${_scopeId}>${ssrInterpolate(molecule.standard_inchi)}</a></div></div><div class="mt-2 text-sm text-gray-700"${_scopeId}><div class="rounded-md border my-3 flex justify-center items-center"${_scopeId}>`);
                _push2(ssrRenderComponent(_component_Depictor2D, {
                  class: "py-4 -px-4",
                  molecule: molecule.canonical_smiles
                }, null, _parent2, _scopeId));
                _push2(`</div></div></div></div></div></li>`);
              });
              _push2(`<!--]--></ul><div class="rounded-full border p-2 z-10 bg-gray-100 text-sm mt-14 text-center"${_scopeId}> Sample chemical composition </div></div>`);
            } else {
              _push2(`<div${_scopeId}><div class="text-center my-10 py-10"${_scopeId}><h3 class="mt-2 text-sm font-medium text-gray-900"${_scopeId}> No structures associated with the sample yet! </h3><p class="mt-1 text-sm text-gray-500"${_scopeId}> Get started by adding a new molecule. </p></div></div>`);
            }
            _push2(`</div></div></div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="mt-4"${_scopeId}><div class="relative"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-100"${_scopeId}></div></div><div class="relative flex items-center justify-between"${_scopeId}><span class="pr-3 text-md bg-white font-medium text-gray-400"${_scopeId}> Spectra </span></div></div><div class="mt-3"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_SpectraViewer, {
          ref: "spectraViewerREF",
          study: $props.study.data
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="my-2"${_scopeId}><div${_scopeId}><h2 class="text-sm font-medium text-gray-500"${_scopeId}> Spectra Datasets </h2><ul role="list" class="mt-3 grid grid-cols-1 gap-5 sm:grid-cols-2 sm:gap-6 lg:grid-cols-3"${_scopeId}><!--[-->`);
        ssrRenderList($props.study.data.datasets.sort(
          (a2, b2) => a2.name > b2.name ? 1 : -1
        ), (dataset) => {
          _push2(`<li class="col-span-1 flex rounded-md shadow-sm"${_scopeId}><div class="flex flex-1 border-l rounded-md items-center justify-between truncate rounded-r-md border-b border-r border-t border-gray-200 bg-white"${_scopeId}><div class="flex-1 truncate px-4 py-2 text-sm"${_scopeId}><a class="font-medium text-lg text-gray-900 hover:text-gray-600"${_scopeId}>${ssrInterpolate(dataset.name)} `);
          if (dataset.type) {
            _push2(`<span${_scopeId}>(${ssrInterpolate(dataset.type.replace(
              /,\s*$/,
              ""
            ))})</span>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</a><p class="text-gray-500"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_DOIBadge, {
            color: "bg-green-100",
            doi: dataset.doi
          }, null, _parent2, _scopeId));
          _push2(`</p></div></div></li>`);
        });
        _push2(`<!--]--></ul></div></div><div${_scopeId}> </div>`);
        if ($props.study.data.license) {
          _push2(`<div class="mt-4"${_scopeId}><div class="relative"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-100"${_scopeId}></div></div><div class="relative flex items-center justify-between"${_scopeId}><span class="pr-3 text-md bg-white font-medium text-gray-400"${_scopeId}> License </span></div></div><p style="${ssrRenderStyle({ "max-width": "100ch !important" })}" class="prose mt-1 text-sm text-blue-gray-500"${_scopeId}>${$props.study.data.license.title}</p></div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($props.study.data.description && $props.study.data.description.length > 0) {
          _push2(`<div class="overflow-hidden w-full"${_scopeId}><div class="relative"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-100"${_scopeId}></div></div><div class="relative flex items-center justify-between"${_scopeId}><span class="pr-3 text-md bg-white font-medium text-gray-400"${_scopeId}> Description </span></div></div><div${_scopeId}><p class="overflow-scroll mt-1 px-0 relative text-sm text-blue-gray-500 h-64 pb-10"${_scopeId}>${$props.study.data.description}</p><div class="relative" aria-hidden="true"${_scopeId}><div class="absolute -inset-x-20 bottom-0 bg-gradient-to-t from-white pt-[7%]"${_scopeId}></div></div></div></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div>`);
      } else {
        return [
          createVNode("div", { class: "pb-10 mb-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6" }, [
            createVNode("div", { class: "border-b border-gray-200 pb-5" }, [
              createVNode("div", { class: "sm:flex sm:items-baseline sm:justify-between" }, [
                createVNode("div", { class: "sm:w-0 sm:flex-1" }, [
                  createVNode("h1", { class: "mt-2 text-3xl font-extrabold tracking-tight font-bold break-words text-blue-500 text-base" }, toDisplayString($props.study.data.name), 1),
                  createVNode("p", { class: "mt-1 truncate text-sm text-gray-500" }, [
                    createVNode(_component_DOIBadge, {
                      doi: $props.study.data.doi,
                      color: "bg-yellow-300"
                    }, null, 8, ["doi"])
                  ])
                ]),
                createVNode("div", { class: "mt-4 flex items-center justify-between sm:ml-6 sm:mt-0 sm:flex-shrink-0 sm:justify-start" }, [
                  createVNode("div", { class: "inline hover:text-blue-600 mr-6 hover:cursor-pointer text-gray-200" }, " #" + toDisplayString($props.study.data.identifier), 1),
                  createVNode("span", { class: "flex-0.5 self-center" }, [
                    $props.study.data.is_public ? (openBlock(), createBlock(_component_Menu, {
                      key: 0,
                      as: "div",
                      class: "relative text-left"
                    }, {
                      default: withCtx(() => [
                        createVNode("div", null, [
                          createVNode(_component_MenuButton, { class: "bg-white text-sm rounded-full flex items-center text-gray-400 hover:text-gray-600" }, {
                            default: withCtx(() => [
                              createVNode(_component_ShareIcon, {
                                class: "h-4 w-4 text-gray-800 flex-shrink-0 mr-2",
                                "aria-hidden": "true"
                              }),
                              createTextVNode("Share ")
                            ]),
                            _: 1
                          })
                        ]),
                        createVNode(Transition, {
                          "enter-active-class": "transition ease-out duration-100",
                          "enter-from-class": "transform opacity-0 scale-95",
                          "enter-to-class": "transform opacity-100 scale-100",
                          "leave-active-class": "transition ease-in duration-75",
                          "leave-from-class": "transform opacity-100 scale-100",
                          "leave-to-class": "transform opacity-0 scale-95"
                        }, {
                          default: withCtx(() => [
                            createVNode(_component_MenuItems, { class: "origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50" }, {
                              default: withCtx(() => [
                                createVNode("div", { class: "py-1" }, [
                                  createVNode(_component_MenuItem, null, {
                                    default: withCtx(({ active }) => [
                                      createVNode("div", {
                                        class: [
                                          active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                          "block px-4 py-2 text-sm flex"
                                        ]
                                      }, [
                                        createVNode("div", { class: "flex-grow" }, [
                                          createVNode("input", {
                                            id: "datasetPublicURLCopy",
                                            readonly: "",
                                            type: "text",
                                            value: $options.shareURL,
                                            class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                            onFocus: ($event) => $event.target.select()
                                          }, null, 40, ["value", "onFocus"])
                                        ]),
                                        createVNode("button", {
                                          type: "button",
                                          class: "-ml-px relative inline-flex items-center space-x-2 px-2 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                          onClick: ($event) => _ctx.copyToClipboard(
                                            $options.shareURL,
                                            "datasetPublicURLCopy"
                                          )
                                        }, [
                                          createVNode("span", null, [
                                            createVNode(_component_ClipboardDocumentIcon, {
                                              class: "h-5 w-5",
                                              "aria-hidden": "true"
                                            })
                                          ])
                                        ], 8, ["onClick"])
                                      ], 2)
                                    ]),
                                    _: 1
                                  })
                                ])
                              ]),
                              _: 1
                            })
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    })) : createCommentVNode("", true)
                  ])
                ])
              ])
            ]),
            $props.study.data.tags.length > 0 ? (openBlock(), createBlock("div", {
              key: 0,
              class: "relative mt-4"
            }, [
              createVNode("div", { class: "relative" }, [
                createVNode("div", {
                  class: "absolute inset-0 flex items-center",
                  "aria-hidden": "true"
                }, [
                  createVNode("div", { class: "w-full border-t border-gray-100" })
                ]),
                createVNode("div", { class: "relative flex items-center justify-between" }, [
                  createVNode("span", { class: "pr-3 text-md bg-white font-medium text-gray-400" }, " Keywords ")
                ])
              ]),
              createVNode("div", { class: "mt-3" }, [
                createVNode("dd", { class: "mt-1 text-md text-gray-900 space-y-5" }, [
                  createVNode("p", null, [
                    (openBlock(true), createBlock(Fragment, null, renderList($props.study.data.tags, (tag) => {
                      return openBlock(), createBlock("span", {
                        key: tag.id,
                        class: "mr-2"
                      }, [
                        createVNode("span", { class: "inline-flex items-center px-2.5 py-0.5 rounded-md text-sm font-medium bg-indigo-100 text-indigo-800" }, [
                          (openBlock(), createBlock("svg", {
                            class: "-ml-0.5 mr-1.5 h-2 w-2 text-indigo-400",
                            fill: "currentColor",
                            viewBox: "0 0 8 8"
                          }, [
                            createVNode("circle", {
                              cx: "4",
                              cy: "4",
                              r: "3"
                            })
                          ])),
                          createTextVNode(" " + toDisplayString(tag.name["en"]), 1)
                        ])
                      ]);
                    }), 128))
                  ])
                ])
              ])
            ])) : createCommentVNode("", true),
            $props.study.data.sample.molecules.length > 0 || $props.study.data.sample.description == "" ? (openBlock(), createBlock("div", {
              key: 1,
              class: "mt-4"
            }, [
              createVNode("div", { class: "relative" }, [
                createVNode("div", {
                  class: "absolute inset-0 flex items-center",
                  "aria-hidden": "true"
                }, [
                  createVNode("div", { class: "w-full border-t border-gray-100" })
                ]),
                createVNode("div", { class: "relative flex items-center justify-between" }, [
                  createVNode("span", { class: "pr-3 text-md bg-white font-medium text-gray-400" }, " Sample ")
                ])
              ]),
              $props.study.data.sample.molecules.length > 0 ? (openBlock(), createBlock("div", {
                key: 0,
                class: "mt-3"
              }, [
                createVNode("label", null, "Molecular Composition"),
                createVNode("div", { class: "grid md:grid-cols-2 gap-2 mt-2" }, [
                  createVNode("div", { class: "pr-2" }, [
                    $props.study.data.sample.molecules.length > 0 ? (openBlock(), createBlock("div", {
                      key: 0,
                      class: "flow-root"
                    }, [
                      createVNode("ul", {
                        role: "list",
                        class: "-mb-8"
                      }, [
                        (openBlock(true), createBlock(Fragment, null, renderList($props.study.data.sample.molecules, (molecule) => {
                          return openBlock(), createBlock("li", {
                            key: molecule.standard_inchi
                          }, [
                            createVNode("div", { class: "relative pb-8" }, [
                              createVNode("span", {
                                class: "absolute top-5 left-5 -ml-px h-full w-0.5 bg-gray-200",
                                "aria-hidden": "true"
                              }),
                              createVNode("div", { class: "relative flex items-start space-x-3" }, [
                                molecule && molecule.pivot ? (openBlock(), createBlock("div", {
                                  key: 0,
                                  class: "relative"
                                }, [
                                  createVNode("div", { class: "rounded-full border p-2 z-10 bg-gray-100 text-sm" }, toDisplayString(molecule.pivot.percentage_composition) + "% ", 1)
                                ])) : createCommentVNode("", true),
                                createVNode("div", { class: "min-w-0 flex-1" }, [
                                  createVNode("div", null, [
                                    createVNode("div", { class: "text-sm" }, [
                                      createVNode("a", { class: "font-medium text-gray-900" }, toDisplayString(molecule.standard_inchi), 1)
                                    ])
                                  ]),
                                  createVNode("div", { class: "mt-2 text-sm text-gray-700" }, [
                                    createVNode("div", { class: "rounded-md border my-3 flex justify-center items-center" }, [
                                      createVNode(_component_Depictor2D, {
                                        class: "py-4 -px-4",
                                        molecule: molecule.canonical_smiles
                                      }, null, 8, ["molecule"])
                                    ])
                                  ])
                                ])
                              ])
                            ])
                          ]);
                        }), 128))
                      ]),
                      createVNode("div", { class: "rounded-full border p-2 z-10 bg-gray-100 text-sm mt-14 text-center" }, " Sample chemical composition ")
                    ])) : (openBlock(), createBlock("div", { key: 1 }, [
                      createVNode("div", { class: "text-center my-10 py-10" }, [
                        createVNode("h3", { class: "mt-2 text-sm font-medium text-gray-900" }, " No structures associated with the sample yet! "),
                        createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " Get started by adding a new molecule. ")
                      ])
                    ]))
                  ])
                ])
              ])) : createCommentVNode("", true)
            ])) : createCommentVNode("", true),
            createVNode("div", { class: "mt-4" }, [
              createVNode("div", { class: "relative" }, [
                createVNode("div", {
                  class: "absolute inset-0 flex items-center",
                  "aria-hidden": "true"
                }, [
                  createVNode("div", { class: "w-full border-t border-gray-100" })
                ]),
                createVNode("div", { class: "relative flex items-center justify-between" }, [
                  createVNode("span", { class: "pr-3 text-md bg-white font-medium text-gray-400" }, " Spectra ")
                ])
              ]),
              createVNode("div", { class: "mt-3" }, [
                createVNode(_component_SpectraViewer, {
                  ref: "spectraViewerREF",
                  study: $props.study.data
                }, null, 8, ["study"])
              ]),
              createVNode("div", { class: "my-2" }, [
                createVNode("div", null, [
                  createVNode("h2", { class: "text-sm font-medium text-gray-500" }, " Spectra Datasets "),
                  createVNode("ul", {
                    role: "list",
                    class: "mt-3 grid grid-cols-1 gap-5 sm:grid-cols-2 sm:gap-6 lg:grid-cols-3"
                  }, [
                    (openBlock(true), createBlock(Fragment, null, renderList($props.study.data.datasets.sort(
                      (a2, b2) => a2.name > b2.name ? 1 : -1
                    ), (dataset) => {
                      return openBlock(), createBlock("li", {
                        key: dataset.slug,
                        class: "col-span-1 flex rounded-md shadow-sm"
                      }, [
                        createVNode("div", { class: "flex flex-1 border-l rounded-md items-center justify-between truncate rounded-r-md border-b border-r border-t border-gray-200 bg-white" }, [
                          createVNode("div", { class: "flex-1 truncate px-4 py-2 text-sm" }, [
                            createVNode("a", { class: "font-medium text-lg text-gray-900 hover:text-gray-600" }, [
                              createTextVNode(toDisplayString(dataset.name) + " ", 1),
                              dataset.type ? (openBlock(), createBlock("span", { key: 0 }, "(" + toDisplayString(dataset.type.replace(
                                /,\s*$/,
                                ""
                              )) + ")", 1)) : createCommentVNode("", true)
                            ]),
                            createVNode("p", { class: "text-gray-500" }, [
                              createVNode(_component_DOIBadge, {
                                color: "bg-green-100",
                                doi: dataset.doi
                              }, null, 8, ["doi"])
                            ])
                          ])
                        ])
                      ]);
                    }), 128))
                  ])
                ])
              ]),
              createVNode("div", null, " "),
              $props.study.data.license ? (openBlock(), createBlock("div", {
                key: 0,
                class: "mt-4"
              }, [
                createVNode("div", { class: "relative" }, [
                  createVNode("div", {
                    class: "absolute inset-0 flex items-center",
                    "aria-hidden": "true"
                  }, [
                    createVNode("div", { class: "w-full border-t border-gray-100" })
                  ]),
                  createVNode("div", { class: "relative flex items-center justify-between" }, [
                    createVNode("span", { class: "pr-3 text-md bg-white font-medium text-gray-400" }, " License ")
                  ])
                ]),
                createVNode("p", {
                  style: { "max-width": "100ch !important" },
                  class: "prose mt-1 text-sm text-blue-gray-500",
                  innerHTML: $props.study.data.license.title
                }, null, 8, ["innerHTML"])
              ])) : createCommentVNode("", true),
              $props.study.data.description && $props.study.data.description.length > 0 ? (openBlock(), createBlock("div", {
                key: 1,
                class: "overflow-hidden w-full"
              }, [
                createVNode("div", { class: "relative" }, [
                  createVNode("div", {
                    class: "absolute inset-0 flex items-center",
                    "aria-hidden": "true"
                  }, [
                    createVNode("div", { class: "w-full border-t border-gray-100" })
                  ]),
                  createVNode("div", { class: "relative flex items-center justify-between" }, [
                    createVNode("span", { class: "pr-3 text-md bg-white font-medium text-gray-400" }, " Description ")
                  ])
                ]),
                createVNode("div", null, [
                  createVNode("p", {
                    class: "overflow-scroll mt-1 px-0 relative text-sm text-blue-gray-500 h-64 pb-10",
                    innerHTML: $props.study.data.description
                  }, null, 8, ["innerHTML"]),
                  createVNode("div", {
                    class: "relative",
                    "aria-hidden": "true"
                  }, [
                    createVNode("div", { class: "absolute -inset-x-20 bottom-0 bg-gradient-to-t from-white pt-[7%]" })
                  ])
                ])
              ])) : createCommentVNode("", true)
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  ssrRenderVNode(_push, createVNode(resolveDynamicComponent("script"), { type: "application/ld+json" }, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${ssrInterpolate($data.schema)}`);
      } else {
        return [
          createTextVNode(toDisplayString($data.schema), 1)
        ];
      }
    }),
    _: 1
  }), _parent);
  _push(`<!--]-->`);
}
const _sfc_setup$z = _sfc_main$z.setup;
_sfc_main$z.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Public/Sample/Show.vue");
  return _sfc_setup$z ? _sfc_setup$z(props, ctx) : void 0;
};
const Show$1 = /* @__PURE__ */ _export_sfc(_sfc_main$z, [["ssrRender", _sfc_ssrRender$y]]);
const __vite_glob_0_52 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Show$1
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$y = {
  components: {
    Dropdown
  },
  props: {
    modelValue: String,
    maxWidth: {
      type: Number,
      default: 300
    }
  }
};
function _sfc_ssrRender$x(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex items-center" }, _attrs))}><div class="flex w-full bg-white shadow rounded-full"><input class="relative w-full border-0 px-6 py-3 rounded-full focus:shadow-outline" autocomplete="off" type="text" name="search" placeholder="Search"${ssrRenderAttr("value", $props.modelValue)}></div><button class="ml-3 text-sm text-gray-500 hover:text-gray-700 focus:text-indigo-500" type="button"> Reset </button></div>`);
}
const _sfc_setup$y = _sfc_main$y.setup;
_sfc_main$y.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/StudySearch.vue");
  return _sfc_setup$y ? _sfc_setup$y(props, ctx) : void 0;
};
const StudySearch = /* @__PURE__ */ _export_sfc(_sfc_main$y, [["ssrRender", _sfc_ssrRender$x]]);
const _sfc_main$x = {
  components: {
    AppLayout,
    Link,
    StudySearch,
    Pagination,
    Dialog,
    DialogPanel,
    Disclosure,
    DisclosureButton,
    DisclosurePanel,
    Menu,
    MenuButton,
    MenuItem,
    MenuItems,
    Popover,
    PopoverButton,
    PopoverGroup,
    PopoverPanel,
    TransitionChild,
    TransitionRoot,
    XMarkIcon,
    ChevronDownIcon,
    QueueListIcon,
    Squares2X2Icon: Squares2X2Icon$1,
    StudyPublicCard
  },
  props: {
    studies: {
      default: [],
      type: Object
    },
    filters: {
      default: {
        search: "",
        sort: "newest",
        mode: "grid"
      },
      type: Object
    },
    molecule: {
      default: [],
      type: Object
    }
  },
  data() {
    return {
      sortOptions: [
        { name: "Creation", value: "creation", current: true },
        { name: "Newest", value: "newest", current: false }
      ],
      open: ref(false),
      form: {
        search: this.filters.search,
        sort: "newest",
        mode: "grid"
      }
    };
  },
  mounted() {
    if (this.filters) {
      if (this.filters.search == null) {
        this.filters.search = "";
      }
      if (this.filters.mode == null) {
        this.filters.mode = "grid";
      }
      if (this.filters.sort == null) {
        this.filters.sort = "newest";
      }
    }
  },
  watch: {
    form: {
      deep: true,
      handler: throttle(function() {
        this.$inertia.get("/spectra", pickBy(this.form), {
          preserveState: true
        });
      }, 150)
    }
  },
  methods: {
    reset() {
      this.form = {
        search: "",
        sort: "newest",
        mode: "grid"
      };
    }
  }
};
function _sfc_ssrRender$w(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_study_search = resolveComponent("study-search");
  const _component_Menu = resolveComponent("Menu");
  const _component_MenuButton = resolveComponent("MenuButton");
  const _component_ChevronDownIcon = resolveComponent("ChevronDownIcon");
  const _component_MenuItems = resolveComponent("MenuItems");
  const _component_MenuItem = resolveComponent("MenuItem");
  const _component_QueueListIcon = resolveComponent("QueueListIcon");
  const _component_Squares2X2Icon = resolveComponent("Squares2X2Icon");
  const _component_StudyPublicCard = resolveComponent("StudyPublicCard");
  const _component_Pagination = resolveComponent("Pagination");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({ title: "Spectra" }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="relative border-b border-zinc-900/5"${_scopeId}><div class="relative pt-10 dark:border-white/5 mx-8 py-12 sm:py-12"${_scopeId}><div class="absolute inset-0 bg-gradient-to-r from-[#36b49f] to-[#DBFF75] opacity-40 [mask-image:radial-gradient(farthest-side_at_top,white,transparent)] dark:from-[#36b49f]/30 dark:to-[#DBFF75]/30 dark:opacity-100"${_scopeId}><svg aria-hidden="true" class="absolute inset-x-0 inset-y-[-50%] h-[200%] w-full skew-y-[-18deg] fill-black/40 stroke-black/50 mix-blend-overlay dark:fill-white/2.5 dark:stroke-white/5"${_scopeId}><defs${_scopeId}><pattern id=":r99:" width="72" height="56" patternUnits="userSpaceOnUse" x="-12" y="4"${_scopeId}><path d="M.5 56V.5H72" fill="none"${_scopeId}></path></pattern></defs><rect width="100%" height="100%" stroke-width="0" fill="url(#:r99:)"${_scopeId}></rect><svg x="-12" y="4" class="overflow-visible"${_scopeId}><rect stroke-width="0" width="73" height="57" x="288" y="168"${_scopeId}></rect><rect stroke-width="0" width="73" height="57" x="144" y="56"${_scopeId}></rect><rect stroke-width="0" width="73" height="57" x="504" y="168"${_scopeId}></rect><rect stroke-width="0" width="73" height="57" x="720" y="336"${_scopeId}></rect></svg></svg></div><div class="text-4xl mb-3 font-bold tracking-tight text-gray-900"${_scopeId}> Browse Spectra (Samples) </div><p${_scopeId}> Explore, analyse, and share raw spectra and assignments. Learn more about <a class="text-teal-900" href="https://docs.nmrxiv.org/docs/introduction/intro" target="_blank"${_scopeId}>spectra</a>. </p></div>`);
        if ($props.molecule) {
          _push2(`<div class="border-t mx-auto px-4 sm:px-6 lg:px-8"${_scopeId}><div class="mx-auto flex max-w-2xl items-center justify-between gap-x-8 lg:mx-0 lg:max-w-none"${_scopeId}><div class="flex items-center gap-x-6"${_scopeId}><img${ssrRenderAttr(
            "src",
            _ctx.$page.props.CM_API + "depict/2D?smiles=" + $props.molecule.canonical_smiles
          )} alt="" class="h-32 w-32 rounded rounded-full flex-none"${_scopeId}><h1${_scopeId}><div class="text-sm leading-6 text-gray-500"${_scopeId}><span class="text-gray-700"${_scopeId}>${ssrInterpolate($props.molecule.identifier)}</span></div><div class="mt-1 text-base font-semibold leading-6 text-gray-900"${_scopeId}>`);
          if ($props.molecule.iupac_name) {
            _push2(`<span${_scopeId}>${ssrInterpolate($props.molecule.iupac_name)}</span>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`<br${_scopeId}>`);
          if ($props.molecule.canonical_smiles) {
            _push2(`<span${_scopeId}>${ssrInterpolate($props.molecule.canonical_smiles)}</span>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div></h1></div></div></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "relative border-b border-zinc-900/5" }, [
            createVNode("div", { class: "relative pt-10 dark:border-white/5 mx-8 py-12 sm:py-12" }, [
              createVNode("div", { class: "absolute inset-0 bg-gradient-to-r from-[#36b49f] to-[#DBFF75] opacity-40 [mask-image:radial-gradient(farthest-side_at_top,white,transparent)] dark:from-[#36b49f]/30 dark:to-[#DBFF75]/30 dark:opacity-100" }, [
                (openBlock(), createBlock("svg", {
                  "aria-hidden": "true",
                  class: "absolute inset-x-0 inset-y-[-50%] h-[200%] w-full skew-y-[-18deg] fill-black/40 stroke-black/50 mix-blend-overlay dark:fill-white/2.5 dark:stroke-white/5"
                }, [
                  createVNode("defs", null, [
                    createVNode("pattern", {
                      id: ":r99:",
                      width: "72",
                      height: "56",
                      patternUnits: "userSpaceOnUse",
                      x: "-12",
                      y: "4"
                    }, [
                      createVNode("path", {
                        d: "M.5 56V.5H72",
                        fill: "none"
                      })
                    ])
                  ]),
                  createVNode("rect", {
                    width: "100%",
                    height: "100%",
                    "stroke-width": "0",
                    fill: "url(#:r99:)"
                  }),
                  (openBlock(), createBlock("svg", {
                    x: "-12",
                    y: "4",
                    class: "overflow-visible"
                  }, [
                    createVNode("rect", {
                      "stroke-width": "0",
                      width: "73",
                      height: "57",
                      x: "288",
                      y: "168"
                    }),
                    createVNode("rect", {
                      "stroke-width": "0",
                      width: "73",
                      height: "57",
                      x: "144",
                      y: "56"
                    }),
                    createVNode("rect", {
                      "stroke-width": "0",
                      width: "73",
                      height: "57",
                      x: "504",
                      y: "168"
                    }),
                    createVNode("rect", {
                      "stroke-width": "0",
                      width: "73",
                      height: "57",
                      x: "720",
                      y: "336"
                    })
                  ]))
                ]))
              ]),
              createVNode("div", { class: "text-4xl mb-3 font-bold tracking-tight text-gray-900" }, " Browse Spectra (Samples) "),
              createVNode("p", null, [
                createTextVNode(" Explore, analyse, and share raw spectra and assignments. Learn more about "),
                createVNode("a", {
                  class: "text-teal-900",
                  href: "https://docs.nmrxiv.org/docs/introduction/intro",
                  target: "_blank"
                }, "spectra"),
                createTextVNode(". ")
              ])
            ]),
            $props.molecule ? (openBlock(), createBlock("div", {
              key: 0,
              class: "border-t mx-auto px-4 sm:px-6 lg:px-8"
            }, [
              createVNode("div", { class: "mx-auto flex max-w-2xl items-center justify-between gap-x-8 lg:mx-0 lg:max-w-none" }, [
                createVNode("div", { class: "flex items-center gap-x-6" }, [
                  createVNode("img", {
                    src: _ctx.$page.props.CM_API + "depict/2D?smiles=" + $props.molecule.canonical_smiles,
                    alt: "",
                    class: "h-32 w-32 rounded rounded-full flex-none"
                  }, null, 8, ["src"]),
                  createVNode("h1", null, [
                    createVNode("div", { class: "text-sm leading-6 text-gray-500" }, [
                      createVNode("span", { class: "text-gray-700" }, toDisplayString($props.molecule.identifier), 1)
                    ]),
                    createVNode("div", { class: "mt-1 text-base font-semibold leading-6 text-gray-900" }, [
                      $props.molecule.iupac_name ? (openBlock(), createBlock("span", { key: 0 }, toDisplayString($props.molecule.iupac_name), 1)) : createCommentVNode("", true),
                      createVNode("br"),
                      $props.molecule.canonical_smiles ? (openBlock(), createBlock("span", { key: 1 }, toDisplayString($props.molecule.canonical_smiles), 1)) : createCommentVNode("", true)
                    ])
                  ])
                ])
              ])
            ])) : createCommentVNode("", true)
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}><div class="bg-white"${_scopeId}><section aria-labelledby="filter-heading"${_scopeId}><div class="bg-gray-100 border-t border-b"${_scopeId}><div class="mx-auto py-3 px-4 sm:flex sm:items-center sm:px-6 lg:px-8"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_study_search, {
          modelValue: $data.form.search,
          "onUpdate:modelValue": ($event) => $data.form.search = $event,
          class: "mr-4 w-full",
          onReset: $options.reset
        }, null, _parent2, _scopeId));
        _push2(`</div></div></section></div></div><div class="min-h-[calc(100vh-500px)] px-12 mb-24 mx-auto"${_scopeId}><div class="relative border-gray-200 pt-4"${_scopeId}><div class="mx-auto flex items-center justify-between"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_Menu, {
          as: "div",
          class: "relative inline-block text-left z-10"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_MenuButton, { class: "group inline-flex justify-center text-sm font-medium text-gray-700 hover:text-gray-900" }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Sort by: <span class="capitalize font-black text-gray-900"${_scopeId3}>${ssrInterpolate($data.form.sort)}</span>`);
                    _push4(ssrRenderComponent(_component_ChevronDownIcon, {
                      class: "flex-shrink-0 -mr-1 ml-1 h-5 w-5 text-gray-400 group-hover:text-gray-500",
                      "aria-hidden": "true"
                    }, null, _parent4, _scopeId3));
                  } else {
                    return [
                      createTextVNode(" Sort by: "),
                      createVNode("span", { class: "capitalize font-black text-gray-900" }, toDisplayString($data.form.sort), 1),
                      createVNode(_component_ChevronDownIcon, {
                        class: "flex-shrink-0 -mr-1 ml-1 h-5 w-5 text-gray-400 group-hover:text-gray-500",
                        "aria-hidden": "true"
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</div>`);
              _push3(ssrRenderComponent(_component_MenuItems, { class: "origin-top-left absolute left-0 mt-2 w-40 rounded-md shadow-2xl bg-white ring-1 ring-black ring-opacity-5 focus:outline-none" }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<div class="py-1"${_scopeId3}><!--[-->`);
                    ssrRenderList($data.sortOptions, (option) => {
                      _push4(ssrRenderComponent(_component_MenuItem, {
                        key: option.name
                      }, {
                        default: withCtx(({ active }, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(`<a class="${ssrRenderClass([
                              option.current ? "font-medium text-gray-900" : "text-gray-500",
                              active ? "bg-gray-100" : "",
                              "block px-4 py-2 text-sm cursor-pointer"
                            ])}"${_scopeId4}>${ssrInterpolate(option.name)}</a>`);
                          } else {
                            return [
                              createVNode("a", {
                                class: [
                                  option.current ? "font-medium text-gray-900" : "text-gray-500",
                                  active ? "bg-gray-100" : "",
                                  "block px-4 py-2 text-sm cursor-pointer"
                                ],
                                onClick: ($event) => $data.form.sort = option.value
                              }, toDisplayString(option.name), 11, ["onClick"])
                            ];
                          }
                        }),
                        _: 2
                      }, _parent4, _scopeId3));
                    });
                    _push4(`<!--]--></div>`);
                  } else {
                    return [
                      createVNode("div", { class: "py-1" }, [
                        (openBlock(true), createBlock(Fragment, null, renderList($data.sortOptions, (option) => {
                          return openBlock(), createBlock(_component_MenuItem, {
                            key: option.name
                          }, {
                            default: withCtx(({ active }) => [
                              createVNode("a", {
                                class: [
                                  option.current ? "font-medium text-gray-900" : "text-gray-500",
                                  active ? "bg-gray-100" : "",
                                  "block px-4 py-2 text-sm cursor-pointer"
                                ],
                                onClick: ($event) => $data.form.sort = option.value
                              }, toDisplayString(option.name), 11, ["onClick"])
                            ]),
                            _: 2
                          }, 1024);
                        }), 128))
                      ])
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                createVNode("div", null, [
                  createVNode(_component_MenuButton, { class: "group inline-flex justify-center text-sm font-medium text-gray-700 hover:text-gray-900" }, {
                    default: withCtx(() => [
                      createTextVNode(" Sort by: "),
                      createVNode("span", { class: "capitalize font-black text-gray-900" }, toDisplayString($data.form.sort), 1),
                      createVNode(_component_ChevronDownIcon, {
                        class: "flex-shrink-0 -mr-1 ml-1 h-5 w-5 text-gray-400 group-hover:text-gray-500",
                        "aria-hidden": "true"
                      })
                    ]),
                    _: 1
                  })
                ]),
                createVNode(Transition, {
                  "enter-active-class": "transition ease-out duration-100",
                  "enter-from-class": "transform opacity-0 scale-95",
                  "enter-to-class": "transform opacity-100 scale-100",
                  "leave-active-class": "transition ease-in duration-75",
                  "leave-from-class": "transform opacity-100 scale-100",
                  "leave-to-class": "transform opacity-0 scale-95"
                }, {
                  default: withCtx(() => [
                    createVNode(_component_MenuItems, { class: "origin-top-left absolute left-0 mt-2 w-40 rounded-md shadow-2xl bg-white ring-1 ring-black ring-opacity-5 focus:outline-none" }, {
                      default: withCtx(() => [
                        createVNode("div", { class: "py-1" }, [
                          (openBlock(true), createBlock(Fragment, null, renderList($data.sortOptions, (option) => {
                            return openBlock(), createBlock(_component_MenuItem, {
                              key: option.name
                            }, {
                              default: withCtx(({ active }) => [
                                createVNode("a", {
                                  class: [
                                    option.current ? "font-medium text-gray-900" : "text-gray-500",
                                    active ? "bg-gray-100" : "",
                                    "block px-4 py-2 text-sm cursor-pointer"
                                  ],
                                  onClick: ($event) => $data.form.sort = option.value
                                }, toDisplayString(option.name), 11, ["onClick"])
                              ]),
                              _: 2
                            }, 1024);
                          }), 128))
                        ])
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`<div class="float-right"${_scopeId}><span class="relative z-0 inline-flex shadow-sm rounded-md"${_scopeId}><button type="button" class="${ssrRenderClass([
          $props.filters.mode == "list" ? "bg-gray-300 text-gray-900" : "",
          "relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50"
        ])}"${_scopeId}><span class="sr-only"${_scopeId}>List</span>`);
        _push2(ssrRenderComponent(_component_QueueListIcon, {
          class: "h-5 w-5",
          "aria-hidden": "true"
        }, null, _parent2, _scopeId));
        _push2(`</button><button type="button" class="${ssrRenderClass([
          $props.filters.mode == "grid" ? "bg-gray-300 text-gray-900" : "",
          "-ml-px relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50"
        ])}"${_scopeId}><span class="sr-only"${_scopeId}>Grid</span>`);
        _push2(ssrRenderComponent(_component_Squares2X2Icon, {
          class: "h-5 w-5",
          "aria-hidden": "true"
        }, null, _parent2, _scopeId));
        _push2(`</button></span></div></div></div>`);
        if ($props.studies.meta && $props.studies.meta.total > 0) {
          _push2(`<div${_scopeId}><div class="border-t mt-3 border-gray-100"${_scopeId}><h2 class="text-gray-600 text-md mt-4 font-bold"${_scopeId}> Results (${ssrInterpolate($props.studies.meta.total)}) </h2></div>`);
          if ($props.filters.mode == "grid") {
            _push2(`<div${_scopeId}><div class="mt-4 mx-auto grid gap-8 lg:grid-cols-4 2xl:grid-cols-6"${_scopeId}><!--[-->`);
            ssrRenderList($props.studies.data, (study) => {
              _push2(`<span${_scopeId}>`);
              _push2(ssrRenderComponent(_component_StudyPublicCard, {
                mode: $props.filters.mode,
                study
              }, null, _parent2, _scopeId));
              _push2(`</span>`);
            });
            _push2(`<!--]--></div></div>`);
          } else {
            _push2(`<!---->`);
          }
          if ($props.filters.mode == "list") {
            _push2(`<div${_scopeId}><div class="mt-4 bg-white overflow-hidden sm:rounded-md"${_scopeId}><ul role="list" class="rounded-md"${_scopeId}><!--[-->`);
            ssrRenderList($props.studies.data, (study) => {
              _push2(`<div class="mb-3"${_scopeId}>`);
              _push2(ssrRenderComponent(_component_StudyPublicCard, {
                mode: $props.filters.mode ? $props.filters.mode : "grid",
                study
              }, null, _parent2, _scopeId));
              _push2(`</div>`);
            });
            _push2(`<!--]--></ul></div></div>`);
          } else {
            _push2(`<!---->`);
          }
          if ($props.studies.meta.total > $props.studies.meta.per_page) {
            _push2(`<div class="py-10"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Pagination, {
              links: $props.studies.meta.links
            }, null, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div>`);
        } else {
          _push2(`<div${_scopeId}><div class="text-center rounded-lg border-2 border-dashed border-gray-300 p-12 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 mt-5"${_scopeId}><svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true"${_scopeId}><path vector-effect="non-scaling-stroke" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"${_scopeId}></path></svg><h3 class="mt-2 text-sm font-medium text-gray-900"${_scopeId}> No studies </h3></div></div>`);
        }
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", null, [
            createVNode("div", { class: "bg-white" }, [
              createVNode("section", { "aria-labelledby": "filter-heading" }, [
                createVNode("div", { class: "bg-gray-100 border-t border-b" }, [
                  createVNode("div", { class: "mx-auto py-3 px-4 sm:flex sm:items-center sm:px-6 lg:px-8" }, [
                    createVNode(_component_study_search, {
                      modelValue: $data.form.search,
                      "onUpdate:modelValue": ($event) => $data.form.search = $event,
                      class: "mr-4 w-full",
                      onReset: $options.reset
                    }, null, 8, ["modelValue", "onUpdate:modelValue", "onReset"])
                  ])
                ])
              ])
            ])
          ]),
          createVNode("div", { class: "min-h-[calc(100vh-500px)] px-12 mb-24 mx-auto" }, [
            createVNode("div", { class: "relative border-gray-200 pt-4" }, [
              createVNode("div", { class: "mx-auto flex items-center justify-between" }, [
                createVNode(_component_Menu, {
                  as: "div",
                  class: "relative inline-block text-left z-10"
                }, {
                  default: withCtx(() => [
                    createVNode("div", null, [
                      createVNode(_component_MenuButton, { class: "group inline-flex justify-center text-sm font-medium text-gray-700 hover:text-gray-900" }, {
                        default: withCtx(() => [
                          createTextVNode(" Sort by: "),
                          createVNode("span", { class: "capitalize font-black text-gray-900" }, toDisplayString($data.form.sort), 1),
                          createVNode(_component_ChevronDownIcon, {
                            class: "flex-shrink-0 -mr-1 ml-1 h-5 w-5 text-gray-400 group-hover:text-gray-500",
                            "aria-hidden": "true"
                          })
                        ]),
                        _: 1
                      })
                    ]),
                    createVNode(Transition, {
                      "enter-active-class": "transition ease-out duration-100",
                      "enter-from-class": "transform opacity-0 scale-95",
                      "enter-to-class": "transform opacity-100 scale-100",
                      "leave-active-class": "transition ease-in duration-75",
                      "leave-from-class": "transform opacity-100 scale-100",
                      "leave-to-class": "transform opacity-0 scale-95"
                    }, {
                      default: withCtx(() => [
                        createVNode(_component_MenuItems, { class: "origin-top-left absolute left-0 mt-2 w-40 rounded-md shadow-2xl bg-white ring-1 ring-black ring-opacity-5 focus:outline-none" }, {
                          default: withCtx(() => [
                            createVNode("div", { class: "py-1" }, [
                              (openBlock(true), createBlock(Fragment, null, renderList($data.sortOptions, (option) => {
                                return openBlock(), createBlock(_component_MenuItem, {
                                  key: option.name
                                }, {
                                  default: withCtx(({ active }) => [
                                    createVNode("a", {
                                      class: [
                                        option.current ? "font-medium text-gray-900" : "text-gray-500",
                                        active ? "bg-gray-100" : "",
                                        "block px-4 py-2 text-sm cursor-pointer"
                                      ],
                                      onClick: ($event) => $data.form.sort = option.value
                                    }, toDisplayString(option.name), 11, ["onClick"])
                                  ]),
                                  _: 2
                                }, 1024);
                              }), 128))
                            ])
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                }),
                createVNode("div", { class: "float-right" }, [
                  createVNode("span", { class: "relative z-0 inline-flex shadow-sm rounded-md" }, [
                    createVNode("button", {
                      type: "button",
                      class: [
                        $props.filters.mode == "list" ? "bg-gray-300 text-gray-900" : "",
                        "relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50"
                      ],
                      onClick: ($event) => $data.form.mode = "list"
                    }, [
                      createVNode("span", { class: "sr-only" }, "List"),
                      createVNode(_component_QueueListIcon, {
                        class: "h-5 w-5",
                        "aria-hidden": "true"
                      })
                    ], 10, ["onClick"]),
                    createVNode("button", {
                      type: "button",
                      class: [
                        $props.filters.mode == "grid" ? "bg-gray-300 text-gray-900" : "",
                        "-ml-px relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50"
                      ],
                      onClick: ($event) => $data.form.mode = "grid"
                    }, [
                      createVNode("span", { class: "sr-only" }, "Grid"),
                      createVNode(_component_Squares2X2Icon, {
                        class: "h-5 w-5",
                        "aria-hidden": "true"
                      })
                    ], 10, ["onClick"])
                  ])
                ])
              ])
            ]),
            $props.studies.meta && $props.studies.meta.total > 0 ? (openBlock(), createBlock("div", { key: 0 }, [
              createVNode("div", { class: "border-t mt-3 border-gray-100" }, [
                createVNode("h2", { class: "text-gray-600 text-md mt-4 font-bold" }, " Results (" + toDisplayString($props.studies.meta.total) + ") ", 1)
              ]),
              $props.filters.mode == "grid" ? (openBlock(), createBlock("div", { key: 0 }, [
                createVNode("div", { class: "mt-4 mx-auto grid gap-8 lg:grid-cols-4 2xl:grid-cols-6" }, [
                  (openBlock(true), createBlock(Fragment, null, renderList($props.studies.data, (study) => {
                    return openBlock(), createBlock("span", {
                      key: study.id
                    }, [
                      createVNode(_component_StudyPublicCard, {
                        mode: $props.filters.mode,
                        study
                      }, null, 8, ["mode", "study"])
                    ]);
                  }), 128))
                ])
              ])) : createCommentVNode("", true),
              $props.filters.mode == "list" ? (openBlock(), createBlock("div", { key: 1 }, [
                createVNode("div", { class: "mt-4 bg-white overflow-hidden sm:rounded-md" }, [
                  createVNode("ul", {
                    role: "list",
                    class: "rounded-md"
                  }, [
                    (openBlock(true), createBlock(Fragment, null, renderList($props.studies.data, (study) => {
                      return openBlock(), createBlock("div", {
                        key: study.id,
                        class: "mb-3"
                      }, [
                        createVNode(_component_StudyPublicCard, {
                          mode: $props.filters.mode ? $props.filters.mode : "grid",
                          study
                        }, null, 8, ["mode", "study"])
                      ]);
                    }), 128))
                  ])
                ])
              ])) : createCommentVNode("", true),
              $props.studies.meta.total > $props.studies.meta.per_page ? (openBlock(), createBlock("div", {
                key: 2,
                class: "py-10"
              }, [
                createVNode(_component_Pagination, {
                  links: $props.studies.meta.links
                }, null, 8, ["links"])
              ])) : createCommentVNode("", true)
            ])) : (openBlock(), createBlock("div", { key: 1 }, [
              createVNode("div", { class: "text-center rounded-lg border-2 border-dashed border-gray-300 p-12 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 mt-5" }, [
                (openBlock(), createBlock("svg", {
                  class: "mx-auto h-12 w-12 text-gray-400",
                  fill: "none",
                  viewBox: "0 0 24 24",
                  stroke: "currentColor",
                  "aria-hidden": "true"
                }, [
                  createVNode("path", {
                    "vector-effect": "non-scaling-stroke",
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round",
                    "stroke-width": "2",
                    d: "M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"
                  })
                ])),
                createVNode("h3", { class: "mt-2 text-sm font-medium text-gray-900" }, " No studies ")
              ])
            ]))
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$x = _sfc_main$x.setup;
_sfc_main$x.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Public/Studies.vue");
  return _sfc_setup$x ? _sfc_setup$x(props, ctx) : void 0;
};
const Studies = /* @__PURE__ */ _export_sfc(_sfc_main$x, [["ssrRender", _sfc_ssrRender$w]]);
const __vite_glob_0_53 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Studies
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$w = {
  components: {
    LockClosedIcon,
    LockOpenIcon,
    EnvelopeIcon,
    PencilIcon,
    StarIcon: StarIcon$1,
    Link,
    Depictor2D
  },
  props: ["study"],
  setup() {
  },
  data() {
    return {
      selectedPreviewIndex: 0
    };
  },
  methods: {
    getSVGString(molecule) {
      if (molecule && molecule.MOL) {
        let mol = OCL.Molecule.fromMolfile(
          "\n  " + molecule.MOL.replaceAll('"', "")
        );
        return mol.toSVG(200, 200);
      }
    }
  }
};
function _sfc_ssrRender$v(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Depictor2D = resolveComponent("Depictor2D");
  const _component_Link = resolveComponent("Link");
  const _component_LockClosedIcon = resolveComponent("LockClosedIcon");
  if ($props.study) {
    _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex flex-col border rounded-lg shadow-lg transition ease-in-out delay-150 duration-300 overflow-hidden" }, _attrs))}><div class="pt-2 px-2"><ul role="list"><li class="col-span-1 divide-y divide-gray-200 cursor-pointer"><div class="bg-white rounded-t-md flex justify-center items-center"><span>`);
    _push(ssrRenderComponent(_component_Depictor2D, {
      class: "py-2",
      molecule: $props.study.sample.molecules[0].canonical_smiles,
      "show-download": false
    }, null, _parent));
    _push(`</span></div></li></ul><div class="bg-white"></div></div><div class="flex-1 border-t bg-white p-3 pb-2 flex flex-col justify-between">`);
    if ($props.study.identifier) {
      _push(`<small class="text-gray-500">#${ssrInterpolate($props.study.identifier)}</small>`);
    } else {
      _push(`<!---->`);
    }
    _push(ssrRenderComponent(_component_Link, {
      href: "/upload?step=2&draft_id=" + $props.study.draft_id + "&sample=" + $props.study.id
    }, {
      default: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`<div class="flex items-center font-bold text-lg text-gray-600 truncate ellipsis"${_scopeId}>${ssrInterpolate($props.study.name)}</div>`);
        } else {
          return [
            createVNode("div", { class: "flex items-center font-bold text-lg text-gray-600 truncate ellipsis" }, toDisplayString($props.study.name), 1)
          ];
        }
      }),
      _: 1
    }, _parent));
    _push(`</div><div class="px-3 pb-3 pt-0 h-28 overflow-auto"><!--[-->`);
    ssrRenderList($props.study.datasets, (ds, $dsIndex) => {
      _push(`<span><div class="${ssrRenderClass([
        $props.study.has_nmrium || ds.has_nmrium ? "bg-green-100 text-gray-800" : "bg-gray-100 text-gray-800",
        "mb-0.5 inline-flex truncate break-words items-center px-3 py-0.5 rounded-full text-xs font-medium mr-1"
      ])}"><a>${ssrInterpolate(ds.name)} `);
      if (ds.type) {
        _push(`<span>(${ssrInterpolate(ds.type)})</span>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</a></div></span>`);
    });
    _push(`<!--]--></div><div class="px-3 border-t py-1"><div class="pt-1"><div class="float-left">`);
    if ($props.study.is_public) {
      _push(`<div class="flex items-center mt-1"><svg class="h-3 w-3 mr-1 text-green-400 inline" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 64 64" width="512" height="512"><g id="globe"><path d="M53.85,47.85A27,27,0,0,1,24,57.8V56l3-3V49l4-4V42l4,4h5l2-2h8Z"></path><path d="M42,20.59v2.56L38.07,27H31l-5.36,5.26L31,37.51v5.06L27.44,39H22.86L16,32.11V24.2L11.8,20h-4A27,27,0,0,1,32,5a26.55,26.55,0,0,1,7.06.94L36,9H30v4l4,4h4.33Z"></path><path d="M32,60A28,28,0,1,1,60,32,28,28,0,0,1,32,60ZM32,6A26,26,0,1,0,58,32,26,26,0,0,0,32,6Z"></path></g></svg><p class="text-xs text-gray-600">Public</p></div>`);
    } else {
      _push(`<div class="flex items-center mt-1">`);
      _push(ssrRenderComponent(_component_LockClosedIcon, { class: "w-3 h-3 mr-1 text-teal-600" }, null, _parent));
      _push(`<p class="text-xs text-gray-600">Private</p></div>`);
    }
    _push(`</div><div class="float-left p-1 text-xs text-gray-600"><span class="text-gray-400">Last updated on</span> ${ssrInterpolate(_ctx.formatDate($props.study.updated_at))}</div></div></div></div>`);
  } else {
    _push(`<!---->`);
  }
}
const _sfc_setup$w = _sfc_main$w.setup;
_sfc_main$w.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/StudyInfo.vue");
  return _sfc_setup$w ? _sfc_setup$w(props, ctx) : void 0;
};
const StudyInfo = /* @__PURE__ */ _export_sfc(_sfc_main$w, [["ssrRender", _sfc_ssrRender$v]]);
const _sfc_main$v = {
  components: {
    ManageAuthor,
    AuthorCard,
    ManageCitation,
    Citation,
    ToolTip,
    Datepicker,
    // VueTagsInput,
    // slider,
    SelectRich,
    AppLayout,
    computed,
    TeamProjects,
    Create: Create$3,
    Onboarding,
    Link,
    JetInputError,
    JetSecondaryButton,
    JetButton,
    XCircleIcon,
    ClipboardDocumentIcon,
    QuestionMarkCircleIcon,
    ExclamationTriangleIcon: ExclamationTriangleIcon$1,
    TrashIcon,
    PlayIcon,
    PauseIcon,
    PencilIcon,
    ArrowDownOnSquareStackIcon,
    BellAlertIcon,
    SpectraEditor,
    Validation: Validation$1,
    ToggleButton,
    StarIcon: StarIcon$1,
    CalendarIcon,
    StudyInfo,
    CitationCard,
    JetConfirmationModal,
    JetSuccessButton
  },
  props: ["user", "team", "project", "teamRole", "draft"],
  setup() {
    const manageAuthorElement = ref(null);
    const manageCitationElement = ref(null);
    return {
      manageAuthorElement,
      manageCitationElement
    };
  },
  data() {
    return {
      publishForm: this.$inertia.form({
        _method: "POST",
        project: {
          name: "",
          description: "",
          error_message: null,
          tags: [],
          tag: "",
          tags_array: [],
          owner_id: null,
          species: []
        },
        conditions: false,
        terms: false,
        enableProjectMode: false,
        releaseDate: this.setReleaseDate()
      }),
      licenses: null,
      license: null,
      returnUrl: "/dashboard",
      errors: null,
      projectSpecies: "",
      status: "draft",
      validation: null,
      showPublishConfirmationModal: false
    };
  },
  computed: {
    url() {
      return String(this.$page.props.url);
    },
    getMax() {
      if (this.selectedStudy) {
        let totalCount = 0;
        this.selectedStudy.sample.molecules.forEach((mol) => {
          totalCount += parseInt(mol.pivot.percentage_composition);
        });
        return 100 - totalCount;
      } else {
        return 100;
      }
    },
    primed() {
      return this.$page.props.auth.user.primed;
    },
    currentTab() {
      return this.tabs.find((t4) => t4.current);
    }
  },
  mounted() {
    if (this.draft) {
      this.publishForm.project.name = this.project.name ? this.project.name : this.draft.name;
      this.publishForm.enableProjectMode = this.draft.project_enabled;
      this.publishForm.project.description = this.project.description;
      let tags = [];
      this.project.tags.forEach((t4) => {
        tags.push({
          text: t4.name["en"]
        });
      });
      this.publishForm.project.tags = tags;
      this.license = this.project.license;
      this.status = this.project.status && this.project.status != "" ? this.project.status : "draft";
      this.publishForm.project.species = JSON.parse(this.project.species) ? JSON.parse(this.project.species) : [];
    }
    this.loadLicenses();
    this.$nextTick(() => {
      const urlSearchParams = new URLSearchParams(window.location.search);
      const params = Object.fromEntries(urlSearchParams.entries());
      let edit = params["edit"];
      if (edit == "citation") {
        this.toggleManageCitation();
      } else if (edit == "title") {
        this.scrollTo(document.getElementById("project-name"));
      } else if (edit == "description") {
        this.scrollTo(document.getElementById("project-desc"));
      } else if (edit == "keywords") {
        this.scrollTo(document.getElementById("project-keywords"));
      } else if (edit == "organism") {
        this.scrollTo(document.getElementById("project-organism"));
      } else if (edit == "license") {
        this.scrollTo(document.getElementById("license"));
      } else if (edit == "release") {
        this.scrollTo(document.getElementById("release"));
      } else if (edit == "authors") {
        this.toggleManageAuthor();
      }
    });
  },
  methods: {
    scrollTo(element) {
      this.$nextTick(() => {
        element.classList.add("shake");
        setTimeout(function() {
          element.classList.remove("shake");
        }, 2500);
      });
    },
    updateDraft() {
      axios$1.put("/dashboard/drafts/" + this.draft.id, {
        project_enabled: this.publishForm.enableProjectMode ? 1 : 0
      });
    },
    updateProject() {
      if (this.publishForm.project.tag && this.publishForm.project.tag != "") {
        let exists = false;
        this.publishForm.project.tags.forEach((t4) => {
          if (t4.text == this.publishForm.project.tag) {
            exists = true;
          }
        });
        if (!exists) {
          this.publishForm.project.tags.push({
            text: this.publishForm.project.tag
          });
          this.publishForm.project.tag = "";
        }
      }
      this.loadingStep = true;
      axios$1.put(route("dashboard.project.update", this.project.id), {
        name: this.publishForm.project.name,
        description: this.publishForm.project.description,
        tags: this.publishForm.project.tags,
        tags_array: this.publishForm.project.tags ? this.publishForm.project.tags.map((a2) => a2.text) : [],
        license_id: this.license ? this.license.id : null,
        species: this.publishForm.project.species,
        release_date: this.publishForm.releaseDate
      });
    },
    updateSpecies(species) {
      if (species && species != "") {
        this.publishForm.project.species.push(species);
        this.projectSpecies = "";
        this.updateProject();
      }
    },
    removeSpecies(index) {
      if (index > -1) {
        this.publishForm.project.species.splice(index, 1);
      }
    },
    getTarget(id2) {
      var target = null;
      if (id2) {
        target = "_blank";
      }
      return target;
    },
    getCitationLink(doi) {
      var link = "#";
      if (doi) {
        link = "https://doi.org/" + doi;
      }
      return link;
    },
    setReleaseDate() {
      var current_date = /* @__PURE__ */ new Date();
      var relase_date = /* @__PURE__ */ new Date();
      relase_date.setDate(current_date.getDate());
      return relase_date;
    },
    loadLicenses() {
      if (this.$page.props.licenses) {
        this.licenses = this.$page.props.licenses;
      } else {
        axios$1.get(route("licenses")).then((res) => {
          this.licenses = res.data;
          this.$page.props.licenses = res.data;
        });
      }
    },
    getSVGString(molecule) {
      if (molecule.MOL) {
        let mol = OCL.Molecule.fromMolfile(
          "\n  " + molecule.MOL.replaceAll('"', "")
        );
        return mol.toSVG(200, 200);
      }
    },
    toggleManageAuthor() {
      this.manageAuthorElement.toggleDialog();
    },
    toggleManageCitation() {
      this.manageCitationElement.toggleDialog();
    },
    publish() {
      this.showPublishConfirmationModal = false;
      if (this.publishForm.conditions && this.publishForm.terms) {
        this.errors = null;
        axios$1.post(
          route("dashboard.project.publish", this.project.id),
          this.publishForm
        ).catch((err) => {
          this.errors = err.response.data.errors;
          this.validation = err.response.data.validation.report;
        }).then((response) => {
          this.status = response.data.project.status;
        });
      }
    }
    // trackProject() {
    //     axios
    //         .get("/projects/status/" + this.project.id + "/queue")
    //         .then((response) => {
    //             this.status = response.data.status;
    //             if (this.status != "complete") {
    //                 setTimeout(() => this.trackProject(), 10000);
    //             } else {
    //                 return this.$inertia.visit(
    //                     this.route("dashboard.projects", [this.project.id])
    //                 );
    //             }
    //         });
    // },
  }
};
function _sfc_ssrRender$u(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_Link = resolveComponent("Link");
  const _component_toggle_button = resolveComponent("toggle-button");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_vue_tags_input = resolveComponent("vue-tags-input");
  const _component_PencilIcon = resolveComponent("PencilIcon");
  const _component_citation_card = resolveComponent("citation-card");
  const _component_author_card = resolveComponent("author-card");
  const _component_study_info = resolveComponent("study-info");
  const _component_Datepicker = resolveComponent("Datepicker");
  const _component_select_rich = resolveComponent("select-rich");
  const _component_Validation = resolveComponent("Validation");
  const _component_manage_author = resolveComponent("manage-author");
  const _component_manage_citation = resolveComponent("manage-citation");
  const _component_jet_confirmation_modal = resolveComponent("jet-confirmation-modal");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  const _component_jet_success_button = resolveComponent("jet-success-button");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({ title: "Publish Data" }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white border-b"${_scopeId}><div class="px-6"${_scopeId}><div class="py-4"${_scopeId}><div${_scopeId}><span class="ml-12 text-sm font-bold text-teal-600 group-hover:text-teal-800"${_scopeId}>Step 3 / 3 - <span${_scopeId}> Publish data </span></span><div class="w-full sm:flex sm:items-center sm:justify-between"${_scopeId}><h3 class="text-sm text-gray-700 uppercase font-bold tracking-widest"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_Link, {
          class: "ml-1 mr-2 inline-flex items-center px-2.5 py-1 text-md font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
          href: "/upload?draft_id=" + $props.draft.id + "&step=2"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` ← `);
            } else {
              return [
                createTextVNode(" ← ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`<span${_scopeId}><p class="inline"${_scopeId}><b${_scopeId}>${ssrInterpolate($props.draft.name)}</b></p></span></h3></div></div></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white border-b" }, [
            createVNode("div", { class: "px-6" }, [
              createVNode("div", { class: "py-4" }, [
                createVNode("div", null, [
                  createVNode("span", { class: "ml-12 text-sm font-bold text-teal-600 group-hover:text-teal-800" }, [
                    createTextVNode("Step 3 / 3 - "),
                    createVNode("span", null, " Publish data ")
                  ]),
                  createVNode("div", { class: "w-full sm:flex sm:items-center sm:justify-between" }, [
                    createVNode("h3", { class: "text-sm text-gray-700 uppercase font-bold tracking-widest" }, [
                      createVNode(_component_Link, {
                        class: "ml-1 mr-2 inline-flex items-center px-2.5 py-1 text-md font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                        href: "/upload?draft_id=" + $props.draft.id + "&step=2"
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" ← ")
                        ]),
                        _: 1
                      }, 8, ["href"]),
                      createVNode("span", null, [
                        createVNode("p", { class: "inline" }, [
                          createVNode("b", null, toDisplayString($props.draft.name), 1)
                        ])
                      ])
                    ])
                  ])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="mb-10"${_scopeId}>`);
        if ($data.status == "draft") {
          _push2(`<div${_scopeId}><div id="project-details" class="p-4"${_scopeId}><div class="p-8"${_scopeId}><div${_scopeId}><label class="block tracking-wider text-sm font-medium text-gray-700, block text-sm font-medium text-gray-700"${_scopeId}>`);
          if ($data.publishForm.enableProjectMode) {
            _push2(`<small${_scopeId}>PUBLISH AS PROJECT</small>`);
          } else {
            _push2(`<small${_scopeId}>PUBLISH SAMPLES</small>`);
          }
          _push2(`</label>`);
          _push2(ssrRenderComponent(_component_toggle_button, {
            enabled: $data.publishForm.enableProjectMode,
            "onUpdate:enabled": ($event) => $data.publishForm.enableProjectMode = $event,
            onBlur: $options.updateDraft
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
          if ($data.publishForm.enableProjectMode) {
            _push2(`<div${_scopeId}><div class="p-4 bg-gray-100 rounded-md"${_scopeId}><div id="project-name" class="mb-3"${_scopeId}><label for="project-name" class="block text-sm font-medium text-gray-700 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId}> Project Name </label><div class="mt-1"${_scopeId}><input${ssrRenderAttr("value", $data.publishForm.project.name)} type="text" name="project-name" class="block w-full shadow-sm focus:ring-teal-500 focus:border-teal-500 sm:text-sm border-gray-300 rounded-md"${_scopeId}></div>`);
            _push2(ssrRenderComponent(_component_jet_input_error, {
              message: $data.publishForm.errors.name,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div><div id="project-desc" class="mb-3"${_scopeId}><label for="description" class="block text-sm font-medium text-gray-700 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId}><span${_scopeId}>Project Description </span></label><div class="mt-1"${_scopeId}><textarea id="description" name="project-description" placeholder="Describe this project" rows="3" class="block w-full shadow-sm focus:ring-teal-500 focus:border-teal-500 sm:text-sm border border-gray-300 rounded-md"${_scopeId}>${ssrInterpolate(
              $data.publishForm.project.description
            )}</textarea></div>`);
            _push2(ssrRenderComponent(_component_jet_input_error, {
              message: $data.publishForm.errors.description,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div><div id="project-keywords" class="mb-3"${_scopeId}><label for="description" class="block text-sm font-medium text-gray-700 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId}> Keywords </label><div${_scopeId}>`);
            _push2(ssrRenderComponent(_component_vue_tags_input, {
              modelValue: $data.publishForm.project.tag,
              "onUpdate:modelValue": ($event) => $data.publishForm.project.tag = $event,
              placeholder: "Type a keyword or keywords separated by comma (,) and press enter",
              separators: [";", ","],
              "max-width": "100%",
              tags: $data.publishForm.project.tags,
              onBlur: $options.updateProject,
              onTagsChanged: (newTags) => $data.publishForm.project.tags = newTags
            }, null, _parent2, _scopeId));
            _push2(`</div>`);
            _push2(ssrRenderComponent(_component_jet_input_error, {
              message: $data.publishForm.errors.tags,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`</div><div${_scopeId}><div id="project-organism" class="mb-3"${_scopeId}><label for="description" class="block text-sm font-medium text-gray-700"${_scopeId}> Organism (Optional) </label><div class="mt-2 sm:flex sm:items-start sm:justify-between"${_scopeId}><div class="text-sm text-gray-500 w-full"${_scopeId}><ontology-autocomplete class="rounded-md" format="text"${ssrRenderAttr("value", $data.projectSpecies)} placeholder="Search species"${_scopeId}></ontology-autocomplete></div><div class="mt-5 sm:ml-6 sm:mt-0 sm:flex sm:flex-shrink-0 sm:items-center"${_scopeId}><button type="button" class="inline-flex items-center gap-x-1.5 py-3 bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50"${_scopeId}><svg class="-ml-0.5 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"${_scopeId}><path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z"${_scopeId}></path></svg> Add </button></div></div><div class="mt-2"${_scopeId}><!--[-->`);
            ssrRenderList($data.publishForm.project.species, (species, $index) => {
              _push2(`<div class="bg-gray-100 border text-gray-800 mb-0.5 inline-flex truncate break-words items-center px-3 py-2 rounded-full text-sm font-medium mr-1"${_scopeId}><ontology-term-annotation${ssrRenderAttr("annotation", species)}${_scopeId}></ontology-term-annotation><span class="cursor-pointer"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5 ml-2"${_scopeId}><path fill-rule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm-1.72 6.97a.75.75 0 10-1.06 1.06L10.94 12l-1.72 1.72a.75.75 0 101.06 1.06L12 13.06l1.72 1.72a.75.75 0 101.06-1.06L13.06 12l1.72-1.72a.75.75 0 10-1.06-1.06L12 10.94l-1.72-1.72z" clip-rule="evenodd"${_scopeId}></path></svg></span></div>`);
            });
            _push2(`<!--]--></div></div></div><div class="mb-2"${_scopeId}><div class="relative pl-2"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-300"${_scopeId}></div></div><div class="relative flex items-center justify-between"${_scopeId}><span class="px-3 -ml-4 rounded text-sm bg-gray-100 font-medium text-gray-500 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId}> Citation </span><button type="button" class="inline-flex items-center shadow-sm px-4 py-1.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_PencilIcon, { class: "w-4 h-4 mr-1 text-gray-600" }, null, _parent2, _scopeId));
            _push2(`<span${_scopeId}>Edit</span></button></div></div><dd class="mt-2 text-md text-gray-900 space-y-5 focus:pointer-events-auto"${_scopeId}><div class="mt-1 grid grid-cols-1 gap-4 sm:grid-cols-2"${_scopeId}><div class="mt-1 grid grid-cols-1 gap-4 sm:grid-cols-2"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_citation_card, {
              citations: $props.project.citations
            }, null, _parent2, _scopeId));
            _push2(`</div></div></dd></div><div class="mb-2"${_scopeId}><div class="relative pl-2"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-300"${_scopeId}></div></div><div class="relative flex items-center justify-between"${_scopeId}><span class="px-3 -ml-4 rounded text-sm bg-gray-100 font-medium text-gray-500 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId}> Author </span><button type="button" class="inline-flex items-center shadow-sm px-4 py-1.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_PencilIcon, { class: "w-4 h-4 mr-1 text-gray-600" }, null, _parent2, _scopeId));
            _push2(`<span${_scopeId}>Edit</span></button></div></div><dd class="mt-2 text-md text-gray-900 space-y-5"${_scopeId}><div class="mt-1 grid grid-cols-1 gap-4 sm:grid-cols-3"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_author_card, {
              authors: $props.project.authors
            }, null, _parent2, _scopeId));
            _push2(`</div></dd></div></div></div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`<div class="mt-3"${_scopeId}><label class="block text-sm font-medium text-gray-700, block text-sm font-medium text-gray-700"${_scopeId}>${ssrInterpolate(_ctx.pluralize("SAMPLE", $props.project.studies.length))} (${ssrInterpolate($props.project.studies.length)}) </label><div${_scopeId}><div class="mt-4 mb-8 mx-auto max-w-md grid gap-8 sm:max-w-lg lg:grid-cols-4 lg:max-w-7xl"${_scopeId}><!--[-->`);
          ssrRenderList($props.project.studies, (study) => {
            _push2(`<div${_scopeId}>`);
            _push2(ssrRenderComponent(_component_study_info, { study }, null, _parent2, _scopeId));
            _push2(`</div>`);
          });
          _push2(`<!--]--></div></div></div><div id="release" class="mt-3"${_scopeId}><label class="block text-sm font-medium text-gray-700, block text-sm font-medium text-gray-700"${_scopeId}> Release Date </label>`);
          _push2(ssrRenderComponent(_component_Datepicker, {
            modelValue: $data.publishForm.releaseDate,
            "onUpdate:modelValue": [($event) => $data.publishForm.releaseDate = $event, $options.updateProject]
          }, null, _parent2, _scopeId));
          _push2(`<p class="mt-1 text-sm text-gray-500"${_scopeId}> Publish your data now or choose a release date to auto publish your project to public. </p></div><div class="mt-5"${_scopeId}><div id="license" class="mb-4"${_scopeId}><div${_scopeId}><div class="mt-6 grid grid-cols-1 gap-x-4 sm:grid-cols-1"${_scopeId}>`);
          if ($data.licenses) {
            _push2(`<div${_scopeId}><span class="float-right text-xs cursor-pointer hover:text-blue-700 mt-2"${_scopeId}><a target="_blank" href="https://docs.nmrxiv.org/submission-guides/licenses"${_scopeId}>How to choose the right license?</a></span>`);
            _push2(ssrRenderComponent(_component_select_rich, {
              selected: $data.license,
              "onUpdate:selected": [($event) => $data.license = $event, $options.updateProject],
              label: "License",
              items: $data.licenses
            }, null, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div></div></div></div><div class="mt-5"${_scopeId}><h3 class="text-lg font-bold text-gray-400"${_scopeId}> Terms &amp; Conditions </h3><div class="mt-3"${_scopeId}><div class="ml-2"${_scopeId}><div class="flex items-top"${_scopeId}><input id="conditions"${ssrIncludeBooleanAttr(Array.isArray($data.publishForm.conditions) ? ssrLooseContain($data.publishForm.conditions, null) : $data.publishForm.conditions) ? " checked" : ""} type="checkbox" class="rounded mt-1 border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" name="conditions"${_scopeId}><div class="ml-2 text-sm"${_scopeId}>`);
          if ($data.publishForm.enableProjectMode) {
            _push2(`<span${_scopeId}> I understand once the project is published, all the underlying samples and spectra will also be made public and agree to make this data persistently available in the nmrXiv platform. </span>`);
          } else {
            _push2(`<span${_scopeId}> I understand once the samples are published, all the underlying spectra will also be made public and agree to make this data persistently available in the nmrXiv platform. </span>`);
          }
          _push2(`</div></div></div></div><div class="mt-2"${_scopeId}><div class="ml-2"${_scopeId}><div class="flex items-center"${_scopeId}><input id="terms"${ssrIncludeBooleanAttr(Array.isArray($data.publishForm.terms) ? ssrLooseContain($data.publishForm.terms, null) : $data.publishForm.terms) ? " checked" : ""} type="checkbox" class="rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50" name="terms"${_scopeId}><div class="ml-2 text-sm"${_scopeId}> I agree to the <a target="_blank"${ssrRenderAttr("href", _ctx.route("terms.show"))} class="underline text-sm text-gray-600 hover:text-gray-900"${_scopeId}>Terms of Service</a> and <a target="_blank"${ssrRenderAttr("href", _ctx.route("policy.show"))} class="underline text-sm text-gray-600 hover:text-gray-900"${_scopeId}>Privacy Policy</a> and hereby also grant nmrXiv permissions to distribute the datasets (and meta-data) under the specified license. </div></div></div></div></div></div><div${_scopeId}><div id="publish-details"${_scopeId}> </div><div class="px-8 pb-8 pt-0"${_scopeId}><button type="button" class="${ssrRenderClass([
            !$data.publishForm.terms || !$data.publishForm.conditions ? "bg-gray-200 cursor-not-allowed" : "bg-green-600 hover:bg-green-700",
            "inline-flex w-full justify-center rounded-md border border-transparent px-4 py-2 text-base font-medium text-white shadow-sm focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 sm:w-auto sm:text-sm"
          ])}"${ssrIncludeBooleanAttr(
            !$data.publishForm.terms && !$data.publishForm.conditions
          ) ? " disabled" : ""}${_scopeId}> Publish </button>`);
          _push2(ssrRenderComponent(_component_Link, {
            type: "button",
            class: "mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm",
            href: _ctx.route("dashboard")
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Not right yet `);
              } else {
                return [
                  createTextVNode(" Not right yet ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div>`);
          if ($data.errors) {
            _push2(`<div${_scopeId}><div class="rounded-md bg-red-50 p-4 mx-4 mb-4"${_scopeId}><div${_scopeId}><div class="flex"${_scopeId}><div class="flex-shrink-0"${_scopeId}><svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"${_scopeId}><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z" clip-rule="evenodd"${_scopeId}></path></svg></div><div class="ml-3"${_scopeId}><h3 class="text-sm font-medium text-red-800"${_scopeId}> Error publishing your project </h3><div class="mt-2 text-sm text-red-700"${_scopeId}><ul role="list" class="list-disc space-y-1 pl-5"${_scopeId}><li${_scopeId}>${ssrInterpolate($data.errors)}</li></ul></div></div></div>`);
            if ($data.validation) {
              _push2(`<div class="mt-6"${_scopeId}>`);
              _push2(ssrRenderComponent(_component_Validation, {
                project: $props.project,
                validation: $data.validation,
                draft: $props.draft.id
              }, null, _parent2, _scopeId));
              _push2(`</div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div></div></div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div><div class="mx-4"${_scopeId}><div class="flex flex-wrap items-center bg-gray-50 py-2.5 px-4 text-xs text-gray-700"${_scopeId}><b${_scopeId}>Whats next?</b><div${_scopeId}><p${_scopeId}> Upon clicking publish, your project is submitted to our queue system for automatic processing. Once successfully processed, your data is assigned with stable identifiers, and DOIs are generated. You will receive an email with citation details and other helpful information to share your datasets. </p></div></div></div>`);
          if ($props.project) {
            _push2(`<div${_scopeId}>`);
            _push2(ssrRenderComponent(_component_manage_author, {
              ref: "manageAuthorElement",
              project: $props.project
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_manage_citation, {
              ref: "manageCitationElement",
              project: $props.project
            }, null, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div></div>`);
        } else {
          _push2(`<div class="mt-24 mx-auto max-w-3xl transform overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all"${_scopeId}><div class="py-16"${_scopeId}><div class="text-center"${_scopeId}><div class="m-3 relative clear-both border-dotted border-2 border-gray-300 rounded-lg"${_scopeId}><span class="inline-flex items-center px-4 py-2 font-semibold leading-6 text-sm rounded-md text-sky-500 bg-white transition ease-in-out duration-150 cursor-not-allowed" disabled=""${_scopeId}><h1 class="capitalize text-4xl font-extrabold text-gray-900 tracking-tight sm:text-5xl"${_scopeId}>${ssrInterpolate($data.status)}</h1></span></div>`);
          _push2(ssrRenderComponent(_component_Link, {
            type: "button",
            href: _ctx.route("dashboard"),
            class: "inline-flex items-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Go to Dashboard `);
              } else {
                return [
                  createTextVNode(" Go to Dashboard ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div></div><div class="w-full"${_scopeId}><div class="flex flex-wrap items-center bg-gray-50 py-2.5 px-4 text-xs text-gray-700"${_scopeId}><b${_scopeId}>Whats next?</b><div${_scopeId}><p${_scopeId}> Please allow some time to process your submission. You will recieve an email once your submission is processed. Upon publishing you will also receive an email with citation details and other helpful information to share your datasets. </p></div></div></div></div>`);
        }
        _push2(ssrRenderComponent(_component_jet_confirmation_modal, {
          show: $data.showPublishConfirmationModal,
          onClose: ($event) => $data.showPublishConfirmationModal = false
        }, {
          title: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Are you sure you want to publish? `);
            } else {
              return [
                createTextVNode(" Are you sure you want to publish? ")
              ];
            }
          }),
          content: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Once the data is published you will no longer be able to change the data uploaded! If published as a project, you may add more compounds (spectra) to the project later. `);
            } else {
              return [
                createTextVNode(" Once the data is published you will no longer be able to change the data uploaded! If published as a project, you may add more compounds (spectra) to the project later. ")
              ];
            }
          }),
          footer: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_jet_secondary_button, {
                onClick: ($event) => $data.showPublishConfirmationModal = false
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(ssrRenderComponent(_component_jet_success_button, {
                class: "ml-2",
                onClick: $options.publish
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Publish Now `);
                  } else {
                    return [
                      createTextVNode(" Publish Now ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                createVNode(_component_jet_secondary_button, {
                  onClick: ($event) => $data.showPublishConfirmationModal = false
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                createVNode(_component_jet_success_button, {
                  class: "ml-2",
                  onClick: $options.publish
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Publish Now ")
                  ]),
                  _: 1
                }, 8, ["onClick"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "mb-10" }, [
            $data.status == "draft" ? (openBlock(), createBlock("div", { key: 0 }, [
              createVNode("div", {
                id: "project-details",
                class: "p-4"
              }, [
                createVNode("div", { class: "p-8" }, [
                  createVNode("div", null, [
                    createVNode("label", { class: "block tracking-wider text-sm font-medium text-gray-700, block text-sm font-medium text-gray-700" }, [
                      $data.publishForm.enableProjectMode ? (openBlock(), createBlock("small", { key: 0 }, "PUBLISH AS PROJECT")) : (openBlock(), createBlock("small", { key: 1 }, "PUBLISH SAMPLES"))
                    ]),
                    createVNode(_component_toggle_button, {
                      enabled: $data.publishForm.enableProjectMode,
                      "onUpdate:enabled": ($event) => $data.publishForm.enableProjectMode = $event,
                      onBlur: $options.updateDraft
                    }, null, 8, ["enabled", "onUpdate:enabled", "onBlur"])
                  ]),
                  $data.publishForm.enableProjectMode ? (openBlock(), createBlock("div", { key: 0 }, [
                    createVNode("div", { class: "p-4 bg-gray-100 rounded-md" }, [
                      createVNode("div", {
                        id: "project-name",
                        class: "mb-3"
                      }, [
                        createVNode("label", {
                          for: "project-name",
                          class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500"
                        }, " Project Name "),
                        createVNode("div", { class: "mt-1" }, [
                          withDirectives(createVNode("input", {
                            "onUpdate:modelValue": ($event) => $data.publishForm.project.name = $event,
                            type: "text",
                            name: "project-name",
                            class: "block w-full shadow-sm focus:ring-teal-500 focus:border-teal-500 sm:text-sm border-gray-300 rounded-md",
                            onBlur: $options.updateProject
                          }, null, 40, ["onUpdate:modelValue", "onBlur"]), [
                            [vModelText, $data.publishForm.project.name]
                          ])
                        ]),
                        createVNode(_component_jet_input_error, {
                          message: $data.publishForm.errors.name,
                          class: "mt-2"
                        }, null, 8, ["message"])
                      ]),
                      createVNode("div", {
                        id: "project-desc",
                        class: "mb-3"
                      }, [
                        createVNode("label", {
                          for: "description",
                          class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500"
                        }, [
                          createVNode("span", {
                            onClick: ($event) => $data.publishForm.project.description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore"
                          }, "Project Description ", 8, ["onClick"])
                        ]),
                        createVNode("div", { class: "mt-1" }, [
                          withDirectives(createVNode("textarea", {
                            id: "description",
                            "onUpdate:modelValue": ($event) => $data.publishForm.project.description = $event,
                            name: "project-description",
                            placeholder: "Describe this project",
                            rows: "3",
                            class: "block w-full shadow-sm focus:ring-teal-500 focus:border-teal-500 sm:text-sm border border-gray-300 rounded-md",
                            onBlur: $options.updateProject
                          }, null, 40, ["onUpdate:modelValue", "onBlur"]), [
                            [
                              vModelText,
                              $data.publishForm.project.description
                            ]
                          ])
                        ]),
                        createVNode(_component_jet_input_error, {
                          message: $data.publishForm.errors.description,
                          class: "mt-2"
                        }, null, 8, ["message"])
                      ]),
                      createVNode("div", {
                        id: "project-keywords",
                        class: "mb-3"
                      }, [
                        createVNode("label", {
                          for: "description",
                          class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500"
                        }, " Keywords "),
                        createVNode("div", null, [
                          createVNode(_component_vue_tags_input, {
                            modelValue: $data.publishForm.project.tag,
                            "onUpdate:modelValue": ($event) => $data.publishForm.project.tag = $event,
                            placeholder: "Type a keyword or keywords separated by comma (,) and press enter",
                            separators: [";", ","],
                            "max-width": "100%",
                            tags: $data.publishForm.project.tags,
                            onBlur: $options.updateProject,
                            onTagsChanged: (newTags) => $data.publishForm.project.tags = newTags
                          }, null, 8, ["modelValue", "onUpdate:modelValue", "tags", "onBlur", "onTagsChanged"])
                        ]),
                        createVNode(_component_jet_input_error, {
                          message: $data.publishForm.errors.tags,
                          class: "mt-2"
                        }, null, 8, ["message"])
                      ]),
                      createVNode("div", null, [
                        createVNode("div", {
                          id: "project-organism",
                          class: "mb-3"
                        }, [
                          createVNode("label", {
                            for: "description",
                            class: "block text-sm font-medium text-gray-700"
                          }, " Organism (Optional) "),
                          createVNode("div", { class: "mt-2 sm:flex sm:items-start sm:justify-between" }, [
                            createVNode("div", { class: "text-sm text-gray-500 w-full" }, [
                              createVNode("ontology-autocomplete", {
                                class: "rounded-md",
                                format: "text",
                                value: $data.projectSpecies,
                                placeholder: "Search species",
                                onChange: ($event) => $data.projectSpecies = $event.detail[0]
                              }, null, 40, ["value", "onChange"])
                            ]),
                            createVNode("div", { class: "mt-5 sm:ml-6 sm:mt-0 sm:flex sm:flex-shrink-0 sm:items-center" }, [
                              createVNode("button", {
                                type: "button",
                                class: "inline-flex items-center gap-x-1.5 py-3 bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50",
                                onClick: ($event) => $options.updateSpecies(
                                  $data.projectSpecies
                                )
                              }, [
                                (openBlock(), createBlock("svg", {
                                  class: "-ml-0.5 h-5 w-5 text-gray-400",
                                  viewBox: "0 0 20 20",
                                  fill: "currentColor",
                                  "aria-hidden": "true"
                                }, [
                                  createVNode("path", { d: "M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z" })
                                ])),
                                createTextVNode(" Add ")
                              ], 8, ["onClick"])
                            ])
                          ]),
                          createVNode("div", { class: "mt-2" }, [
                            (openBlock(true), createBlock(Fragment, null, renderList($data.publishForm.project.species, (species, $index) => {
                              return openBlock(), createBlock("div", {
                                key: $index,
                                class: "bg-gray-100 border text-gray-800 mb-0.5 inline-flex truncate break-words items-center px-3 py-2 rounded-full text-sm font-medium mr-1"
                              }, [
                                createVNode("ontology-term-annotation", { annotation: species }, null, 8, ["annotation"]),
                                createVNode("span", {
                                  class: "cursor-pointer",
                                  onClick: ($event) => $options.removeSpecies($index)
                                }, [
                                  (openBlock(), createBlock("svg", {
                                    xmlns: "http://www.w3.org/2000/svg",
                                    viewBox: "0 0 24 24",
                                    fill: "currentColor",
                                    class: "w-5 h-5 ml-2"
                                  }, [
                                    createVNode("path", {
                                      "fill-rule": "evenodd",
                                      d: "M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm-1.72 6.97a.75.75 0 10-1.06 1.06L10.94 12l-1.72 1.72a.75.75 0 101.06 1.06L12 13.06l1.72 1.72a.75.75 0 101.06-1.06L13.06 12l1.72-1.72a.75.75 0 10-1.06-1.06L12 10.94l-1.72-1.72z",
                                      "clip-rule": "evenodd"
                                    })
                                  ]))
                                ], 8, ["onClick"])
                              ]);
                            }), 128))
                          ])
                        ])
                      ]),
                      createVNode("div", { class: "mb-2" }, [
                        createVNode("div", { class: "relative pl-2" }, [
                          createVNode("div", {
                            class: "absolute inset-0 flex items-center",
                            "aria-hidden": "true"
                          }, [
                            createVNode("div", { class: "w-full border-t border-gray-300" })
                          ]),
                          createVNode("div", { class: "relative flex items-center justify-between" }, [
                            createVNode("span", { class: "px-3 -ml-4 rounded text-sm bg-gray-100 font-medium text-gray-500 after:content-['*'] after:ml-0.5 after:text-red-500" }, " Citation "),
                            createVNode("button", {
                              type: "button",
                              class: "inline-flex items-center shadow-sm px-4 py-1.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                              onClick: $options.toggleManageCitation
                            }, [
                              createVNode(_component_PencilIcon, { class: "w-4 h-4 mr-1 text-gray-600" }),
                              createVNode("span", null, "Edit")
                            ], 8, ["onClick"])
                          ])
                        ]),
                        createVNode("dd", { class: "mt-2 text-md text-gray-900 space-y-5 focus:pointer-events-auto" }, [
                          createVNode("div", { class: "mt-1 grid grid-cols-1 gap-4 sm:grid-cols-2" }, [
                            createVNode("div", { class: "mt-1 grid grid-cols-1 gap-4 sm:grid-cols-2" }, [
                              createVNode(_component_citation_card, {
                                citations: $props.project.citations
                              }, null, 8, ["citations"])
                            ])
                          ])
                        ])
                      ]),
                      createVNode("div", { class: "mb-2" }, [
                        createVNode("div", { class: "relative pl-2" }, [
                          createVNode("div", {
                            class: "absolute inset-0 flex items-center",
                            "aria-hidden": "true"
                          }, [
                            createVNode("div", { class: "w-full border-t border-gray-300" })
                          ]),
                          createVNode("div", { class: "relative flex items-center justify-between" }, [
                            createVNode("span", { class: "px-3 -ml-4 rounded text-sm bg-gray-100 font-medium text-gray-500 after:content-['*'] after:ml-0.5 after:text-red-500" }, " Author "),
                            createVNode("button", {
                              type: "button",
                              class: "inline-flex items-center shadow-sm px-4 py-1.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                              onClick: $options.toggleManageAuthor
                            }, [
                              createVNode(_component_PencilIcon, { class: "w-4 h-4 mr-1 text-gray-600" }),
                              createVNode("span", null, "Edit")
                            ], 8, ["onClick"])
                          ])
                        ]),
                        createVNode("dd", { class: "mt-2 text-md text-gray-900 space-y-5" }, [
                          createVNode("div", { class: "mt-1 grid grid-cols-1 gap-4 sm:grid-cols-3" }, [
                            createVNode(_component_author_card, {
                              authors: $props.project.authors
                            }, null, 8, ["authors"])
                          ])
                        ])
                      ])
                    ])
                  ])) : createCommentVNode("", true),
                  createVNode("div", { class: "mt-3" }, [
                    createVNode("label", { class: "block text-sm font-medium text-gray-700, block text-sm font-medium text-gray-700" }, toDisplayString(_ctx.pluralize("SAMPLE", $props.project.studies.length)) + " (" + toDisplayString($props.project.studies.length) + ") ", 1),
                    createVNode("div", null, [
                      createVNode("div", { class: "mt-4 mb-8 mx-auto max-w-md grid gap-8 sm:max-w-lg lg:grid-cols-4 lg:max-w-7xl" }, [
                        (openBlock(true), createBlock(Fragment, null, renderList($props.project.studies, (study) => {
                          return openBlock(), createBlock("div", {
                            key: study.uuid
                          }, [
                            createVNode(_component_study_info, { study }, null, 8, ["study"])
                          ]);
                        }), 128))
                      ])
                    ])
                  ]),
                  createVNode("div", {
                    id: "release",
                    class: "mt-3"
                  }, [
                    createVNode("label", { class: "block text-sm font-medium text-gray-700, block text-sm font-medium text-gray-700" }, " Release Date "),
                    createVNode(_component_Datepicker, {
                      modelValue: $data.publishForm.releaseDate,
                      "onUpdate:modelValue": [($event) => $data.publishForm.releaseDate = $event, $options.updateProject]
                    }, null, 8, ["modelValue", "onUpdate:modelValue"]),
                    createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " Publish your data now or choose a release date to auto publish your project to public. ")
                  ]),
                  createVNode("div", { class: "mt-5" }, [
                    createVNode("div", {
                      id: "license",
                      class: "mb-4"
                    }, [
                      createVNode("div", null, [
                        createVNode("div", { class: "mt-6 grid grid-cols-1 gap-x-4 sm:grid-cols-1" }, [
                          $data.licenses ? (openBlock(), createBlock("div", { key: 0 }, [
                            createVNode("span", { class: "float-right text-xs cursor-pointer hover:text-blue-700 mt-2" }, [
                              createVNode("a", {
                                target: "_blank",
                                href: "https://docs.nmrxiv.org/submission-guides/licenses"
                              }, "How to choose the right license?")
                            ]),
                            createVNode(_component_select_rich, {
                              selected: $data.license,
                              "onUpdate:selected": [($event) => $data.license = $event, $options.updateProject],
                              label: "License",
                              items: $data.licenses
                            }, null, 8, ["selected", "onUpdate:selected", "items"])
                          ])) : createCommentVNode("", true)
                        ])
                      ])
                    ])
                  ]),
                  createVNode("div", { class: "mt-5" }, [
                    createVNode("h3", { class: "text-lg font-bold text-gray-400" }, " Terms & Conditions "),
                    createVNode("div", { class: "mt-3" }, [
                      createVNode("div", { class: "ml-2" }, [
                        createVNode("div", { class: "flex items-top" }, [
                          withDirectives(createVNode("input", {
                            id: "conditions",
                            "onUpdate:modelValue": ($event) => $data.publishForm.conditions = $event,
                            type: "checkbox",
                            class: "rounded mt-1 border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50",
                            name: "conditions"
                          }, null, 8, ["onUpdate:modelValue"]), [
                            [vModelCheckbox, $data.publishForm.conditions]
                          ]),
                          createVNode("div", { class: "ml-2 text-sm" }, [
                            $data.publishForm.enableProjectMode ? (openBlock(), createBlock("span", { key: 0 }, " I understand once the project is published, all the underlying samples and spectra will also be made public and agree to make this data persistently available in the nmrXiv platform. ")) : (openBlock(), createBlock("span", { key: 1 }, " I understand once the samples are published, all the underlying spectra will also be made public and agree to make this data persistently available in the nmrXiv platform. "))
                          ])
                        ])
                      ])
                    ]),
                    createVNode("div", { class: "mt-2" }, [
                      createVNode("div", { class: "ml-2" }, [
                        createVNode("div", { class: "flex items-center" }, [
                          withDirectives(createVNode("input", {
                            id: "terms",
                            "onUpdate:modelValue": ($event) => $data.publishForm.terms = $event,
                            type: "checkbox",
                            class: "rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50",
                            name: "terms"
                          }, null, 8, ["onUpdate:modelValue"]), [
                            [vModelCheckbox, $data.publishForm.terms]
                          ]),
                          createVNode("div", { class: "ml-2 text-sm" }, [
                            createTextVNode(" I agree to the "),
                            createVNode("a", {
                              target: "_blank",
                              href: _ctx.route("terms.show"),
                              class: "underline text-sm text-gray-600 hover:text-gray-900"
                            }, "Terms of Service", 8, ["href"]),
                            createTextVNode(" and "),
                            createVNode("a", {
                              target: "_blank",
                              href: _ctx.route("policy.show"),
                              class: "underline text-sm text-gray-600 hover:text-gray-900"
                            }, "Privacy Policy", 8, ["href"]),
                            createTextVNode(" and hereby also grant nmrXiv permissions to distribute the datasets (and meta-data) under the specified license. ")
                          ])
                        ])
                      ])
                    ])
                  ])
                ]),
                createVNode("div", null, [
                  createVNode("div", { id: "publish-details" }, " "),
                  createVNode("div", { class: "px-8 pb-8 pt-0" }, [
                    createVNode("button", {
                      type: "button",
                      class: [
                        !$data.publishForm.terms || !$data.publishForm.conditions ? "bg-gray-200 cursor-not-allowed" : "bg-green-600 hover:bg-green-700",
                        "inline-flex w-full justify-center rounded-md border border-transparent px-4 py-2 text-base font-medium text-white shadow-sm focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 sm:w-auto sm:text-sm"
                      ],
                      disabled: !$data.publishForm.terms && !$data.publishForm.conditions,
                      onClick: ($event) => $data.showPublishConfirmationModal = true
                    }, " Publish ", 10, ["disabled", "onClick"]),
                    createVNode(_component_Link, {
                      type: "button",
                      class: "mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm",
                      href: _ctx.route("dashboard")
                    }, {
                      default: withCtx(() => [
                        createTextVNode(" Not right yet ")
                      ]),
                      _: 1
                    }, 8, ["href"])
                  ]),
                  $data.errors ? (openBlock(), createBlock("div", { key: 0 }, [
                    createVNode("div", { class: "rounded-md bg-red-50 p-4 mx-4 mb-4" }, [
                      createVNode("div", null, [
                        createVNode("div", { class: "flex" }, [
                          createVNode("div", { class: "flex-shrink-0" }, [
                            (openBlock(), createBlock("svg", {
                              class: "h-5 w-5 text-red-400",
                              xmlns: "http://www.w3.org/2000/svg",
                              viewBox: "0 0 20 20",
                              fill: "currentColor",
                              "aria-hidden": "true"
                            }, [
                              createVNode("path", {
                                "fill-rule": "evenodd",
                                d: "M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z",
                                "clip-rule": "evenodd"
                              })
                            ]))
                          ]),
                          createVNode("div", { class: "ml-3" }, [
                            createVNode("h3", { class: "text-sm font-medium text-red-800" }, " Error publishing your project "),
                            createVNode("div", { class: "mt-2 text-sm text-red-700" }, [
                              createVNode("ul", {
                                role: "list",
                                class: "list-disc space-y-1 pl-5"
                              }, [
                                createVNode("li", null, toDisplayString($data.errors), 1)
                              ])
                            ])
                          ])
                        ]),
                        $data.validation ? (openBlock(), createBlock("div", {
                          key: 0,
                          class: "mt-6"
                        }, [
                          createVNode(_component_Validation, {
                            project: $props.project,
                            validation: $data.validation,
                            draft: $props.draft.id
                          }, null, 8, ["project", "validation", "draft"])
                        ])) : createCommentVNode("", true)
                      ])
                    ])
                  ])) : createCommentVNode("", true)
                ]),
                createVNode("div", { class: "mx-4" }, [
                  createVNode("div", { class: "flex flex-wrap items-center bg-gray-50 py-2.5 px-4 text-xs text-gray-700" }, [
                    createVNode("b", null, "Whats next?"),
                    createVNode("div", null, [
                      createVNode("p", null, " Upon clicking publish, your project is submitted to our queue system for automatic processing. Once successfully processed, your data is assigned with stable identifiers, and DOIs are generated. You will receive an email with citation details and other helpful information to share your datasets. ")
                    ])
                  ])
                ]),
                $props.project ? (openBlock(), createBlock("div", { key: 0 }, [
                  createVNode(_component_manage_author, {
                    ref: "manageAuthorElement",
                    project: $props.project
                  }, null, 8, ["project"]),
                  createVNode(_component_manage_citation, {
                    ref: "manageCitationElement",
                    project: $props.project
                  }, null, 8, ["project"])
                ])) : createCommentVNode("", true)
              ])
            ])) : (openBlock(), createBlock("div", {
              key: 1,
              class: "mt-24 mx-auto max-w-3xl transform overflow-hidden rounded-xl bg-white shadow-2xl ring-1 ring-black ring-opacity-5 transition-all"
            }, [
              createVNode("div", { class: "py-16" }, [
                createVNode("div", { class: "text-center" }, [
                  createVNode("div", { class: "m-3 relative clear-both border-dotted border-2 border-gray-300 rounded-lg" }, [
                    createVNode("span", {
                      class: "inline-flex items-center px-4 py-2 font-semibold leading-6 text-sm rounded-md text-sky-500 bg-white transition ease-in-out duration-150 cursor-not-allowed",
                      disabled: ""
                    }, [
                      createVNode("h1", { class: "capitalize text-4xl font-extrabold text-gray-900 tracking-tight sm:text-5xl" }, toDisplayString($data.status), 1)
                    ])
                  ]),
                  createVNode(_component_Link, {
                    type: "button",
                    href: _ctx.route("dashboard"),
                    class: "inline-flex items-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Go to Dashboard ")
                    ]),
                    _: 1
                  }, 8, ["href"])
                ])
              ]),
              createVNode("div", { class: "w-full" }, [
                createVNode("div", { class: "flex flex-wrap items-center bg-gray-50 py-2.5 px-4 text-xs text-gray-700" }, [
                  createVNode("b", null, "Whats next?"),
                  createVNode("div", null, [
                    createVNode("p", null, " Please allow some time to process your submission. You will recieve an email once your submission is processed. Upon publishing you will also receive an email with citation details and other helpful information to share your datasets. ")
                  ])
                ])
              ])
            ])),
            createVNode(_component_jet_confirmation_modal, {
              show: $data.showPublishConfirmationModal,
              onClose: ($event) => $data.showPublishConfirmationModal = false
            }, {
              title: withCtx(() => [
                createTextVNode(" Are you sure you want to publish? ")
              ]),
              content: withCtx(() => [
                createTextVNode(" Once the data is published you will no longer be able to change the data uploaded! If published as a project, you may add more compounds (spectra) to the project later. ")
              ]),
              footer: withCtx(() => [
                createVNode(_component_jet_secondary_button, {
                  onClick: ($event) => $data.showPublishConfirmationModal = false
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                createVNode(_component_jet_success_button, {
                  class: "ml-2",
                  onClick: $options.publish
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Publish Now ")
                  ]),
                  _: 1
                }, 8, ["onClick"])
              ]),
              _: 1
            }, 8, ["show", "onClose"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$v = _sfc_main$v.setup;
_sfc_main$v.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Publish.vue");
  return _sfc_setup$v ? _sfc_setup$v(props, ctx) : void 0;
};
const Publish = /* @__PURE__ */ _export_sfc(_sfc_main$v, [["ssrRender", _sfc_ssrRender$u]]);
const __vite_glob_0_54 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Publish
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$u = {
  components: {
    AppLayout,
    TeamProjects
  },
  props: ["user", "team", "projects"]
};
function _sfc_ssrRender$t(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_team_projects = resolveComponent("team-projects");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({ title: "Dashboard" }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white border-b"${_scopeId}><div class="px-12"${_scopeId}><div class="flex flex-nowrap justify-between py-6"${_scopeId}><div${_scopeId}><div class="flex flex-nowrap justify-between"${_scopeId}><div class="lg:flex lg:items-center lg:justify-between"${_scopeId}><div class="flex-1 min-w-0"${_scopeId}><nav class="flex" aria-label="Breadcrumb"${_scopeId}><ol role="list" class="flex items-center space-x-4"${_scopeId}><li${_scopeId}><div class="flex"${_scopeId}><a class="text-sm font-medium text-gray-500 hover:text-gray-700"${_scopeId}>Dashboard</a></div></li><li${_scopeId}><div class="flex items-center"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="flex-shrink-0 h-5 w-5 text-gray-400"${_scopeId}><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"${_scopeId}></path></svg><a class="ml-4 text-sm font-medium text-gray-500 hover:text-gray-700"${_scopeId}>Recent</a></div></li></ol></nav><h2 class="mt-2 text-2xl font-bold break-words leading-7 text-gray-900 sm:text-3xl"${_scopeId}> Recent </h2></div></div></div></div></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white border-b" }, [
            createVNode("div", { class: "px-12" }, [
              createVNode("div", { class: "flex flex-nowrap justify-between py-6" }, [
                createVNode("div", null, [
                  createVNode("div", { class: "flex flex-nowrap justify-between" }, [
                    createVNode("div", { class: "lg:flex lg:items-center lg:justify-between" }, [
                      createVNode("div", { class: "flex-1 min-w-0" }, [
                        createVNode("nav", {
                          class: "flex",
                          "aria-label": "Breadcrumb"
                        }, [
                          createVNode("ol", {
                            role: "list",
                            class: "flex items-center space-x-4"
                          }, [
                            createVNode("li", null, [
                              createVNode("div", { class: "flex" }, [
                                createVNode("a", { class: "text-sm font-medium text-gray-500 hover:text-gray-700" }, "Dashboard")
                              ])
                            ]),
                            createVNode("li", null, [
                              createVNode("div", { class: "flex items-center" }, [
                                (openBlock(), createBlock("svg", {
                                  xmlns: "http://www.w3.org/2000/svg",
                                  viewBox: "0 0 20 20",
                                  fill: "currentColor",
                                  "aria-hidden": "true",
                                  class: "flex-shrink-0 h-5 w-5 text-gray-400"
                                }, [
                                  createVNode("path", {
                                    "fill-rule": "evenodd",
                                    d: "M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z",
                                    "clip-rule": "evenodd"
                                  })
                                ])),
                                createVNode("a", { class: "ml-4 text-sm font-medium text-gray-500 hover:text-gray-700" }, "Recent")
                              ])
                            ])
                          ])
                        ]),
                        createVNode("h2", { class: "mt-2 text-2xl font-bold break-words leading-7 text-gray-900 sm:text-3xl" }, " Recent ")
                      ])
                    ])
                  ])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="px-12 py-8 mx-auto max-w-4xl"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_team_projects, {
          mode: "listing",
          projects: $props.projects
        }, {
          emptyText: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div class="text-center py-12"${_scopeId2}><svg xmlns="http://www.w3.org/2000/svg" class="mx-auto h-24 w-24 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"${_scopeId2}><path stroke-linecap="round" stroke-linejoin="round" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"${_scopeId2}></path></svg><h3 class="mt-2 text-sm font-medium text-gray-900"${_scopeId2}> No Projects Yet. </h3><p class="mt-1 text-sm text-gray-500"${_scopeId2}> When you have projects associated with your account they appear here in the order of the most recently updated ones first. </p></div>`);
            } else {
              return [
                createVNode("div", { class: "text-center py-12" }, [
                  (openBlock(), createBlock("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    class: "mx-auto h-24 w-24 text-gray-400",
                    fill: "none",
                    viewBox: "0 0 24 24",
                    stroke: "currentColor",
                    "stroke-width": "2"
                  }, [
                    createVNode("path", {
                      "stroke-linecap": "round",
                      "stroke-linejoin": "round",
                      d: "M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"
                    })
                  ])),
                  createVNode("h3", { class: "mt-2 text-sm font-medium text-gray-900" }, " No Projects Yet. "),
                  createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " When you have projects associated with your account they appear here in the order of the most recently updated ones first. ")
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "px-12 py-8 mx-auto max-w-4xl" }, [
            createVNode(_component_team_projects, {
              mode: "listing",
              projects: $props.projects
            }, {
              emptyText: withCtx(() => [
                createVNode("div", { class: "text-center py-12" }, [
                  (openBlock(), createBlock("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    class: "mx-auto h-24 w-24 text-gray-400",
                    fill: "none",
                    viewBox: "0 0 24 24",
                    stroke: "currentColor",
                    "stroke-width": "2"
                  }, [
                    createVNode("path", {
                      "stroke-linecap": "round",
                      "stroke-linejoin": "round",
                      d: "M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"
                    })
                  ])),
                  createVNode("h3", { class: "mt-2 text-sm font-medium text-gray-900" }, " No Projects Yet. "),
                  createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " When you have projects associated with your account they appear here in the order of the most recently updated ones first. ")
                ])
              ]),
              _: 1
            }, 8, ["projects"])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$u = _sfc_main$u.setup;
_sfc_main$u.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Recent.vue");
  return _sfc_setup$u ? _sfc_setup$u(props, ctx) : void 0;
};
const Recent = /* @__PURE__ */ _export_sfc(_sfc_main$u, [["ssrRender", _sfc_ssrRender$t]]);
const __vite_glob_0_55 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Recent
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$t = {
  components: {
    AppLayout,
    TeamProjects,
    StudyCard,
    Link
  },
  props: ["user", "team", "projects", "studies"]
};
function _sfc_ssrRender$s(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_team_projects = resolveComponent("team-projects");
  const _component_Link = resolveComponent("Link");
  const _component_study_card = resolveComponent("study-card");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({ title: "Dashboard" }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white border-b"${_scopeId}><div class="px-12"${_scopeId}><div class="flex flex-nowrap justify-between py-6"${_scopeId}><div${_scopeId}><div class="flex flex-nowrap justify-between"${_scopeId}><div class="lg:flex lg:items-center lg:justify-between"${_scopeId}><div class="flex-1 min-w-0"${_scopeId}><nav class="flex" aria-label="Breadcrumb"${_scopeId}><ol role="list" class="flex items-center space-x-4"${_scopeId}><li${_scopeId}><div class="flex"${_scopeId}><a class="text-sm font-medium text-gray-500 hover:text-gray-700"${_scopeId}>Dashboard</a></div></li><li${_scopeId}><div class="flex items-center"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="flex-shrink-0 h-5 w-5 text-gray-400"${_scopeId}><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"${_scopeId}></path></svg><a class="ml-4 text-sm font-medium text-gray-500 hover:text-gray-700"${_scopeId}>Shared With Me</a></div></li></ol></nav><h2 class="mt-2 text-2xl font-bold break-words leading-7 text-gray-900 sm:text-3xl"${_scopeId}> Shared With Me </h2></div></div></div></div></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white border-b" }, [
            createVNode("div", { class: "px-12" }, [
              createVNode("div", { class: "flex flex-nowrap justify-between py-6" }, [
                createVNode("div", null, [
                  createVNode("div", { class: "flex flex-nowrap justify-between" }, [
                    createVNode("div", { class: "lg:flex lg:items-center lg:justify-between" }, [
                      createVNode("div", { class: "flex-1 min-w-0" }, [
                        createVNode("nav", {
                          class: "flex",
                          "aria-label": "Breadcrumb"
                        }, [
                          createVNode("ol", {
                            role: "list",
                            class: "flex items-center space-x-4"
                          }, [
                            createVNode("li", null, [
                              createVNode("div", { class: "flex" }, [
                                createVNode("a", { class: "text-sm font-medium text-gray-500 hover:text-gray-700" }, "Dashboard")
                              ])
                            ]),
                            createVNode("li", null, [
                              createVNode("div", { class: "flex items-center" }, [
                                (openBlock(), createBlock("svg", {
                                  xmlns: "http://www.w3.org/2000/svg",
                                  viewBox: "0 0 20 20",
                                  fill: "currentColor",
                                  "aria-hidden": "true",
                                  class: "flex-shrink-0 h-5 w-5 text-gray-400"
                                }, [
                                  createVNode("path", {
                                    "fill-rule": "evenodd",
                                    d: "M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z",
                                    "clip-rule": "evenodd"
                                  })
                                ])),
                                createVNode("a", { class: "ml-4 text-sm font-medium text-gray-500 hover:text-gray-700" }, "Shared With Me")
                              ])
                            ])
                          ])
                        ]),
                        createVNode("h2", { class: "mt-2 text-2xl font-bold break-words leading-7 text-gray-900 sm:text-3xl" }, " Shared With Me ")
                      ])
                    ])
                  ])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="px-12 py-8 mx-auto max-w-4xl"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_team_projects, {
          mode: "listing",
          projects: $props.projects
        }, {
          emptyText: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div class="text-center py-12"${_scopeId2}><svg xmlns="http://www.w3.org/2000/svg" class="mx-auto h-24 w-24 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"${_scopeId2}><path stroke-linecap="round" stroke-linejoin="round" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"${_scopeId2}></path></svg><h3 class="mt-2 text-sm font-medium text-gray-900"${_scopeId2}> No Projects Shared. </h3><p class="mt-1 text-sm text-gray-500"${_scopeId2}> When projects are shared you will receive an email with the invitation. Once accepted the project will be added to your account. Team projects are automatically added to the members. </p></div>`);
            } else {
              return [
                createVNode("div", { class: "text-center py-12" }, [
                  (openBlock(), createBlock("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    class: "mx-auto h-24 w-24 text-gray-400",
                    fill: "none",
                    viewBox: "0 0 24 24",
                    stroke: "currentColor",
                    "stroke-width": "2"
                  }, [
                    createVNode("path", {
                      "stroke-linecap": "round",
                      "stroke-linejoin": "round",
                      d: "M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"
                    })
                  ])),
                  createVNode("h3", { class: "mt-2 text-sm font-medium text-gray-900" }, " No Projects Shared. "),
                  createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " When projects are shared you will receive an email with the invitation. Once accepted the project will be added to your account. Team projects are automatically added to the members. ")
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        if ($props.studies.length > 0) {
          _push2(`<div class="px-12 border-t py-8 mx-auto max-w-4xl"${_scopeId}><div${_scopeId}><h2 class="text-lg"${_scopeId}>Studies</h2></div><div class="flex items-baseline justify-between"${_scopeId}><div class="py-8 mx-auto max-w-4xl"${_scopeId}><div class="mx-auto max-w-md grid gap-8 sm:max-w-lg lg:grid-cols-3 lg:max-w-7xl"${_scopeId}><!--[-->`);
          ssrRenderList($props.studies, (study) => {
            _push2(`<div${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Link, {
              href: _ctx.route("dashboard.studies", [study.id])
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_study_card, { study }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_component_study_card, { study }, null, 8, ["study"])
                  ];
                }
              }),
              _: 2
            }, _parent2, _scopeId));
            _push2(`</div>`);
          });
          _push2(`<!--]--></div></div></div></div>`);
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          createVNode("div", { class: "px-12 py-8 mx-auto max-w-4xl" }, [
            createVNode(_component_team_projects, {
              mode: "listing",
              projects: $props.projects
            }, {
              emptyText: withCtx(() => [
                createVNode("div", { class: "text-center py-12" }, [
                  (openBlock(), createBlock("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    class: "mx-auto h-24 w-24 text-gray-400",
                    fill: "none",
                    viewBox: "0 0 24 24",
                    stroke: "currentColor",
                    "stroke-width": "2"
                  }, [
                    createVNode("path", {
                      "stroke-linecap": "round",
                      "stroke-linejoin": "round",
                      d: "M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"
                    })
                  ])),
                  createVNode("h3", { class: "mt-2 text-sm font-medium text-gray-900" }, " No Projects Shared. "),
                  createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " When projects are shared you will receive an email with the invitation. Once accepted the project will be added to your account. Team projects are automatically added to the members. ")
                ])
              ]),
              _: 1
            }, 8, ["projects"])
          ]),
          $props.studies.length > 0 ? (openBlock(), createBlock("div", {
            key: 0,
            class: "px-12 border-t py-8 mx-auto max-w-4xl"
          }, [
            createVNode("div", null, [
              createVNode("h2", { class: "text-lg" }, "Studies")
            ]),
            createVNode("div", { class: "flex items-baseline justify-between" }, [
              createVNode("div", { class: "py-8 mx-auto max-w-4xl" }, [
                createVNode("div", { class: "mx-auto max-w-md grid gap-8 sm:max-w-lg lg:grid-cols-3 lg:max-w-7xl" }, [
                  (openBlock(true), createBlock(Fragment, null, renderList($props.studies, (study) => {
                    return openBlock(), createBlock("div", {
                      key: study.uuid
                    }, [
                      createVNode(_component_Link, {
                        href: _ctx.route("dashboard.studies", [study.id])
                      }, {
                        default: withCtx(() => [
                          createVNode(_component_study_card, { study }, null, 8, ["study"])
                        ]),
                        _: 2
                      }, 1032, ["href"])
                    ]);
                  }), 128))
                ])
              ])
            ])
          ])) : createCommentVNode("", true)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$t = _sfc_main$t.setup;
_sfc_main$t.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/SharedWithMe.vue");
  return _sfc_setup$t ? _sfc_setup$t(props, ctx) : void 0;
};
const SharedWithMe = /* @__PURE__ */ _export_sfc(_sfc_main$t, [["ssrRender", _sfc_ssrRender$s]]);
const __vite_glob_0_56 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: SharedWithMe
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$s = {
  components: {
    AppLayout,
    TeamProjects,
    StudyCard,
    Link
  },
  props: ["user", "team", "projects", "studies"]
};
function _sfc_ssrRender$r(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_team_projects = resolveComponent("team-projects");
  const _component_Link = resolveComponent("Link");
  const _component_study_card = resolveComponent("study-card");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({ title: "Dashboard" }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white border-b"${_scopeId}><div class="px-12"${_scopeId}><div class="flex flex-nowrap justify-between py-6"${_scopeId}><div${_scopeId}><div class="flex flex-nowrap justify-between"${_scopeId}><div class="lg:flex lg:items-center lg:justify-between"${_scopeId}><div class="flex-1 min-w-0"${_scopeId}><nav class="flex" aria-label="Breadcrumb"${_scopeId}><ol role="list" class="flex items-center space-x-4"${_scopeId}><li${_scopeId}><div class="flex"${_scopeId}><a class="text-sm font-medium text-gray-500 hover:text-gray-700"${_scopeId}>Dashboard</a></div></li><li${_scopeId}><div class="flex items-center"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="flex-shrink-0 h-5 w-5 text-gray-400"${_scopeId}><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"${_scopeId}></path></svg><a class="ml-4 text-sm font-medium text-gray-500 hover:text-gray-700"${_scopeId}>Starred</a></div></li></ol></nav><h2 class="mt-2 text-2xl font-bold break-words leading-7 text-gray-900 sm:text-3xl"${_scopeId}> Starred </h2></div></div></div></div></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white border-b" }, [
            createVNode("div", { class: "px-12" }, [
              createVNode("div", { class: "flex flex-nowrap justify-between py-6" }, [
                createVNode("div", null, [
                  createVNode("div", { class: "flex flex-nowrap justify-between" }, [
                    createVNode("div", { class: "lg:flex lg:items-center lg:justify-between" }, [
                      createVNode("div", { class: "flex-1 min-w-0" }, [
                        createVNode("nav", {
                          class: "flex",
                          "aria-label": "Breadcrumb"
                        }, [
                          createVNode("ol", {
                            role: "list",
                            class: "flex items-center space-x-4"
                          }, [
                            createVNode("li", null, [
                              createVNode("div", { class: "flex" }, [
                                createVNode("a", { class: "text-sm font-medium text-gray-500 hover:text-gray-700" }, "Dashboard")
                              ])
                            ]),
                            createVNode("li", null, [
                              createVNode("div", { class: "flex items-center" }, [
                                (openBlock(), createBlock("svg", {
                                  xmlns: "http://www.w3.org/2000/svg",
                                  viewBox: "0 0 20 20",
                                  fill: "currentColor",
                                  "aria-hidden": "true",
                                  class: "flex-shrink-0 h-5 w-5 text-gray-400"
                                }, [
                                  createVNode("path", {
                                    "fill-rule": "evenodd",
                                    d: "M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z",
                                    "clip-rule": "evenodd"
                                  })
                                ])),
                                createVNode("a", { class: "ml-4 text-sm font-medium text-gray-500 hover:text-gray-700" }, "Starred")
                              ])
                            ])
                          ])
                        ]),
                        createVNode("h2", { class: "mt-2 text-2xl font-bold break-words leading-7 text-gray-900 sm:text-3xl" }, " Starred ")
                      ])
                    ])
                  ])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="px-12 py-8 mx-auto max-w-4xl"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_team_projects, {
          mode: "listing",
          projects: $props.projects
        }, {
          emptyText: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div class="text-center py-12"${_scopeId2}><svg xmlns="http://www.w3.org/2000/svg" class="mx-auto h-24 w-24 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"${_scopeId2}><path stroke-linecap="round" stroke-linejoin="round" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"${_scopeId2}></path></svg><h3 class="mt-2 text-sm font-medium text-gray-900"${_scopeId2}> No Starred Projects. </h3><p class="mt-1 text-sm text-gray-500"${_scopeId2}> Add stars to projects or datasets to find it easily later. </p></div>`);
            } else {
              return [
                createVNode("div", { class: "text-center py-12" }, [
                  (openBlock(), createBlock("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    class: "mx-auto h-24 w-24 text-gray-400",
                    fill: "none",
                    viewBox: "0 0 24 24",
                    stroke: "currentColor",
                    "stroke-width": "2"
                  }, [
                    createVNode("path", {
                      "stroke-linecap": "round",
                      "stroke-linejoin": "round",
                      d: "M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"
                    })
                  ])),
                  createVNode("h3", { class: "mt-2 text-sm font-medium text-gray-900" }, " No Starred Projects. "),
                  createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " Add stars to projects or datasets to find it easily later. ")
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        if ($props.studies.length > 0) {
          _push2(`<div class="px-12 border-t py-8 mx-auto max-w-4xl"${_scopeId}><div${_scopeId}><h2 class="text-lg"${_scopeId}>Studies</h2></div><div class="flex items-baseline justify-between"${_scopeId}><div class="py-8 mx-auto max-w-4xl"${_scopeId}><div class="mx-auto max-w-md grid gap-8 sm:max-w-lg lg:grid-cols-3 lg:max-w-7xl"${_scopeId}><!--[-->`);
          ssrRenderList($props.studies, (study) => {
            _push2(`<div${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Link, {
              href: _ctx.route("dashboard.studies", [study.id])
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(ssrRenderComponent(_component_study_card, { study }, null, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode(_component_study_card, { study }, null, 8, ["study"])
                  ];
                }
              }),
              _: 2
            }, _parent2, _scopeId));
            _push2(`</div>`);
          });
          _push2(`<!--]--></div></div></div></div>`);
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          createVNode("div", { class: "px-12 py-8 mx-auto max-w-4xl" }, [
            createVNode(_component_team_projects, {
              mode: "listing",
              projects: $props.projects
            }, {
              emptyText: withCtx(() => [
                createVNode("div", { class: "text-center py-12" }, [
                  (openBlock(), createBlock("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    class: "mx-auto h-24 w-24 text-gray-400",
                    fill: "none",
                    viewBox: "0 0 24 24",
                    stroke: "currentColor",
                    "stroke-width": "2"
                  }, [
                    createVNode("path", {
                      "stroke-linecap": "round",
                      "stroke-linejoin": "round",
                      d: "M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"
                    })
                  ])),
                  createVNode("h3", { class: "mt-2 text-sm font-medium text-gray-900" }, " No Starred Projects. "),
                  createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " Add stars to projects or datasets to find it easily later. ")
                ])
              ]),
              _: 1
            }, 8, ["projects"])
          ]),
          $props.studies.length > 0 ? (openBlock(), createBlock("div", {
            key: 0,
            class: "px-12 border-t py-8 mx-auto max-w-4xl"
          }, [
            createVNode("div", null, [
              createVNode("h2", { class: "text-lg" }, "Studies")
            ]),
            createVNode("div", { class: "flex items-baseline justify-between" }, [
              createVNode("div", { class: "py-8 mx-auto max-w-4xl" }, [
                createVNode("div", { class: "mx-auto max-w-md grid gap-8 sm:max-w-lg lg:grid-cols-3 lg:max-w-7xl" }, [
                  (openBlock(true), createBlock(Fragment, null, renderList($props.studies, (study) => {
                    return openBlock(), createBlock("div", {
                      key: study.uuid
                    }, [
                      createVNode(_component_Link, {
                        href: _ctx.route("dashboard.studies", [study.id])
                      }, {
                        default: withCtx(() => [
                          createVNode(_component_study_card, { study }, null, 8, ["study"])
                        ]),
                        _: 2
                      }, 1032, ["href"])
                    ]);
                  }), 128))
                ])
              ])
            ])
          ])) : createCommentVNode("", true)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$s = _sfc_main$s.setup;
_sfc_main$s.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Starred.vue");
  return _sfc_setup$s ? _sfc_setup$s(props, ctx) : void 0;
};
const Starred = /* @__PURE__ */ _export_sfc(_sfc_main$s, [["ssrRender", _sfc_ssrRender$r]]);
const __vite_glob_0_57 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Starred
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$r = {
  components: {
    Dialog,
    DialogOverlay,
    TransitionChild,
    TransitionRoot,
    HeartIcon,
    PencilIcon,
    PlusSmallIcon,
    XMarkIcon
  },
  props: ["study"],
  data() {
    return {
      open: false,
      audit: []
    };
  },
  updated() {
    this.fetchActivity(this.study);
  },
  methods: {
    toggleDetails() {
      this.open = !this.open;
    },
    fetchActivity(entity) {
      axios.get(route("dashboard.study.activity", entity.id)).then((res) => {
        this.audit = res.data.audit;
      });
    }
  }
};
function _sfc_ssrRender$q(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_TransitionRoot = resolveComponent("TransitionRoot");
  const _component_Dialog = resolveComponent("Dialog");
  const _component_TransitionChild = resolveComponent("TransitionChild");
  const _component_DialogOverlay = resolveComponent("DialogOverlay");
  const _component_XMarkIcon = resolveComponent("XMarkIcon");
  _push(ssrRenderComponent(_component_TransitionRoot, mergeProps({
    as: "template",
    show: $data.open
  }, _attrs), {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_Dialog, {
          as: "div",
          class: "fixed inset-0 overflow-hidden z-50",
          onClose: ($event) => $data.open = false
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div class="absolute inset-0 overflow-hidden"${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_TransitionChild, {
                as: "template",
                enter: "ease-in-out duration-500",
                "enter-from": "opacity-0",
                "enter-to": "opacity-100",
                leave: "ease-in-out duration-500",
                "leave-from": "opacity-100",
                "leave-to": "opacity-0"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(ssrRenderComponent(_component_DialogOverlay, { class: "absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity" }, null, _parent4, _scopeId3));
                  } else {
                    return [
                      createVNode(_component_DialogOverlay, { class: "absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity" })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`<div class="fixed inset-y-0 right-0 pl-10 max-w-full flex"${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_TransitionChild, {
                as: "template",
                enter: "transform transition ease-in-out duration-500 sm:duration-700",
                "enter-from": "translate-x-full",
                "enter-to": "translate-x-0",
                leave: "transform transition ease-in-out duration-500 sm:duration-700",
                "leave-from": "translate-x-0",
                "leave-to": "translate-x-full"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<div class="relative w-96"${_scopeId3}>`);
                    _push4(ssrRenderComponent(_component_TransitionChild, {
                      as: "template",
                      enter: "ease-in-out duration-500",
                      "enter-from": "opacity-0",
                      "enter-to": "opacity-100",
                      leave: "ease-in-out duration-500",
                      "leave-from": "opacity-100",
                      "leave-to": "opacity-0"
                    }, {
                      default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`<div class="absolute top-0 left-0 -ml-8 pt-4 pr-2 flex sm:-ml-10 sm:pr-4"${_scopeId4}><button type="button" class="rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white"${_scopeId4}><span class="sr-only"${_scopeId4}>Close panel</span>`);
                          _push5(ssrRenderComponent(_component_XMarkIcon, {
                            class: "h-6 w-6",
                            "aria-hidden": "true"
                          }, null, _parent5, _scopeId4));
                          _push5(`</button></div>`);
                        } else {
                          return [
                            createVNode("div", { class: "absolute top-0 left-0 -ml-8 pt-4 pr-2 flex sm:-ml-10 sm:pr-4" }, [
                              createVNode("button", {
                                type: "button",
                                class: "rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white",
                                onClick: ($event) => $data.open = false
                              }, [
                                createVNode("span", { class: "sr-only" }, "Close panel"),
                                createVNode(_component_XMarkIcon, {
                                  class: "h-6 w-6",
                                  "aria-hidden": "true"
                                })
                              ], 8, ["onClick"])
                            ])
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(`<div class="h-full bg-white p-8 overflow-y-auto"${_scopeId3}><div class="pb-16 space-y-6"${_scopeId3}><div${_scopeId3}><div class="mt-0 flex items-start justify-between"${_scopeId3}><div${_scopeId3}><div class="mt-0 flex items-start justify-between"${_scopeId3}><div class="grid grid-cols-1 pt-1 text-left pt-0"${_scopeId3}><div class="text-xs italic text-gray-600 pr-5"${_scopeId3}><span class="text-gray-400"${_scopeId3}>Last updated on</span> ${ssrInterpolate(_ctx.formatDateTime(
                      $props.study.updated_at
                    ))}</div><div class="text-xs italic mt-1 text-gray-600 pr-5"${_scopeId3}><span class="text-gray-400"${_scopeId3}>Created on</span> ${ssrInterpolate(_ctx.formatDateTime(
                      $props.study.created_at
                    ))}</div></div></div></div></div></div><div${_scopeId3}><div${_scopeId3}><h2 id="timeline-title" class="text-lg font-medium text-gray-900"${_scopeId3}> Activity </h2><div class="mt-6 flow-root"${_scopeId3}><ul role="list" class="-mb-8"${_scopeId3}><!--[-->`);
                    ssrRenderList($data.audit, (log) => {
                      _push4(`<li${_scopeId3}><div class="relative pb-8"${_scopeId3}><span class="absolute top-4 left-4 -ml-px h-full w-0.5 bg-gray-200" aria-hidden="true"${_scopeId3}></span><div class="relative flex space-x-3"${_scopeId3}><div${_scopeId3}><img${ssrRenderAttr(
                        "src",
                        log.user.profile_photo_url
                      )}${ssrRenderAttr(
                        "alt",
                        log.user.first_name + " " + log.user.last_name
                      )} class="h-8 w-8 rounded-full bg-gray-400 flex items-center justify-center ring-8 ring-white object-cover"${_scopeId3}></div><div class="min-w-0 flex-1 pt-1.5 flex justify-between space-x-4"${_scopeId3}><div${_scopeId3}><a class="font-medium text-gray-900"${_scopeId3}>${ssrInterpolate(log.user.first_name)} ${ssrInterpolate(log.user.last_name)}</a><p class="text-sm text-gray-500"${_scopeId3}>${ssrInterpolate(log.event)}  <a class="font-medium text-gray-900"${_scopeId3}>`);
                      if (log.event == "created" || log.event == "deleted") {
                        _push4(`<span${_scopeId3}>${ssrInterpolate(log.auditable_type.replace(
                          "App\\Models\\",
                          ""
                        ))}</span>`);
                      } else {
                        _push4(`<!---->`);
                      }
                      if (log.event == "updated") {
                        _push4(`<span${_scopeId3}><!--[-->`);
                        ssrRenderList(Object.keys(
                          log.new_values
                        ), (property, $index) => {
                          _push4(`<span${_scopeId3}>`);
                          if ($index > 0) {
                            _push4(`<span${_scopeId3}>,</span>`);
                          } else {
                            _push4(`<!---->`);
                          }
                          _push4(` ${ssrInterpolate(property)}</span>`);
                        });
                        _push4(`<!--]--></span>`);
                      } else {
                        _push4(`<!---->`);
                      }
                      _push4(`</a></p><small${_scopeId3}><time${_scopeId3}>${ssrInterpolate(_ctx.formatDateTime(
                        log.created_at
                      ))}</time></small></div></div></div></div></li>`);
                    });
                    _push4(`<!--]--></ul></div></div></div></div>`);
                    if ($data.audit.length) {
                      _push4(`<small class="text-gray-500"${_scopeId3}><i${_scopeId3}>No logs before <br${_scopeId3}>${ssrInterpolate(_ctx.formatDateTime(
                        $data.audit[$data.audit.length - 1]["created_at"]
                      ))}</i></small>`);
                    } else {
                      _push4(`<!---->`);
                    }
                    _push4(`</div></div>`);
                  } else {
                    return [
                      createVNode("div", { class: "relative w-96" }, [
                        createVNode(_component_TransitionChild, {
                          as: "template",
                          enter: "ease-in-out duration-500",
                          "enter-from": "opacity-0",
                          "enter-to": "opacity-100",
                          leave: "ease-in-out duration-500",
                          "leave-from": "opacity-100",
                          "leave-to": "opacity-0"
                        }, {
                          default: withCtx(() => [
                            createVNode("div", { class: "absolute top-0 left-0 -ml-8 pt-4 pr-2 flex sm:-ml-10 sm:pr-4" }, [
                              createVNode("button", {
                                type: "button",
                                class: "rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white",
                                onClick: ($event) => $data.open = false
                              }, [
                                createVNode("span", { class: "sr-only" }, "Close panel"),
                                createVNode(_component_XMarkIcon, {
                                  class: "h-6 w-6",
                                  "aria-hidden": "true"
                                })
                              ], 8, ["onClick"])
                            ])
                          ]),
                          _: 1
                        }),
                        createVNode("div", { class: "h-full bg-white p-8 overflow-y-auto" }, [
                          createVNode("div", { class: "pb-16 space-y-6" }, [
                            createVNode("div", null, [
                              createVNode("div", { class: "mt-0 flex items-start justify-between" }, [
                                createVNode("div", null, [
                                  createVNode("div", { class: "mt-0 flex items-start justify-between" }, [
                                    createVNode("div", { class: "grid grid-cols-1 pt-1 text-left pt-0" }, [
                                      createVNode("div", { class: "text-xs italic text-gray-600 pr-5" }, [
                                        createVNode("span", { class: "text-gray-400" }, "Last updated on"),
                                        createTextVNode(" " + toDisplayString(_ctx.formatDateTime(
                                          $props.study.updated_at
                                        )), 1)
                                      ]),
                                      createVNode("div", { class: "text-xs italic mt-1 text-gray-600 pr-5" }, [
                                        createVNode("span", { class: "text-gray-400" }, "Created on"),
                                        createTextVNode(" " + toDisplayString(_ctx.formatDateTime(
                                          $props.study.created_at
                                        )), 1)
                                      ])
                                    ])
                                  ])
                                ])
                              ])
                            ]),
                            createVNode("div", null, [
                              createVNode("div", null, [
                                createVNode("h2", {
                                  id: "timeline-title",
                                  class: "text-lg font-medium text-gray-900"
                                }, " Activity "),
                                createVNode("div", { class: "mt-6 flow-root" }, [
                                  createVNode("ul", {
                                    role: "list",
                                    class: "-mb-8"
                                  }, [
                                    (openBlock(true), createBlock(Fragment, null, renderList($data.audit, (log) => {
                                      return openBlock(), createBlock("li", {
                                        key: log.auditable_id
                                      }, [
                                        createVNode("div", { class: "relative pb-8" }, [
                                          createVNode("span", {
                                            class: "absolute top-4 left-4 -ml-px h-full w-0.5 bg-gray-200",
                                            "aria-hidden": "true"
                                          }),
                                          createVNode("div", { class: "relative flex space-x-3" }, [
                                            createVNode("div", null, [
                                              createVNode("img", {
                                                src: log.user.profile_photo_url,
                                                alt: log.user.first_name + " " + log.user.last_name,
                                                class: "h-8 w-8 rounded-full bg-gray-400 flex items-center justify-center ring-8 ring-white object-cover"
                                              }, null, 8, ["src", "alt"])
                                            ]),
                                            createVNode("div", { class: "min-w-0 flex-1 pt-1.5 flex justify-between space-x-4" }, [
                                              createVNode("div", null, [
                                                createVNode("a", { class: "font-medium text-gray-900" }, toDisplayString(log.user.first_name) + " " + toDisplayString(log.user.last_name), 1),
                                                createVNode("p", { class: "text-sm text-gray-500" }, [
                                                  createTextVNode(toDisplayString(log.event) + "  ", 1),
                                                  createVNode("a", { class: "font-medium text-gray-900" }, [
                                                    log.event == "created" || log.event == "deleted" ? (openBlock(), createBlock("span", { key: 0 }, toDisplayString(log.auditable_type.replace(
                                                      "App\\Models\\",
                                                      ""
                                                    )), 1)) : createCommentVNode("", true),
                                                    log.event == "updated" ? (openBlock(), createBlock("span", { key: 1 }, [
                                                      (openBlock(true), createBlock(Fragment, null, renderList(Object.keys(
                                                        log.new_values
                                                      ), (property, $index) => {
                                                        return openBlock(), createBlock("span", {
                                                          key: property
                                                        }, [
                                                          $index > 0 ? (openBlock(), createBlock("span", { key: 0 }, ",")) : createCommentVNode("", true),
                                                          createTextVNode(" " + toDisplayString(property), 1)
                                                        ]);
                                                      }), 128))
                                                    ])) : createCommentVNode("", true)
                                                  ])
                                                ]),
                                                createVNode("small", null, [
                                                  createVNode("time", null, toDisplayString(_ctx.formatDateTime(
                                                    log.created_at
                                                  )), 1)
                                                ])
                                              ])
                                            ])
                                          ])
                                        ])
                                      ]);
                                    }), 128))
                                  ])
                                ])
                              ])
                            ])
                          ]),
                          $data.audit.length ? (openBlock(), createBlock("small", {
                            key: 0,
                            class: "text-gray-500"
                          }, [
                            createVNode("i", null, [
                              createTextVNode("No logs before "),
                              createVNode("br"),
                              createTextVNode(toDisplayString(_ctx.formatDateTime(
                                $data.audit[$data.audit.length - 1]["created_at"]
                              )), 1)
                            ])
                          ])) : createCommentVNode("", true)
                        ])
                      ])
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</div></div>`);
            } else {
              return [
                createVNode("div", { class: "absolute inset-0 overflow-hidden" }, [
                  createVNode(_component_TransitionChild, {
                    as: "template",
                    enter: "ease-in-out duration-500",
                    "enter-from": "opacity-0",
                    "enter-to": "opacity-100",
                    leave: "ease-in-out duration-500",
                    "leave-from": "opacity-100",
                    "leave-to": "opacity-0"
                  }, {
                    default: withCtx(() => [
                      createVNode(_component_DialogOverlay, { class: "absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity" })
                    ]),
                    _: 1
                  }),
                  createVNode("div", { class: "fixed inset-y-0 right-0 pl-10 max-w-full flex" }, [
                    createVNode(_component_TransitionChild, {
                      as: "template",
                      enter: "transform transition ease-in-out duration-500 sm:duration-700",
                      "enter-from": "translate-x-full",
                      "enter-to": "translate-x-0",
                      leave: "transform transition ease-in-out duration-500 sm:duration-700",
                      "leave-from": "translate-x-0",
                      "leave-to": "translate-x-full"
                    }, {
                      default: withCtx(() => [
                        createVNode("div", { class: "relative w-96" }, [
                          createVNode(_component_TransitionChild, {
                            as: "template",
                            enter: "ease-in-out duration-500",
                            "enter-from": "opacity-0",
                            "enter-to": "opacity-100",
                            leave: "ease-in-out duration-500",
                            "leave-from": "opacity-100",
                            "leave-to": "opacity-0"
                          }, {
                            default: withCtx(() => [
                              createVNode("div", { class: "absolute top-0 left-0 -ml-8 pt-4 pr-2 flex sm:-ml-10 sm:pr-4" }, [
                                createVNode("button", {
                                  type: "button",
                                  class: "rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white",
                                  onClick: ($event) => $data.open = false
                                }, [
                                  createVNode("span", { class: "sr-only" }, "Close panel"),
                                  createVNode(_component_XMarkIcon, {
                                    class: "h-6 w-6",
                                    "aria-hidden": "true"
                                  })
                                ], 8, ["onClick"])
                              ])
                            ]),
                            _: 1
                          }),
                          createVNode("div", { class: "h-full bg-white p-8 overflow-y-auto" }, [
                            createVNode("div", { class: "pb-16 space-y-6" }, [
                              createVNode("div", null, [
                                createVNode("div", { class: "mt-0 flex items-start justify-between" }, [
                                  createVNode("div", null, [
                                    createVNode("div", { class: "mt-0 flex items-start justify-between" }, [
                                      createVNode("div", { class: "grid grid-cols-1 pt-1 text-left pt-0" }, [
                                        createVNode("div", { class: "text-xs italic text-gray-600 pr-5" }, [
                                          createVNode("span", { class: "text-gray-400" }, "Last updated on"),
                                          createTextVNode(" " + toDisplayString(_ctx.formatDateTime(
                                            $props.study.updated_at
                                          )), 1)
                                        ]),
                                        createVNode("div", { class: "text-xs italic mt-1 text-gray-600 pr-5" }, [
                                          createVNode("span", { class: "text-gray-400" }, "Created on"),
                                          createTextVNode(" " + toDisplayString(_ctx.formatDateTime(
                                            $props.study.created_at
                                          )), 1)
                                        ])
                                      ])
                                    ])
                                  ])
                                ])
                              ]),
                              createVNode("div", null, [
                                createVNode("div", null, [
                                  createVNode("h2", {
                                    id: "timeline-title",
                                    class: "text-lg font-medium text-gray-900"
                                  }, " Activity "),
                                  createVNode("div", { class: "mt-6 flow-root" }, [
                                    createVNode("ul", {
                                      role: "list",
                                      class: "-mb-8"
                                    }, [
                                      (openBlock(true), createBlock(Fragment, null, renderList($data.audit, (log) => {
                                        return openBlock(), createBlock("li", {
                                          key: log.auditable_id
                                        }, [
                                          createVNode("div", { class: "relative pb-8" }, [
                                            createVNode("span", {
                                              class: "absolute top-4 left-4 -ml-px h-full w-0.5 bg-gray-200",
                                              "aria-hidden": "true"
                                            }),
                                            createVNode("div", { class: "relative flex space-x-3" }, [
                                              createVNode("div", null, [
                                                createVNode("img", {
                                                  src: log.user.profile_photo_url,
                                                  alt: log.user.first_name + " " + log.user.last_name,
                                                  class: "h-8 w-8 rounded-full bg-gray-400 flex items-center justify-center ring-8 ring-white object-cover"
                                                }, null, 8, ["src", "alt"])
                                              ]),
                                              createVNode("div", { class: "min-w-0 flex-1 pt-1.5 flex justify-between space-x-4" }, [
                                                createVNode("div", null, [
                                                  createVNode("a", { class: "font-medium text-gray-900" }, toDisplayString(log.user.first_name) + " " + toDisplayString(log.user.last_name), 1),
                                                  createVNode("p", { class: "text-sm text-gray-500" }, [
                                                    createTextVNode(toDisplayString(log.event) + "  ", 1),
                                                    createVNode("a", { class: "font-medium text-gray-900" }, [
                                                      log.event == "created" || log.event == "deleted" ? (openBlock(), createBlock("span", { key: 0 }, toDisplayString(log.auditable_type.replace(
                                                        "App\\Models\\",
                                                        ""
                                                      )), 1)) : createCommentVNode("", true),
                                                      log.event == "updated" ? (openBlock(), createBlock("span", { key: 1 }, [
                                                        (openBlock(true), createBlock(Fragment, null, renderList(Object.keys(
                                                          log.new_values
                                                        ), (property, $index) => {
                                                          return openBlock(), createBlock("span", {
                                                            key: property
                                                          }, [
                                                            $index > 0 ? (openBlock(), createBlock("span", { key: 0 }, ",")) : createCommentVNode("", true),
                                                            createTextVNode(" " + toDisplayString(property), 1)
                                                          ]);
                                                        }), 128))
                                                      ])) : createCommentVNode("", true)
                                                    ])
                                                  ]),
                                                  createVNode("small", null, [
                                                    createVNode("time", null, toDisplayString(_ctx.formatDateTime(
                                                      log.created_at
                                                    )), 1)
                                                  ])
                                                ])
                                              ])
                                            ])
                                          ])
                                        ]);
                                      }), 128))
                                    ])
                                  ])
                                ])
                              ])
                            ]),
                            $data.audit.length ? (openBlock(), createBlock("small", {
                              key: 0,
                              class: "text-gray-500"
                            }, [
                              createVNode("i", null, [
                                createTextVNode("No logs before "),
                                createVNode("br"),
                                createTextVNode(toDisplayString(_ctx.formatDateTime(
                                  $data.audit[$data.audit.length - 1]["created_at"]
                                )), 1)
                              ])
                            ])) : createCommentVNode("", true)
                          ])
                        ])
                      ]),
                      _: 1
                    })
                  ])
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_Dialog, {
            as: "div",
            class: "fixed inset-0 overflow-hidden z-50",
            onClose: ($event) => $data.open = false
          }, {
            default: withCtx(() => [
              createVNode("div", { class: "absolute inset-0 overflow-hidden" }, [
                createVNode(_component_TransitionChild, {
                  as: "template",
                  enter: "ease-in-out duration-500",
                  "enter-from": "opacity-0",
                  "enter-to": "opacity-100",
                  leave: "ease-in-out duration-500",
                  "leave-from": "opacity-100",
                  "leave-to": "opacity-0"
                }, {
                  default: withCtx(() => [
                    createVNode(_component_DialogOverlay, { class: "absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity" })
                  ]),
                  _: 1
                }),
                createVNode("div", { class: "fixed inset-y-0 right-0 pl-10 max-w-full flex" }, [
                  createVNode(_component_TransitionChild, {
                    as: "template",
                    enter: "transform transition ease-in-out duration-500 sm:duration-700",
                    "enter-from": "translate-x-full",
                    "enter-to": "translate-x-0",
                    leave: "transform transition ease-in-out duration-500 sm:duration-700",
                    "leave-from": "translate-x-0",
                    "leave-to": "translate-x-full"
                  }, {
                    default: withCtx(() => [
                      createVNode("div", { class: "relative w-96" }, [
                        createVNode(_component_TransitionChild, {
                          as: "template",
                          enter: "ease-in-out duration-500",
                          "enter-from": "opacity-0",
                          "enter-to": "opacity-100",
                          leave: "ease-in-out duration-500",
                          "leave-from": "opacity-100",
                          "leave-to": "opacity-0"
                        }, {
                          default: withCtx(() => [
                            createVNode("div", { class: "absolute top-0 left-0 -ml-8 pt-4 pr-2 flex sm:-ml-10 sm:pr-4" }, [
                              createVNode("button", {
                                type: "button",
                                class: "rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white",
                                onClick: ($event) => $data.open = false
                              }, [
                                createVNode("span", { class: "sr-only" }, "Close panel"),
                                createVNode(_component_XMarkIcon, {
                                  class: "h-6 w-6",
                                  "aria-hidden": "true"
                                })
                              ], 8, ["onClick"])
                            ])
                          ]),
                          _: 1
                        }),
                        createVNode("div", { class: "h-full bg-white p-8 overflow-y-auto" }, [
                          createVNode("div", { class: "pb-16 space-y-6" }, [
                            createVNode("div", null, [
                              createVNode("div", { class: "mt-0 flex items-start justify-between" }, [
                                createVNode("div", null, [
                                  createVNode("div", { class: "mt-0 flex items-start justify-between" }, [
                                    createVNode("div", { class: "grid grid-cols-1 pt-1 text-left pt-0" }, [
                                      createVNode("div", { class: "text-xs italic text-gray-600 pr-5" }, [
                                        createVNode("span", { class: "text-gray-400" }, "Last updated on"),
                                        createTextVNode(" " + toDisplayString(_ctx.formatDateTime(
                                          $props.study.updated_at
                                        )), 1)
                                      ]),
                                      createVNode("div", { class: "text-xs italic mt-1 text-gray-600 pr-5" }, [
                                        createVNode("span", { class: "text-gray-400" }, "Created on"),
                                        createTextVNode(" " + toDisplayString(_ctx.formatDateTime(
                                          $props.study.created_at
                                        )), 1)
                                      ])
                                    ])
                                  ])
                                ])
                              ])
                            ]),
                            createVNode("div", null, [
                              createVNode("div", null, [
                                createVNode("h2", {
                                  id: "timeline-title",
                                  class: "text-lg font-medium text-gray-900"
                                }, " Activity "),
                                createVNode("div", { class: "mt-6 flow-root" }, [
                                  createVNode("ul", {
                                    role: "list",
                                    class: "-mb-8"
                                  }, [
                                    (openBlock(true), createBlock(Fragment, null, renderList($data.audit, (log) => {
                                      return openBlock(), createBlock("li", {
                                        key: log.auditable_id
                                      }, [
                                        createVNode("div", { class: "relative pb-8" }, [
                                          createVNode("span", {
                                            class: "absolute top-4 left-4 -ml-px h-full w-0.5 bg-gray-200",
                                            "aria-hidden": "true"
                                          }),
                                          createVNode("div", { class: "relative flex space-x-3" }, [
                                            createVNode("div", null, [
                                              createVNode("img", {
                                                src: log.user.profile_photo_url,
                                                alt: log.user.first_name + " " + log.user.last_name,
                                                class: "h-8 w-8 rounded-full bg-gray-400 flex items-center justify-center ring-8 ring-white object-cover"
                                              }, null, 8, ["src", "alt"])
                                            ]),
                                            createVNode("div", { class: "min-w-0 flex-1 pt-1.5 flex justify-between space-x-4" }, [
                                              createVNode("div", null, [
                                                createVNode("a", { class: "font-medium text-gray-900" }, toDisplayString(log.user.first_name) + " " + toDisplayString(log.user.last_name), 1),
                                                createVNode("p", { class: "text-sm text-gray-500" }, [
                                                  createTextVNode(toDisplayString(log.event) + "  ", 1),
                                                  createVNode("a", { class: "font-medium text-gray-900" }, [
                                                    log.event == "created" || log.event == "deleted" ? (openBlock(), createBlock("span", { key: 0 }, toDisplayString(log.auditable_type.replace(
                                                      "App\\Models\\",
                                                      ""
                                                    )), 1)) : createCommentVNode("", true),
                                                    log.event == "updated" ? (openBlock(), createBlock("span", { key: 1 }, [
                                                      (openBlock(true), createBlock(Fragment, null, renderList(Object.keys(
                                                        log.new_values
                                                      ), (property, $index) => {
                                                        return openBlock(), createBlock("span", {
                                                          key: property
                                                        }, [
                                                          $index > 0 ? (openBlock(), createBlock("span", { key: 0 }, ",")) : createCommentVNode("", true),
                                                          createTextVNode(" " + toDisplayString(property), 1)
                                                        ]);
                                                      }), 128))
                                                    ])) : createCommentVNode("", true)
                                                  ])
                                                ]),
                                                createVNode("small", null, [
                                                  createVNode("time", null, toDisplayString(_ctx.formatDateTime(
                                                    log.created_at
                                                  )), 1)
                                                ])
                                              ])
                                            ])
                                          ])
                                        ])
                                      ]);
                                    }), 128))
                                  ])
                                ])
                              ])
                            ])
                          ]),
                          $data.audit.length ? (openBlock(), createBlock("small", {
                            key: 0,
                            class: "text-gray-500"
                          }, [
                            createVNode("i", null, [
                              createTextVNode("No logs before "),
                              createVNode("br"),
                              createTextVNode(toDisplayString(_ctx.formatDateTime(
                                $data.audit[$data.audit.length - 1]["created_at"]
                              )), 1)
                            ])
                          ])) : createCommentVNode("", true)
                        ])
                      ])
                    ]),
                    _: 1
                  })
                ])
              ])
            ]),
            _: 1
          }, 8, ["onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$r = _sfc_main$r.setup;
_sfc_main$r.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Study/Partials/Activity.vue");
  return _sfc_setup$r ? _sfc_setup$r(props, ctx) : void 0;
};
const StudyActivity = /* @__PURE__ */ _export_sfc(_sfc_main$r, [["ssrRender", _sfc_ssrRender$q]]);
const __vite_glob_0_67 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: StudyActivity
}, Symbol.toStringTag, { value: "Module" }));
const publishingOptions = [
  {
    value: "viewer",
    title: "Viewer",
    description: "Anyone on the internet with this link can view",
    current: true
  },
  {
    value: "commentor",
    title: "Commentor",
    description: "Anyone on the internet with this link can comment",
    current: false
  },
  {
    value: "editor",
    title: "Editor",
    description: "Anyone on the internet with this link can edit (sign in required)",
    current: false
  }
];
const _sfc_main$q = {
  components: {
    Dialog,
    DialogOverlay,
    DialogTitle,
    TransitionChild,
    TransitionRoot,
    JetInputError,
    Listbox,
    ListboxButton,
    ListboxLabel,
    ListboxOption,
    ListboxOptions,
    StudyActivity,
    Tab,
    JetActionMessage,
    JetButton,
    JetSecondaryButton,
    TabGroup,
    TabList,
    TabPanel,
    TabPanels,
    LinkIcon,
    PlusSmallIcon,
    QuestionMarkCircleIcon,
    ExclamationCircleIcon,
    XMarkIcon,
    // ColorPicker,
    Switch,
    SwitchGroup,
    SwitchLabel,
    ClipboardDocumentIcon,
    CheckIcon,
    ChevronDownIcon,
    SelectRich
    // VueTagsInput,
  },
  props: ["study", "role", "studyPermissions"],
  setup() {
    const activityDetailsElement = ref(null);
    return {
      activityDetailsElement
    };
  },
  data() {
    return {
      form: this.$inertia.form({
        _method: "PUT",
        name: this.study.name,
        description: this.study.description,
        error_message: null,
        team_id: this.study.team_id,
        owner_id: this.study.owner_id,
        color: this.study.color,
        starred: this.study.starred,
        is_public: this.study.is_public,
        access: this.study.access,
        access_type: this.study.access_type,
        doi: this.study.doi,
        license: null,
        license_id: null,
        tag: "",
        tags_array: [],
        tags: []
      }),
      open: false,
      licenses: [],
      selectedAccessType: publishingOptions.filter(
        (option) => option.value == this.study.access_type
      )[0],
      linkAccess: this.study.access == "link",
      tag: "",
      tags: this.getTags(),
      open: false,
      selectedAccessType: publishingOptions.filter(
        (option) => option.value == this.study.access_type
      )[0],
      linkAccess: this.study.access == "link"
    };
  },
  computed: {
    canUpdateStudy() {
      return this.studyPermissions ? this.studyPermissions.canUpdateStudy : false;
    }
  },
  mounted() {
    const initialise = () => {
      this.loadLicenses();
      this.open = true;
    };
    this.emitter.all.set("openStudyDetails", [initialise]);
  },
  methods: {
    toggleDetails() {
      this.loadLicenses();
      this.open = !this.open;
      this.getTags();
    },
    loadLicenses() {
      if (this.$page.props.licenses) {
        this.licenses = this.$page.props.licenses;
        this.form.license = this.licenses.find(
          (l2) => l2.id == this.study.license_id
        );
      } else {
        axios.get(route("licenses")).then((res) => {
          this.licenses = res.data;
          this.$page.props.licenses = res.data;
          this.form.license = this.licenses.find(
            (l2) => l2.id == this.study.license_id
          );
        });
      }
    },
    getTags() {
      if (this.study && this.study.tags) {
        let tags = [];
        this.study.tags.forEach((t4) => {
          tags.push({
            text: t4.name["en"]
          });
        });
        return tags;
      }
      return [];
    },
    updateStudy() {
      this.form.owner_id = this.study.owner_id;
      this.form.team_id = this.study.team_id;
      this.form.project_id = this.study.project_id;
      if (this.form.license) {
        this.form.license_id = this.form.license.id;
      }
      if (this.linkAccess) {
        this.form.access = "link";
        this.form.access_type = this.selectedAccessType.value;
      } else {
        this.form.access = "restricted";
      }
      this.form.tags_array = this.form.tags.map((t4) => t4.text);
      if (this.form.tag != "") {
        let tags = this.form.tag.split(",");
        if (tags.length > 0) {
          this.form.tags_array = this.form.tags_array.concat(tags);
        }
      }
      this.form.tags_array = [...new Set(this.form.tags_array)];
      this.form.post(route("dashboard.study.update", this.study.id), {
        preserveScroll: true,
        onSuccess: () => {
          this.open = false;
          this.form.tag = "";
        },
        onError: (err) => {
        }
      });
    },
    toggleActivityDetails() {
      this.activityDetailsElement.toggleDetails();
    }
  }
};
function _sfc_ssrRender$p(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_TransitionRoot = resolveComponent("TransitionRoot");
  const _component_Dialog = resolveComponent("Dialog");
  const _component_DialogOverlay = resolveComponent("DialogOverlay");
  const _component_TransitionChild = resolveComponent("TransitionChild");
  const _component_DialogTitle = resolveComponent("DialogTitle");
  const _component_XMarkIcon = resolveComponent("XMarkIcon");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_TabGroup = resolveComponent("TabGroup");
  const _component_TabList = resolveComponent("TabList");
  const _component_Tab = resolveComponent("Tab");
  const _component_TabPanels = resolveComponent("TabPanels");
  const _component_TabPanel = resolveComponent("TabPanel");
  const _component_vue_tags_input = resolveComponent("vue-tags-input");
  const _component_color_picker = resolveComponent("color-picker");
  const _component_select_rich = resolveComponent("select-rich");
  const _component_ClipboardDocumentIcon = resolveComponent("ClipboardDocumentIcon");
  const _component_QuestionMarkCircleIcon = resolveComponent("QuestionMarkCircleIcon");
  const _component_ExclamationCircleIcon = resolveComponent("ExclamationCircleIcon");
  const _component_study_activity = resolveComponent("study-activity");
  const _component_jet_action_message = resolveComponent("jet-action-message");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  const _component_jet_button = resolveComponent("jet-button");
  _push(ssrRenderComponent(_component_TransitionRoot, mergeProps({
    as: "template",
    show: $data.open
  }, _attrs), {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_Dialog, {
          as: "div",
          class: "fixed inset-0 z-50"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div class="absolute inset-0"${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_DialogOverlay, { class: "absolute inset-0" }, null, _parent3, _scopeId2));
              _push3(`<div class="fixed inset-y-0 pl-16 max-w-full right-0 flex"${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_TransitionChild, {
                as: "template",
                enter: "transform transition ease-in-out duration-500 sm:duration-700",
                "enter-from": "translate-x-full",
                "enter-to": "translate-x-0",
                leave: "transform transition ease-in-out duration-500 sm:duration-700",
                "leave-from": "translate-x-0",
                "leave-to": "translate-x-full"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<div class="w-screen max-w-2xl"${_scopeId3}><div class="h-full divide-y divide-gray-200 flex flex-col bg-white shadow-xl"${_scopeId3}><div class="flex-1 h-0 overflow-y-auto"${_scopeId3}><div class="py-6 px-4 sm:px-6" style="${ssrRenderStyle([
                      $props.study.color && $props.study.color != "" ? "background-color:" + $props.study.color : "background-color:rgb(75,75,75)"
                    ])}"${_scopeId3}><div class="flex items-center justify-between"${_scopeId3}>`);
                    _push4(ssrRenderComponent(_component_DialogTitle, { class: "text-lg font-medium text-white" }, {
                      default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(`${ssrInterpolate($props.study.name)}`);
                        } else {
                          return [
                            createTextVNode(toDisplayString($props.study.name), 1)
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(`<div class="ml-3 h-7 flex items-center"${_scopeId3}><button type="button" class="rounded-md hover:text-white"${_scopeId3}><span class="sr-only"${_scopeId3}>Close panel</span>`);
                    _push4(ssrRenderComponent(_component_XMarkIcon, {
                      class: "h-6 w-6",
                      "aria-hidden": "true"
                    }, null, _parent4, _scopeId3));
                    _push4(`</button></div></div></div><div class="flex-1 flex flex-col justify-between"${_scopeId3}><div class="px-4 divide-y divide-gray-200 sm:px-6"${_scopeId3}><div class="space-y-6 pt-6 pb-5"${_scopeId3}><div${_scopeId3}><label for="study-name" class="block text-sm font-medium text-gray-900 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId3}> Study name </label><div class="mt-1"${_scopeId3}><input id="study-name"${ssrRenderAttr("value", $data.form.name)} type="text"${ssrIncludeBooleanAttr(
                      !$options.canUpdateStudy
                    ) ? " readonly" : ""} name="study-name" class="block w-full shadow-sm sm:text-sm focus:ring-gray-500 focus:border-gray-500 border-gray-300 rounded-md"${_scopeId3}></div>`);
                    _push4(ssrRenderComponent(_component_jet_input_error, {
                      message: $data.form.errors.name,
                      class: "mt-2"
                    }, null, _parent4, _scopeId3));
                    _push4(`</div><div${_scopeId3}><label for="description" class="block text-sm font-medium text-gray-900 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId3}> Description </label><div class="mt-1"${_scopeId3}>`);
                    _push4(ssrRenderComponent(_component_TabGroup, null, {
                      default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(ssrRenderComponent(_component_TabList, { class: "flex items-center" }, {
                            default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                              if (_push6) {
                                _push6(ssrRenderComponent(_component_Tab, { as: "template" }, {
                                  default: withCtx(({
                                    selected
                                  }, _push7, _parent7, _scopeId6) => {
                                    if (_push7) {
                                      _push7(`<button class="${ssrRenderClass([
                                        selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                        "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                      ])}"${_scopeId6}> Write </button>`);
                                    } else {
                                      return [
                                        createVNode("button", {
                                          class: [
                                            selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                            "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                          ]
                                        }, " Write ", 2)
                                      ];
                                    }
                                  }),
                                  _: 1
                                }, _parent6, _scopeId5));
                                _push6(ssrRenderComponent(_component_Tab, { as: "template" }, {
                                  default: withCtx(({
                                    selected
                                  }, _push7, _parent7, _scopeId6) => {
                                    if (_push7) {
                                      _push7(`<button class="${ssrRenderClass([
                                        selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                        "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                      ])}"${_scopeId6}> Preview </button>`);
                                    } else {
                                      return [
                                        createVNode("button", {
                                          class: [
                                            selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                            "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                          ]
                                        }, " Preview ", 2)
                                      ];
                                    }
                                  }),
                                  _: 1
                                }, _parent6, _scopeId5));
                              } else {
                                return [
                                  createVNode(_component_Tab, { as: "template" }, {
                                    default: withCtx(({
                                      selected
                                    }) => [
                                      createVNode("button", {
                                        class: [
                                          selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                          "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                        ]
                                      }, " Write ", 2)
                                    ]),
                                    _: 1
                                  }),
                                  createVNode(_component_Tab, { as: "template" }, {
                                    default: withCtx(({
                                      selected
                                    }) => [
                                      createVNode("button", {
                                        class: [
                                          selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                          "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                        ]
                                      }, " Preview ", 2)
                                    ]),
                                    _: 1
                                  })
                                ];
                              }
                            }),
                            _: 1
                          }, _parent5, _scopeId4));
                          _push5(ssrRenderComponent(_component_TabPanels, { class: "mt-2" }, {
                            default: withCtx((_5, _push6, _parent6, _scopeId5) => {
                              if (_push6) {
                                _push6(ssrRenderComponent(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                  default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                    if (_push7) {
                                      _push7(`<label for="comment" class="sr-only"${_scopeId6}>Comment</label><div${_scopeId6}><textarea id="description"${ssrIncludeBooleanAttr(
                                        !$options.canUpdateStudy
                                      ) ? " readonly" : ""} name="description" placeholder="Describe this study" rows="3" class="shadow-sm focus:ring-gray-500 focus:border-gray-500 block w-full sm:text-sm border-gray-300 rounded-md"${_scopeId6}>${ssrInterpolate(
                                        $data.form.description
                                      )}</textarea></div>`);
                                    } else {
                                      return [
                                        createVNode("label", {
                                          for: "comment",
                                          class: "sr-only"
                                        }, "Comment"),
                                        createVNode("div", null, [
                                          withDirectives(createVNode("textarea", {
                                            id: "description",
                                            "onUpdate:modelValue": ($event) => $data.form.description = $event,
                                            readonly: !$options.canUpdateStudy,
                                            name: "description",
                                            placeholder: "Describe this study",
                                            rows: "3",
                                            class: "shadow-sm focus:ring-gray-500 focus:border-gray-500 block w-full sm:text-sm border-gray-300 rounded-md"
                                          }, null, 8, ["onUpdate:modelValue", "readonly"]), [
                                            [
                                              vModelText,
                                              $data.form.description
                                            ]
                                          ])
                                        ])
                                      ];
                                    }
                                  }),
                                  _: 1
                                }, _parent6, _scopeId5));
                                _push6(ssrRenderComponent(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                  default: withCtx((_6, _push7, _parent7, _scopeId6) => {
                                    if (_push7) {
                                      _push7(`<div class="border-b"${_scopeId6}><div class="mx-px mt-px px-3 pt-2 pb-12"${_scopeId6}>`);
                                      if ($data.form.description == "") {
                                        _push7(`<span class="text-gray-400 text-sm font-medium"${_scopeId6}> Nothing to preview </span>`);
                                      } else {
                                        _push7(`<span${_scopeId6}><div class="prose"${_scopeId6}>${_ctx.md(
                                          $data.form.description
                                        )}</div></span>`);
                                      }
                                      _push7(`</div></div>`);
                                    } else {
                                      return [
                                        createVNode("div", { class: "border-b" }, [
                                          createVNode("div", { class: "mx-px mt-px px-3 pt-2 pb-12" }, [
                                            $data.form.description == "" ? (openBlock(), createBlock("span", {
                                              key: 0,
                                              class: "text-gray-400 text-sm font-medium"
                                            }, " Nothing to preview ")) : (openBlock(), createBlock("span", { key: 1 }, [
                                              createVNode("div", {
                                                class: "prose",
                                                innerHTML: _ctx.md(
                                                  $data.form.description
                                                )
                                              }, null, 8, ["innerHTML"])
                                            ]))
                                          ])
                                        ])
                                      ];
                                    }
                                  }),
                                  _: 1
                                }, _parent6, _scopeId5));
                              } else {
                                return [
                                  createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                    default: withCtx(() => [
                                      createVNode("label", {
                                        for: "comment",
                                        class: "sr-only"
                                      }, "Comment"),
                                      createVNode("div", null, [
                                        withDirectives(createVNode("textarea", {
                                          id: "description",
                                          "onUpdate:modelValue": ($event) => $data.form.description = $event,
                                          readonly: !$options.canUpdateStudy,
                                          name: "description",
                                          placeholder: "Describe this study",
                                          rows: "3",
                                          class: "shadow-sm focus:ring-gray-500 focus:border-gray-500 block w-full sm:text-sm border-gray-300 rounded-md"
                                        }, null, 8, ["onUpdate:modelValue", "readonly"]), [
                                          [
                                            vModelText,
                                            $data.form.description
                                          ]
                                        ])
                                      ])
                                    ]),
                                    _: 1
                                  }),
                                  createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                    default: withCtx(() => [
                                      createVNode("div", { class: "border-b" }, [
                                        createVNode("div", { class: "mx-px mt-px px-3 pt-2 pb-12" }, [
                                          $data.form.description == "" ? (openBlock(), createBlock("span", {
                                            key: 0,
                                            class: "text-gray-400 text-sm font-medium"
                                          }, " Nothing to preview ")) : (openBlock(), createBlock("span", { key: 1 }, [
                                            createVNode("div", {
                                              class: "prose",
                                              innerHTML: _ctx.md(
                                                $data.form.description
                                              )
                                            }, null, 8, ["innerHTML"])
                                          ]))
                                        ])
                                      ])
                                    ]),
                                    _: 1
                                  })
                                ];
                              }
                            }),
                            _: 1
                          }, _parent5, _scopeId4));
                        } else {
                          return [
                            createVNode(_component_TabList, { class: "flex items-center" }, {
                              default: withCtx(() => [
                                createVNode(_component_Tab, { as: "template" }, {
                                  default: withCtx(({
                                    selected
                                  }) => [
                                    createVNode("button", {
                                      class: [
                                        selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                        "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                      ]
                                    }, " Write ", 2)
                                  ]),
                                  _: 1
                                }),
                                createVNode(_component_Tab, { as: "template" }, {
                                  default: withCtx(({
                                    selected
                                  }) => [
                                    createVNode("button", {
                                      class: [
                                        selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                        "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                      ]
                                    }, " Preview ", 2)
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 1
                            }),
                            createVNode(_component_TabPanels, { class: "mt-2" }, {
                              default: withCtx(() => [
                                createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                  default: withCtx(() => [
                                    createVNode("label", {
                                      for: "comment",
                                      class: "sr-only"
                                    }, "Comment"),
                                    createVNode("div", null, [
                                      withDirectives(createVNode("textarea", {
                                        id: "description",
                                        "onUpdate:modelValue": ($event) => $data.form.description = $event,
                                        readonly: !$options.canUpdateStudy,
                                        name: "description",
                                        placeholder: "Describe this study",
                                        rows: "3",
                                        class: "shadow-sm focus:ring-gray-500 focus:border-gray-500 block w-full sm:text-sm border-gray-300 rounded-md"
                                      }, null, 8, ["onUpdate:modelValue", "readonly"]), [
                                        [
                                          vModelText,
                                          $data.form.description
                                        ]
                                      ])
                                    ])
                                  ]),
                                  _: 1
                                }),
                                createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                  default: withCtx(() => [
                                    createVNode("div", { class: "border-b" }, [
                                      createVNode("div", { class: "mx-px mt-px px-3 pt-2 pb-12" }, [
                                        $data.form.description == "" ? (openBlock(), createBlock("span", {
                                          key: 0,
                                          class: "text-gray-400 text-sm font-medium"
                                        }, " Nothing to preview ")) : (openBlock(), createBlock("span", { key: 1 }, [
                                          createVNode("div", {
                                            class: "prose",
                                            innerHTML: _ctx.md(
                                              $data.form.description
                                            )
                                          }, null, 8, ["innerHTML"])
                                        ]))
                                      ])
                                    ])
                                  ]),
                                  _: 1
                                })
                              ]),
                              _: 1
                            })
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(ssrRenderComponent(_component_jet_input_error, {
                      message: $data.form.errors.description,
                      class: "mt-2"
                    }, null, _parent4, _scopeId3));
                    _push4(`<label class="block text-sm font-medium text-gray-700"${_scopeId3}><small${_scopeId3}><svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-markdown v-align-bottom inline"${_scopeId3}><path fill-rule="evenodd" d="M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z"${_scopeId3}></path></svg> Styling with Markdown is supported</small></label></div></div><div class="mb-3"${_scopeId3}><label for="description" class="block text-sm font-medium text-gray-700"${_scopeId3}> Keywords </label><div${_scopeId3}>`);
                    _push4(ssrRenderComponent(_component_vue_tags_input, {
                      modelValue: $data.form.tag,
                      "onUpdate:modelValue": ($event) => $data.form.tag = $event,
                      placeholder: "Type a keyword or keywords separated by comma (,) and press enter",
                      separators: [
                        ";",
                        ","
                      ],
                      disabled: !$options.canUpdateStudy,
                      "max-width": "100%",
                      tags: $data.form.tags,
                      onTagsChanged: (newTags) => $data.form.tags = newTags
                    }, null, _parent4, _scopeId3));
                    _push4(`</div></div>`);
                    if ($options.canUpdateStudy) {
                      _push4(`<div${_scopeId3}><label for="study-name" class="block text-sm font-medium text-gray-900"${_scopeId3}> Color </label>`);
                      _push4(ssrRenderComponent(_component_color_picker, {
                        pureColor: $data.form.color,
                        "onUpdate:pureColor": ($event) => $data.form.color = $event
                      }, null, _parent4, _scopeId3));
                      _push4(`</div>`);
                    } else {
                      _push4(`<!---->`);
                    }
                    _push4(`<fieldset${_scopeId3}><legend class="text-sm font-medium text-gray-900"${_scopeId3}> Privacy </legend><div class="mt-2 space-y-5"${_scopeId3}><div${_scopeId3}><div class="relative flex items-start"${_scopeId3}><div class="absolute flex items-center h-5"${_scopeId3}><input id="privacy-private-to-study"${ssrIncludeBooleanAttr(ssrLooseEqual(
                      $data.form.is_public,
                      "false"
                    )) ? " checked" : ""}${ssrIncludeBooleanAttr(
                      $data.form.is_public === false
                    ) ? " checked" : ""}${ssrIncludeBooleanAttr(
                      !$options.canUpdateStudy
                    ) ? " disabled" : ""} name="privacy" value="false" aria-describedby="privacy-private-to-study-description" type="radio" class="focus:ring-gray-500 h-4 w-4 text-gray-600 border-gray-300"${_scopeId3}></div><div class="pl-7 text-sm"${_scopeId3}><label for="privacy-private-to-study" class="font-medium text-gray-900"${_scopeId3}> Private to study members </label><p id="privacy-private-to-study-description" class="text-gray-500"${_scopeId3}> Only members of this study would be able to access. </p></div></div></div></div></fieldset></div><div class="pb-6"${_scopeId3}><div class="mt-6 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-1"${_scopeId3}><div${_scopeId3}><span class="float-right text-xs cursor-pointer hover:text-blue-700 mt-2"${_scopeId3}><a target="_blank" href="https://docs.nmrxiv.org/submission-guides/licenses.html"${_scopeId3}>How to choose the right license?</a></span>`);
                    _push4(ssrRenderComponent(_component_select_rich, {
                      selected: $data.form.license,
                      "onUpdate:selected": ($event) => $data.form.license = $event,
                      label: "License",
                      disabled: !$options.canUpdateStudy,
                      items: $data.licenses
                    }, null, _parent4, _scopeId3));
                    _push4(`</div></div>`);
                    _push4(ssrRenderComponent(_component_jet_input_error, {
                      message: $data.form.errors.license,
                      class: "mt-2"
                    }, null, _parent4, _scopeId3));
                    _push4(`</div><div class="pt-4 pb-6"${_scopeId3}>`);
                    if ($data.form.is_public == true || $data.form.is_public == "true") {
                      _push4(`<div${_scopeId3}><label for="public_url" class="block text-sm font-medium text-gray-700"${_scopeId3}>Public URL</label><div class="mt-1 flex rounded-md shadow-sm"${_scopeId3}><div class="relative flex items-stretch flex-grow focus-within:z-10"${_scopeId3}><input id="studyPublicURLCopy"${ssrRenderAttr(
                        "value",
                        $props.study.public_url
                      )} type="text" class="rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300"${_scopeId3}></div><button type="button" class="-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500"${_scopeId3}><span${_scopeId3}>`);
                      _push4(ssrRenderComponent(_component_ClipboardDocumentIcon, {
                        class: "h-5 w-5",
                        "aria-hidden": "true"
                      }, null, _parent4, _scopeId3));
                      _push4(`</span></button></div>`);
                      if ($data.form.doi) {
                        _push4(`<div class="mt-2"${_scopeId3}><label for="doi" class="block text-sm font-medium text-gray-700"${_scopeId3}>DOI</label><div class="mt-1 flex rounded-md shadow-sm"${_scopeId3}><div class="relative flex items-stretch flex-grow focus-within:z-10"${_scopeId3}><input id="studyPublicDOICopy"${ssrRenderAttr(
                          "value",
                          $props.study.doi
                        )} type="text" class="rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300"${_scopeId3}></div><button type="button" class="-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500"${_scopeId3}><span${_scopeId3}>`);
                        _push4(ssrRenderComponent(_component_ClipboardDocumentIcon, {
                          class: "h-5 w-5",
                          "aria-hidden": "true"
                        }, null, _parent4, _scopeId3));
                        _push4(`</span></button></div></div>`);
                      } else {
                        _push4(`<!---->`);
                      }
                      _push4(`</div>`);
                    } else {
                      _push4(`<!---->`);
                    }
                    _push4(`<div class="mt-6 flex text-sm"${_scopeId3}><a target="_blank" href="https://docs.nmrxiv.org/submission-guides/sharing.html" class="group inline-flex items-center text-gray-500 hover:text-gray-900"${_scopeId3}>`);
                    _push4(ssrRenderComponent(_component_QuestionMarkCircleIcon, {
                      class: "h-5 w-5 text-gray-400 group-hover:text-gray-500",
                      "aria-hidden": "true"
                    }, null, _parent4, _scopeId3));
                    _push4(`<span class="ml-2"${_scopeId3}> Learn more about sharing </span></a></div><div class="mt-4 flex text-sm mb-6"${_scopeId3}><a class="cursor-pointer group inline-flex items-center text-gray-500 hover:text-gray-900"${_scopeId3}>`);
                    _push4(ssrRenderComponent(_component_ExclamationCircleIcon, {
                      class: "h-5 w-5 text-gray-400 group-hover:text-gray-500",
                      "aria-hidden": "true"
                    }, null, _parent4, _scopeId3));
                    _push4(`<span class="ml-2"${_scopeId3}> Activity </span></a></div>`);
                    _push4(ssrRenderComponent(_component_study_activity, {
                      ref: "activityDetailsElement",
                      study: $props.study
                    }, null, _parent4, _scopeId3));
                    _push4(`</div></div></div></div><div class="flex-shrink-0 px-4 py-4 flex justify-end"${_scopeId3}>`);
                    _push4(ssrRenderComponent(_component_jet_action_message, {
                      on: $data.form.recentlySuccessful,
                      class: "mr-3 py-2 text-green-200"
                    }, {
                      default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(` Saved. `);
                        } else {
                          return [
                            createTextVNode(" Saved. ")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    _push4(ssrRenderComponent(_component_jet_secondary_button, {
                      type: "button",
                      class: "bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                      onClick: ($event) => $data.open = false
                    }, {
                      default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                        if (_push5) {
                          _push5(` Cancel `);
                        } else {
                          return [
                            createTextVNode(" Cancel ")
                          ];
                        }
                      }),
                      _: 1
                    }, _parent4, _scopeId3));
                    if ($options.canUpdateStudy) {
                      _push4(ssrRenderComponent(_component_jet_button, {
                        type: "submit",
                        class: "ml-4 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-gray-600 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                        onClick: $options.updateStudy
                      }, {
                        default: withCtx((_4, _push5, _parent5, _scopeId4) => {
                          if (_push5) {
                            _push5(` Save `);
                          } else {
                            return [
                              createTextVNode(" Save ")
                            ];
                          }
                        }),
                        _: 1
                      }, _parent4, _scopeId3));
                    } else {
                      _push4(`<!---->`);
                    }
                    _push4(`</div></div></div>`);
                  } else {
                    return [
                      createVNode("div", { class: "w-screen max-w-2xl" }, [
                        createVNode("div", { class: "h-full divide-y divide-gray-200 flex flex-col bg-white shadow-xl" }, [
                          createVNode("div", { class: "flex-1 h-0 overflow-y-auto" }, [
                            createVNode("div", {
                              class: "py-6 px-4 sm:px-6",
                              style: [
                                $props.study.color && $props.study.color != "" ? "background-color:" + $props.study.color : "background-color:rgb(75,75,75)"
                              ]
                            }, [
                              createVNode("div", { class: "flex items-center justify-between" }, [
                                createVNode(_component_DialogTitle, { class: "text-lg font-medium text-white" }, {
                                  default: withCtx(() => [
                                    createTextVNode(toDisplayString($props.study.name), 1)
                                  ]),
                                  _: 1
                                }),
                                createVNode("div", { class: "ml-3 h-7 flex items-center" }, [
                                  createVNode("button", {
                                    type: "button",
                                    class: "rounded-md hover:text-white",
                                    onClick: ($event) => $data.open = false
                                  }, [
                                    createVNode("span", { class: "sr-only" }, "Close panel"),
                                    createVNode(_component_XMarkIcon, {
                                      class: "h-6 w-6",
                                      "aria-hidden": "true"
                                    })
                                  ], 8, ["onClick"])
                                ])
                              ])
                            ], 4),
                            createVNode("div", { class: "flex-1 flex flex-col justify-between" }, [
                              createVNode("div", { class: "px-4 divide-y divide-gray-200 sm:px-6" }, [
                                createVNode("div", { class: "space-y-6 pt-6 pb-5" }, [
                                  createVNode("div", null, [
                                    createVNode("label", {
                                      for: "study-name",
                                      class: "block text-sm font-medium text-gray-900 after:content-['*'] after:ml-0.5 after:text-red-500"
                                    }, " Study name "),
                                    createVNode("div", { class: "mt-1" }, [
                                      withDirectives(createVNode("input", {
                                        id: "study-name",
                                        "onUpdate:modelValue": ($event) => $data.form.name = $event,
                                        type: "text",
                                        readonly: !$options.canUpdateStudy,
                                        name: "study-name",
                                        class: "block w-full shadow-sm sm:text-sm focus:ring-gray-500 focus:border-gray-500 border-gray-300 rounded-md"
                                      }, null, 8, ["onUpdate:modelValue", "readonly"]), [
                                        [vModelText, $data.form.name]
                                      ])
                                    ]),
                                    createVNode(_component_jet_input_error, {
                                      message: $data.form.errors.name,
                                      class: "mt-2"
                                    }, null, 8, ["message"])
                                  ]),
                                  createVNode("div", null, [
                                    createVNode("label", {
                                      for: "description",
                                      class: "block text-sm font-medium text-gray-900 after:content-['*'] after:ml-0.5 after:text-red-500"
                                    }, " Description "),
                                    createVNode("div", { class: "mt-1" }, [
                                      createVNode(_component_TabGroup, null, {
                                        default: withCtx(() => [
                                          createVNode(_component_TabList, { class: "flex items-center" }, {
                                            default: withCtx(() => [
                                              createVNode(_component_Tab, { as: "template" }, {
                                                default: withCtx(({
                                                  selected
                                                }) => [
                                                  createVNode("button", {
                                                    class: [
                                                      selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                                      "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                                    ]
                                                  }, " Write ", 2)
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(_component_Tab, { as: "template" }, {
                                                default: withCtx(({
                                                  selected
                                                }) => [
                                                  createVNode("button", {
                                                    class: [
                                                      selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                                      "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                                    ]
                                                  }, " Preview ", 2)
                                                ]),
                                                _: 1
                                              })
                                            ]),
                                            _: 1
                                          }),
                                          createVNode(_component_TabPanels, { class: "mt-2" }, {
                                            default: withCtx(() => [
                                              createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                                default: withCtx(() => [
                                                  createVNode("label", {
                                                    for: "comment",
                                                    class: "sr-only"
                                                  }, "Comment"),
                                                  createVNode("div", null, [
                                                    withDirectives(createVNode("textarea", {
                                                      id: "description",
                                                      "onUpdate:modelValue": ($event) => $data.form.description = $event,
                                                      readonly: !$options.canUpdateStudy,
                                                      name: "description",
                                                      placeholder: "Describe this study",
                                                      rows: "3",
                                                      class: "shadow-sm focus:ring-gray-500 focus:border-gray-500 block w-full sm:text-sm border-gray-300 rounded-md"
                                                    }, null, 8, ["onUpdate:modelValue", "readonly"]), [
                                                      [
                                                        vModelText,
                                                        $data.form.description
                                                      ]
                                                    ])
                                                  ])
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                                default: withCtx(() => [
                                                  createVNode("div", { class: "border-b" }, [
                                                    createVNode("div", { class: "mx-px mt-px px-3 pt-2 pb-12" }, [
                                                      $data.form.description == "" ? (openBlock(), createBlock("span", {
                                                        key: 0,
                                                        class: "text-gray-400 text-sm font-medium"
                                                      }, " Nothing to preview ")) : (openBlock(), createBlock("span", { key: 1 }, [
                                                        createVNode("div", {
                                                          class: "prose",
                                                          innerHTML: _ctx.md(
                                                            $data.form.description
                                                          )
                                                        }, null, 8, ["innerHTML"])
                                                      ]))
                                                    ])
                                                  ])
                                                ]),
                                                _: 1
                                              })
                                            ]),
                                            _: 1
                                          })
                                        ]),
                                        _: 1
                                      }),
                                      createVNode(_component_jet_input_error, {
                                        message: $data.form.errors.description,
                                        class: "mt-2"
                                      }, null, 8, ["message"]),
                                      createVNode("label", { class: "block text-sm font-medium text-gray-700" }, [
                                        createVNode("small", null, [
                                          (openBlock(), createBlock("svg", {
                                            "aria-hidden": "true",
                                            height: "16",
                                            viewBox: "0 0 16 16",
                                            version: "1.1",
                                            width: "16",
                                            "data-view-component": "true",
                                            class: "octicon octicon-markdown v-align-bottom inline"
                                          }, [
                                            createVNode("path", {
                                              "fill-rule": "evenodd",
                                              d: "M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z"
                                            })
                                          ])),
                                          createTextVNode(" Styling with Markdown is supported")
                                        ])
                                      ])
                                    ])
                                  ]),
                                  createVNode("div", { class: "mb-3" }, [
                                    createVNode("label", {
                                      for: "description",
                                      class: "block text-sm font-medium text-gray-700"
                                    }, " Keywords "),
                                    createVNode("div", null, [
                                      createVNode(_component_vue_tags_input, {
                                        modelValue: $data.form.tag,
                                        "onUpdate:modelValue": ($event) => $data.form.tag = $event,
                                        placeholder: "Type a keyword or keywords separated by comma (,) and press enter",
                                        separators: [
                                          ";",
                                          ","
                                        ],
                                        disabled: !$options.canUpdateStudy,
                                        "max-width": "100%",
                                        tags: $data.form.tags,
                                        onTagsChanged: (newTags) => $data.form.tags = newTags
                                      }, null, 8, ["modelValue", "onUpdate:modelValue", "disabled", "tags", "onTagsChanged"])
                                    ])
                                  ]),
                                  $options.canUpdateStudy ? (openBlock(), createBlock("div", { key: 0 }, [
                                    createVNode("label", {
                                      for: "study-name",
                                      class: "block text-sm font-medium text-gray-900"
                                    }, " Color "),
                                    createVNode(_component_color_picker, {
                                      pureColor: $data.form.color,
                                      "onUpdate:pureColor": ($event) => $data.form.color = $event
                                    }, null, 8, ["pureColor", "onUpdate:pureColor"])
                                  ])) : createCommentVNode("", true),
                                  createVNode("fieldset", null, [
                                    createVNode("legend", { class: "text-sm font-medium text-gray-900" }, " Privacy "),
                                    createVNode("div", { class: "mt-2 space-y-5" }, [
                                      createVNode("div", null, [
                                        createVNode("div", { class: "relative flex items-start" }, [
                                          createVNode("div", { class: "absolute flex items-center h-5" }, [
                                            withDirectives(createVNode("input", {
                                              id: "privacy-private-to-study",
                                              "onUpdate:modelValue": ($event) => $data.form.is_public = $event,
                                              checked: $data.form.is_public === false,
                                              disabled: !$options.canUpdateStudy,
                                              name: "privacy",
                                              value: "false",
                                              "aria-describedby": "privacy-private-to-study-description",
                                              type: "radio",
                                              class: "focus:ring-gray-500 h-4 w-4 text-gray-600 border-gray-300"
                                            }, null, 8, ["onUpdate:modelValue", "checked", "disabled"]), [
                                              [
                                                vModelRadio,
                                                $data.form.is_public
                                              ]
                                            ])
                                          ]),
                                          createVNode("div", { class: "pl-7 text-sm" }, [
                                            createVNode("label", {
                                              for: "privacy-private-to-study",
                                              class: "font-medium text-gray-900"
                                            }, " Private to study members "),
                                            createVNode("p", {
                                              id: "privacy-private-to-study-description",
                                              class: "text-gray-500"
                                            }, " Only members of this study would be able to access. ")
                                          ])
                                        ])
                                      ])
                                    ])
                                  ])
                                ]),
                                createVNode("div", { class: "pb-6" }, [
                                  createVNode("div", { class: "mt-6 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-1" }, [
                                    createVNode("div", null, [
                                      createVNode("span", { class: "float-right text-xs cursor-pointer hover:text-blue-700 mt-2" }, [
                                        createVNode("a", {
                                          target: "_blank",
                                          href: "https://docs.nmrxiv.org/submission-guides/licenses.html"
                                        }, "How to choose the right license?")
                                      ]),
                                      createVNode(_component_select_rich, {
                                        selected: $data.form.license,
                                        "onUpdate:selected": ($event) => $data.form.license = $event,
                                        label: "License",
                                        disabled: !$options.canUpdateStudy,
                                        items: $data.licenses
                                      }, null, 8, ["selected", "onUpdate:selected", "disabled", "items"])
                                    ])
                                  ]),
                                  createVNode(_component_jet_input_error, {
                                    message: $data.form.errors.license,
                                    class: "mt-2"
                                  }, null, 8, ["message"])
                                ]),
                                createVNode("div", { class: "pt-4 pb-6" }, [
                                  $data.form.is_public == true || $data.form.is_public == "true" ? (openBlock(), createBlock("div", { key: 0 }, [
                                    createVNode("label", {
                                      for: "public_url",
                                      class: "block text-sm font-medium text-gray-700"
                                    }, "Public URL"),
                                    createVNode("div", { class: "mt-1 flex rounded-md shadow-sm" }, [
                                      createVNode("div", { class: "relative flex items-stretch flex-grow focus-within:z-10" }, [
                                        withDirectives(createVNode("input", {
                                          id: "studyPublicURLCopy",
                                          "onUpdate:modelValue": ($event) => $props.study.public_url = $event,
                                          type: "text",
                                          class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                          onFocus: ($event) => $event.target.select()
                                        }, null, 40, ["onUpdate:modelValue", "onFocus"]), [
                                          [
                                            vModelText,
                                            $props.study.public_url
                                          ]
                                        ])
                                      ]),
                                      createVNode("button", {
                                        type: "button",
                                        class: "-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                        onClick: ($event) => _ctx.copyToClipboard(
                                          $props.study.public_url,
                                          "studyPublicURLCopy"
                                        )
                                      }, [
                                        createVNode("span", null, [
                                          createVNode(_component_ClipboardDocumentIcon, {
                                            class: "h-5 w-5",
                                            "aria-hidden": "true"
                                          })
                                        ])
                                      ], 8, ["onClick"])
                                    ]),
                                    $data.form.doi ? (openBlock(), createBlock("div", {
                                      key: 0,
                                      class: "mt-2"
                                    }, [
                                      createVNode("label", {
                                        for: "doi",
                                        class: "block text-sm font-medium text-gray-700"
                                      }, "DOI"),
                                      createVNode("div", { class: "mt-1 flex rounded-md shadow-sm" }, [
                                        createVNode("div", { class: "relative flex items-stretch flex-grow focus-within:z-10" }, [
                                          withDirectives(createVNode("input", {
                                            id: "studyPublicDOICopy",
                                            "onUpdate:modelValue": ($event) => $props.study.doi = $event,
                                            type: "text",
                                            class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                            onFocus: ($event) => $event.target.select()
                                          }, null, 40, ["onUpdate:modelValue", "onFocus"]), [
                                            [
                                              vModelText,
                                              $props.study.doi
                                            ]
                                          ])
                                        ]),
                                        createVNode("button", {
                                          type: "button",
                                          class: "-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                          onClick: ($event) => _ctx.copyToClipboard(
                                            $props.study.doi,
                                            "studyPublicDOICopy"
                                          )
                                        }, [
                                          createVNode("span", null, [
                                            createVNode(_component_ClipboardDocumentIcon, {
                                              class: "h-5 w-5",
                                              "aria-hidden": "true"
                                            })
                                          ])
                                        ], 8, ["onClick"])
                                      ])
                                    ])) : createCommentVNode("", true)
                                  ])) : createCommentVNode("", true),
                                  createVNode("div", { class: "mt-6 flex text-sm" }, [
                                    createVNode("a", {
                                      target: "_blank",
                                      href: "https://docs.nmrxiv.org/submission-guides/sharing.html",
                                      class: "group inline-flex items-center text-gray-500 hover:text-gray-900"
                                    }, [
                                      createVNode(_component_QuestionMarkCircleIcon, {
                                        class: "h-5 w-5 text-gray-400 group-hover:text-gray-500",
                                        "aria-hidden": "true"
                                      }),
                                      createVNode("span", { class: "ml-2" }, " Learn more about sharing ")
                                    ])
                                  ]),
                                  createVNode("div", { class: "mt-4 flex text-sm mb-6" }, [
                                    createVNode("a", {
                                      class: "cursor-pointer group inline-flex items-center text-gray-500 hover:text-gray-900",
                                      onClick: $options.toggleActivityDetails
                                    }, [
                                      createVNode(_component_ExclamationCircleIcon, {
                                        class: "h-5 w-5 text-gray-400 group-hover:text-gray-500",
                                        "aria-hidden": "true"
                                      }),
                                      createVNode("span", { class: "ml-2" }, " Activity ")
                                    ], 8, ["onClick"])
                                  ]),
                                  createVNode(_component_study_activity, {
                                    ref: "activityDetailsElement",
                                    study: $props.study
                                  }, null, 8, ["study"])
                                ])
                              ])
                            ])
                          ]),
                          createVNode("div", { class: "flex-shrink-0 px-4 py-4 flex justify-end" }, [
                            createVNode(_component_jet_action_message, {
                              on: $data.form.recentlySuccessful,
                              class: "mr-3 py-2 text-green-200"
                            }, {
                              default: withCtx(() => [
                                createTextVNode(" Saved. ")
                              ]),
                              _: 1
                            }, 8, ["on"]),
                            createVNode(_component_jet_secondary_button, {
                              type: "button",
                              class: "bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                              onClick: ($event) => $data.open = false
                            }, {
                              default: withCtx(() => [
                                createTextVNode(" Cancel ")
                              ]),
                              _: 1
                            }, 8, ["onClick"]),
                            $options.canUpdateStudy ? (openBlock(), createBlock(_component_jet_button, {
                              key: 0,
                              type: "submit",
                              class: "ml-4 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-gray-600 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                              onClick: $options.updateStudy
                            }, {
                              default: withCtx(() => [
                                createTextVNode(" Save ")
                              ]),
                              _: 1
                            }, 8, ["onClick"])) : createCommentVNode("", true)
                          ])
                        ])
                      ])
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</div></div>`);
            } else {
              return [
                createVNode("div", { class: "absolute inset-0" }, [
                  createVNode(_component_DialogOverlay, { class: "absolute inset-0" }),
                  createVNode("div", { class: "fixed inset-y-0 pl-16 max-w-full right-0 flex" }, [
                    createVNode(_component_TransitionChild, {
                      as: "template",
                      enter: "transform transition ease-in-out duration-500 sm:duration-700",
                      "enter-from": "translate-x-full",
                      "enter-to": "translate-x-0",
                      leave: "transform transition ease-in-out duration-500 sm:duration-700",
                      "leave-from": "translate-x-0",
                      "leave-to": "translate-x-full"
                    }, {
                      default: withCtx(() => [
                        createVNode("div", { class: "w-screen max-w-2xl" }, [
                          createVNode("div", { class: "h-full divide-y divide-gray-200 flex flex-col bg-white shadow-xl" }, [
                            createVNode("div", { class: "flex-1 h-0 overflow-y-auto" }, [
                              createVNode("div", {
                                class: "py-6 px-4 sm:px-6",
                                style: [
                                  $props.study.color && $props.study.color != "" ? "background-color:" + $props.study.color : "background-color:rgb(75,75,75)"
                                ]
                              }, [
                                createVNode("div", { class: "flex items-center justify-between" }, [
                                  createVNode(_component_DialogTitle, { class: "text-lg font-medium text-white" }, {
                                    default: withCtx(() => [
                                      createTextVNode(toDisplayString($props.study.name), 1)
                                    ]),
                                    _: 1
                                  }),
                                  createVNode("div", { class: "ml-3 h-7 flex items-center" }, [
                                    createVNode("button", {
                                      type: "button",
                                      class: "rounded-md hover:text-white",
                                      onClick: ($event) => $data.open = false
                                    }, [
                                      createVNode("span", { class: "sr-only" }, "Close panel"),
                                      createVNode(_component_XMarkIcon, {
                                        class: "h-6 w-6",
                                        "aria-hidden": "true"
                                      })
                                    ], 8, ["onClick"])
                                  ])
                                ])
                              ], 4),
                              createVNode("div", { class: "flex-1 flex flex-col justify-between" }, [
                                createVNode("div", { class: "px-4 divide-y divide-gray-200 sm:px-6" }, [
                                  createVNode("div", { class: "space-y-6 pt-6 pb-5" }, [
                                    createVNode("div", null, [
                                      createVNode("label", {
                                        for: "study-name",
                                        class: "block text-sm font-medium text-gray-900 after:content-['*'] after:ml-0.5 after:text-red-500"
                                      }, " Study name "),
                                      createVNode("div", { class: "mt-1" }, [
                                        withDirectives(createVNode("input", {
                                          id: "study-name",
                                          "onUpdate:modelValue": ($event) => $data.form.name = $event,
                                          type: "text",
                                          readonly: !$options.canUpdateStudy,
                                          name: "study-name",
                                          class: "block w-full shadow-sm sm:text-sm focus:ring-gray-500 focus:border-gray-500 border-gray-300 rounded-md"
                                        }, null, 8, ["onUpdate:modelValue", "readonly"]), [
                                          [vModelText, $data.form.name]
                                        ])
                                      ]),
                                      createVNode(_component_jet_input_error, {
                                        message: $data.form.errors.name,
                                        class: "mt-2"
                                      }, null, 8, ["message"])
                                    ]),
                                    createVNode("div", null, [
                                      createVNode("label", {
                                        for: "description",
                                        class: "block text-sm font-medium text-gray-900 after:content-['*'] after:ml-0.5 after:text-red-500"
                                      }, " Description "),
                                      createVNode("div", { class: "mt-1" }, [
                                        createVNode(_component_TabGroup, null, {
                                          default: withCtx(() => [
                                            createVNode(_component_TabList, { class: "flex items-center" }, {
                                              default: withCtx(() => [
                                                createVNode(_component_Tab, { as: "template" }, {
                                                  default: withCtx(({
                                                    selected
                                                  }) => [
                                                    createVNode("button", {
                                                      class: [
                                                        selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                                        "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                                      ]
                                                    }, " Write ", 2)
                                                  ]),
                                                  _: 1
                                                }),
                                                createVNode(_component_Tab, { as: "template" }, {
                                                  default: withCtx(({
                                                    selected
                                                  }) => [
                                                    createVNode("button", {
                                                      class: [
                                                        selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                                        "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                                      ]
                                                    }, " Preview ", 2)
                                                  ]),
                                                  _: 1
                                                })
                                              ]),
                                              _: 1
                                            }),
                                            createVNode(_component_TabPanels, { class: "mt-2" }, {
                                              default: withCtx(() => [
                                                createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                                  default: withCtx(() => [
                                                    createVNode("label", {
                                                      for: "comment",
                                                      class: "sr-only"
                                                    }, "Comment"),
                                                    createVNode("div", null, [
                                                      withDirectives(createVNode("textarea", {
                                                        id: "description",
                                                        "onUpdate:modelValue": ($event) => $data.form.description = $event,
                                                        readonly: !$options.canUpdateStudy,
                                                        name: "description",
                                                        placeholder: "Describe this study",
                                                        rows: "3",
                                                        class: "shadow-sm focus:ring-gray-500 focus:border-gray-500 block w-full sm:text-sm border-gray-300 rounded-md"
                                                      }, null, 8, ["onUpdate:modelValue", "readonly"]), [
                                                        [
                                                          vModelText,
                                                          $data.form.description
                                                        ]
                                                      ])
                                                    ])
                                                  ]),
                                                  _: 1
                                                }),
                                                createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                                  default: withCtx(() => [
                                                    createVNode("div", { class: "border-b" }, [
                                                      createVNode("div", { class: "mx-px mt-px px-3 pt-2 pb-12" }, [
                                                        $data.form.description == "" ? (openBlock(), createBlock("span", {
                                                          key: 0,
                                                          class: "text-gray-400 text-sm font-medium"
                                                        }, " Nothing to preview ")) : (openBlock(), createBlock("span", { key: 1 }, [
                                                          createVNode("div", {
                                                            class: "prose",
                                                            innerHTML: _ctx.md(
                                                              $data.form.description
                                                            )
                                                          }, null, 8, ["innerHTML"])
                                                        ]))
                                                      ])
                                                    ])
                                                  ]),
                                                  _: 1
                                                })
                                              ]),
                                              _: 1
                                            })
                                          ]),
                                          _: 1
                                        }),
                                        createVNode(_component_jet_input_error, {
                                          message: $data.form.errors.description,
                                          class: "mt-2"
                                        }, null, 8, ["message"]),
                                        createVNode("label", { class: "block text-sm font-medium text-gray-700" }, [
                                          createVNode("small", null, [
                                            (openBlock(), createBlock("svg", {
                                              "aria-hidden": "true",
                                              height: "16",
                                              viewBox: "0 0 16 16",
                                              version: "1.1",
                                              width: "16",
                                              "data-view-component": "true",
                                              class: "octicon octicon-markdown v-align-bottom inline"
                                            }, [
                                              createVNode("path", {
                                                "fill-rule": "evenodd",
                                                d: "M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z"
                                              })
                                            ])),
                                            createTextVNode(" Styling with Markdown is supported")
                                          ])
                                        ])
                                      ])
                                    ]),
                                    createVNode("div", { class: "mb-3" }, [
                                      createVNode("label", {
                                        for: "description",
                                        class: "block text-sm font-medium text-gray-700"
                                      }, " Keywords "),
                                      createVNode("div", null, [
                                        createVNode(_component_vue_tags_input, {
                                          modelValue: $data.form.tag,
                                          "onUpdate:modelValue": ($event) => $data.form.tag = $event,
                                          placeholder: "Type a keyword or keywords separated by comma (,) and press enter",
                                          separators: [
                                            ";",
                                            ","
                                          ],
                                          disabled: !$options.canUpdateStudy,
                                          "max-width": "100%",
                                          tags: $data.form.tags,
                                          onTagsChanged: (newTags) => $data.form.tags = newTags
                                        }, null, 8, ["modelValue", "onUpdate:modelValue", "disabled", "tags", "onTagsChanged"])
                                      ])
                                    ]),
                                    $options.canUpdateStudy ? (openBlock(), createBlock("div", { key: 0 }, [
                                      createVNode("label", {
                                        for: "study-name",
                                        class: "block text-sm font-medium text-gray-900"
                                      }, " Color "),
                                      createVNode(_component_color_picker, {
                                        pureColor: $data.form.color,
                                        "onUpdate:pureColor": ($event) => $data.form.color = $event
                                      }, null, 8, ["pureColor", "onUpdate:pureColor"])
                                    ])) : createCommentVNode("", true),
                                    createVNode("fieldset", null, [
                                      createVNode("legend", { class: "text-sm font-medium text-gray-900" }, " Privacy "),
                                      createVNode("div", { class: "mt-2 space-y-5" }, [
                                        createVNode("div", null, [
                                          createVNode("div", { class: "relative flex items-start" }, [
                                            createVNode("div", { class: "absolute flex items-center h-5" }, [
                                              withDirectives(createVNode("input", {
                                                id: "privacy-private-to-study",
                                                "onUpdate:modelValue": ($event) => $data.form.is_public = $event,
                                                checked: $data.form.is_public === false,
                                                disabled: !$options.canUpdateStudy,
                                                name: "privacy",
                                                value: "false",
                                                "aria-describedby": "privacy-private-to-study-description",
                                                type: "radio",
                                                class: "focus:ring-gray-500 h-4 w-4 text-gray-600 border-gray-300"
                                              }, null, 8, ["onUpdate:modelValue", "checked", "disabled"]), [
                                                [
                                                  vModelRadio,
                                                  $data.form.is_public
                                                ]
                                              ])
                                            ]),
                                            createVNode("div", { class: "pl-7 text-sm" }, [
                                              createVNode("label", {
                                                for: "privacy-private-to-study",
                                                class: "font-medium text-gray-900"
                                              }, " Private to study members "),
                                              createVNode("p", {
                                                id: "privacy-private-to-study-description",
                                                class: "text-gray-500"
                                              }, " Only members of this study would be able to access. ")
                                            ])
                                          ])
                                        ])
                                      ])
                                    ])
                                  ]),
                                  createVNode("div", { class: "pb-6" }, [
                                    createVNode("div", { class: "mt-6 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-1" }, [
                                      createVNode("div", null, [
                                        createVNode("span", { class: "float-right text-xs cursor-pointer hover:text-blue-700 mt-2" }, [
                                          createVNode("a", {
                                            target: "_blank",
                                            href: "https://docs.nmrxiv.org/submission-guides/licenses.html"
                                          }, "How to choose the right license?")
                                        ]),
                                        createVNode(_component_select_rich, {
                                          selected: $data.form.license,
                                          "onUpdate:selected": ($event) => $data.form.license = $event,
                                          label: "License",
                                          disabled: !$options.canUpdateStudy,
                                          items: $data.licenses
                                        }, null, 8, ["selected", "onUpdate:selected", "disabled", "items"])
                                      ])
                                    ]),
                                    createVNode(_component_jet_input_error, {
                                      message: $data.form.errors.license,
                                      class: "mt-2"
                                    }, null, 8, ["message"])
                                  ]),
                                  createVNode("div", { class: "pt-4 pb-6" }, [
                                    $data.form.is_public == true || $data.form.is_public == "true" ? (openBlock(), createBlock("div", { key: 0 }, [
                                      createVNode("label", {
                                        for: "public_url",
                                        class: "block text-sm font-medium text-gray-700"
                                      }, "Public URL"),
                                      createVNode("div", { class: "mt-1 flex rounded-md shadow-sm" }, [
                                        createVNode("div", { class: "relative flex items-stretch flex-grow focus-within:z-10" }, [
                                          withDirectives(createVNode("input", {
                                            id: "studyPublicURLCopy",
                                            "onUpdate:modelValue": ($event) => $props.study.public_url = $event,
                                            type: "text",
                                            class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                            onFocus: ($event) => $event.target.select()
                                          }, null, 40, ["onUpdate:modelValue", "onFocus"]), [
                                            [
                                              vModelText,
                                              $props.study.public_url
                                            ]
                                          ])
                                        ]),
                                        createVNode("button", {
                                          type: "button",
                                          class: "-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                          onClick: ($event) => _ctx.copyToClipboard(
                                            $props.study.public_url,
                                            "studyPublicURLCopy"
                                          )
                                        }, [
                                          createVNode("span", null, [
                                            createVNode(_component_ClipboardDocumentIcon, {
                                              class: "h-5 w-5",
                                              "aria-hidden": "true"
                                            })
                                          ])
                                        ], 8, ["onClick"])
                                      ]),
                                      $data.form.doi ? (openBlock(), createBlock("div", {
                                        key: 0,
                                        class: "mt-2"
                                      }, [
                                        createVNode("label", {
                                          for: "doi",
                                          class: "block text-sm font-medium text-gray-700"
                                        }, "DOI"),
                                        createVNode("div", { class: "mt-1 flex rounded-md shadow-sm" }, [
                                          createVNode("div", { class: "relative flex items-stretch flex-grow focus-within:z-10" }, [
                                            withDirectives(createVNode("input", {
                                              id: "studyPublicDOICopy",
                                              "onUpdate:modelValue": ($event) => $props.study.doi = $event,
                                              type: "text",
                                              class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                              onFocus: ($event) => $event.target.select()
                                            }, null, 40, ["onUpdate:modelValue", "onFocus"]), [
                                              [
                                                vModelText,
                                                $props.study.doi
                                              ]
                                            ])
                                          ]),
                                          createVNode("button", {
                                            type: "button",
                                            class: "-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                            onClick: ($event) => _ctx.copyToClipboard(
                                              $props.study.doi,
                                              "studyPublicDOICopy"
                                            )
                                          }, [
                                            createVNode("span", null, [
                                              createVNode(_component_ClipboardDocumentIcon, {
                                                class: "h-5 w-5",
                                                "aria-hidden": "true"
                                              })
                                            ])
                                          ], 8, ["onClick"])
                                        ])
                                      ])) : createCommentVNode("", true)
                                    ])) : createCommentVNode("", true),
                                    createVNode("div", { class: "mt-6 flex text-sm" }, [
                                      createVNode("a", {
                                        target: "_blank",
                                        href: "https://docs.nmrxiv.org/submission-guides/sharing.html",
                                        class: "group inline-flex items-center text-gray-500 hover:text-gray-900"
                                      }, [
                                        createVNode(_component_QuestionMarkCircleIcon, {
                                          class: "h-5 w-5 text-gray-400 group-hover:text-gray-500",
                                          "aria-hidden": "true"
                                        }),
                                        createVNode("span", { class: "ml-2" }, " Learn more about sharing ")
                                      ])
                                    ]),
                                    createVNode("div", { class: "mt-4 flex text-sm mb-6" }, [
                                      createVNode("a", {
                                        class: "cursor-pointer group inline-flex items-center text-gray-500 hover:text-gray-900",
                                        onClick: $options.toggleActivityDetails
                                      }, [
                                        createVNode(_component_ExclamationCircleIcon, {
                                          class: "h-5 w-5 text-gray-400 group-hover:text-gray-500",
                                          "aria-hidden": "true"
                                        }),
                                        createVNode("span", { class: "ml-2" }, " Activity ")
                                      ], 8, ["onClick"])
                                    ]),
                                    createVNode(_component_study_activity, {
                                      ref: "activityDetailsElement",
                                      study: $props.study
                                    }, null, 8, ["study"])
                                  ])
                                ])
                              ])
                            ]),
                            createVNode("div", { class: "flex-shrink-0 px-4 py-4 flex justify-end" }, [
                              createVNode(_component_jet_action_message, {
                                on: $data.form.recentlySuccessful,
                                class: "mr-3 py-2 text-green-200"
                              }, {
                                default: withCtx(() => [
                                  createTextVNode(" Saved. ")
                                ]),
                                _: 1
                              }, 8, ["on"]),
                              createVNode(_component_jet_secondary_button, {
                                type: "button",
                                class: "bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                                onClick: ($event) => $data.open = false
                              }, {
                                default: withCtx(() => [
                                  createTextVNode(" Cancel ")
                                ]),
                                _: 1
                              }, 8, ["onClick"]),
                              $options.canUpdateStudy ? (openBlock(), createBlock(_component_jet_button, {
                                key: 0,
                                type: "submit",
                                class: "ml-4 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-gray-600 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                                onClick: $options.updateStudy
                              }, {
                                default: withCtx(() => [
                                  createTextVNode(" Save ")
                                ]),
                                _: 1
                              }, 8, ["onClick"])) : createCommentVNode("", true)
                            ])
                          ])
                        ])
                      ]),
                      _: 1
                    })
                  ])
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_Dialog, {
            as: "div",
            class: "fixed inset-0 z-50"
          }, {
            default: withCtx(() => [
              createVNode("div", { class: "absolute inset-0" }, [
                createVNode(_component_DialogOverlay, { class: "absolute inset-0" }),
                createVNode("div", { class: "fixed inset-y-0 pl-16 max-w-full right-0 flex" }, [
                  createVNode(_component_TransitionChild, {
                    as: "template",
                    enter: "transform transition ease-in-out duration-500 sm:duration-700",
                    "enter-from": "translate-x-full",
                    "enter-to": "translate-x-0",
                    leave: "transform transition ease-in-out duration-500 sm:duration-700",
                    "leave-from": "translate-x-0",
                    "leave-to": "translate-x-full"
                  }, {
                    default: withCtx(() => [
                      createVNode("div", { class: "w-screen max-w-2xl" }, [
                        createVNode("div", { class: "h-full divide-y divide-gray-200 flex flex-col bg-white shadow-xl" }, [
                          createVNode("div", { class: "flex-1 h-0 overflow-y-auto" }, [
                            createVNode("div", {
                              class: "py-6 px-4 sm:px-6",
                              style: [
                                $props.study.color && $props.study.color != "" ? "background-color:" + $props.study.color : "background-color:rgb(75,75,75)"
                              ]
                            }, [
                              createVNode("div", { class: "flex items-center justify-between" }, [
                                createVNode(_component_DialogTitle, { class: "text-lg font-medium text-white" }, {
                                  default: withCtx(() => [
                                    createTextVNode(toDisplayString($props.study.name), 1)
                                  ]),
                                  _: 1
                                }),
                                createVNode("div", { class: "ml-3 h-7 flex items-center" }, [
                                  createVNode("button", {
                                    type: "button",
                                    class: "rounded-md hover:text-white",
                                    onClick: ($event) => $data.open = false
                                  }, [
                                    createVNode("span", { class: "sr-only" }, "Close panel"),
                                    createVNode(_component_XMarkIcon, {
                                      class: "h-6 w-6",
                                      "aria-hidden": "true"
                                    })
                                  ], 8, ["onClick"])
                                ])
                              ])
                            ], 4),
                            createVNode("div", { class: "flex-1 flex flex-col justify-between" }, [
                              createVNode("div", { class: "px-4 divide-y divide-gray-200 sm:px-6" }, [
                                createVNode("div", { class: "space-y-6 pt-6 pb-5" }, [
                                  createVNode("div", null, [
                                    createVNode("label", {
                                      for: "study-name",
                                      class: "block text-sm font-medium text-gray-900 after:content-['*'] after:ml-0.5 after:text-red-500"
                                    }, " Study name "),
                                    createVNode("div", { class: "mt-1" }, [
                                      withDirectives(createVNode("input", {
                                        id: "study-name",
                                        "onUpdate:modelValue": ($event) => $data.form.name = $event,
                                        type: "text",
                                        readonly: !$options.canUpdateStudy,
                                        name: "study-name",
                                        class: "block w-full shadow-sm sm:text-sm focus:ring-gray-500 focus:border-gray-500 border-gray-300 rounded-md"
                                      }, null, 8, ["onUpdate:modelValue", "readonly"]), [
                                        [vModelText, $data.form.name]
                                      ])
                                    ]),
                                    createVNode(_component_jet_input_error, {
                                      message: $data.form.errors.name,
                                      class: "mt-2"
                                    }, null, 8, ["message"])
                                  ]),
                                  createVNode("div", null, [
                                    createVNode("label", {
                                      for: "description",
                                      class: "block text-sm font-medium text-gray-900 after:content-['*'] after:ml-0.5 after:text-red-500"
                                    }, " Description "),
                                    createVNode("div", { class: "mt-1" }, [
                                      createVNode(_component_TabGroup, null, {
                                        default: withCtx(() => [
                                          createVNode(_component_TabList, { class: "flex items-center" }, {
                                            default: withCtx(() => [
                                              createVNode(_component_Tab, { as: "template" }, {
                                                default: withCtx(({
                                                  selected
                                                }) => [
                                                  createVNode("button", {
                                                    class: [
                                                      selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                                      "px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                                    ]
                                                  }, " Write ", 2)
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(_component_Tab, { as: "template" }, {
                                                default: withCtx(({
                                                  selected
                                                }) => [
                                                  createVNode("button", {
                                                    class: [
                                                      selected ? "text-gray-900 bg-gray-100 hover:bg-gray-200" : "text-gray-500 hover:text-gray-900 bg-white hover:bg-gray-100",
                                                      "ml-2 px-3 py-1.5 border border-transparent text-sm font-medium rounded-md"
                                                    ]
                                                  }, " Preview ", 2)
                                                ]),
                                                _: 1
                                              })
                                            ]),
                                            _: 1
                                          }),
                                          createVNode(_component_TabPanels, { class: "mt-2" }, {
                                            default: withCtx(() => [
                                              createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                                default: withCtx(() => [
                                                  createVNode("label", {
                                                    for: "comment",
                                                    class: "sr-only"
                                                  }, "Comment"),
                                                  createVNode("div", null, [
                                                    withDirectives(createVNode("textarea", {
                                                      id: "description",
                                                      "onUpdate:modelValue": ($event) => $data.form.description = $event,
                                                      readonly: !$options.canUpdateStudy,
                                                      name: "description",
                                                      placeholder: "Describe this study",
                                                      rows: "3",
                                                      class: "shadow-sm focus:ring-gray-500 focus:border-gray-500 block w-full sm:text-sm border-gray-300 rounded-md"
                                                    }, null, 8, ["onUpdate:modelValue", "readonly"]), [
                                                      [
                                                        vModelText,
                                                        $data.form.description
                                                      ]
                                                    ])
                                                  ])
                                                ]),
                                                _: 1
                                              }),
                                              createVNode(_component_TabPanel, { class: "p-0.5 -m-0.5 rounded-lg" }, {
                                                default: withCtx(() => [
                                                  createVNode("div", { class: "border-b" }, [
                                                    createVNode("div", { class: "mx-px mt-px px-3 pt-2 pb-12" }, [
                                                      $data.form.description == "" ? (openBlock(), createBlock("span", {
                                                        key: 0,
                                                        class: "text-gray-400 text-sm font-medium"
                                                      }, " Nothing to preview ")) : (openBlock(), createBlock("span", { key: 1 }, [
                                                        createVNode("div", {
                                                          class: "prose",
                                                          innerHTML: _ctx.md(
                                                            $data.form.description
                                                          )
                                                        }, null, 8, ["innerHTML"])
                                                      ]))
                                                    ])
                                                  ])
                                                ]),
                                                _: 1
                                              })
                                            ]),
                                            _: 1
                                          })
                                        ]),
                                        _: 1
                                      }),
                                      createVNode(_component_jet_input_error, {
                                        message: $data.form.errors.description,
                                        class: "mt-2"
                                      }, null, 8, ["message"]),
                                      createVNode("label", { class: "block text-sm font-medium text-gray-700" }, [
                                        createVNode("small", null, [
                                          (openBlock(), createBlock("svg", {
                                            "aria-hidden": "true",
                                            height: "16",
                                            viewBox: "0 0 16 16",
                                            version: "1.1",
                                            width: "16",
                                            "data-view-component": "true",
                                            class: "octicon octicon-markdown v-align-bottom inline"
                                          }, [
                                            createVNode("path", {
                                              "fill-rule": "evenodd",
                                              d: "M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z"
                                            })
                                          ])),
                                          createTextVNode(" Styling with Markdown is supported")
                                        ])
                                      ])
                                    ])
                                  ]),
                                  createVNode("div", { class: "mb-3" }, [
                                    createVNode("label", {
                                      for: "description",
                                      class: "block text-sm font-medium text-gray-700"
                                    }, " Keywords "),
                                    createVNode("div", null, [
                                      createVNode(_component_vue_tags_input, {
                                        modelValue: $data.form.tag,
                                        "onUpdate:modelValue": ($event) => $data.form.tag = $event,
                                        placeholder: "Type a keyword or keywords separated by comma (,) and press enter",
                                        separators: [
                                          ";",
                                          ","
                                        ],
                                        disabled: !$options.canUpdateStudy,
                                        "max-width": "100%",
                                        tags: $data.form.tags,
                                        onTagsChanged: (newTags) => $data.form.tags = newTags
                                      }, null, 8, ["modelValue", "onUpdate:modelValue", "disabled", "tags", "onTagsChanged"])
                                    ])
                                  ]),
                                  $options.canUpdateStudy ? (openBlock(), createBlock("div", { key: 0 }, [
                                    createVNode("label", {
                                      for: "study-name",
                                      class: "block text-sm font-medium text-gray-900"
                                    }, " Color "),
                                    createVNode(_component_color_picker, {
                                      pureColor: $data.form.color,
                                      "onUpdate:pureColor": ($event) => $data.form.color = $event
                                    }, null, 8, ["pureColor", "onUpdate:pureColor"])
                                  ])) : createCommentVNode("", true),
                                  createVNode("fieldset", null, [
                                    createVNode("legend", { class: "text-sm font-medium text-gray-900" }, " Privacy "),
                                    createVNode("div", { class: "mt-2 space-y-5" }, [
                                      createVNode("div", null, [
                                        createVNode("div", { class: "relative flex items-start" }, [
                                          createVNode("div", { class: "absolute flex items-center h-5" }, [
                                            withDirectives(createVNode("input", {
                                              id: "privacy-private-to-study",
                                              "onUpdate:modelValue": ($event) => $data.form.is_public = $event,
                                              checked: $data.form.is_public === false,
                                              disabled: !$options.canUpdateStudy,
                                              name: "privacy",
                                              value: "false",
                                              "aria-describedby": "privacy-private-to-study-description",
                                              type: "radio",
                                              class: "focus:ring-gray-500 h-4 w-4 text-gray-600 border-gray-300"
                                            }, null, 8, ["onUpdate:modelValue", "checked", "disabled"]), [
                                              [
                                                vModelRadio,
                                                $data.form.is_public
                                              ]
                                            ])
                                          ]),
                                          createVNode("div", { class: "pl-7 text-sm" }, [
                                            createVNode("label", {
                                              for: "privacy-private-to-study",
                                              class: "font-medium text-gray-900"
                                            }, " Private to study members "),
                                            createVNode("p", {
                                              id: "privacy-private-to-study-description",
                                              class: "text-gray-500"
                                            }, " Only members of this study would be able to access. ")
                                          ])
                                        ])
                                      ])
                                    ])
                                  ])
                                ]),
                                createVNode("div", { class: "pb-6" }, [
                                  createVNode("div", { class: "mt-6 grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-1" }, [
                                    createVNode("div", null, [
                                      createVNode("span", { class: "float-right text-xs cursor-pointer hover:text-blue-700 mt-2" }, [
                                        createVNode("a", {
                                          target: "_blank",
                                          href: "https://docs.nmrxiv.org/submission-guides/licenses.html"
                                        }, "How to choose the right license?")
                                      ]),
                                      createVNode(_component_select_rich, {
                                        selected: $data.form.license,
                                        "onUpdate:selected": ($event) => $data.form.license = $event,
                                        label: "License",
                                        disabled: !$options.canUpdateStudy,
                                        items: $data.licenses
                                      }, null, 8, ["selected", "onUpdate:selected", "disabled", "items"])
                                    ])
                                  ]),
                                  createVNode(_component_jet_input_error, {
                                    message: $data.form.errors.license,
                                    class: "mt-2"
                                  }, null, 8, ["message"])
                                ]),
                                createVNode("div", { class: "pt-4 pb-6" }, [
                                  $data.form.is_public == true || $data.form.is_public == "true" ? (openBlock(), createBlock("div", { key: 0 }, [
                                    createVNode("label", {
                                      for: "public_url",
                                      class: "block text-sm font-medium text-gray-700"
                                    }, "Public URL"),
                                    createVNode("div", { class: "mt-1 flex rounded-md shadow-sm" }, [
                                      createVNode("div", { class: "relative flex items-stretch flex-grow focus-within:z-10" }, [
                                        withDirectives(createVNode("input", {
                                          id: "studyPublicURLCopy",
                                          "onUpdate:modelValue": ($event) => $props.study.public_url = $event,
                                          type: "text",
                                          class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                          onFocus: ($event) => $event.target.select()
                                        }, null, 40, ["onUpdate:modelValue", "onFocus"]), [
                                          [
                                            vModelText,
                                            $props.study.public_url
                                          ]
                                        ])
                                      ]),
                                      createVNode("button", {
                                        type: "button",
                                        class: "-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                        onClick: ($event) => _ctx.copyToClipboard(
                                          $props.study.public_url,
                                          "studyPublicURLCopy"
                                        )
                                      }, [
                                        createVNode("span", null, [
                                          createVNode(_component_ClipboardDocumentIcon, {
                                            class: "h-5 w-5",
                                            "aria-hidden": "true"
                                          })
                                        ])
                                      ], 8, ["onClick"])
                                    ]),
                                    $data.form.doi ? (openBlock(), createBlock("div", {
                                      key: 0,
                                      class: "mt-2"
                                    }, [
                                      createVNode("label", {
                                        for: "doi",
                                        class: "block text-sm font-medium text-gray-700"
                                      }, "DOI"),
                                      createVNode("div", { class: "mt-1 flex rounded-md shadow-sm" }, [
                                        createVNode("div", { class: "relative flex items-stretch flex-grow focus-within:z-10" }, [
                                          withDirectives(createVNode("input", {
                                            id: "studyPublicDOICopy",
                                            "onUpdate:modelValue": ($event) => $props.study.doi = $event,
                                            type: "text",
                                            class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                            onFocus: ($event) => $event.target.select()
                                          }, null, 40, ["onUpdate:modelValue", "onFocus"]), [
                                            [
                                              vModelText,
                                              $props.study.doi
                                            ]
                                          ])
                                        ]),
                                        createVNode("button", {
                                          type: "button",
                                          class: "-ml-px relative inline-flex items-center space-x-2 px-4 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                          onClick: ($event) => _ctx.copyToClipboard(
                                            $props.study.doi,
                                            "studyPublicDOICopy"
                                          )
                                        }, [
                                          createVNode("span", null, [
                                            createVNode(_component_ClipboardDocumentIcon, {
                                              class: "h-5 w-5",
                                              "aria-hidden": "true"
                                            })
                                          ])
                                        ], 8, ["onClick"])
                                      ])
                                    ])) : createCommentVNode("", true)
                                  ])) : createCommentVNode("", true),
                                  createVNode("div", { class: "mt-6 flex text-sm" }, [
                                    createVNode("a", {
                                      target: "_blank",
                                      href: "https://docs.nmrxiv.org/submission-guides/sharing.html",
                                      class: "group inline-flex items-center text-gray-500 hover:text-gray-900"
                                    }, [
                                      createVNode(_component_QuestionMarkCircleIcon, {
                                        class: "h-5 w-5 text-gray-400 group-hover:text-gray-500",
                                        "aria-hidden": "true"
                                      }),
                                      createVNode("span", { class: "ml-2" }, " Learn more about sharing ")
                                    ])
                                  ]),
                                  createVNode("div", { class: "mt-4 flex text-sm mb-6" }, [
                                    createVNode("a", {
                                      class: "cursor-pointer group inline-flex items-center text-gray-500 hover:text-gray-900",
                                      onClick: $options.toggleActivityDetails
                                    }, [
                                      createVNode(_component_ExclamationCircleIcon, {
                                        class: "h-5 w-5 text-gray-400 group-hover:text-gray-500",
                                        "aria-hidden": "true"
                                      }),
                                      createVNode("span", { class: "ml-2" }, " Activity ")
                                    ], 8, ["onClick"])
                                  ]),
                                  createVNode(_component_study_activity, {
                                    ref: "activityDetailsElement",
                                    study: $props.study
                                  }, null, 8, ["study"])
                                ])
                              ])
                            ])
                          ]),
                          createVNode("div", { class: "flex-shrink-0 px-4 py-4 flex justify-end" }, [
                            createVNode(_component_jet_action_message, {
                              on: $data.form.recentlySuccessful,
                              class: "mr-3 py-2 text-green-200"
                            }, {
                              default: withCtx(() => [
                                createTextVNode(" Saved. ")
                              ]),
                              _: 1
                            }, 8, ["on"]),
                            createVNode(_component_jet_secondary_button, {
                              type: "button",
                              class: "bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                              onClick: ($event) => $data.open = false
                            }, {
                              default: withCtx(() => [
                                createTextVNode(" Cancel ")
                              ]),
                              _: 1
                            }, 8, ["onClick"]),
                            $options.canUpdateStudy ? (openBlock(), createBlock(_component_jet_button, {
                              key: 0,
                              type: "submit",
                              class: "ml-4 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-gray-600 hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500",
                              onClick: $options.updateStudy
                            }, {
                              default: withCtx(() => [
                                createTextVNode(" Save ")
                              ]),
                              _: 1
                            }, 8, ["onClick"])) : createCommentVNode("", true)
                          ])
                        ])
                      ])
                    ]),
                    _: 1
                  })
                ])
              ])
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$q = _sfc_main$q.setup;
_sfc_main$q.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Study/Partials/Details.vue");
  return _sfc_setup$q ? _sfc_setup$q(props, ctx) : void 0;
};
const StudyDetails = /* @__PURE__ */ _export_sfc(_sfc_main$q, [["ssrRender", _sfc_ssrRender$p]]);
const __vite_glob_0_70 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: StudyDetails
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$p = {
  components: {
    Link,
    AppLayout,
    StudyDetails,
    ExclamationCircleIcon,
    Menu,
    MenuButton,
    MenuItem,
    MenuItems,
    BriefcaseIcon,
    CalendarIcon,
    CheckIcon,
    ChevronDownIcon,
    ChevronRightIcon,
    CurrencyDollarIcon,
    LinkIcon,
    MapPinIcon,
    PencilIcon,
    StarIcon: StarIcon$1,
    AccessDialogue,
    Citation
  },
  props: [
    "study",
    "project",
    "team",
    "members",
    "availableRoles",
    "studyPermissions",
    "studyRole",
    "model"
  ],
  setup() {
    const studyDetailsElement = ref(null);
    return {
      studyDetailsElement
    };
  },
  data() {
    return {};
  },
  computed: {
    canUpdateStudy() {
      return this.studyPermissions ? this.studyPermissions.canUpdateStudy : false;
    }
  },
  methods: {
    toggleDetails() {
      this.studyDetailsElement.toggleDetails();
    },
    toogleStarred() {
      const url = "/studies/" + this.study.id + "/toggleStarred";
      axios.get(url).catch((err) => {
        if (err.response.status !== 200 || err.response.status !== 201) {
          throw new Error(
            `API call failed with status code: ${err.response.status}`
          );
        }
      }).then(function(response) {
        router$1.reload({ only: ["study"] });
      });
    }
  }
};
function _sfc_ssrRender$o(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_Citation = resolveComponent("Citation");
  const _component_Link = resolveComponent("Link");
  const _component_ChevronRightIcon = resolveComponent("ChevronRightIcon");
  const _component_StarIcon = resolveComponent("StarIcon");
  const _component_access_dialogue = resolveComponent("access-dialogue");
  const _component_study_details = resolveComponent("study-details");
  const _component_CalendarIcon = resolveComponent("CalendarIcon");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({
    title: $props.study.name
  }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($props.study.is_deleted) {
          _push2(`<div class="text-center px-3 py-1 bg-red-50 text-red-700 border-b"${_scopeId}><b${_scopeId}>Warning: </b> This study is deleted. At the end of the 30-day period, this study and all of its resources will be deleted permanently and cannot be recovered. You can only restore a deleted study/project within the 30-day recovery period. </div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div${_scopeId}>`);
        if ($props.study.is_public && $props.study.is_archived) {
          _push2(`<div class="text-center px-3 py-2 bg-yellow-50 text-yellow-700 border-b"${_scopeId}><b${_scopeId}>Warning: </b> This project is archived. It is now read-only. </div>`);
        } else {
          _push2(`<!---->`);
        }
        if ($props.study.is_public && !$props.study.is_archived) {
          _push2(`<div class="text-center px-3 py-2 bg-green-50 text-green-700 border-b"${_scopeId}><b${_scopeId}>Info: </b> This project is published. You cannot edit a published project, please create a new version to updated the project. </div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div>`);
        if ($props.study.is_public && $props.study.doi != null) {
          _push2(`<div${_scopeId}>`);
          _push2(ssrRenderComponent(_component_Citation, {
            model: "study",
            doi: $props.study.doi
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="bg-white border-b"${_scopeId}><div class="px-12"${_scopeId}><div class="flex flex-nowrap justify-between py-6"${_scopeId}><div class="lg:flex lg:items-center lg:justify-between w-full"${_scopeId}><div class="flex-1 min-w-0"${_scopeId}><nav class="flex" aria-label="Breadcrumb"${_scopeId}><ol role="list" class="flex items-center space-x-4"${_scopeId}><li${_scopeId}><div class="flex"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_Link, {
          href: _ctx.route("dashboard"),
          class: "text-sm font-medium text-gray-500 hover:text-gray-700"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`Dashboard`);
            } else {
              return [
                createTextVNode("Dashboard")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></li><li${_scopeId}><div class="flex items-center"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_ChevronRightIcon, {
          class: "flex-shrink-0 h-5 w-5 text-gray-400",
          "aria-hidden": "true"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_Link, {
          href: _ctx.route(
            "dashboard.projects",
            [$props.project.id]
          ),
          class: "ml-4 text-sm font-medium text-gray-500 hover:text-gray-700"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`${ssrInterpolate($props.project.name)}`);
            } else {
              return [
                createTextVNode(toDisplayString($props.project.name), 1)
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div></li></ol></nav><div class="flex pr-20 mt-2 cursor-pointer items-center text-xl text-gray-700 font-bold"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_StarIcon, {
          class: [
            $props.study.is_bookmarked ? "text-yellow-400" : "text-gray-200",
            "h-5 w-5 flex-shrink-0 -ml-1 mr-1"
          ],
          "aria-hidden": "true",
          onClick: $options.toogleStarred
        }, null, _parent2, _scopeId));
        _push2(` ${ssrInterpolate($props.study.name)} `);
        if ($options.canUpdateStudy) {
          _push2(`<button type="button" class="inline-flex items-center shadow-sm px-4 py-1.5 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="w-4 h-4 mr-2 text-gray-600"${_scopeId}><path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"${_scopeId}></path></svg><span${_scopeId}>Edit</span></button>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div><div class="mt-1 flex flex-col sm:flex-row sm:flex-wrap sm:mt-0 sm:space-x-6"${_scopeId}>`);
        if (!$props.study.is_deleted) {
          _push2(`<div class="mt-2 flex items-center text-sm text-gray-700"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_access_dialogue, {
            "available-roles": $props.availableRoles,
            role: $props.studyRole,
            team: $props.team,
            study: $props.study,
            members: $props.members,
            project: $props.project,
            model: $props.model,
            "called-from": "studyView"
          }, null, _parent2, _scopeId));
          _push2(`<a class="cursor-pointer inline-flex items-center"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="w-4 h-4"${_scopeId}><path d="M4 15a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7a1 1 0 0 1 .7.3L13.42 5H21a1 1 0 0 1 .9 1.45L19.61 11l2.27 4.55A1 1 0 0 1 21 17h-8a1 1 0 0 1-.7-.3L10.58 15H4z" class="fill-current text-gray-400"${_scopeId}></path><rect width="2" height="20" x="2" y="2" rx="1" class="fill-current text-gray-600"${_scopeId}></rect></svg><span class="ml-2"${_scopeId}>View details</span></a><div class="ml-3"${_scopeId}>`);
          if ($props.study.is_public) {
            _push2(`<span class="inline-flex items-center"${_scopeId}><svg class="h-3 w-3 text-green-400 inline" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 64 64" width="512" height="512"${_scopeId}><g id="globe"${_scopeId}><path d="M53.85,47.85A27,27,0,0,1,24,57.8V56l3-3V49l4-4V42l4,4h5l2-2h8Z"${_scopeId}></path><path d="M42,20.59v2.56L38.07,27H31l-5.36,5.26L31,37.51v5.06L27.44,39H22.86L16,32.11V24.2L11.8,20h-4A27,27,0,0,1,32,5a26.55,26.55,0,0,1,7.06.94L36,9H30v4l4,4h4.33Z"${_scopeId}></path><path d="M32,60A28,28,0,1,1,60,32,28,28,0,0,1,32,60ZM32,6A26,26,0,1,0,58,32,26,26,0,0,0,32,6Z"${_scopeId}></path></g></svg><span class="ml-2"${_scopeId}>Public</span></span>`);
          } else {
            _push2(`<span class="inline-flex items-center"${_scopeId}><svg id="Capa_1" class="h-3 w-3 text-gray-400 inline" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 512 512" style="${ssrRenderStyle({ "enable-background": "new 0\n                                                            0 512 512" })}" xml:space="preserve"${_scopeId}><g${_scopeId}><g${_scopeId}><path d="M437.333,192h-32v-42.667C405.333,66.99,338.344,0,256,0S106.667,66.99,106.667,149.333V192h-32
                                C68.771,192,64,196.771,64,202.667v266.667C64,492.865,83.135,512,106.667,512h298.667C428.865,512,448,492.865,448,469.333
                                V202.667C448,196.771,443.229,192,437.333,192z M287.938,414.823c0.333,3.01-0.635,6.031-2.656,8.292
                                c-2.021,2.26-4.917,3.552-7.948,3.552h-42.667c-3.031,0-5.927-1.292-7.948-3.552c-2.021-2.26-2.99-5.281-2.656-8.292l6.729-60.51
                                c-10.927-7.948-17.458-20.521-17.458-34.313c0-23.531,19.135-42.667,42.667-42.667s42.667,19.135,42.667,42.667
                                c0,13.792-6.531,26.365-17.458,34.313L287.938,414.823z M341.333,192H170.667v-42.667C170.667,102.281,208.948,64,256,64
                                s85.333,38.281,85.333,85.333V192z"${_scopeId}></path></g></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g><g${_scopeId}></g></svg><span class="ml-2"${_scopeId}>Private</span></span>`);
          }
          _push2(`</div></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="mt-2 flex items-center text-sm text-gray-500"${_scopeId}><span class="capitalize inline-flex pr-4 ml-7 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800"${_scopeId}>`);
        if ($props.studyRole == "reviewer") {
          _push2(`<span${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 py-1 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"${_scopeId}></path><path stroke-linecap="round" stroke-linejoin="round" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"${_scopeId}></path></svg></span>`);
        } else {
          _push2(`<!---->`);
        }
        if ($props.studyRole == "collaborator") {
          _push2(`<span${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 py-1 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"${_scopeId}></path></svg></span>`);
        } else {
          _push2(`<!---->`);
        }
        if ($props.studyRole == "owner" || $props.studyRole == "creator") {
          _push2(`<span${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 py-1 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M14 10l-2 1m0 0l-2-1m2 1v2.5M20 7l-2 1m2-1l-2-1m2 1v2.5M14 4l-2-1-2 1M4 7l2-1M4 7l2 1M4 7v2.5M12 21l-2-1m2 1l2-1m-2 1v-2.5M6 18l-2-1v-2.5M18 18l2-1v-2.5"${_scopeId}></path></svg></span>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(` ${ssrInterpolate($props.studyRole)}</span>`);
        if ($props.study.identifier) {
          _push2(`<span class="inline-flex pr-4 ml-4 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 py-1" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M5.25 8.25h15m-16.5 7.5h15m-1.8-13.5l-3.9 19.5m-2.1-19.5l-3.9 19.5"${_scopeId}></path></svg><b${_scopeId}>${ssrInterpolate($props.study.identifier)}</b></span>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div>`);
        _push2(ssrRenderComponent(_component_study_details, {
          ref: "studyDetailsElement",
          study: $props.study,
          role: $props.studyRole,
          "study-permissions": $props.studyPermissions
        }, null, _parent2, _scopeId));
        _push2(`</div><div class="flex flex-nowrap justify-between pb-3"${_scopeId}><div class="mt-2 flex items-center text-xs text-gray-400"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_CalendarIcon, {
          class: "flex-shrink-0 mr-1.5 h-5 w-5 text-gray-300",
          "aria-hidden": "true"
        }, null, _parent2, _scopeId));
        _push2(` Updated on ${ssrInterpolate(_ctx.formatDateTime($props.study.updated_at))}</div><div${_scopeId}>`);
        if (!$props.study.is_public && $props.study.is_published) {
          _push2(`<span class="ml-4 inline-flex items-center px-3 py-0.5 rounded-full text-sm font-medium bg-yellow-100 text-red-800 capitalize"${_scopeId}> PUBLISHED -  `);
          if ($props.study.release_date) {
            _push2(`<b${_scopeId}>Release date: ${ssrInterpolate(_ctx.formatDate(
              $props.study.release_date
            ))}</b>`);
          } else {
            _push2(`<b${_scopeId}>Release date: ${ssrInterpolate(_ctx.formatDate(
              $props.project.release_date
            ))}</b>`);
          }
          _push2(`</span>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div></div></div></div></div></div>`);
      } else {
        return [
          $props.study.is_deleted ? (openBlock(), createBlock("div", {
            key: 0,
            class: "text-center px-3 py-1 bg-red-50 text-red-700 border-b"
          }, [
            createVNode("b", null, "Warning: "),
            createTextVNode(" This study is deleted. At the end of the 30-day period, this study and all of its resources will be deleted permanently and cannot be recovered. You can only restore a deleted study/project within the 30-day recovery period. ")
          ])) : createCommentVNode("", true),
          createVNode("div", null, [
            $props.study.is_public && $props.study.is_archived ? (openBlock(), createBlock("div", {
              key: 0,
              class: "text-center px-3 py-2 bg-yellow-50 text-yellow-700 border-b"
            }, [
              createVNode("b", null, "Warning: "),
              createTextVNode(" This project is archived. It is now read-only. ")
            ])) : createCommentVNode("", true),
            $props.study.is_public && !$props.study.is_archived ? (openBlock(), createBlock("div", {
              key: 1,
              class: "text-center px-3 py-2 bg-green-50 text-green-700 border-b"
            }, [
              createVNode("b", null, "Info: "),
              createTextVNode(" This project is published. You cannot edit a published project, please create a new version to updated the project. ")
            ])) : createCommentVNode("", true)
          ]),
          $props.study.is_public && $props.study.doi != null ? (openBlock(), createBlock("div", { key: 1 }, [
            createVNode(_component_Citation, {
              model: "study",
              doi: $props.study.doi
            }, null, 8, ["doi"])
          ])) : createCommentVNode("", true),
          createVNode("div", { class: "bg-white border-b" }, [
            createVNode("div", { class: "px-12" }, [
              createVNode("div", { class: "flex flex-nowrap justify-between py-6" }, [
                createVNode("div", { class: "lg:flex lg:items-center lg:justify-between w-full" }, [
                  createVNode("div", { class: "flex-1 min-w-0" }, [
                    createVNode("nav", {
                      class: "flex",
                      "aria-label": "Breadcrumb"
                    }, [
                      createVNode("ol", {
                        role: "list",
                        class: "flex items-center space-x-4"
                      }, [
                        createVNode("li", null, [
                          createVNode("div", { class: "flex" }, [
                            createVNode(_component_Link, {
                              href: _ctx.route("dashboard"),
                              class: "text-sm font-medium text-gray-500 hover:text-gray-700"
                            }, {
                              default: withCtx(() => [
                                createTextVNode("Dashboard")
                              ]),
                              _: 1
                            }, 8, ["href"])
                          ])
                        ]),
                        createVNode("li", null, [
                          createVNode("div", { class: "flex items-center" }, [
                            createVNode(_component_ChevronRightIcon, {
                              class: "flex-shrink-0 h-5 w-5 text-gray-400",
                              "aria-hidden": "true"
                            }),
                            createVNode(_component_Link, {
                              href: _ctx.route(
                                "dashboard.projects",
                                [$props.project.id]
                              ),
                              class: "ml-4 text-sm font-medium text-gray-500 hover:text-gray-700"
                            }, {
                              default: withCtx(() => [
                                createTextVNode(toDisplayString($props.project.name), 1)
                              ]),
                              _: 1
                            }, 8, ["href"])
                          ])
                        ])
                      ])
                    ]),
                    createVNode("div", { class: "flex pr-20 mt-2 cursor-pointer items-center text-xl text-gray-700 font-bold" }, [
                      createVNode(_component_StarIcon, {
                        class: [
                          $props.study.is_bookmarked ? "text-yellow-400" : "text-gray-200",
                          "h-5 w-5 flex-shrink-0 -ml-1 mr-1"
                        ],
                        "aria-hidden": "true",
                        onClick: $options.toogleStarred
                      }, null, 8, ["class", "onClick"]),
                      createTextVNode(" " + toDisplayString($props.study.name) + " ", 1),
                      $options.canUpdateStudy ? (openBlock(), createBlock("button", {
                        key: 0,
                        type: "button",
                        class: "inline-flex items-center shadow-sm px-4 py-1.5 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                        onClick: $options.toggleDetails
                      }, [
                        (openBlock(), createBlock("svg", {
                          xmlns: "http://www.w3.org/2000/svg",
                          viewBox: "0 0 20 20",
                          fill: "currentColor",
                          "aria-hidden": "true",
                          class: "w-4 h-4 mr-2 text-gray-600"
                        }, [
                          createVNode("path", { d: "M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z" })
                        ])),
                        createVNode("span", null, "Edit")
                      ], 8, ["onClick"])) : createCommentVNode("", true)
                    ]),
                    createVNode("div", { class: "mt-1 flex flex-col sm:flex-row sm:flex-wrap sm:mt-0 sm:space-x-6" }, [
                      !$props.study.is_deleted ? (openBlock(), createBlock("div", {
                        key: 0,
                        class: "mt-2 flex items-center text-sm text-gray-700"
                      }, [
                        createVNode(_component_access_dialogue, {
                          "available-roles": $props.availableRoles,
                          role: $props.studyRole,
                          team: $props.team,
                          study: $props.study,
                          members: $props.members,
                          project: $props.project,
                          model: $props.model,
                          "called-from": "studyView"
                        }, null, 8, ["available-roles", "role", "team", "study", "members", "project", "model"]),
                        createVNode("a", {
                          class: "cursor-pointer inline-flex items-center",
                          onClick: $options.toggleDetails
                        }, [
                          (openBlock(), createBlock("svg", {
                            xmlns: "http://www.w3.org/2000/svg",
                            viewBox: "0 0 24 24",
                            class: "w-4 h-4"
                          }, [
                            createVNode("path", {
                              d: "M4 15a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h7a1 1 0 0 1 .7.3L13.42 5H21a1 1 0 0 1 .9 1.45L19.61 11l2.27 4.55A1 1 0 0 1 21 17h-8a1 1 0 0 1-.7-.3L10.58 15H4z",
                              class: "fill-current text-gray-400"
                            }),
                            createVNode("rect", {
                              width: "2",
                              height: "20",
                              x: "2",
                              y: "2",
                              rx: "1",
                              class: "fill-current text-gray-600"
                            })
                          ])),
                          createVNode("span", { class: "ml-2" }, "View details")
                        ], 8, ["onClick"]),
                        createVNode("div", { class: "ml-3" }, [
                          $props.study.is_public ? (openBlock(), createBlock("span", {
                            key: 0,
                            class: "inline-flex items-center"
                          }, [
                            (openBlock(), createBlock("svg", {
                              class: "h-3 w-3 text-green-400 inline",
                              xmlns: "http://www.w3.org/2000/svg",
                              viewBox: "0 0 64 64",
                              width: "512",
                              height: "512"
                            }, [
                              createVNode("g", { id: "globe" }, [
                                createVNode("path", { d: "M53.85,47.85A27,27,0,0,1,24,57.8V56l3-3V49l4-4V42l4,4h5l2-2h8Z" }),
                                createVNode("path", { d: "M42,20.59v2.56L38.07,27H31l-5.36,5.26L31,37.51v5.06L27.44,39H22.86L16,32.11V24.2L11.8,20h-4A27,27,0,0,1,32,5a26.55,26.55,0,0,1,7.06.94L36,9H30v4l4,4h4.33Z" }),
                                createVNode("path", { d: "M32,60A28,28,0,1,1,60,32,28,28,0,0,1,32,60ZM32,6A26,26,0,1,0,58,32,26,26,0,0,0,32,6Z" })
                              ])
                            ])),
                            createVNode("span", { class: "ml-2" }, "Public")
                          ])) : (openBlock(), createBlock("span", {
                            key: 1,
                            class: "inline-flex items-center"
                          }, [
                            (openBlock(), createBlock("svg", {
                              id: "Capa_1",
                              class: "h-3 w-3 text-gray-400 inline",
                              version: "1.1",
                              xmlns: "http://www.w3.org/2000/svg",
                              "xmlns:xlink": "http://www.w3.org/1999/xlink",
                              x: "0px",
                              y: "0px",
                              viewBox: "0 0 512 512",
                              style: { "enable-background": "new 0\n                                                            0 512 512" },
                              "xml:space": "preserve"
                            }, [
                              createVNode("g", null, [
                                createVNode("g", null, [
                                  createVNode("path", { d: "M437.333,192h-32v-42.667C405.333,66.99,338.344,0,256,0S106.667,66.99,106.667,149.333V192h-32\n                                C68.771,192,64,196.771,64,202.667v266.667C64,492.865,83.135,512,106.667,512h298.667C428.865,512,448,492.865,448,469.333\n                                V202.667C448,196.771,443.229,192,437.333,192z M287.938,414.823c0.333,3.01-0.635,6.031-2.656,8.292\n                                c-2.021,2.26-4.917,3.552-7.948,3.552h-42.667c-3.031,0-5.927-1.292-7.948-3.552c-2.021-2.26-2.99-5.281-2.656-8.292l6.729-60.51\n                                c-10.927-7.948-17.458-20.521-17.458-34.313c0-23.531,19.135-42.667,42.667-42.667s42.667,19.135,42.667,42.667\n                                c0,13.792-6.531,26.365-17.458,34.313L287.938,414.823z M341.333,192H170.667v-42.667C170.667,102.281,208.948,64,256,64\n                                s85.333,38.281,85.333,85.333V192z" })
                                ])
                              ]),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g"),
                              createVNode("g")
                            ])),
                            createVNode("span", { class: "ml-2" }, "Private")
                          ]))
                        ])
                      ])) : createCommentVNode("", true),
                      createVNode("div", { class: "mt-2 flex items-center text-sm text-gray-500" }, [
                        createVNode("span", { class: "capitalize inline-flex pr-4 ml-7 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800" }, [
                          $props.studyRole == "reviewer" ? (openBlock(), createBlock("span", { key: 0 }, [
                            (openBlock(), createBlock("svg", {
                              xmlns: "http://www.w3.org/2000/svg",
                              class: "h-6 w-6 py-1 mr-1",
                              fill: "none",
                              viewBox: "0 0 24 24",
                              stroke: "currentColor",
                              "stroke-width": "2"
                            }, [
                              createVNode("path", {
                                "stroke-linecap": "round",
                                "stroke-linejoin": "round",
                                d: "M15 12a3 3 0 11-6 0 3 3 0 016 0z"
                              }),
                              createVNode("path", {
                                "stroke-linecap": "round",
                                "stroke-linejoin": "round",
                                d: "M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"
                              })
                            ]))
                          ])) : createCommentVNode("", true),
                          $props.studyRole == "collaborator" ? (openBlock(), createBlock("span", { key: 1 }, [
                            (openBlock(), createBlock("svg", {
                              xmlns: "http://www.w3.org/2000/svg",
                              class: "h-6 w-6 py-1 mr-1",
                              fill: "none",
                              viewBox: "0 0 24 24",
                              stroke: "currentColor",
                              "stroke-width": "2"
                            }, [
                              createVNode("path", {
                                "stroke-linecap": "round",
                                "stroke-linejoin": "round",
                                d: "M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"
                              })
                            ]))
                          ])) : createCommentVNode("", true),
                          $props.studyRole == "owner" || $props.studyRole == "creator" ? (openBlock(), createBlock("span", { key: 2 }, [
                            (openBlock(), createBlock("svg", {
                              xmlns: "http://www.w3.org/2000/svg",
                              class: "h-6 w-6 py-1 mr-1",
                              fill: "none",
                              viewBox: "0 0 24 24",
                              stroke: "currentColor",
                              "stroke-width": "2"
                            }, [
                              createVNode("path", {
                                "stroke-linecap": "round",
                                "stroke-linejoin": "round",
                                d: "M14 10l-2 1m0 0l-2-1m2 1v2.5M20 7l-2 1m2-1l-2-1m2 1v2.5M14 4l-2-1-2 1M4 7l2-1M4 7l2 1M4 7v2.5M12 21l-2-1m2 1l2-1m-2 1v-2.5M6 18l-2-1v-2.5M18 18l2-1v-2.5"
                              })
                            ]))
                          ])) : createCommentVNode("", true),
                          createTextVNode(" " + toDisplayString($props.studyRole), 1)
                        ]),
                        $props.study.identifier ? (openBlock(), createBlock("span", {
                          key: 0,
                          class: "inline-flex pr-4 ml-4 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800"
                        }, [
                          (openBlock(), createBlock("svg", {
                            xmlns: "http://www.w3.org/2000/svg",
                            class: "h-6 w-6 py-1",
                            fill: "none",
                            viewBox: "0 0 24 24",
                            stroke: "currentColor",
                            "stroke-width": "2"
                          }, [
                            createVNode("path", {
                              "stroke-linecap": "round",
                              "stroke-linejoin": "round",
                              d: "M5.25 8.25h15m-16.5 7.5h15m-1.8-13.5l-3.9 19.5m-2.1-19.5l-3.9 19.5"
                            })
                          ])),
                          createVNode("b", null, toDisplayString($props.study.identifier), 1)
                        ])) : createCommentVNode("", true)
                      ]),
                      createVNode(_component_study_details, {
                        ref: "studyDetailsElement",
                        study: $props.study,
                        role: $props.studyRole,
                        "study-permissions": $props.studyPermissions
                      }, null, 8, ["study", "role", "study-permissions"])
                    ]),
                    createVNode("div", { class: "flex flex-nowrap justify-between pb-3" }, [
                      createVNode("div", { class: "mt-2 flex items-center text-xs text-gray-400" }, [
                        createVNode(_component_CalendarIcon, {
                          class: "flex-shrink-0 mr-1.5 h-5 w-5 text-gray-300",
                          "aria-hidden": "true"
                        }),
                        createTextVNode(" Updated on " + toDisplayString(_ctx.formatDateTime($props.study.updated_at)), 1)
                      ]),
                      createVNode("div", null, [
                        !$props.study.is_public && $props.study.is_published ? (openBlock(), createBlock("span", {
                          key: 0,
                          class: "ml-4 inline-flex items-center px-3 py-0.5 rounded-full text-sm font-medium bg-yellow-100 text-red-800 capitalize"
                        }, [
                          createTextVNode(" PUBLISHED -  "),
                          $props.study.release_date ? (openBlock(), createBlock("b", { key: 0 }, "Release date: " + toDisplayString(_ctx.formatDate(
                            $props.study.release_date
                          )), 1)) : (openBlock(), createBlock("b", { key: 1 }, "Release date: " + toDisplayString(_ctx.formatDate(
                            $props.project.release_date
                          )), 1))
                        ])) : createCommentVNode("", true)
                      ])
                    ])
                  ])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="pb-12 pt-6 px-10"${_scopeId}>`);
        ssrRenderSlot(_ctx.$slots, "scontent", {}, null, _push2, _parent2, _scopeId);
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "pb-12 pt-6 px-10" }, [
            renderSlot(_ctx.$slots, "scontent")
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
}
const _sfc_setup$p = _sfc_main$p.setup;
_sfc_main$p.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Study/Layout.vue");
  return _sfc_setup$p ? _sfc_setup$p(props, ctx) : void 0;
};
const StudyLayout = /* @__PURE__ */ _export_sfc(_sfc_main$p, [["ssrRender", _sfc_ssrRender$o]]);
const __vite_glob_0_64 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: StudyLayout
}, Symbol.toStringTag, { value: "Module" }));
const subNavigation = [
  { name: "About", route: "dashboard.studies", icon: CircleStackIcon },
  {
    name: "Spectra",
    route: "dashboard.study.datasets",
    icon: Squares2X2Icon
  },
  { name: "Files", route: "dashboard.study.files", icon: FolderOpenIcon }
];
const _sfc_main$o = {
  components: {
    StudyLayout,
    Link
  },
  props: [
    "study",
    "project",
    "current",
    "team",
    "members",
    "availableRoles",
    "studyPermissions",
    "studyRole",
    "model"
  ],
  setup() {
    return {
      subNavigation
    };
  }
};
function _sfc_ssrRender$n(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_study_layout = resolveComponent("study-layout");
  const _component_Link = resolveComponent("Link");
  _push(`<div${ssrRenderAttrs(_attrs)}>`);
  _push(ssrRenderComponent(_component_study_layout, {
    model: $props.model,
    project: $props.project,
    study: $props.study,
    team: $props.team,
    members: $props.members,
    "available-roles": $props.availableRoles,
    "study-permissions": $props.studyPermissions,
    "study-role": $props.studyRole
  }, {
    scontent: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white shadow-md rounded-lg"${_scopeId}><div class="md:hidden"${_scopeId}><label for="tabs" class="sr-only"${_scopeId}>Select a tab</label><select class="block w-full focus:ring-teal-500 focus:border-teal-500 border-gray-300 rounded-md"${_scopeId}><!--[-->`);
        ssrRenderList($setup.subNavigation, (tab) => {
          _push2(`<option${ssrIncludeBooleanAttr(tab.name === $props.current) ? " selected" : ""}${_scopeId}>${ssrInterpolate(tab.name)}</option>`);
        });
        _push2(`<!--]--></select></div><div class="hidden md:block"${_scopeId}><div class="border-b border-t rounded-t-md border-gray-200 pl-4"${_scopeId}><nav class="-mb-px flex space-x-8" aria-label="Tabs"${_scopeId}><!--[-->`);
        ssrRenderList($setup.subNavigation, (tab) => {
          _push2(ssrRenderComponent(_component_Link, {
            key: tab.name,
            href: _ctx.route(tab.route, [$props.study.id]),
            class: [
              tab.name == $props.current ? "border-teal-500 text-teal-600" : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300",
              "group inline-flex items-center py-4 px-1 border-b-2 font-medium text-sm"
            ],
            "aria-current": tab.name === $props.current ? "page" : void 0
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                ssrRenderVNode(_push3, createVNode(resolveDynamicComponent(tab.icon), {
                  class: [
                    tab.name === $props.current ? "text-teal-500" : "text-gray-400 group-hover:text-gray-500",
                    "-ml-0.5 mr-2 h-5 w-5"
                  ],
                  "aria-hidden": "true"
                }, null), _parent3, _scopeId2);
                _push3(`<span${_scopeId2}>${ssrInterpolate(tab.name)}</span>`);
              } else {
                return [
                  (openBlock(), createBlock(resolveDynamicComponent(tab.icon), {
                    class: [
                      tab.name === $props.current ? "text-teal-500" : "text-gray-400 group-hover:text-gray-500",
                      "-ml-0.5 mr-2 h-5 w-5"
                    ],
                    "aria-hidden": "true"
                  }, null, 8, ["class"])),
                  createVNode("span", null, toDisplayString(tab.name), 1)
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
        });
        _push2(`<!--]--></nav></div></div>`);
        ssrRenderSlot(_ctx.$slots, "study-section", {}, null, _push2, _parent2, _scopeId);
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white shadow-md rounded-lg" }, [
            createVNode("div", { class: "md:hidden" }, [
              createVNode("label", {
                for: "tabs",
                class: "sr-only"
              }, "Select a tab"),
              createVNode("select", { class: "block w-full focus:ring-teal-500 focus:border-teal-500 border-gray-300 rounded-md" }, [
                (openBlock(true), createBlock(Fragment, null, renderList($setup.subNavigation, (tab) => {
                  return openBlock(), createBlock("option", {
                    key: tab.name,
                    selected: tab.name === $props.current
                  }, toDisplayString(tab.name), 9, ["selected"]);
                }), 128))
              ])
            ]),
            createVNode("div", { class: "hidden md:block" }, [
              createVNode("div", { class: "border-b border-t rounded-t-md border-gray-200 pl-4" }, [
                createVNode("nav", {
                  class: "-mb-px flex space-x-8",
                  "aria-label": "Tabs"
                }, [
                  (openBlock(true), createBlock(Fragment, null, renderList($setup.subNavigation, (tab) => {
                    return openBlock(), createBlock(_component_Link, {
                      key: tab.name,
                      href: _ctx.route(tab.route, [$props.study.id]),
                      class: [
                        tab.name == $props.current ? "border-teal-500 text-teal-600" : "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300",
                        "group inline-flex items-center py-4 px-1 border-b-2 font-medium text-sm"
                      ],
                      "aria-current": tab.name === $props.current ? "page" : void 0
                    }, {
                      default: withCtx(() => [
                        (openBlock(), createBlock(resolveDynamicComponent(tab.icon), {
                          class: [
                            tab.name === $props.current ? "text-teal-500" : "text-gray-400 group-hover:text-gray-500",
                            "-ml-0.5 mr-2 h-5 w-5"
                          ],
                          "aria-hidden": "true"
                        }, null, 8, ["class"])),
                        createVNode("span", null, toDisplayString(tab.name), 1)
                      ]),
                      _: 2
                    }, 1032, ["href", "class", "aria-current"]);
                  }), 128))
                ])
              ])
            ]),
            renderSlot(_ctx.$slots, "study-section")
          ])
        ];
      }
    }),
    _: 3
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$o = _sfc_main$o.setup;
_sfc_main$o.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Study/Content.vue");
  return _sfc_setup$o ? _sfc_setup$o(props, ctx) : void 0;
};
const StudyContent = /* @__PURE__ */ _export_sfc(_sfc_main$o, [["ssrRender", _sfc_ssrRender$n]]);
const __vite_glob_0_59 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: StudyContent
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$n = {
  components: {
    StudyContent,
    ToolTip,
    PlusSmallIcon,
    // slider,
    TrashIcon,
    PencilIcon,
    InformationCircleIcon,
    JetInputError,
    Depictor2D
  },
  props: [
    "study",
    "project",
    "team",
    "members",
    "availableRoles",
    "studyPermissions",
    "studyRole",
    "license"
  ],
  setup() {
  },
  data() {
    return {
      smiles: "",
      percentage: 0,
      editor: "",
      errorMessage: ""
    };
  },
  computed: {
    getMax() {
      if (this.study) {
        let totalCount = 0;
        this.study.sample.molecules.forEach((mol) => {
          totalCount += parseInt(mol.pivot.percentage_composition);
        });
        return 100 - totalCount;
      } else {
        return 100;
      }
    },
    canUpdateStudy() {
      return this.studyPermissions ? this.studyPermissions.canUpdateStudy : false;
    }
  },
  mounted() {
    this.$nextTick(() => {
      this.editor = OCL$1.StructureEditor.createSVGEditor(
        "structureSearchEditor",
        1
      );
    });
  },
  methods: {
    openStudyDetailsPane() {
      this.emitter.emit("openStudyDetails", {});
    },
    loadSmiles() {
      this.errorMessage = "";
      if (this.smiles && this.smiles != "") {
        try {
          let mol = OCL$1.Molecule.fromSmiles(this.smiles);
          this.editor.setSmiles(this.smiles);
        } catch (e2) {
          this.errorMessage = "The entered SMILES is not valid.";
        }
      }
    },
    getSVGString(molecule) {
      if (molecule.MOL) {
        let mol = OCL$1.Molecule.fromMolfile(
          "\n  " + molecule.MOL.replaceAll('"', "")
        );
        return mol.toSVG(200, 200);
      }
    },
    deleteMolecule(mol) {
      axios.delete(
        "/dashboard/studies/" + this.study.id + "/molecule/" + mol.id
      ).then((res) => {
        this.study.sample.molecules = res.data;
        this.smiles = "";
        this.percentage = 0;
        this.editor.setSmiles("");
      });
    },
    editMolecule(mol) {
      this.editor.setSmiles(mol.canonical_smiles);
      this.percentage = parseInt(mol.pivot.percentage_composition);
      axios.delete(
        "/dashboard/studies/" + this.study.id + "/molecule/" + mol.id
      ).then((res) => {
        this.study.sample.molecules = res.data;
      });
    },
    saveMolecule(mol, study) {
      if (!study) {
        study = this.study;
      }
      if (!mol) {
        let mol2 = this.editor.getMolFile();
        this.standardizeMolecules(mol2).then((res) => {
          this.associateMoleculeToStudy(res.data, study);
        });
      } else {
        this.associateMoleculeToStudy(mol, study);
      }
    },
    standardizeMolecules(mol) {
      return axios.post(
        "https://api.naturalproducts.net/latest/chem/standardize",
        mol
      );
    },
    associateMoleculeToStudy(mol, study) {
      axios.post("/dashboard/studies/" + study.id + "/molecule", {
        InChI: mol.inchi,
        InChIKey: mol.inchikey,
        percentage: 0,
        mol: mol.standardized_mol,
        canonical_smiles: mol.canonical_smiles
      }).then((res) => {
        study.sample.molecules = res.data;
        this.smiles = "";
        this.percentage = 0;
      });
    }
  }
};
function _sfc_ssrRender$m(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_study_content = resolveComponent("study-content");
  const _component_PencilIcon = resolveComponent("PencilIcon");
  const _component_ToolTip = resolveComponent("ToolTip");
  const _component_Depictor2D = resolveComponent("Depictor2D");
  const _component_TrashIcon = resolveComponent("TrashIcon");
  const _component_InformationCircleIcon = resolveComponent("InformationCircleIcon");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_slider = resolveComponent("slider");
  _push(`<div${ssrRenderAttrs(_attrs)}>`);
  _push(ssrRenderComponent(_component_study_content, {
    model: "study",
    project: $props.project,
    study: $props.study,
    team: $props.team,
    members: $props.members,
    "available-roles": $props.availableRoles,
    "study-permissions": $props.studyPermissions,
    "study-role": $props.studyRole,
    current: "About"
  }, {
    "study-section": withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="divide-y divide-gray-200 sm:col-span-9"${_scopeId}><div class="py-3 px-4 sm:p-6 lg:pb-8"${_scopeId}><div class="mt-0"${_scopeId}><div class="mb-4"${_scopeId}><div class="relative"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-300"${_scopeId}></div></div><div class="relative flex items-center justify-between"${_scopeId}><span class="px-3 -ml-4 rounded text-sm bg-gray-100 font-medium text-gray-500"${_scopeId}> Keywords </span>`);
        if ($options.canUpdateStudy) {
          _push2(`<button type="button" class="inline-flex items-center shadow-sm px-4 py-1.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_PencilIcon, { class: "w-4 h-4 mr-1 text-gray-600" }, null, _parent2, _scopeId));
          _push2(`<span${_scopeId}>Edit</span></button>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div><dd class="mt-1 text-md text-gray-900 space-y-5"${_scopeId}><p${_scopeId}><!--[-->`);
        ssrRenderList($props.study.tags, (tag) => {
          _push2(`<span class="mr-2"${_scopeId}><span class="inline-flex items-center px-2.5 py-0.5 rounded-md text-sm font-medium bg-indigo-100 text-indigo-800"${_scopeId}><svg class="-ml-0.5 mr-1.5 h-2 w-2 text-indigo-400" fill="currentColor" viewBox="0 0 8 8"${_scopeId}><circle cx="4" cy="4" r="3"${_scopeId}></circle></svg> ${ssrInterpolate(tag.name["en"])}</span></span>`);
        });
        _push2(`<!--]--></p></dd></div><div class="mb-4"${_scopeId}><div class="relative"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-300"${_scopeId}></div></div><div class="relative flex items-center justify-between"${_scopeId}><span class="px-3 -ml-4 rounded text-sm bg-gray-100 font-medium text-gray-500"${_scopeId}> License </span>`);
        if ($options.canUpdateStudy) {
          _push2(`<button type="button" class="inline-flex items-center shadow-sm px-4 py-1.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_PencilIcon, { class: "w-4 h-4 mr-1 text-gray-600" }, null, _parent2, _scopeId));
          _push2(`<span${_scopeId}>Edit</span></button>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div><div${_scopeId}>`);
        if ($props.license) {
          _push2(`<dd class="text-md text-gray-900 space-y-5"${_scopeId}><p style="${ssrRenderStyle({ "max-width": "100ch !important" })}" class="prose mt-1 text-sm text-blue-gray-500"${_scopeId}>${ssrInterpolate($props.license.title)} `);
          if ($props.study.license_id) {
            _push2(ssrRenderComponent(_component_ToolTip, {
              class: "inline h-4 w-4 ml-0",
              text: $props.license.description
            }, null, _parent2, _scopeId));
          } else {
            _push2(`<!---->`);
          }
          _push2(`</p></dd>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div><div class="mb-4"${_scopeId}><div${_scopeId}><div${_scopeId}><div class="py-4 max-w-7xl mx-auto"${_scopeId}><div class="pb-3 border-b border-gray-200 sm:flex sm:items-center sm:justify-between"${_scopeId}><h3 class="text-lg leading-6 font-medium text-gray-900"${_scopeId}> Sample chemical composition </h3></div></div><div class="grid grid-cols-2 gap-2"${_scopeId}><div class="pr-2"${_scopeId}>`);
        if ($props.study.sample.molecules.length > 0) {
          _push2(`<div class="flow-root"${_scopeId}><ul role="list" class="-mb-8"${_scopeId}><!--[-->`);
          ssrRenderList($props.study.sample.molecules, (molecule) => {
            _push2(`<li${_scopeId}><div class="relative pb-8"${_scopeId}><span class="absolute top-5 left-5 -ml-px h-full w-0.5 bg-gray-200" aria-hidden="true"${_scopeId}></span><div class="relative flex items-start space-x-3"${_scopeId}>`);
            if (molecule && molecule.pivot) {
              _push2(`<div class="relative"${_scopeId}><div class="rounded-full border p-2 z-10 bg-gray-100 text-sm"${_scopeId}>${ssrInterpolate(molecule.pivot.percentage_composition)}% </div></div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`<div class="min-w-0 flex-1"${_scopeId}><div${_scopeId}><div class="text-sm"${_scopeId}><a class="break-all font-medium text-gray-900"${_scopeId}>${ssrInterpolate(molecule.standard_inchi)}</a></div></div><div class="mt-2 text-sm text-gray-700"${_scopeId}><div class="rounded-md border my-3 flex justify-center items-center"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Depictor2D, {
              molecule: molecule.canonical_smiles
            }, null, _parent2, _scopeId));
            _push2(`</div></div>`);
            if ($options.canUpdateStudy) {
              _push2(`<button class="inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"${_scopeId}>`);
              _push2(ssrRenderComponent(_component_TrashIcon, { class: "w-4 h-4 inline mr-1" }, null, _parent2, _scopeId));
              _push2(`Delete </button>`);
            } else {
              _push2(`<!---->`);
            }
            if ($options.canUpdateStudy) {
              _push2(`<button class="inline-flex ml-2 items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"${_scopeId}>`);
              _push2(ssrRenderComponent(_component_PencilIcon, { class: "w-4 h-4 inline mr-1" }, null, _parent2, _scopeId));
              _push2(`Edit </button>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div></div></div></li>`);
          });
          _push2(`<!--]--></ul><div class="rounded-full border p-2 z-10 bg-gray-100 text-sm mt-14 text-center"${_scopeId}> Sample chemical composition </div></div>`);
        } else {
          _push2(`<div${_scopeId}><div class="text-center my-10 py-10"${_scopeId}><h3 class="mt-2 text-sm font-medium text-gray-900"${_scopeId}> No structures associated with the sample! </h3>`);
          if (!$props.study.is_public) {
            _push2(`<p class="mt-1 text-sm text-gray-500"${_scopeId}> Get started by adding a new molecule. </p>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div></div>`);
        }
        _push2(`</div>`);
        if ($options.canUpdateStudy) {
          _push2(`<div class="pl-2"${_scopeId}><div class="sm:col-span-4"${_scopeId}><label for="email" class="block text-sm font-medium text-gray-700"${_scopeId}> SMILES <div class="tooltip"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_InformationCircleIcon, { class: "w-5 h-5 inline" }, null, _parent2, _scopeId));
          _push2(`<span class="w-64 bg-gray-900 text-white p-4 shadow-lg rounded-md tooltiptext"${_scopeId}>Simplified molecular-input line-entry system (SMILES) is a specification in the form of a line notation for describing the structure of chemical species using short ASCII strings. For more information please checkout <a href="https://en.wikipedia.org/wiki/Simplified_molecular-input_line-entry_system" class="text-gray-400" target="_blank"${_scopeId}>here</a> and <a href="https://www.daylight.com/dayhtml/doc/theory/theory.smiles.html" class="text-gray-400" target="_blank"${_scopeId}>here</a>.</span></div></label><div class="mt-1 mb-2"${_scopeId}><input id="smiles"${ssrRenderAttr("value", $data.smiles)} name="smiles" type="text" class="shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md"${_scopeId}>`);
          if ($data.smiles && $data.smiles != "") {
            _push2(`<button class="inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 mt-2"${_scopeId}> Load Structure </button>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(ssrRenderComponent(_component_jet_input_error, {
            message: $data.errorMessage,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div></div><div class="relative"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-300"${_scopeId}></div></div><div class="relative flex justify-center"${_scopeId}><span class="px-2 bg-white text-sm text-gray-500"${_scopeId}> Or </span></div></div><span class="float-right text-xs cursor-pointer hover:text-blue-700"${_scopeId}><a href="https://docs.nmrxiv.org/submission-guides/editor.html" target="_blank"${_scopeId}>Need help?</a></span><div id="structureSearchEditor" class="w-full border my-4 rounded-md" style="${ssrRenderStyle({ "height": "400px" })}"${_scopeId}></div><div class="mt-1 mb-6"${_scopeId}><label for="email" class="block text-sm font-medium text-gray-700"${_scopeId}> Percentage composition (${ssrInterpolate($data.percentage)}%) `);
          _push2(ssrRenderComponent(_component_ToolTip, {
            class: "inline h-4 w-12 ml-0",
            text: "If the molecule percentage is unknown, please keep it as 0."
          }, null, _parent2, _scopeId));
          _push2(`</label>`);
          _push2(ssrRenderComponent(_component_slider, {
            modelValue: $data.percentage,
            "onUpdate:modelValue": ($event) => $data.percentage = $event,
            min: 0,
            max: $options.getMax,
            height: 10,
            color: "#000",
            "track-color": "#999"
          }, null, _parent2, _scopeId));
          _push2(`</div><button type="button" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"${_scopeId}> ADD </button></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div>`);
        if ($props.study) {
          _push2(`<div${_scopeId}>`);
          if ($props.study.molecules && $props.study.molecules.length == 0) {
            _push2(`<div${_scopeId}><template${_scopeId}><button type="button" class="relative block w-full border-2 border-gray-300 border-dashed rounded-lg p-12 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"${_scopeId}><svg class="mx-auto h-12 w-12 text-gray-400" xmlns="http://www.w3.org/2000/svg" stroke="currentColor" fill="none" viewBox="0 0 48 48" aria-hidden="true"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 14v20c0 4.418 7.163 8 16 8 1.381 0 2.721-.087 4-.252M8 14c0 4.418 7.163 8 16 8s16-3.582 16-8M8 14c0-4.418 7.163-8 16-8s16 3.582 16 8m0 0v14m0-4c0 4.418-7.163 8-16 8S8 28.418 8 24m32 10v6m0 0v6m0-6h6m-6 0h-6"${_scopeId}></path></svg><span class="mt-2 block text-sm font-medium text-gray-900"${_scopeId}> Create a new database </span></button></template></div>`);
          } else {
            _push2(`<!---->`);
          }
          if ($props.study.molecules && $props.study.molecules.length > 0) {
            _push2(`<div${_scopeId}> Mols </div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div></div><div class="mb-4"${_scopeId}><div class="relative"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-300"${_scopeId}></div></div><div class="relative flex items-center justify-between"${_scopeId}><span class="px-3 -ml-4 rounded text-sm bg-gray-100 font-medium text-gray-500"${_scopeId}> Description </span>`);
        if ($options.canUpdateStudy) {
          _push2(`<button type="button" class="inline-flex items-center shadow-sm px-4 py-1.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_PencilIcon, { class: "w-4 h-4 mr-1 text-gray-600" }, null, _parent2, _scopeId));
          _push2(`<span${_scopeId}>Edit</span></button>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div><dd class="mt-1 text-md text-gray-900 space-y-5"${_scopeId}><p style="${ssrRenderStyle({ "max-width": "100ch !important" })}" class="prose mt-1 text-sm text-blue-gray-500"${_scopeId}>${_ctx.md($props.study.description)}</p></dd></div></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "divide-y divide-gray-200 sm:col-span-9" }, [
            createVNode("div", { class: "py-3 px-4 sm:p-6 lg:pb-8" }, [
              createVNode("div", { class: "mt-0" }, [
                createVNode("div", { class: "mb-4" }, [
                  createVNode("div", { class: "relative" }, [
                    createVNode("div", {
                      class: "absolute inset-0 flex items-center",
                      "aria-hidden": "true"
                    }, [
                      createVNode("div", { class: "w-full border-t border-gray-300" })
                    ]),
                    createVNode("div", { class: "relative flex items-center justify-between" }, [
                      createVNode("span", { class: "px-3 -ml-4 rounded text-sm bg-gray-100 font-medium text-gray-500" }, " Keywords "),
                      $options.canUpdateStudy ? (openBlock(), createBlock("button", {
                        key: 0,
                        type: "button",
                        class: "inline-flex items-center shadow-sm px-4 py-1.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                        onClick: $options.openStudyDetailsPane
                      }, [
                        createVNode(_component_PencilIcon, { class: "w-4 h-4 mr-1 text-gray-600" }),
                        createVNode("span", null, "Edit")
                      ], 8, ["onClick"])) : createCommentVNode("", true)
                    ])
                  ]),
                  createVNode("dd", { class: "mt-1 text-md text-gray-900 space-y-5" }, [
                    createVNode("p", null, [
                      (openBlock(true), createBlock(Fragment, null, renderList($props.study.tags, (tag) => {
                        return openBlock(), createBlock("span", {
                          key: tag.id,
                          class: "mr-2"
                        }, [
                          createVNode("span", { class: "inline-flex items-center px-2.5 py-0.5 rounded-md text-sm font-medium bg-indigo-100 text-indigo-800" }, [
                            (openBlock(), createBlock("svg", {
                              class: "-ml-0.5 mr-1.5 h-2 w-2 text-indigo-400",
                              fill: "currentColor",
                              viewBox: "0 0 8 8"
                            }, [
                              createVNode("circle", {
                                cx: "4",
                                cy: "4",
                                r: "3"
                              })
                            ])),
                            createTextVNode(" " + toDisplayString(tag.name["en"]), 1)
                          ])
                        ]);
                      }), 128))
                    ])
                  ])
                ]),
                createVNode("div", { class: "mb-4" }, [
                  createVNode("div", { class: "relative" }, [
                    createVNode("div", {
                      class: "absolute inset-0 flex items-center",
                      "aria-hidden": "true"
                    }, [
                      createVNode("div", { class: "w-full border-t border-gray-300" })
                    ]),
                    createVNode("div", { class: "relative flex items-center justify-between" }, [
                      createVNode("span", { class: "px-3 -ml-4 rounded text-sm bg-gray-100 font-medium text-gray-500" }, " License "),
                      $options.canUpdateStudy ? (openBlock(), createBlock("button", {
                        key: 0,
                        type: "button",
                        class: "inline-flex items-center shadow-sm px-4 py-1.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                        onClick: $options.openStudyDetailsPane
                      }, [
                        createVNode(_component_PencilIcon, { class: "w-4 h-4 mr-1 text-gray-600" }),
                        createVNode("span", null, "Edit")
                      ], 8, ["onClick"])) : createCommentVNode("", true)
                    ])
                  ]),
                  createVNode("div", null, [
                    $props.license ? (openBlock(), createBlock("dd", {
                      key: 0,
                      class: "text-md text-gray-900 space-y-5"
                    }, [
                      createVNode("p", {
                        style: { "max-width": "100ch !important" },
                        class: "prose mt-1 text-sm text-blue-gray-500"
                      }, [
                        createTextVNode(toDisplayString($props.license.title) + " ", 1),
                        $props.study.license_id ? (openBlock(), createBlock(_component_ToolTip, {
                          key: 0,
                          class: "inline h-4 w-4 ml-0",
                          text: $props.license.description
                        }, null, 8, ["text"])) : createCommentVNode("", true)
                      ])
                    ])) : createCommentVNode("", true)
                  ])
                ]),
                createVNode("div", { class: "mb-4" }, [
                  createVNode("div", null, [
                    createVNode("div", null, [
                      createVNode("div", { class: "py-4 max-w-7xl mx-auto" }, [
                        createVNode("div", { class: "pb-3 border-b border-gray-200 sm:flex sm:items-center sm:justify-between" }, [
                          createVNode("h3", { class: "text-lg leading-6 font-medium text-gray-900" }, " Sample chemical composition ")
                        ])
                      ]),
                      createVNode("div", { class: "grid grid-cols-2 gap-2" }, [
                        createVNode("div", { class: "pr-2" }, [
                          $props.study.sample.molecules.length > 0 ? (openBlock(), createBlock("div", {
                            key: 0,
                            class: "flow-root"
                          }, [
                            createVNode("ul", {
                              role: "list",
                              class: "-mb-8"
                            }, [
                              (openBlock(true), createBlock(Fragment, null, renderList($props.study.sample.molecules, (molecule) => {
                                return openBlock(), createBlock("li", {
                                  key: molecule.standard_inchi
                                }, [
                                  createVNode("div", { class: "relative pb-8" }, [
                                    createVNode("span", {
                                      class: "absolute top-5 left-5 -ml-px h-full w-0.5 bg-gray-200",
                                      "aria-hidden": "true"
                                    }),
                                    createVNode("div", { class: "relative flex items-start space-x-3" }, [
                                      molecule && molecule.pivot ? (openBlock(), createBlock("div", {
                                        key: 0,
                                        class: "relative"
                                      }, [
                                        createVNode("div", { class: "rounded-full border p-2 z-10 bg-gray-100 text-sm" }, toDisplayString(molecule.pivot.percentage_composition) + "% ", 1)
                                      ])) : createCommentVNode("", true),
                                      createVNode("div", { class: "min-w-0 flex-1" }, [
                                        createVNode("div", null, [
                                          createVNode("div", { class: "text-sm" }, [
                                            createVNode("a", { class: "break-all font-medium text-gray-900" }, toDisplayString(molecule.standard_inchi), 1)
                                          ])
                                        ]),
                                        createVNode("div", { class: "mt-2 text-sm text-gray-700" }, [
                                          createVNode("div", { class: "rounded-md border my-3 flex justify-center items-center" }, [
                                            createVNode(_component_Depictor2D, {
                                              molecule: molecule.canonical_smiles
                                            }, null, 8, ["molecule"])
                                          ])
                                        ]),
                                        $options.canUpdateStudy ? (openBlock(), createBlock("button", {
                                          key: 0,
                                          class: "inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500",
                                          onClick: ($event) => $options.deleteMolecule(
                                            molecule
                                          )
                                        }, [
                                          createVNode(_component_TrashIcon, { class: "w-4 h-4 inline mr-1" }),
                                          createTextVNode("Delete ")
                                        ], 8, ["onClick"])) : createCommentVNode("", true),
                                        $options.canUpdateStudy ? (openBlock(), createBlock("button", {
                                          key: 1,
                                          class: "inline-flex ml-2 items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500",
                                          onClick: ($event) => $options.editMolecule(
                                            molecule
                                          )
                                        }, [
                                          createVNode(_component_PencilIcon, { class: "w-4 h-4 inline mr-1" }),
                                          createTextVNode("Edit ")
                                        ], 8, ["onClick"])) : createCommentVNode("", true)
                                      ])
                                    ])
                                  ])
                                ]);
                              }), 128))
                            ]),
                            createVNode("div", { class: "rounded-full border p-2 z-10 bg-gray-100 text-sm mt-14 text-center" }, " Sample chemical composition ")
                          ])) : (openBlock(), createBlock("div", { key: 1 }, [
                            createVNode("div", { class: "text-center my-10 py-10" }, [
                              createVNode("h3", { class: "mt-2 text-sm font-medium text-gray-900" }, " No structures associated with the sample! "),
                              !$props.study.is_public ? (openBlock(), createBlock("p", {
                                key: 0,
                                class: "mt-1 text-sm text-gray-500"
                              }, " Get started by adding a new molecule. ")) : createCommentVNode("", true)
                            ])
                          ]))
                        ]),
                        $options.canUpdateStudy ? (openBlock(), createBlock("div", {
                          key: 0,
                          class: "pl-2"
                        }, [
                          createVNode("div", { class: "sm:col-span-4" }, [
                            createVNode("label", {
                              for: "email",
                              class: "block text-sm font-medium text-gray-700"
                            }, [
                              createTextVNode(" SMILES "),
                              createVNode("div", { class: "tooltip" }, [
                                createVNode(_component_InformationCircleIcon, { class: "w-5 h-5 inline" }),
                                createVNode("span", { class: "w-64 bg-gray-900 text-white p-4 shadow-lg rounded-md tooltiptext" }, [
                                  createTextVNode("Simplified molecular-input line-entry system (SMILES) is a specification in the form of a line notation for describing the structure of chemical species using short ASCII strings. For more information please checkout "),
                                  createVNode("a", {
                                    href: "https://en.wikipedia.org/wiki/Simplified_molecular-input_line-entry_system",
                                    class: "text-gray-400",
                                    target: "_blank"
                                  }, "here"),
                                  createTextVNode(" and "),
                                  createVNode("a", {
                                    href: "https://www.daylight.com/dayhtml/doc/theory/theory.smiles.html",
                                    class: "text-gray-400",
                                    target: "_blank"
                                  }, "here"),
                                  createTextVNode(".")
                                ])
                              ])
                            ]),
                            createVNode("div", { class: "mt-1 mb-2" }, [
                              withDirectives(createVNode("input", {
                                id: "smiles",
                                "onUpdate:modelValue": ($event) => $data.smiles = $event,
                                name: "smiles",
                                type: "text",
                                class: "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md",
                                onBlur: $options.loadSmiles
                              }, null, 40, ["onUpdate:modelValue", "onBlur"]), [
                                [vModelText, $data.smiles]
                              ]),
                              $data.smiles && $data.smiles != "" ? (openBlock(), createBlock("button", {
                                key: 0,
                                class: "inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 mt-2",
                                onClick: $options.loadSmiles
                              }, " Load Structure ", 8, ["onClick"])) : createCommentVNode("", true),
                              createVNode(_component_jet_input_error, {
                                message: $data.errorMessage,
                                class: "mt-2"
                              }, null, 8, ["message"])
                            ])
                          ]),
                          createVNode("div", { class: "relative" }, [
                            createVNode("div", {
                              class: "absolute inset-0 flex items-center",
                              "aria-hidden": "true"
                            }, [
                              createVNode("div", { class: "w-full border-t border-gray-300" })
                            ]),
                            createVNode("div", { class: "relative flex justify-center" }, [
                              createVNode("span", { class: "px-2 bg-white text-sm text-gray-500" }, " Or ")
                            ])
                          ]),
                          createVNode("span", { class: "float-right text-xs cursor-pointer hover:text-blue-700" }, [
                            createVNode("a", {
                              href: "https://docs.nmrxiv.org/submission-guides/editor.html",
                              target: "_blank"
                            }, "Need help?")
                          ]),
                          createVNode("div", {
                            id: "structureSearchEditor",
                            class: "w-full border my-4 rounded-md",
                            style: { "height": "400px" }
                          }),
                          createVNode("div", { class: "mt-1 mb-6" }, [
                            createVNode("label", {
                              for: "email",
                              class: "block text-sm font-medium text-gray-700"
                            }, [
                              createTextVNode(" Percentage composition (" + toDisplayString($data.percentage) + "%) ", 1),
                              createVNode(_component_ToolTip, {
                                class: "inline h-4 w-12 ml-0",
                                text: "If the molecule percentage is unknown, please keep it as 0."
                              })
                            ]),
                            createVNode(_component_slider, {
                              modelValue: $data.percentage,
                              "onUpdate:modelValue": ($event) => $data.percentage = $event,
                              min: 0,
                              max: $options.getMax,
                              height: 10,
                              color: "#000",
                              "track-color": "#999"
                            }, null, 8, ["modelValue", "onUpdate:modelValue", "max"])
                          ]),
                          createVNode("button", {
                            type: "button",
                            class: "inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                            onClick: ($event) => $options.saveMolecule(null)
                          }, " ADD ", 8, ["onClick"])
                        ])) : createCommentVNode("", true)
                      ]),
                      $props.study ? (openBlock(), createBlock("div", { key: 0 }, [
                        $props.study.molecules && $props.study.molecules.length == 0 ? (openBlock(), createBlock("div", { key: 0 }, [
                          createVNode("template", null, [
                            createVNode("button", {
                              type: "button",
                              class: "relative block w-full border-2 border-gray-300 border-dashed rounded-lg p-12 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"
                            }, [
                              (openBlock(), createBlock("svg", {
                                class: "mx-auto h-12 w-12 text-gray-400",
                                xmlns: "http://www.w3.org/2000/svg",
                                stroke: "currentColor",
                                fill: "none",
                                viewBox: "0 0 48 48",
                                "aria-hidden": "true"
                              }, [
                                createVNode("path", {
                                  "stroke-linecap": "round",
                                  "stroke-linejoin": "round",
                                  "stroke-width": "2",
                                  d: "M8 14v20c0 4.418 7.163 8 16 8 1.381 0 2.721-.087 4-.252M8 14c0 4.418 7.163 8 16 8s16-3.582 16-8M8 14c0-4.418 7.163-8 16-8s16 3.582 16 8m0 0v14m0-4c0 4.418-7.163 8-16 8S8 28.418 8 24m32 10v6m0 0v6m0-6h6m-6 0h-6"
                                })
                              ])),
                              createVNode("span", { class: "mt-2 block text-sm font-medium text-gray-900" }, " Create a new database ")
                            ])
                          ])
                        ])) : createCommentVNode("", true),
                        $props.study.molecules && $props.study.molecules.length > 0 ? (openBlock(), createBlock("div", { key: 1 }, " Mols ")) : createCommentVNode("", true)
                      ])) : createCommentVNode("", true)
                    ])
                  ])
                ]),
                createVNode("div", { class: "mb-4" }, [
                  createVNode("div", { class: "relative" }, [
                    createVNode("div", {
                      class: "absolute inset-0 flex items-center",
                      "aria-hidden": "true"
                    }, [
                      createVNode("div", { class: "w-full border-t border-gray-300" })
                    ]),
                    createVNode("div", { class: "relative flex items-center justify-between" }, [
                      createVNode("span", { class: "px-3 -ml-4 rounded text-sm bg-gray-100 font-medium text-gray-500" }, " Description "),
                      $options.canUpdateStudy ? (openBlock(), createBlock("button", {
                        key: 0,
                        type: "button",
                        class: "inline-flex items-center shadow-sm px-4 py-1.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                        onClick: $options.openStudyDetailsPane
                      }, [
                        createVNode(_component_PencilIcon, { class: "w-4 h-4 mr-1 text-gray-600" }),
                        createVNode("span", null, "Edit")
                      ], 8, ["onClick"])) : createCommentVNode("", true)
                    ])
                  ]),
                  createVNode("dd", { class: "mt-1 text-md text-gray-900 space-y-5" }, [
                    createVNode("p", {
                      style: { "max-width": "100ch !important" },
                      class: "prose mt-1 text-sm text-blue-gray-500",
                      innerHTML: _ctx.md($props.study.description)
                    }, null, 8, ["innerHTML"])
                  ])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$n = _sfc_main$n.setup;
_sfc_main$n.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Study/About.vue");
  return _sfc_setup$n ? _sfc_setup$n(props, ctx) : void 0;
};
const About = /* @__PURE__ */ _export_sfc(_sfc_main$n, [["ssrRender", _sfc_ssrRender$m]]);
const __vite_glob_0_58 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: About
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$m = {
  components: {
    StudyContent,
    LoadingButton,
    ShareIcon,
    ClipboardDocumentIcon,
    Menu,
    MenuButton,
    MenuItem,
    MenuItems,
    SpectraEditor,
    SpectraViewer,
    Citation
  },
  props: [
    "study",
    "project",
    "current",
    "team",
    "members",
    "availableRoles",
    "studyPermissions",
    "studyRole",
    "model"
  ],
  data() {
    return {
      autoSaving: false,
      selectedDataset: null,
      currentMolecules: [],
      license: "No license selected",
      loading: false,
      spectraError: null,
      role: this.studyRole
    };
  },
  computed: {
    currentStep() {
      return this.steps.filter((s2) => s2.status == "current")[0];
    },
    url() {
      return String(this.$page.props.url);
    },
    shareURL() {
      return this.selectedDataset.public_url;
    },
    canUpdateStudy() {
      return this.studyPermissions ? this.studyPermissions.canUpdateStudy : false;
    }
  },
  mounted() {
    const urlSearchParams = new URLSearchParams(window.location.search);
    const params = Object.fromEntries(urlSearchParams.entries());
    let dsId = params["dsid"];
    this.study.datasets.forEach((ds) => {
      if (ds.id == dsId) {
        this.selectedDataset = ds;
      }
    });
    if (!this.selectedDataset) {
      this.selectedDataset = this.study.datasets[0];
    }
    this.$nextTick(function() {
      if (this.$refs.spectraEditorREF) {
        this.$refs.spectraEditorREF.registerEvents();
      }
    });
  },
  beforeMount() {
    if (this.study.license_id) {
      this.loading = true;
      axios.get(route("license", this.study.license_id)).then((res) => {
        this.license = res.data[0].title;
      }).finally(() => {
        this.loading = false;
      });
    }
  },
  methods: {
    openDatasetCreateDialog() {
      this.emitter.emit("openDatasetCreateDialog", {
        draft_id: this.project.draft_id,
        return_url: "/studies/" + this.study.id + "/datasets"
      });
    },
    updateDataSet() {
      if (this.selectedDataset) {
        if (this.selectedSpectraData != null) {
          this.autoSaving = true;
          axios.post(
            "/dashboard/datasets/" + this.selectedDataset.id + "/nmriumInfo",
            {
              spectra: this.selectedSpectraData,
              molecules: this.currentMolecules
            }
          ).catch((error) => {
            console.log(error.data);
          }).then((response) => {
            let i2 = 0;
            this.study.datasets.forEach((ds) => {
              if (ds.id == response.data.id) {
                this.study.datasets[i2] = response.data;
                this.selectedDataset = this.study.datasets[i2];
                if (this.selectedDataset.nmrium_info) {
                  let nmrium_info = JSON.parse(
                    this.selectedDataset.nmrium_info
                  );
                  if (nmrium_info) {
                    this.selectedSpectraData = nmrium_info["spectra"];
                  }
                }
              }
              i2 = i2 + 1;
            });
            this.autoSaving = false;
          });
        }
      }
    }
  }
};
function _sfc_ssrRender$l(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_study_content = resolveComponent("study-content");
  const _component_Menu = resolveComponent("Menu");
  const _component_MenuButton = resolveComponent("MenuButton");
  const _component_ShareIcon = resolveComponent("ShareIcon");
  const _component_MenuItems = resolveComponent("MenuItems");
  const _component_MenuItem = resolveComponent("MenuItem");
  const _component_ClipboardDocumentIcon = resolveComponent("ClipboardDocumentIcon");
  const _component_SpectraEditor = resolveComponent("SpectraEditor");
  const _component_SpectraViewer = resolveComponent("SpectraViewer");
  const _component_loading_button = resolveComponent("loading-button");
  _push(`<div${ssrRenderAttrs(_attrs)}>`);
  _push(ssrRenderComponent(_component_study_content, {
    model: "study",
    project: $props.project,
    study: $props.study,
    team: $props.team,
    members: $props.members,
    "available-roles": $props.availableRoles,
    "study-permissions": $props.studyPermissions,
    "study-role": $props.studyRole,
    current: "Datasets"
  }, {
    "study-section": withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="px-4 sm:px-6 md:px-0"${_scopeId}>`);
        if ($data.selectedDataset && $props.study.is_public) {
          _push2(`<div class="p-4"${_scopeId}><div class="float-right"${_scopeId}><div class="flex-0.5 self-center"${_scopeId}>`);
          if ($data.selectedDataset && $props.study.is_public) {
            _push2(ssrRenderComponent(_component_Menu, {
              as: "div",
              class: "relative text-left"
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(`<div${_scopeId2}>`);
                  _push3(ssrRenderComponent(_component_MenuButton, { class: "bg-white text-sm rounded-full flex items-center text-gray-400 hover:text-gray-600" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(ssrRenderComponent(_component_ShareIcon, {
                          class: "h-4 w-4 text-gray-800 flex-shrink-0 mr-2",
                          "aria-hidden": "true"
                        }, null, _parent4, _scopeId3));
                        _push4(`Share `);
                      } else {
                        return [
                          createVNode(_component_ShareIcon, {
                            class: "h-4 w-4 text-gray-800 flex-shrink-0 mr-2",
                            "aria-hidden": "true"
                          }),
                          createTextVNode("Share ")
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                  _push3(`</div>`);
                  _push3(ssrRenderComponent(_component_MenuItems, { class: "origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50" }, {
                    default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                      if (_push4) {
                        _push4(`<div class="py-1"${_scopeId3}>`);
                        _push4(ssrRenderComponent(_component_MenuItem, null, {
                          default: withCtx(({ active }, _push5, _parent5, _scopeId4) => {
                            if (_push5) {
                              _push5(`<div class="${ssrRenderClass([
                                active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                "block px-4 py-2 text-sm flex"
                              ])}"${_scopeId4}><div class="flex-grow"${_scopeId4}><input id="datasetPublicURLCopy" readonly type="text"${ssrRenderAttr(
                                "value",
                                $options.shareURL
                              )} class="rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300"${_scopeId4}></div><button type="button" class="-ml-px relative inline-flex items-center space-x-2 px-2 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500"${_scopeId4}><span${_scopeId4}>`);
                              _push5(ssrRenderComponent(_component_ClipboardDocumentIcon, {
                                class: "h-5 w-5",
                                "aria-hidden": "true"
                              }, null, _parent5, _scopeId4));
                              _push5(`</span></button></div>`);
                            } else {
                              return [
                                createVNode("div", {
                                  class: [
                                    active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                    "block px-4 py-2 text-sm flex"
                                  ]
                                }, [
                                  createVNode("div", { class: "flex-grow" }, [
                                    createVNode("input", {
                                      id: "datasetPublicURLCopy",
                                      readonly: "",
                                      type: "text",
                                      value: $options.shareURL,
                                      class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                      onFocus: ($event) => $event.target.select()
                                    }, null, 40, ["value", "onFocus"])
                                  ]),
                                  createVNode("button", {
                                    type: "button",
                                    class: "-ml-px relative inline-flex items-center space-x-2 px-2 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                    onClick: ($event) => _ctx.copyToClipboard(
                                      $options.shareURL,
                                      "datasetPublicURLCopy"
                                    )
                                  }, [
                                    createVNode("span", null, [
                                      createVNode(_component_ClipboardDocumentIcon, {
                                        class: "h-5 w-5",
                                        "aria-hidden": "true"
                                      })
                                    ])
                                  ], 8, ["onClick"])
                                ], 2)
                              ];
                            }
                          }),
                          _: 1
                        }, _parent4, _scopeId3));
                        _push4(`</div>`);
                      } else {
                        return [
                          createVNode("div", { class: "py-1" }, [
                            createVNode(_component_MenuItem, null, {
                              default: withCtx(({ active }) => [
                                createVNode("div", {
                                  class: [
                                    active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                    "block px-4 py-2 text-sm flex"
                                  ]
                                }, [
                                  createVNode("div", { class: "flex-grow" }, [
                                    createVNode("input", {
                                      id: "datasetPublicURLCopy",
                                      readonly: "",
                                      type: "text",
                                      value: $options.shareURL,
                                      class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                      onFocus: ($event) => $event.target.select()
                                    }, null, 40, ["value", "onFocus"])
                                  ]),
                                  createVNode("button", {
                                    type: "button",
                                    class: "-ml-px relative inline-flex items-center space-x-2 px-2 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                    onClick: ($event) => _ctx.copyToClipboard(
                                      $options.shareURL,
                                      "datasetPublicURLCopy"
                                    )
                                  }, [
                                    createVNode("span", null, [
                                      createVNode(_component_ClipboardDocumentIcon, {
                                        class: "h-5 w-5",
                                        "aria-hidden": "true"
                                      })
                                    ])
                                  ], 8, ["onClick"])
                                ], 2)
                              ]),
                              _: 1
                            })
                          ])
                        ];
                      }
                    }),
                    _: 1
                  }, _parent3, _scopeId2));
                } else {
                  return [
                    createVNode("div", null, [
                      createVNode(_component_MenuButton, { class: "bg-white text-sm rounded-full flex items-center text-gray-400 hover:text-gray-600" }, {
                        default: withCtx(() => [
                          createVNode(_component_ShareIcon, {
                            class: "h-4 w-4 text-gray-800 flex-shrink-0 mr-2",
                            "aria-hidden": "true"
                          }),
                          createTextVNode("Share ")
                        ]),
                        _: 1
                      })
                    ]),
                    createVNode(Transition, {
                      "enter-active-class": "transition ease-out duration-100",
                      "enter-from-class": "transform opacity-0 scale-95",
                      "enter-to-class": "transform opacity-100 scale-100",
                      "leave-active-class": "transition ease-in duration-75",
                      "leave-from-class": "transform opacity-100 scale-100",
                      "leave-to-class": "transform opacity-0 scale-95"
                    }, {
                      default: withCtx(() => [
                        createVNode(_component_MenuItems, { class: "origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50" }, {
                          default: withCtx(() => [
                            createVNode("div", { class: "py-1" }, [
                              createVNode(_component_MenuItem, null, {
                                default: withCtx(({ active }) => [
                                  createVNode("div", {
                                    class: [
                                      active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                      "block px-4 py-2 text-sm flex"
                                    ]
                                  }, [
                                    createVNode("div", { class: "flex-grow" }, [
                                      createVNode("input", {
                                        id: "datasetPublicURLCopy",
                                        readonly: "",
                                        type: "text",
                                        value: $options.shareURL,
                                        class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                        onFocus: ($event) => $event.target.select()
                                      }, null, 40, ["value", "onFocus"])
                                    ]),
                                    createVNode("button", {
                                      type: "button",
                                      class: "-ml-px relative inline-flex items-center space-x-2 px-2 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                      onClick: ($event) => _ctx.copyToClipboard(
                                        $options.shareURL,
                                        "datasetPublicURLCopy"
                                      )
                                    }, [
                                      createVNode("span", null, [
                                        createVNode(_component_ClipboardDocumentIcon, {
                                          class: "h-5 w-5",
                                          "aria-hidden": "true"
                                        })
                                      ])
                                    ], 8, ["onClick"])
                                  ], 2)
                                ]),
                                _: 1
                              })
                            ])
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    })
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
          } else {
            _push2(`<!---->`);
          }
          _push2(`</div></div></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="p-6"${_scopeId}>`);
        if ($data.selectedDataset) {
          _push2(`<div class="mb-7"${_scopeId}>`);
          if ($options.canUpdateStudy) {
            _push2(ssrRenderComponent(_component_SpectraEditor, {
              ref: "spectraEditorREF",
              dataset: $data.selectedDataset,
              project: $props.project,
              study: $props.study
            }, null, _parent2, _scopeId));
          } else {
            _push2(ssrRenderComponent(_component_SpectraViewer, {
              ref: "spectraViewerREF",
              dataset: $data.selectedDataset,
              project: $props.project,
              study: $props.study
            }, null, _parent2, _scopeId));
          }
          _push2(`</div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<div class="pt-3"${_scopeId}><div${_scopeId}><label class="block text-sm font-medium text-gray-700"${_scopeId}> License </label><div class="p-1 pr-2 grid grid-cols-2"${_scopeId}><div${_scopeId}>`);
        _push2(ssrRenderComponent(_component_loading_button, { loading: $data.loading }, null, _parent2, _scopeId));
        if (!$data.loading) {
          _push2(`<input id="study-name"${ssrRenderAttr("value", $data.license)} readonly type="text" name="study-name" class="block w-full shadow-sm sm:text-sm focus:ring-gray-500 focus:border-gray-500 border-gray-300 rounded-md"${_scopeId}>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div></div></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "px-4 sm:px-6 md:px-0" }, [
            $data.selectedDataset && $props.study.is_public ? (openBlock(), createBlock("div", {
              key: 0,
              class: "p-4"
            }, [
              createVNode("div", { class: "float-right" }, [
                createVNode("div", { class: "flex-0.5 self-center" }, [
                  $data.selectedDataset && $props.study.is_public ? (openBlock(), createBlock(_component_Menu, {
                    key: 0,
                    as: "div",
                    class: "relative text-left"
                  }, {
                    default: withCtx(() => [
                      createVNode("div", null, [
                        createVNode(_component_MenuButton, { class: "bg-white text-sm rounded-full flex items-center text-gray-400 hover:text-gray-600" }, {
                          default: withCtx(() => [
                            createVNode(_component_ShareIcon, {
                              class: "h-4 w-4 text-gray-800 flex-shrink-0 mr-2",
                              "aria-hidden": "true"
                            }),
                            createTextVNode("Share ")
                          ]),
                          _: 1
                        })
                      ]),
                      createVNode(Transition, {
                        "enter-active-class": "transition ease-out duration-100",
                        "enter-from-class": "transform opacity-0 scale-95",
                        "enter-to-class": "transform opacity-100 scale-100",
                        "leave-active-class": "transition ease-in duration-75",
                        "leave-from-class": "transform opacity-100 scale-100",
                        "leave-to-class": "transform opacity-0 scale-95"
                      }, {
                        default: withCtx(() => [
                          createVNode(_component_MenuItems, { class: "origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none z-50" }, {
                            default: withCtx(() => [
                              createVNode("div", { class: "py-1" }, [
                                createVNode(_component_MenuItem, null, {
                                  default: withCtx(({ active }) => [
                                    createVNode("div", {
                                      class: [
                                        active ? "bg-gray-100 text-gray-900" : "text-gray-700",
                                        "block px-4 py-2 text-sm flex"
                                      ]
                                    }, [
                                      createVNode("div", { class: "flex-grow" }, [
                                        createVNode("input", {
                                          id: "datasetPublicURLCopy",
                                          readonly: "",
                                          type: "text",
                                          value: $options.shareURL,
                                          class: "rounded-l-md focus:ring-gray-500 focus:border-gray-500 block w-full rounded-none rounded-l-md sm:text-sm border-gray-300",
                                          onFocus: ($event) => $event.target.select()
                                        }, null, 40, ["value", "onFocus"])
                                      ]),
                                      createVNode("button", {
                                        type: "button",
                                        class: "-ml-px relative inline-flex items-center space-x-2 px-2 py-2 border border-gray-300 text-sm font-medium rounded-r-md text-gray-700 bg-gray-50 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-500 focus:border-gray-500",
                                        onClick: ($event) => _ctx.copyToClipboard(
                                          $options.shareURL,
                                          "datasetPublicURLCopy"
                                        )
                                      }, [
                                        createVNode("span", null, [
                                          createVNode(_component_ClipboardDocumentIcon, {
                                            class: "h-5 w-5",
                                            "aria-hidden": "true"
                                          })
                                        ])
                                      ], 8, ["onClick"])
                                    ], 2)
                                  ]),
                                  _: 1
                                })
                              ])
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      })
                    ]),
                    _: 1
                  })) : createCommentVNode("", true)
                ])
              ])
            ])) : createCommentVNode("", true),
            createVNode("div", { class: "p-6" }, [
              $data.selectedDataset ? (openBlock(), createBlock("div", {
                key: 0,
                class: "mb-7"
              }, [
                $options.canUpdateStudy ? (openBlock(), createBlock(_component_SpectraEditor, {
                  key: 0,
                  ref: "spectraEditorREF",
                  dataset: $data.selectedDataset,
                  project: $props.project,
                  study: $props.study
                }, null, 8, ["dataset", "project", "study"])) : (openBlock(), createBlock(_component_SpectraViewer, {
                  key: 1,
                  ref: "spectraViewerREF",
                  dataset: $data.selectedDataset,
                  project: $props.project,
                  study: $props.study
                }, null, 8, ["dataset", "project", "study"]))
              ])) : createCommentVNode("", true),
              createVNode("div", { class: "pt-3" }, [
                createVNode("div", null, [
                  createVNode("label", { class: "block text-sm font-medium text-gray-700" }, " License "),
                  createVNode("div", { class: "p-1 pr-2 grid grid-cols-2" }, [
                    createVNode("div", null, [
                      createVNode(_component_loading_button, { loading: $data.loading }, null, 8, ["loading"]),
                      !$data.loading ? withDirectives((openBlock(), createBlock("input", {
                        key: 0,
                        id: "study-name",
                        "onUpdate:modelValue": ($event) => $data.license = $event,
                        readonly: "",
                        type: "text",
                        name: "study-name",
                        class: "block w-full shadow-sm sm:text-sm focus:ring-gray-500 focus:border-gray-500 border-gray-300 rounded-md"
                      }, null, 8, ["onUpdate:modelValue"])), [
                        [vModelText, $data.license]
                      ]) : createCommentVNode("", true)
                    ])
                  ])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$m = _sfc_main$m.setup;
_sfc_main$m.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Study/Datasets.vue");
  return _sfc_setup$m ? _sfc_setup$m(props, ctx) : void 0;
};
const Datasets = /* @__PURE__ */ _export_sfc(_sfc_main$m, [["ssrRender", _sfc_ssrRender$l]]);
const __vite_glob_0_60 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Datasets
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$l = {
  components: {
    StudyContent,
    Disclosure,
    DisclosureButton,
    DisclosurePanel,
    FolderIcon: FolderIcon$1,
    DocumentTextIcon,
    FileDetails,
    ChevronRightIcon,
    HomeIcon
  },
  props: [
    "study",
    "project",
    "file",
    "team",
    "members",
    "availableRoles",
    "studyPermissions",
    "studyRole"
  ],
  setup() {
    return {};
  },
  data() {
    return {
      progress: 0,
      status: null,
      selectedFileSystemObject: null,
      svgString: null
    };
  },
  computed: {
    url() {
      return String(this.$page.props.url);
    },
    nmriumURL() {
      return this.$page.props.nmriumURL ? String(this.$page.props.nmriumURL) : "//nmriumdev.nmrxiv.org";
    },
    downloadURL() {
      return this.url + "/" + this.project.owner.username + "/download/" + this.project.slug + "?key=" + this.$page.props.selectedFileSystemObject.name + "&uuid=" + this.$page.props.selectedFileSystemObject.uuid;
    },
    canUpdateFiles() {
      return this.studyPermissions ? this.studyPermissions.canUpdateStudy : false;
    }
  },
  mounted() {
    const vm = this;
    vm.$page.props.selectedFileSystemObject = vm.file;
    vm.$page.props.selectedFolder = vm.file.children[0] ? vm.file.children[0].relative_url : "";
    if (!this.study.is_public) {
      let options = {
        url: "/",
        method: "put",
        sending(file, xhr) {
          let _send = xhr.send;
          xhr.send = () => {
            _send.call(xhr, file);
          };
        },
        autoProcessQueue: false,
        uploadMultiple: false,
        disablePreviews: true,
        parallelUploads: 1,
        maxFiles: 1e4,
        dictDefaultMessage: document.querySelector("#dropzone-message") ? document.querySelector("#dropzone-message").innerHTML : null,
        done() {
        },
        accept(file, done) {
          const url = "/dashboard/storage/signed-storage-url";
          const client = axios.create({
            baseURL: window.location.origin
          });
          axiosRetry(client, {
            retries: 3,
            retryCondition: (error) => {
              return error.response.status === 500;
            }
          });
          client.post(url, {
            file,
            destination: vm.$page.props.selectedFolder,
            project_id: vm.project.id,
            study_id: vm.study.id
          }).catch((err) => {
            if (err.response.status !== 200 || err.response.status !== 201) {
              throw new Error(
                `API call failed with status code: ${err.response.status} after multiple attempts`
              );
            }
          }).then(function(response) {
            let data = response.data;
            let headers = data.headers;
            if ("Host" in headers) {
              delete headers.Host;
            }
            file.uploadURL = data.url;
            setTimeout(() => vm.dropzone.processFile(file));
            done();
          });
        },
        totaluploadprogress: function(progress) {
          vm.progress = Math.ceil(progress);
        },
        queuecomplete: function() {
          vm.status = "UPLOAD COMPLETE";
          router$1.reload();
          this.$page.props.selectedFileSystemObject = this.files[0];
        }
      };
      this.dropzone = new Dropzone(this.$el, options);
      vm.dropzone.on("processing", (file) => {
        vm.status = "UPLOAD IN PROGRESS";
        vm.dropzone.options.url = file.uploadURL;
      });
    }
    this.$page.props.selectedFileSystemObject = this.file.children[0];
  },
  methods: {
    displaySelected(file) {
      this.$page.props.selectedFileSystemObject = file;
      let sFolder = "/";
      if (this.$page.props.selectedFileSystemObject.name == "/") {
        sFolder = "/";
      } else {
        if (this.$page.props.selectedFileSystemObject.type != "file") {
          sFolder = this.$page.props.selectedFileSystemObject.relative_url;
        } else {
          if (this.$page.props.selectedFileSystemObject.parent_id == null) {
            sFolder = "/";
          } else {
            sFolder = this.$page.props.selectedFileSystemObject.relative_url.replace(
              "/" + this.$page.props.selectedFileSystemObject.name,
              ""
            );
          }
        }
      }
      this.$page.props.selectedFolder = sFolder;
      if (file.has_children && file.level > 0 && !file.children) {
        file.loading = true;
        axios.get(
          "/api/v1/files/children/" + this.study.id + "/" + file.id
        ).then((response) => {
          file.children = response.data.files[0].children;
          file.loading = false;
        });
      }
    },
    loadMol() {
      this.svgString = null;
      axios.get(this.downloadURL).then((response) => {
        if (response && response.data != "") {
          let mol = OCL$2.Molecule.fromMolfile(response.data);
          if (mol.toIsomericSmiles() != "") {
            this.svgString = mol.toSVG(300, 300);
          }
        }
      });
    }
  }
};
function _sfc_ssrRender$k(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_study_content = resolveComponent("study-content");
  const _component_HomeIcon = resolveComponent("HomeIcon");
  const _component_ChevronRightIcon = resolveComponent("ChevronRightIcon");
  const _component_children = resolveComponent("children");
  const _component_FolderIcon = resolveComponent("FolderIcon");
  const _component_DocumentTextIcon = resolveComponent("DocumentTextIcon");
  const _component_File_details = resolveComponent("File-details");
  _push(`<div${ssrRenderAttrs(_attrs)}>`);
  _push(ssrRenderComponent(_component_study_content, {
    model: "study",
    project: $props.project,
    study: $props.study,
    team: $props.team,
    members: $props.members,
    "available-roles": $props.availableRoles,
    "study-permissions": $props.studyPermissions,
    "study-role": $props.studyRole,
    current: "Files"
  }, {
    "study-section": withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="divide-y divide-gray-200 sm:col-span-9"${_scopeId}>`);
        if ($props.file) {
          _push2(`<div${_scopeId}>`);
          if (_ctx.$page.props.selectedFolder) {
            _push2(`<nav class="flex p-3" aria-label="Breadcrumb"${_scopeId}><ol role="list" class="flex items-center space-x-2"${_scopeId}><li${_scopeId}><div${_scopeId}><a class="text-gray-400 hover:text-gray-900"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_HomeIcon, {
              class: "flex-shrink-0 h-5 w-5",
              "aria-hidden": "true"
            }, null, _parent2, _scopeId));
            _push2(`<span class="sr-only"${_scopeId}>Home</span></a></div></li><!--[-->`);
            ssrRenderList(_ctx.$page.props.selectedFolder.split(
              "/"
            ), (page) => {
              _push2(`<li${_scopeId}>`);
              if (page != "") {
                _push2(`<div class="flex items-center"${_scopeId}>`);
                _push2(ssrRenderComponent(_component_ChevronRightIcon, {
                  class: "flex-shrink-0 h-5 w-5 text-gray-400",
                  "aria-hidden": "true"
                }, null, _parent2, _scopeId));
                _push2(`<a class="ml-4 text-sm font-medium text-gray-500 hover:text-gray-700"${ssrRenderAttr(
                  "aria-current",
                  page ? "page" : void 0
                )}${_scopeId}>${ssrInterpolate(page)}</a></div>`);
              } else {
                _push2(`<!---->`);
              }
              _push2(`</li>`);
            });
            _push2(`<!--]--></ol></nav>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`<div class="min-w-0 flex-1 min-h-screen border-t border-gray-200 lg:flex"${_scopeId}><aside class="hidden py-3 px-2 lg:block lg:flex-shrink-0 lg:order-first"${_scopeId}>`);
          if ($props.file != null) {
            _push2(`<div class="h-full relative flex flex-col w-64 border-r border-gray-200 overflow-y-auto"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_children, {
              file: $props.file,
              study: $props.study,
              project: $props.project
            }, null, _parent2, _scopeId));
            _push2(`</div>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</aside><section class="min-w-0 p-6 flex-1 h-full flex flex-col overflow-y-auto lg:order-last"${_scopeId}>`);
          if (_ctx.$page.props.selectedFileSystemObject && _ctx.$page.props.selectedFileSystemObject.has_children) {
            _push2(`<div class="mb-3"${_scopeId}><div class="py-2 mb-2 block"${_scopeId}><p class="font-bold text-xl"${_scopeId}>${ssrInterpolate(_ctx.$page.props.selectedFileSystemObject.name)} <a${ssrRenderAttr("href", $options.downloadURL)} class="ml-4 cursor-pointer relative inline-flex items-center px-4 py-1 rounded-full border border-gray-300 bg-white text-sm font-black text-dark hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 float-right"${_scopeId}> Download </a></p></div><ul role="list" class="mb-3 grid grid-cols-1 gap-5 sm:gap-6 sm:grid-cols-2 lg:grid-cols-4"${_scopeId}><!--[-->`);
            ssrRenderList(_ctx.$page.props.selectedFileSystemObject.children, (file) => {
              _push2(`<li class="relative shadow rounded-lg"${_scopeId}><div class="group block w-full aspect-w-10 aspect-h-7 py-4 bg-gray-100 focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-offset-gray-100 focus-within:ring-indigo-500 overflow-hidden"${_scopeId}>`);
              if (file.type == "directory") {
                _push2(`<span${_scopeId}>`);
                _push2(ssrRenderComponent(_component_FolderIcon, {
                  class: "cursor-pointer h-28 w-28 text-gray-400 flex-shrink-0 mx-auto",
                  "aria-hidden": "true",
                  onDblclick: ($event) => $options.displaySelected(
                    file
                  )
                }, null, _parent2, _scopeId));
                _push2(`</span>`);
              } else {
                _push2(`<span${_scopeId}>`);
                _push2(ssrRenderComponent(_component_DocumentTextIcon, {
                  class: "h-28 w-28 text-gray-400 flex-shrink-0 mx-auto",
                  "aria-hidden": "true"
                }, null, _parent2, _scopeId));
                _push2(`</span>`);
              }
              _push2(`</div><p class="mt-2 px-2 py-1 block truncate text-sm font-medium text-gray-900 pointer-events-none"${_scopeId}>${ssrInterpolate(file.name)}</p><p class="block text-sm font-medium text-gray-500 pointer-events-none"${_scopeId}>${ssrInterpolate(file.size)}</p></li>`);
            });
            _push2(`<!--]--></ul></div>`);
          } else {
            _push2(`<div${_scopeId}><div class=""${_scopeId}>`);
            if (_ctx.$page.props.selectedFileSystemObject && _ctx.$page.props.selectedFileSystemObject.type == "file") {
              _push2(`<span${_scopeId}>`);
              _push2(ssrRenderComponent(_component_File_details, {
                study: $props.study,
                file: _ctx.$page.props.selectedFileSystemObject
              }, null, _parent2, _scopeId));
              _push2(`</span>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div></div>`);
          }
          _push2(`</section></div></div>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "divide-y divide-gray-200 sm:col-span-9" }, [
            $props.file ? (openBlock(), createBlock("div", { key: 0 }, [
              _ctx.$page.props.selectedFolder ? (openBlock(), createBlock("nav", {
                key: 0,
                class: "flex p-3",
                "aria-label": "Breadcrumb"
              }, [
                createVNode("ol", {
                  role: "list",
                  class: "flex items-center space-x-2"
                }, [
                  createVNode("li", null, [
                    createVNode("div", null, [
                      createVNode("a", { class: "text-gray-400 hover:text-gray-900" }, [
                        createVNode(_component_HomeIcon, {
                          class: "flex-shrink-0 h-5 w-5",
                          "aria-hidden": "true"
                        }),
                        createVNode("span", { class: "sr-only" }, "Home")
                      ])
                    ])
                  ]),
                  (openBlock(true), createBlock(Fragment, null, renderList(_ctx.$page.props.selectedFolder.split(
                    "/"
                  ), (page) => {
                    return openBlock(), createBlock("li", {
                      key: page.name
                    }, [
                      page != "" ? (openBlock(), createBlock("div", {
                        key: 0,
                        class: "flex items-center"
                      }, [
                        createVNode(_component_ChevronRightIcon, {
                          class: "flex-shrink-0 h-5 w-5 text-gray-400",
                          "aria-hidden": "true"
                        }),
                        createVNode("a", {
                          class: "ml-4 text-sm font-medium text-gray-500 hover:text-gray-700",
                          "aria-current": page ? "page" : void 0
                        }, toDisplayString(page), 9, ["aria-current"])
                      ])) : createCommentVNode("", true)
                    ]);
                  }), 128))
                ])
              ])) : createCommentVNode("", true),
              createVNode("div", { class: "min-w-0 flex-1 min-h-screen border-t border-gray-200 lg:flex" }, [
                createVNode("aside", { class: "hidden py-3 px-2 lg:block lg:flex-shrink-0 lg:order-first" }, [
                  $props.file != null ? (openBlock(), createBlock("div", {
                    key: 0,
                    class: "h-full relative flex flex-col w-64 border-r border-gray-200 overflow-y-auto"
                  }, [
                    createVNode(_component_children, {
                      file: $props.file,
                      study: $props.study,
                      project: $props.project
                    }, null, 8, ["file", "study", "project"])
                  ])) : createCommentVNode("", true)
                ]),
                createVNode("section", { class: "min-w-0 p-6 flex-1 h-full flex flex-col overflow-y-auto lg:order-last" }, [
                  _ctx.$page.props.selectedFileSystemObject && _ctx.$page.props.selectedFileSystemObject.has_children ? (openBlock(), createBlock("div", {
                    key: 0,
                    class: "mb-3"
                  }, [
                    createVNode("div", { class: "py-2 mb-2 block" }, [
                      createVNode("p", { class: "font-bold text-xl" }, [
                        createTextVNode(toDisplayString(_ctx.$page.props.selectedFileSystemObject.name) + " ", 1),
                        createVNode("a", {
                          href: $options.downloadURL,
                          class: "ml-4 cursor-pointer relative inline-flex items-center px-4 py-1 rounded-full border border-gray-300 bg-white text-sm font-black text-dark hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 float-right"
                        }, " Download ", 8, ["href"])
                      ])
                    ]),
                    createVNode("ul", {
                      role: "list",
                      class: "mb-3 grid grid-cols-1 gap-5 sm:gap-6 sm:grid-cols-2 lg:grid-cols-4"
                    }, [
                      (openBlock(true), createBlock(Fragment, null, renderList(_ctx.$page.props.selectedFileSystemObject.children, (file) => {
                        return openBlock(), createBlock("li", {
                          key: file.key,
                          class: "relative shadow rounded-lg"
                        }, [
                          createVNode("div", { class: "group block w-full aspect-w-10 aspect-h-7 py-4 bg-gray-100 focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-offset-gray-100 focus-within:ring-indigo-500 overflow-hidden" }, [
                            file.type == "directory" ? (openBlock(), createBlock("span", { key: 0 }, [
                              createVNode(_component_FolderIcon, {
                                class: "cursor-pointer h-28 w-28 text-gray-400 flex-shrink-0 mx-auto",
                                "aria-hidden": "true",
                                onDblclick: withModifiers(($event) => $options.displaySelected(
                                  file
                                ), ["stop"])
                              }, null, 8, ["onDblclick"])
                            ])) : (openBlock(), createBlock("span", { key: 1 }, [
                              createVNode(_component_DocumentTextIcon, {
                                class: "h-28 w-28 text-gray-400 flex-shrink-0 mx-auto",
                                "aria-hidden": "true"
                              })
                            ]))
                          ]),
                          createVNode("p", { class: "mt-2 px-2 py-1 block truncate text-sm font-medium text-gray-900 pointer-events-none" }, toDisplayString(file.name), 1),
                          createVNode("p", { class: "block text-sm font-medium text-gray-500 pointer-events-none" }, toDisplayString(file.size), 1)
                        ]);
                      }), 128))
                    ])
                  ])) : (openBlock(), createBlock("div", { key: 1 }, [
                    createVNode("div", { class: "" }, [
                      _ctx.$page.props.selectedFileSystemObject && _ctx.$page.props.selectedFileSystemObject.type == "file" ? (openBlock(), createBlock("span", { key: 0 }, [
                        createVNode(_component_File_details, {
                          study: $props.study,
                          file: _ctx.$page.props.selectedFileSystemObject
                        }, null, 8, ["study", "file"])
                      ])) : createCommentVNode("", true)
                    ])
                  ]))
                ])
              ])
            ])) : createCommentVNode("", true)
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$l = _sfc_main$l.setup;
_sfc_main$l.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Study/Files.vue");
  return _sfc_setup$l ? _sfc_setup$l(props, ctx) : void 0;
};
const Files = /* @__PURE__ */ _export_sfc(_sfc_main$l, [["ssrRender", _sfc_ssrRender$k]]);
const __vite_glob_0_61 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Files
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$k = {
  components: {
    StudyContent
  },
  props: ["study", "project"],
  setup() {
  },
  mounted() {
  }
};
function _sfc_ssrRender$j(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_study_content = resolveComponent("study-content");
  _push(`<div${ssrRenderAttrs(_attrs)}>`);
  _push(ssrRenderComponent(_component_study_content, {
    project: $props.project,
    study: $props.study,
    current: "Integrations"
  }, {
    "study-section": withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="divide-y divide-gray-200 sm:col-span-9"${_scopeId}><div class="py-6 px-4 sm:p-6 lg:pb-8"${_scopeId}><div${_scopeId}><h2 class="text-lg leading-6 font-medium text-gray-900"${_scopeId}> Integrations </h2></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "divide-y divide-gray-200 sm:col-span-9" }, [
            createVNode("div", { class: "py-6 px-4 sm:p-6 lg:pb-8" }, [
              createVNode("div", null, [
                createVNode("h2", { class: "text-lg leading-6 font-medium text-gray-900" }, " Integrations ")
              ])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$k = _sfc_main$k.setup;
_sfc_main$k.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Study/Integrations.vue");
  return _sfc_setup$k ? _sfc_setup$k(props, ctx) : void 0;
};
const Integrations = /* @__PURE__ */ _export_sfc(_sfc_main$k, [["ssrRender", _sfc_ssrRender$j]]);
const __vite_glob_0_63 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Integrations
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$j = {
  components: {
    StudyContent
  },
  props: ["study", "project"],
  setup() {
  },
  mounted() {
  }
};
function _sfc_ssrRender$i(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_study_content = resolveComponent("study-content");
  _push(`<div${ssrRenderAttrs(_attrs)}>`);
  _push(ssrRenderComponent(_component_study_content, {
    project: $props.project,
    study: $props.study,
    current: "Molecular Identifications"
  }, {
    "study-section": withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="divide-y divide-gray-200 sm:col-span-9"${_scopeId}><div class="py-6 px-4 sm:p-6 lg:pb-8"${_scopeId}><div${_scopeId}><h2 class="text-lg leading-6 font-medium text-gray-900"${_scopeId}> Molecular Identifications </h2></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "divide-y divide-gray-200 sm:col-span-9" }, [
            createVNode("div", { class: "py-6 px-4 sm:p-6 lg:pb-8" }, [
              createVNode("div", null, [
                createVNode("h2", { class: "text-lg leading-6 font-medium text-gray-900" }, " Molecular Identifications ")
              ])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$j = _sfc_main$j.setup;
_sfc_main$j.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Study/MolecularIdentifications.vue");
  return _sfc_setup$j ? _sfc_setup$j(props, ctx) : void 0;
};
const MolecularIdentifications = /* @__PURE__ */ _export_sfc(_sfc_main$j, [["ssrRender", _sfc_ssrRender$i]]);
const __vite_glob_0_65 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: MolecularIdentifications
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$i = {
  components: {
    StudyContent
  },
  props: ["study", "project"],
  setup() {
  },
  mounted() {
  }
};
function _sfc_ssrRender$h(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_study_content = resolveComponent("study-content");
  _push(`<div${ssrRenderAttrs(_attrs)}>`);
  _push(ssrRenderComponent(_component_study_content, {
    project: $props.project,
    study: $props.study,
    current: "Notifications"
  }, {
    "study-section": withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="divide-y divide-gray-200 sm:col-span-9"${_scopeId}><div class="py-6 px-4 sm:p-6 lg:pb-8"${_scopeId}><div${_scopeId}><h2 class="text-lg leading-6 font-medium text-gray-900"${_scopeId}> Notifications </h2></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "divide-y divide-gray-200 sm:col-span-9" }, [
            createVNode("div", { class: "py-6 px-4 sm:p-6 lg:pb-8" }, [
              createVNode("div", null, [
                createVNode("h2", { class: "text-lg leading-6 font-medium text-gray-900" }, " Notifications ")
              ])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$i = _sfc_main$i.setup;
_sfc_main$i.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Study/Notifications.vue");
  return _sfc_setup$i ? _sfc_setup$i(props, ctx) : void 0;
};
const Notifications = /* @__PURE__ */ _export_sfc(_sfc_main$i, [["ssrRender", _sfc_ssrRender$h]]);
const __vite_glob_0_66 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Notifications
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$h = {
  components: {
    JetActionSection,
    JetDangerButton,
    JetDialogModal,
    JetInput,
    JetInputError,
    JetSecondaryButton
  },
  props: ["study"],
  data() {
    return {
      confirmingStudyDeletion: false,
      form: this.$inertia.form({
        password: ""
      })
    };
  },
  methods: {
    confirmStudyDeletion() {
      this.confirmingStudyDeletion = true;
      setTimeout(() => this.$refs.password.focus(), 250);
    },
    deleteStudy() {
      this.form.delete(route("dashboard.study.destroy", this.study.id), {
        preserveScroll: true,
        onSuccess: () => this.closeModal(),
        onError: () => this.$refs.password.focus(),
        onFinish: () => this.form.reset()
      });
    },
    closeModal() {
      this.confirmingStudyDeletion = false;
      this.form.reset();
    }
  }
};
function _sfc_ssrRender$g(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = resolveComponent("jet-action-section");
  const _component_jet_danger_button = resolveComponent("jet-danger-button");
  const _component_jet_dialog_modal = resolveComponent("jet-dialog-modal");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  _push(ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete Study `);
      } else {
        return [
          createTextVNode(" Delete Study ")
        ];
      }
    }),
    description: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Permanently delete your study. `);
      } else {
        return [
          createTextVNode(" Permanently delete your study. ")
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> Once your study is deleted, all of its resources and data will be permanently deleted. Before deleting your study, please download any data or information that you wish to retain. </div><div class="mt-5"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_danger_button, { onClick: $options.confirmStudyDeletion }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Study `);
            } else {
              return [
                createTextVNode(" Delete Study ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(ssrRenderComponent(_component_jet_dialog_modal, {
          show: $data.confirmingStudyDeletion,
          onClose: $options.closeModal
        }, {
          title: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Study `);
            } else {
              return [
                createTextVNode(" Delete Study ")
              ];
            }
          }),
          content: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Are you sure you want to delete your study? Once your study is deleted, all of its resources and data will be permanently deleted. Please enter your password to confirm you would like to permanently delete your study. <div class="mt-4"${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_jet_input, {
                ref: "password",
                modelValue: $data.form.password,
                "onUpdate:modelValue": ($event) => $data.form.password = $event,
                type: "password",
                class: "mt-1 block w-3/4",
                placeholder: "Password",
                onKeyup: $options.deleteStudy
              }, null, _parent3, _scopeId2));
              _push3(ssrRenderComponent(_component_jet_input_error, {
                message: $data.form.errors.password,
                class: "mt-2"
              }, null, _parent3, _scopeId2));
              _push3(`</div>`);
            } else {
              return [
                createTextVNode(" Are you sure you want to delete your study? Once your study is deleted, all of its resources and data will be permanently deleted. Please enter your password to confirm you would like to permanently delete your study. "),
                createVNode("div", { class: "mt-4" }, [
                  createVNode(_component_jet_input, {
                    ref: "password",
                    modelValue: $data.form.password,
                    "onUpdate:modelValue": ($event) => $data.form.password = $event,
                    type: "password",
                    class: "mt-1 block w-3/4",
                    placeholder: "Password",
                    onKeyup: withKeys($options.deleteStudy, ["enter"])
                  }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
                  createVNode(_component_jet_input_error, {
                    message: $data.form.errors.password,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ])
              ];
            }
          }),
          footer: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(ssrRenderComponent(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                disabled: $data.form.processing,
                onClick: $options.deleteStudy
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Delete Study `);
                  } else {
                    return [
                      createTextVNode(" Delete Study ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                createVNode(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                  default: withCtx(() => [
                    createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                createVNode(_component_jet_danger_button, {
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  disabled: $data.form.processing,
                  onClick: $options.deleteStudy
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Delete Study ")
                  ]),
                  _: 1
                }, 8, ["class", "disabled", "onClick"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Once your study is deleted, all of its resources and data will be permanently deleted. Before deleting your study, please download any data or information that you wish to retain. "),
          createVNode("div", { class: "mt-5" }, [
            createVNode(_component_jet_danger_button, { onClick: $options.confirmStudyDeletion }, {
              default: withCtx(() => [
                createTextVNode(" Delete Study ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ]),
          createVNode(_component_jet_dialog_modal, {
            show: $data.confirmingStudyDeletion,
            onClose: $options.closeModal
          }, {
            title: withCtx(() => [
              createTextVNode(" Delete Study ")
            ]),
            content: withCtx(() => [
              createTextVNode(" Are you sure you want to delete your study? Once your study is deleted, all of its resources and data will be permanently deleted. Please enter your password to confirm you would like to permanently delete your study. "),
              createVNode("div", { class: "mt-4" }, [
                createVNode(_component_jet_input, {
                  ref: "password",
                  modelValue: $data.form.password,
                  "onUpdate:modelValue": ($event) => $data.form.password = $event,
                  type: "password",
                  class: "mt-1 block w-3/4",
                  placeholder: "Password",
                  onKeyup: withKeys($options.deleteStudy, ["enter"])
                }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
                createVNode(_component_jet_input_error, {
                  message: $data.form.errors.password,
                  class: "mt-2"
                }, null, 8, ["message"])
              ])
            ]),
            footer: withCtx(() => [
              createVNode(_component_jet_secondary_button, { onClick: $options.closeModal }, {
                default: withCtx(() => [
                  createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              createVNode(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                disabled: $data.form.processing,
                onClick: $options.deleteStudy
              }, {
                default: withCtx(() => [
                  createTextVNode(" Delete Study ")
                ]),
                _: 1
              }, 8, ["class", "disabled", "onClick"])
            ]),
            _: 1
          }, 8, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$h = _sfc_main$h.setup;
_sfc_main$h.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Study/Partials/Delete.vue");
  return _sfc_setup$h ? _sfc_setup$h(props, ctx) : void 0;
};
const StudyDelete = /* @__PURE__ */ _export_sfc(_sfc_main$h, [["ssrRender", _sfc_ssrRender$g]]);
const __vite_glob_0_69 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: StudyDelete
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$g = {
  components: {
    StudyContent
  },
  props: ["study", "project"],
  setup() {
  },
  mounted() {
  }
};
function _sfc_ssrRender$f(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_study_content = resolveComponent("study-content");
  _push(`<div${ssrRenderAttrs(_attrs)}>`);
  _push(ssrRenderComponent(_component_study_content, {
    project: $props.project,
    study: $props.study,
    current: "Protocols"
  }, {
    "study-section": withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="divide-y divide-gray-200 sm:col-span-9"${_scopeId}><div class="py-6 px-4 sm:p-6 lg:pb-8"${_scopeId}><div${_scopeId}><h2 class="text-lg leading-6 font-medium text-gray-900"${_scopeId}> Protocols </h2></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "divide-y divide-gray-200 sm:col-span-9" }, [
            createVNode("div", { class: "py-6 px-4 sm:p-6 lg:pb-8" }, [
              createVNode("div", null, [
                createVNode("h2", { class: "text-lg leading-6 font-medium text-gray-900" }, " Protocols ")
              ])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$g = _sfc_main$g.setup;
_sfc_main$g.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Study/Protocols.vue");
  return _sfc_setup$g ? _sfc_setup$g(props, ctx) : void 0;
};
const Protocols = /* @__PURE__ */ _export_sfc(_sfc_main$g, [["ssrRender", _sfc_ssrRender$f]]);
const __vite_glob_0_71 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Protocols
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$f = {
  components: {
    Link,
    AppLayout,
    StudyDelete
  },
  props: ["study"]
};
function _sfc_ssrRender$e(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_Link = resolveComponent("Link");
  const _component_study_delete = resolveComponent("study-delete");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({
    title: $props.study.name
  }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white border-b"${_scopeId}><div class="px-12"${_scopeId}><div class="flex flex-nowrap justify-between py-6"${_scopeId}><div${_scopeId}><div class="flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_Link, {
          href: _ctx.route("dashboard.studies", $props.study.id)
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`${ssrInterpolate($props.study.name)}`);
            } else {
              return [
                createTextVNode(toDisplayString($props.study.name), 1)
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(` / Settings </div></div></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white border-b" }, [
            createVNode("div", { class: "px-12" }, [
              createVNode("div", { class: "flex flex-nowrap justify-between py-6" }, [
                createVNode("div", null, [
                  createVNode("div", { class: "flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest" }, [
                    createVNode(_component_Link, {
                      href: _ctx.route("dashboard.studies", $props.study.id)
                    }, {
                      default: withCtx(() => [
                        createTextVNode(toDisplayString($props.study.name), 1)
                      ]),
                      _: 1
                    }, 8, ["href"]),
                    createTextVNode(" / Settings ")
                  ])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="py-12 px-10"${_scopeId}><div${_scopeId}>`);
        _push2(ssrRenderComponent(_component_study_delete, { study: $props.study }, null, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          createVNode("div", { class: "py-12 px-10" }, [
            createVNode("div", null, [
              createVNode(_component_study_delete, { study: $props.study }, null, 8, ["study"])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$f = _sfc_main$f.setup;
_sfc_main$f.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Study/Settings.vue");
  return _sfc_setup$f ? _sfc_setup$f(props, ctx) : void 0;
};
const Settings = /* @__PURE__ */ _export_sfc(_sfc_main$f, [["ssrRender", _sfc_ssrRender$e]]);
const __vite_glob_0_72 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Settings
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$e = {
  components: {
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel
  },
  data() {
    return {
      form: this.$inertia.form({
        name: ""
      })
    };
  },
  methods: {
    createTeam() {
      this.form.post(route("teams.store"), {
        errorBag: "createTeam",
        preserveScroll: true
      });
    }
  }
};
function _sfc_ssrRender$d(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = resolveComponent("jet-form-section");
  const _component_jet_label = resolveComponent("jet-label");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_jet_button = resolveComponent("jet-button");
  _push(ssrRenderComponent(_component_jet_form_section, mergeProps({ onSubmitted: $options.createTeam }, _attrs), {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Team Details `);
      } else {
        return [
          createTextVNode(" Team Details ")
        ];
      }
    }),
    description: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Create a new team to collaborate with others on projects. `);
      } else {
        return [
          createTextVNode(" Create a new team to collaborate with others on projects. ")
        ];
      }
    }),
    form: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, { value: "Team Owner" }, null, _parent2, _scopeId));
        _push2(`<div class="flex items-center mt-2"${_scopeId}><img class="w-12 h-12 rounded-full object-cover"${ssrRenderAttr("src", _ctx.$page.props.auth.user.profile_photo_url)}${ssrRenderAttr("alt", _ctx.$page.props.auth.user.name)}${_scopeId}><div class="ml-4 leading-tight"${_scopeId}><div${_scopeId}>${ssrInterpolate(_ctx.$page.props.auth.user.first_name)} ${ssrInterpolate(_ctx.$page.props.auth.user.last_name)}</div><div class="text-gray-700 text-sm"${_scopeId}>${ssrInterpolate(_ctx.$page.props.auth.user.email)}</div></div></div></div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Team Name"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "name",
          modelValue: $data.form.name,
          "onUpdate:modelValue": ($event) => $data.form.name = $event,
          type: "text",
          class: "mt-1 block w-full",
          autofocus: ""
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "col-span-6" }, [
            createVNode(_component_jet_label, { value: "Team Owner" }),
            createVNode("div", { class: "flex items-center mt-2" }, [
              createVNode("img", {
                class: "w-12 h-12 rounded-full object-cover",
                src: _ctx.$page.props.auth.user.profile_photo_url,
                alt: _ctx.$page.props.auth.user.name
              }, null, 8, ["src", "alt"]),
              createVNode("div", { class: "ml-4 leading-tight" }, [
                createVNode("div", null, toDisplayString(_ctx.$page.props.auth.user.first_name) + " " + toDisplayString(_ctx.$page.props.auth.user.last_name), 1),
                createVNode("div", { class: "text-gray-700 text-sm" }, toDisplayString(_ctx.$page.props.auth.user.email), 1)
              ])
            ])
          ]),
          createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            createVNode(_component_jet_label, {
              for: "name",
              value: "Team Name"
            }),
            createVNode(_component_jet_input, {
              id: "name",
              modelValue: $data.form.name,
              "onUpdate:modelValue": ($event) => $data.form.name = $event,
              type: "text",
              class: "mt-1 block w-full",
              autofocus: ""
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            createVNode(_component_jet_input_error, {
              message: $data.form.errors.name,
              class: "mt-2"
            }, null, 8, ["message"])
          ])
        ];
      }
    }),
    actions: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_button, {
          class: { "opacity-25": $data.form.processing },
          disabled: $data.form.processing
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Create `);
            } else {
              return [
                createTextVNode(" Create ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_button, {
            class: { "opacity-25": $data.form.processing },
            disabled: $data.form.processing
          }, {
            default: withCtx(() => [
              createTextVNode(" Create ")
            ]),
            _: 1
          }, 8, ["class", "disabled"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$e = _sfc_main$e.setup;
_sfc_main$e.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Teams/Partials/CreateTeamForm.vue");
  return _sfc_setup$e ? _sfc_setup$e(props, ctx) : void 0;
};
const CreateTeamForm = /* @__PURE__ */ _export_sfc(_sfc_main$e, [["ssrRender", _sfc_ssrRender$d]]);
const __vite_glob_0_74 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: CreateTeamForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$d = {
  components: {
    AppLayout,
    CreateTeamForm
  }
};
function _sfc_ssrRender$c(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_create_team_form = resolveComponent("create-team-form");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({ title: "Create Team" }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white border-b"${_scopeId}><div class="px-12"${_scopeId}><div class="flex flex-nowrap justify-between py-6"${_scopeId}><h2 class="font-semibold text-xl text-gray-800 leading-tight"${_scopeId}> Create Team </h2></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white border-b" }, [
            createVNode("div", { class: "px-12" }, [
              createVNode("div", { class: "flex flex-nowrap justify-between py-6" }, [
                createVNode("h2", { class: "font-semibold text-xl text-gray-800 leading-tight" }, " Create Team ")
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}><div class="max-w-7xl mx-auto py-10 sm:px-6 lg:px-8"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_create_team_form, null, null, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          createVNode("div", null, [
            createVNode("div", { class: "max-w-7xl mx-auto py-10 sm:px-6 lg:px-8" }, [
              createVNode(_component_create_team_form)
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$d = _sfc_main$d.setup;
_sfc_main$d.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Teams/Create.vue");
  return _sfc_setup$d ? _sfc_setup$d(props, ctx) : void 0;
};
const Create = /* @__PURE__ */ _export_sfc(_sfc_main$d, [["ssrRender", _sfc_ssrRender$c]]);
const __vite_glob_0_73 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Create
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$c = {
  components: {
    JetActionSection,
    JetConfirmationModal,
    JetDangerButton,
    JetSecondaryButton,
    JetInputError,
    JetInput
  },
  props: ["team"],
  data() {
    return {
      confirmingTeamDeletion: false,
      deleting: false,
      form: this.$inertia.form({
        password: ""
      })
    };
  },
  methods: {
    confirmTeamDeletion() {
      this.confirmingTeamDeletion = true;
    },
    deleteTeam() {
      this.form.delete(route("app.teams.destroy", this.team), {
        onError: () => this.$refs.password.focus(),
        errorBag: "deleteTeam",
        onFinish: () => this.form.reset()
      });
    }
  }
};
function _sfc_ssrRender$b(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_action_section = resolveComponent("jet-action-section");
  const _component_jet_danger_button = resolveComponent("jet-danger-button");
  const _component_jet_confirmation_modal = resolveComponent("jet-confirmation-modal");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  _push(ssrRenderComponent(_component_jet_action_section, _attrs, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Delete Team `);
      } else {
        return [
          createTextVNode(" Delete Team ")
        ];
      }
    }),
    description: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Permanently delete this team. `);
      } else {
        return [
          createTextVNode(" Permanently delete this team. ")
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="max-w-xl text-sm text-gray-600"${_scopeId}> Once a team is deleted, all of its resources and data will be permanently deleted. Before deleting this team, please download any data or information regarding this team that you wish to retain. </div><div class="mt-5"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_danger_button, { onClick: $options.confirmTeamDeletion }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Team `);
            } else {
              return [
                createTextVNode(" Delete Team ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(ssrRenderComponent(_component_jet_confirmation_modal, {
          show: $data.confirmingTeamDeletion,
          onClose: ($event) => $data.confirmingTeamDeletion = false
        }, {
          title: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Delete Team `);
            } else {
              return [
                createTextVNode(" Delete Team ")
              ];
            }
          }),
          content: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Are you sure you want to delete this team? Once a team is deleted, all of its resources and data will be permanently deleted. <div class="mt-4"${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_jet_input, {
                ref: "password",
                modelValue: $data.form.password,
                "onUpdate:modelValue": ($event) => $data.form.password = $event,
                type: "password",
                class: "mt-1 block w-3/4",
                placeholder: "Password",
                onKeyup: $options.deleteTeam
              }, null, _parent3, _scopeId2));
              _push3(ssrRenderComponent(_component_jet_input_error, {
                message: $data.form.errors.password,
                class: "mt-2"
              }, null, _parent3, _scopeId2));
              _push3(`</div>`);
              _push3(ssrRenderComponent(_component_jet_input_error, {
                message: $data.form.errors.hasProject,
                class: "mt-2"
              }, null, _parent3, _scopeId2));
            } else {
              return [
                createTextVNode(" Are you sure you want to delete this team? Once a team is deleted, all of its resources and data will be permanently deleted. "),
                createVNode("div", { class: "mt-4" }, [
                  createVNode(_component_jet_input, {
                    ref: "password",
                    modelValue: $data.form.password,
                    "onUpdate:modelValue": ($event) => $data.form.password = $event,
                    type: "password",
                    class: "mt-1 block w-3/4",
                    placeholder: "Password",
                    onKeyup: withKeys($options.deleteTeam, ["enter"])
                  }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
                  createVNode(_component_jet_input_error, {
                    message: $data.form.errors.password,
                    class: "mt-2"
                  }, null, 8, ["message"])
                ]),
                createVNode(_component_jet_input_error, {
                  message: $data.form.errors.hasProject,
                  class: "mt-2"
                }, null, 8, ["message"])
              ];
            }
          }),
          footer: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingTeamDeletion = false
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Cancel `);
                  } else {
                    return [
                      createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(ssrRenderComponent(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                disabled: $data.form.processing,
                onClick: $options.deleteTeam
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Delete Team `);
                  } else {
                    return [
                      createTextVNode(" Delete Team ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
            } else {
              return [
                createVNode(_component_jet_secondary_button, {
                  onClick: ($event) => $data.confirmingTeamDeletion = false
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Cancel ")
                  ]),
                  _: 1
                }, 8, ["onClick"]),
                createVNode(_component_jet_danger_button, {
                  class: ["ml-2", { "opacity-25": $data.form.processing }],
                  disabled: $data.form.processing,
                  onClick: $options.deleteTeam
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Delete Team ")
                  ]),
                  _: 1
                }, 8, ["class", "disabled", "onClick"])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Once a team is deleted, all of its resources and data will be permanently deleted. Before deleting this team, please download any data or information regarding this team that you wish to retain. "),
          createVNode("div", { class: "mt-5" }, [
            createVNode(_component_jet_danger_button, { onClick: $options.confirmTeamDeletion }, {
              default: withCtx(() => [
                createTextVNode(" Delete Team ")
              ]),
              _: 1
            }, 8, ["onClick"])
          ]),
          createVNode(_component_jet_confirmation_modal, {
            show: $data.confirmingTeamDeletion,
            onClose: ($event) => $data.confirmingTeamDeletion = false
          }, {
            title: withCtx(() => [
              createTextVNode(" Delete Team ")
            ]),
            content: withCtx(() => [
              createTextVNode(" Are you sure you want to delete this team? Once a team is deleted, all of its resources and data will be permanently deleted. "),
              createVNode("div", { class: "mt-4" }, [
                createVNode(_component_jet_input, {
                  ref: "password",
                  modelValue: $data.form.password,
                  "onUpdate:modelValue": ($event) => $data.form.password = $event,
                  type: "password",
                  class: "mt-1 block w-3/4",
                  placeholder: "Password",
                  onKeyup: withKeys($options.deleteTeam, ["enter"])
                }, null, 8, ["modelValue", "onUpdate:modelValue", "onKeyup"]),
                createVNode(_component_jet_input_error, {
                  message: $data.form.errors.password,
                  class: "mt-2"
                }, null, 8, ["message"])
              ]),
              createVNode(_component_jet_input_error, {
                message: $data.form.errors.hasProject,
                class: "mt-2"
              }, null, 8, ["message"])
            ]),
            footer: withCtx(() => [
              createVNode(_component_jet_secondary_button, {
                onClick: ($event) => $data.confirmingTeamDeletion = false
              }, {
                default: withCtx(() => [
                  createTextVNode(" Cancel ")
                ]),
                _: 1
              }, 8, ["onClick"]),
              createVNode(_component_jet_danger_button, {
                class: ["ml-2", { "opacity-25": $data.form.processing }],
                disabled: $data.form.processing,
                onClick: $options.deleteTeam
              }, {
                default: withCtx(() => [
                  createTextVNode(" Delete Team ")
                ]),
                _: 1
              }, 8, ["class", "disabled", "onClick"])
            ]),
            _: 1
          }, 8, ["show", "onClose"])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$c = _sfc_main$c.setup;
_sfc_main$c.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Teams/Partials/DeleteTeamForm.vue");
  return _sfc_setup$c ? _sfc_setup$c(props, ctx) : void 0;
};
const DeleteTeamForm = /* @__PURE__ */ _export_sfc(_sfc_main$c, [["ssrRender", _sfc_ssrRender$b]]);
const __vite_glob_0_75 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: DeleteTeamForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$b = {
  components: {
    JetActionMessage,
    JetActionSection,
    JetButton,
    JetConfirmationModal,
    JetDangerButton,
    JetDialogModal,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel,
    JetSecondaryButton,
    JetSectionBorder
  },
  props: ["team", "availableRoles", "userPermissions"],
  data() {
    return {
      addTeamMemberForm: this.$inertia.form({
        email: "",
        role: null
      }),
      updateRoleForm: this.$inertia.form({
        role: null
      }),
      leaveTeamForm: this.$inertia.form({}),
      removeTeamMemberForm: this.$inertia.form({}),
      currentlyManagingRole: false,
      managingRoleFor: null,
      confirmingLeavingTeam: false,
      teamMemberBeingRemoved: null
    };
  },
  methods: {
    addTeamMember() {
      this.addTeamMemberForm.post(
        route("team-members.store", this.team),
        {
          errorBag: "addTeamMember",
          preserveScroll: true,
          onSuccess: () => this.addTeamMemberForm.reset()
        }
      );
    },
    cancelTeamInvitation(invitation) {
      this.$inertia.delete(
        route("team-invitations.destroy", invitation),
        {
          preserveScroll: true
        }
      );
    },
    manageRole(teamMember) {
      this.managingRoleFor = teamMember;
      this.updateRoleForm.role = teamMember.membership.role;
      this.currentlyManagingRole = true;
    },
    updateRole() {
      this.updateRoleForm.put(
        route("team-members.update", [this.team, this.managingRoleFor]),
        {
          preserveScroll: true,
          onSuccess: () => this.currentlyManagingRole = false
        }
      );
    },
    confirmLeavingTeam() {
      this.confirmingLeavingTeam = true;
    },
    leaveTeam() {
      this.leaveTeamForm.delete(
        route("team-members.destroy", [
          this.team,
          this.$page.props.auth.user
        ])
      );
    },
    confirmTeamMemberRemoval(teamMember) {
      this.teamMemberBeingRemoved = teamMember;
    },
    removeTeamMember() {
      this.removeTeamMemberForm.delete(
        route("team-members.destroy", [
          this.team,
          this.teamMemberBeingRemoved
        ]),
        {
          errorBag: "removeTeamMember",
          preserveScroll: true,
          preserveState: true,
          onSuccess: () => this.teamMemberBeingRemoved = null
        }
      );
    },
    displayableRole(role) {
      return this.availableRoles.find((r2) => r2.key === role).name;
    }
  }
};
function _sfc_ssrRender$a(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_section_border = resolveComponent("jet-section-border");
  const _component_jet_form_section = resolveComponent("jet-form-section");
  const _component_jet_label = resolveComponent("jet-label");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_jet_action_message = resolveComponent("jet-action-message");
  const _component_jet_button = resolveComponent("jet-button");
  const _component_jet_action_section = resolveComponent("jet-action-section");
  const _component_jet_dialog_modal = resolveComponent("jet-dialog-modal");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  const _component_jet_confirmation_modal = resolveComponent("jet-confirmation-modal");
  const _component_jet_danger_button = resolveComponent("jet-danger-button");
  _push(`<div${ssrRenderAttrs(_attrs)}>`);
  if ($props.userPermissions.canAddTeamMembers) {
    _push(`<div>`);
    _push(ssrRenderComponent(_component_jet_section_border, null, null, _parent));
    _push(ssrRenderComponent(_component_jet_form_section, { onSubmitted: $options.addTeamMember }, {
      title: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` Add Team Member `);
        } else {
          return [
            createTextVNode(" Add Team Member ")
          ];
        }
      }),
      description: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` Add a new team member to your team, allowing them to collaborate with you. `);
        } else {
          return [
            createTextVNode(" Add a new team member to your team, allowing them to collaborate with you. ")
          ];
        }
      }),
      form: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`<div class="col-span-6"${_scopeId}><div class="max-w-xl text-sm text-gray-600"${_scopeId}> Please provide the email address of the person you would like to add to this team. </div></div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_jet_label, {
            for: "email",
            value: "Email"
          }, null, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_jet_input, {
            id: "email",
            modelValue: $data.addTeamMemberForm.email,
            "onUpdate:modelValue": ($event) => $data.addTeamMemberForm.email = $event,
            type: "email",
            class: "mt-1 block w-full"
          }, null, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_jet_input_error, {
            message: $data.addTeamMemberForm.errors.email,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
          if ($props.availableRoles.length > 0) {
            _push2(`<div class="col-span-6 lg:col-span-4"${_scopeId}>`);
            _push2(ssrRenderComponent(_component_jet_label, {
              for: "roles",
              value: "Role"
            }, null, _parent2, _scopeId));
            _push2(ssrRenderComponent(_component_jet_input_error, {
              message: $data.addTeamMemberForm.errors.role,
              class: "mt-2"
            }, null, _parent2, _scopeId));
            _push2(`<div class="relative z-0 mt-1 border border-gray-200 rounded-lg cursor-pointer text-left"${_scopeId}><!--[-->`);
            ssrRenderList($props.availableRoles, (role, i2) => {
              _push2(`<button type="button" class="${ssrRenderClass([{
                "border-t border-gray-200 rounded-t-none": i2 > 0,
                "rounded-b-none": i2 != Object.keys($props.availableRoles).length - 1
              }, "relative px-4 py-3 inline-flex w-full rounded-lg focus:z-10 focus:outline-none focus:border-blue-300 focus:ring focus:ring-blue-200"])}"${_scopeId}><div class="${ssrRenderClass({
                "opacity-50": $data.addTeamMemberForm.role && $data.addTeamMemberForm.role != role.key
              })}"${_scopeId}><div class="flex items-center"${_scopeId}><div class="${ssrRenderClass([{
                "font-semibold": $data.addTeamMemberForm.role == role.key
              }, "text-sm text-gray-600"])}"${_scopeId}>${ssrInterpolate(role.name)}</div>`);
              if ($data.addTeamMemberForm.role == role.key) {
                _push2(`<svg class="ml-2 h-5 w-5 text-green-400" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" stroke="currentColor" viewBox="0 0 24 24"${_scopeId}><path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"${_scopeId}></path></svg>`);
              } else {
                _push2(`<!---->`);
              }
              _push2(`</div><div class="mt-2 text-xs text-left text-gray-600"${_scopeId}>${ssrInterpolate(role.description)}</div></div></button>`);
            });
            _push2(`<!--]--></div></div>`);
          } else {
            _push2(`<!---->`);
          }
        } else {
          return [
            createVNode("div", { class: "col-span-6" }, [
              createVNode("div", { class: "max-w-xl text-sm text-gray-600" }, " Please provide the email address of the person you would like to add to this team. ")
            ]),
            createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
              createVNode(_component_jet_label, {
                for: "email",
                value: "Email"
              }),
              createVNode(_component_jet_input, {
                id: "email",
                modelValue: $data.addTeamMemberForm.email,
                "onUpdate:modelValue": ($event) => $data.addTeamMemberForm.email = $event,
                type: "email",
                class: "mt-1 block w-full"
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode(_component_jet_input_error, {
                message: $data.addTeamMemberForm.errors.email,
                class: "mt-2"
              }, null, 8, ["message"])
            ]),
            $props.availableRoles.length > 0 ? (openBlock(), createBlock("div", {
              key: 0,
              class: "col-span-6 lg:col-span-4"
            }, [
              createVNode(_component_jet_label, {
                for: "roles",
                value: "Role"
              }),
              createVNode(_component_jet_input_error, {
                message: $data.addTeamMemberForm.errors.role,
                class: "mt-2"
              }, null, 8, ["message"]),
              createVNode("div", { class: "relative z-0 mt-1 border border-gray-200 rounded-lg cursor-pointer text-left" }, [
                (openBlock(true), createBlock(Fragment, null, renderList($props.availableRoles, (role, i2) => {
                  return openBlock(), createBlock("button", {
                    key: role.key,
                    type: "button",
                    class: ["relative px-4 py-3 inline-flex w-full rounded-lg focus:z-10 focus:outline-none focus:border-blue-300 focus:ring focus:ring-blue-200", {
                      "border-t border-gray-200 rounded-t-none": i2 > 0,
                      "rounded-b-none": i2 != Object.keys($props.availableRoles).length - 1
                    }],
                    onClick: ($event) => $data.addTeamMemberForm.role = role.key
                  }, [
                    createVNode("div", {
                      class: {
                        "opacity-50": $data.addTeamMemberForm.role && $data.addTeamMemberForm.role != role.key
                      }
                    }, [
                      createVNode("div", { class: "flex items-center" }, [
                        createVNode("div", {
                          class: ["text-sm text-gray-600", {
                            "font-semibold": $data.addTeamMemberForm.role == role.key
                          }]
                        }, toDisplayString(role.name), 3),
                        $data.addTeamMemberForm.role == role.key ? (openBlock(), createBlock("svg", {
                          key: 0,
                          class: "ml-2 h-5 w-5 text-green-400",
                          fill: "none",
                          "stroke-linecap": "round",
                          "stroke-linejoin": "round",
                          "stroke-width": "2",
                          stroke: "currentColor",
                          viewBox: "0 0 24 24"
                        }, [
                          createVNode("path", { d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" })
                        ])) : createCommentVNode("", true)
                      ]),
                      createVNode("div", { class: "mt-2 text-xs text-left text-gray-600" }, toDisplayString(role.description), 1)
                    ], 2)
                  ], 10, ["onClick"]);
                }), 128))
              ])
            ])) : createCommentVNode("", true)
          ];
        }
      }),
      actions: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(ssrRenderComponent(_component_jet_action_message, {
            on: $data.addTeamMemberForm.recentlySuccessful,
            class: "mr-3"
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Added. `);
              } else {
                return [
                  createTextVNode(" Added. ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_jet_button, {
            class: { "opacity-25": $data.addTeamMemberForm.processing },
            disabled: $data.addTeamMemberForm.processing
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Add `);
              } else {
                return [
                  createTextVNode(" Add ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          return [
            createVNode(_component_jet_action_message, {
              on: $data.addTeamMemberForm.recentlySuccessful,
              class: "mr-3"
            }, {
              default: withCtx(() => [
                createTextVNode(" Added. ")
              ]),
              _: 1
            }, 8, ["on"]),
            createVNode(_component_jet_button, {
              class: { "opacity-25": $data.addTeamMemberForm.processing },
              disabled: $data.addTeamMemberForm.processing
            }, {
              default: withCtx(() => [
                createTextVNode(" Add ")
              ]),
              _: 1
            }, 8, ["class", "disabled"])
          ];
        }
      }),
      _: 1
    }, _parent));
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  if ($props.team.team_invitations.length > 0 && $props.userPermissions.canAddTeamMembers) {
    _push(`<div>`);
    _push(ssrRenderComponent(_component_jet_section_border, null, null, _parent));
    _push(ssrRenderComponent(_component_jet_action_section, { class: "mt-10 sm:mt-0" }, {
      title: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` Pending Team Invitations `);
        } else {
          return [
            createTextVNode(" Pending Team Invitations ")
          ];
        }
      }),
      description: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` These people have been invited to your team and have been sent an invitation email. They may join the team by accepting the email invitation. `);
        } else {
          return [
            createTextVNode(" These people have been invited to your team and have been sent an invitation email. They may join the team by accepting the email invitation. ")
          ];
        }
      }),
      content: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`<div class="space-y-6"${_scopeId}><!--[-->`);
          ssrRenderList($props.team.team_invitations, (invitation) => {
            _push2(`<div class="flex items-center justify-between"${_scopeId}><div class="text-gray-600"${_scopeId}>${ssrInterpolate(invitation.email)}</div><div class="flex items-center"${_scopeId}>`);
            if ($props.userPermissions.canRemoveTeamMembers) {
              _push2(`<button class="cursor-pointer ml-6 text-sm text-red-500 focus:outline-none"${_scopeId}> Cancel </button>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div></div>`);
          });
          _push2(`<!--]--></div>`);
        } else {
          return [
            createVNode("div", { class: "space-y-6" }, [
              (openBlock(true), createBlock(Fragment, null, renderList($props.team.team_invitations, (invitation) => {
                return openBlock(), createBlock("div", {
                  key: invitation.id,
                  class: "flex items-center justify-between"
                }, [
                  createVNode("div", { class: "text-gray-600" }, toDisplayString(invitation.email), 1),
                  createVNode("div", { class: "flex items-center" }, [
                    $props.userPermissions.canRemoveTeamMembers ? (openBlock(), createBlock("button", {
                      key: 0,
                      class: "cursor-pointer ml-6 text-sm text-red-500 focus:outline-none",
                      onClick: ($event) => $options.cancelTeamInvitation(invitation)
                    }, " Cancel ", 8, ["onClick"])) : createCommentVNode("", true)
                  ])
                ]);
              }), 128))
            ])
          ];
        }
      }),
      _: 1
    }, _parent));
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  if ($props.team.users.length > 0) {
    _push(`<div>`);
    _push(ssrRenderComponent(_component_jet_section_border, null, null, _parent));
    _push(ssrRenderComponent(_component_jet_action_section, { class: "mt-10 sm:mt-0" }, {
      title: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` Team Members `);
        } else {
          return [
            createTextVNode(" Team Members ")
          ];
        }
      }),
      description: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(` All of the people that are part of this team. `);
        } else {
          return [
            createTextVNode(" All of the people that are part of this team. ")
          ];
        }
      }),
      content: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`<div class="space-y-6"${_scopeId}><!--[-->`);
          ssrRenderList($props.team.users, (user) => {
            _push2(`<div class="flex items-center justify-between"${_scopeId}><div class="flex items-center"${_scopeId}><img class="w-8 h-8 rounded-full"${ssrRenderAttr("src", user.profile_photo_url)}${ssrRenderAttr(
              "alt",
              user.first_name + " " + user.last_name
            )}${_scopeId}><div class="ml-4"${_scopeId}>${ssrInterpolate(user.first_name)} ${ssrInterpolate(user.last_name)}</div></div><div class="flex items-center"${_scopeId}>`);
            if ($props.userPermissions.canAddTeamMembers && $props.availableRoles.length) {
              _push2(`<button class="ml-2 text-sm text-gray-400 underline"${_scopeId}>${ssrInterpolate($options.displayableRole(user.membership.role))}</button>`);
            } else if ($props.availableRoles.length) {
              _push2(`<div class="ml-2 text-sm text-gray-400"${_scopeId}>${ssrInterpolate($options.displayableRole(user.membership.role))}</div>`);
            } else {
              _push2(`<!---->`);
            }
            if (_ctx.$page.props.auth.user.id === user.id) {
              _push2(`<button class="cursor-pointer ml-6 text-sm text-red-500"${_scopeId}> Leave </button>`);
            } else {
              _push2(`<!---->`);
            }
            if ($props.userPermissions.canRemoveTeamMembers) {
              _push2(`<button class="cursor-pointer ml-6 text-sm text-red-500"${_scopeId}> Remove </button>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div></div>`);
          });
          _push2(`<!--]--></div>`);
        } else {
          return [
            createVNode("div", { class: "space-y-6" }, [
              (openBlock(true), createBlock(Fragment, null, renderList($props.team.users, (user) => {
                return openBlock(), createBlock("div", {
                  key: user.id,
                  class: "flex items-center justify-between"
                }, [
                  createVNode("div", { class: "flex items-center" }, [
                    createVNode("img", {
                      class: "w-8 h-8 rounded-full",
                      src: user.profile_photo_url,
                      alt: user.first_name + " " + user.last_name
                    }, null, 8, ["src", "alt"]),
                    createVNode("div", { class: "ml-4" }, toDisplayString(user.first_name) + " " + toDisplayString(user.last_name), 1)
                  ]),
                  createVNode("div", { class: "flex items-center" }, [
                    $props.userPermissions.canAddTeamMembers && $props.availableRoles.length ? (openBlock(), createBlock("button", {
                      key: 0,
                      class: "ml-2 text-sm text-gray-400 underline",
                      onClick: ($event) => $options.manageRole(user)
                    }, toDisplayString($options.displayableRole(user.membership.role)), 9, ["onClick"])) : $props.availableRoles.length ? (openBlock(), createBlock("div", {
                      key: 1,
                      class: "ml-2 text-sm text-gray-400"
                    }, toDisplayString($options.displayableRole(user.membership.role)), 1)) : createCommentVNode("", true),
                    _ctx.$page.props.auth.user.id === user.id ? (openBlock(), createBlock("button", {
                      key: 2,
                      class: "cursor-pointer ml-6 text-sm text-red-500",
                      onClick: $options.confirmLeavingTeam
                    }, " Leave ", 8, ["onClick"])) : createCommentVNode("", true),
                    $props.userPermissions.canRemoveTeamMembers ? (openBlock(), createBlock("button", {
                      key: 3,
                      class: "cursor-pointer ml-6 text-sm text-red-500",
                      onClick: ($event) => $options.confirmTeamMemberRemoval(user)
                    }, " Remove ", 8, ["onClick"])) : createCommentVNode("", true)
                  ])
                ]);
              }), 128))
            ])
          ];
        }
      }),
      _: 1
    }, _parent));
    _push(`</div>`);
  } else {
    _push(`<!---->`);
  }
  _push(ssrRenderComponent(_component_jet_dialog_modal, {
    show: $data.currentlyManagingRole,
    onClose: ($event) => $data.currentlyManagingRole = false
  }, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Manage Role `);
      } else {
        return [
          createTextVNode(" Manage Role ")
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($data.managingRoleFor) {
          _push2(`<div${_scopeId}><div class="relative z-0 mt-1 border border-gray-200 rounded-lg cursor-pointer"${_scopeId}><!--[-->`);
          ssrRenderList($props.availableRoles, (role, i2) => {
            _push2(`<button type="button" class="${ssrRenderClass([{
              "border-t border-gray-200 rounded-t-none": i2 > 0,
              "rounded-b-none": i2 !== Object.keys($props.availableRoles).length - 1
            }, "relative px-4 py-3 inline-flex w-full rounded-lg focus:z-10 focus:outline-none focus:border-blue-300 focus:ring focus:ring-blue-200"])}"${_scopeId}><div class="${ssrRenderClass({
              "opacity-50": $data.updateRoleForm.role && $data.updateRoleForm.role !== role.key
            })}"${_scopeId}><div class="flex items-center"${_scopeId}><div class="${ssrRenderClass([{
              "font-semibold": $data.updateRoleForm.role === role.key
            }, "text-sm text-gray-600"])}"${_scopeId}>${ssrInterpolate(role.name)}</div>`);
            if ($data.updateRoleForm.role === role.key) {
              _push2(`<svg class="ml-2 h-5 w-5 text-green-400" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" stroke="currentColor" viewBox="0 0 24 24"${_scopeId}><path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"${_scopeId}></path></svg>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div><div class="mt-2 text-xs text-gray-600"${_scopeId}>${ssrInterpolate(role.description)}</div></div></button>`);
          });
          _push2(`<!--]--></div></div>`);
        } else {
          _push2(`<!---->`);
        }
      } else {
        return [
          $data.managingRoleFor ? (openBlock(), createBlock("div", { key: 0 }, [
            createVNode("div", { class: "relative z-0 mt-1 border border-gray-200 rounded-lg cursor-pointer" }, [
              (openBlock(true), createBlock(Fragment, null, renderList($props.availableRoles, (role, i2) => {
                return openBlock(), createBlock("button", {
                  key: role.key,
                  type: "button",
                  class: ["relative px-4 py-3 inline-flex w-full rounded-lg focus:z-10 focus:outline-none focus:border-blue-300 focus:ring focus:ring-blue-200", {
                    "border-t border-gray-200 rounded-t-none": i2 > 0,
                    "rounded-b-none": i2 !== Object.keys($props.availableRoles).length - 1
                  }],
                  onClick: ($event) => $data.updateRoleForm.role = role.key
                }, [
                  createVNode("div", {
                    class: {
                      "opacity-50": $data.updateRoleForm.role && $data.updateRoleForm.role !== role.key
                    }
                  }, [
                    createVNode("div", { class: "flex items-center" }, [
                      createVNode("div", {
                        class: ["text-sm text-gray-600", {
                          "font-semibold": $data.updateRoleForm.role === role.key
                        }]
                      }, toDisplayString(role.name), 3),
                      $data.updateRoleForm.role === role.key ? (openBlock(), createBlock("svg", {
                        key: 0,
                        class: "ml-2 h-5 w-5 text-green-400",
                        fill: "none",
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round",
                        "stroke-width": "2",
                        stroke: "currentColor",
                        viewBox: "0 0 24 24"
                      }, [
                        createVNode("path", { d: "M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" })
                      ])) : createCommentVNode("", true)
                    ]),
                    createVNode("div", { class: "mt-2 text-xs text-gray-600" }, toDisplayString(role.description), 1)
                  ], 2)
                ], 10, ["onClick"]);
              }), 128))
            ])
          ])) : createCommentVNode("", true)
        ];
      }
    }),
    footer: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.currentlyManagingRole = false
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_button, {
          class: ["ml-2", { "opacity-25": $data.updateRoleForm.processing }],
          disabled: $data.updateRoleForm.processing,
          onClick: $options.updateRole
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Save `);
            } else {
              return [
                createTextVNode(" Save ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_secondary_button, {
            onClick: ($event) => $data.currentlyManagingRole = false
          }, {
            default: withCtx(() => [
              createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          createVNode(_component_jet_button, {
            class: ["ml-2", { "opacity-25": $data.updateRoleForm.processing }],
            disabled: $data.updateRoleForm.processing,
            onClick: $options.updateRole
          }, {
            default: withCtx(() => [
              createTextVNode(" Save ")
            ]),
            _: 1
          }, 8, ["class", "disabled", "onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(ssrRenderComponent(_component_jet_confirmation_modal, {
    show: $data.confirmingLeavingTeam,
    onClose: ($event) => $data.confirmingLeavingTeam = false
  }, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Leave Team `);
      } else {
        return [
          createTextVNode(" Leave Team ")
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Are you sure you would like to leave this team? `);
      } else {
        return [
          createTextVNode(" Are you sure you would like to leave this team? ")
        ];
      }
    }),
    footer: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.confirmingLeavingTeam = false
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_danger_button, {
          class: ["ml-2", { "opacity-25": $data.leaveTeamForm.processing }],
          disabled: $data.leaveTeamForm.processing,
          onClick: $options.leaveTeam
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Leave `);
            } else {
              return [
                createTextVNode(" Leave ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_secondary_button, {
            onClick: ($event) => $data.confirmingLeavingTeam = false
          }, {
            default: withCtx(() => [
              createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          createVNode(_component_jet_danger_button, {
            class: ["ml-2", { "opacity-25": $data.leaveTeamForm.processing }],
            disabled: $data.leaveTeamForm.processing,
            onClick: $options.leaveTeam
          }, {
            default: withCtx(() => [
              createTextVNode(" Leave ")
            ]),
            _: 1
          }, 8, ["class", "disabled", "onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(ssrRenderComponent(_component_jet_confirmation_modal, {
    show: $data.teamMemberBeingRemoved,
    onClose: ($event) => $data.teamMemberBeingRemoved = null
  }, {
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Remove Team Member `);
      } else {
        return [
          createTextVNode(" Remove Team Member ")
        ];
      }
    }),
    content: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Are you sure you would like to remove this person from the team? `);
      } else {
        return [
          createTextVNode(" Are you sure you would like to remove this person from the team? ")
        ];
      }
    }),
    footer: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(ssrRenderComponent(_component_jet_secondary_button, {
          onClick: ($event) => $data.teamMemberBeingRemoved = null
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Cancel `);
            } else {
              return [
                createTextVNode(" Cancel ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_danger_button, {
          class: ["ml-2", { "opacity-25": $data.removeTeamMemberForm.processing }],
          disabled: $data.removeTeamMemberForm.processing,
          onClick: $options.removeTeamMember
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(` Remove `);
            } else {
              return [
                createTextVNode(" Remove ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
      } else {
        return [
          createVNode(_component_jet_secondary_button, {
            onClick: ($event) => $data.teamMemberBeingRemoved = null
          }, {
            default: withCtx(() => [
              createTextVNode(" Cancel ")
            ]),
            _: 1
          }, 8, ["onClick"]),
          createVNode(_component_jet_danger_button, {
            class: ["ml-2", { "opacity-25": $data.removeTeamMemberForm.processing }],
            disabled: $data.removeTeamMemberForm.processing,
            onClick: $options.removeTeamMember
          }, {
            default: withCtx(() => [
              createTextVNode(" Remove ")
            ]),
            _: 1
          }, 8, ["class", "disabled", "onClick"])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div>`);
}
const _sfc_setup$b = _sfc_main$b.setup;
_sfc_main$b.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Teams/Partials/TeamMemberManager.vue");
  return _sfc_setup$b ? _sfc_setup$b(props, ctx) : void 0;
};
const TeamMemberManager = /* @__PURE__ */ _export_sfc(_sfc_main$b, [["ssrRender", _sfc_ssrRender$a]]);
const __vite_glob_0_76 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: TeamMemberManager
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$a = {
  components: {
    JetActionMessage,
    JetButton,
    JetFormSection,
    JetInput,
    JetInputError,
    JetLabel
  },
  props: ["team", "permissions"],
  data() {
    return {
      form: this.$inertia.form({
        name: this.team.name
      })
    };
  },
  methods: {
    updateTeamName() {
      this.form.put(route("teams.update", this.team), {
        errorBag: "updateTeamName",
        preserveScroll: true
      });
    }
  }
};
function _sfc_ssrRender$9(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_jet_form_section = resolveComponent("jet-form-section");
  const _component_jet_label = resolveComponent("jet-label");
  const _component_jet_input = resolveComponent("jet-input");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_jet_action_message = resolveComponent("jet-action-message");
  const _component_jet_button = resolveComponent("jet-button");
  _push(ssrRenderComponent(_component_jet_form_section, mergeProps({ onSubmitted: $options.updateTeamName }, _attrs), createSlots({
    title: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Team Name `);
      } else {
        return [
          createTextVNode(" Team Name ")
        ];
      }
    }),
    description: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` The team&#39;s name and owner information. `);
      } else {
        return [
          createTextVNode(" The team's name and owner information. ")
        ];
      }
    }),
    form: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="col-span-6"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, { value: "Team Owner" }, null, _parent2, _scopeId));
        _push2(`<div class="flex items-center mt-2"${_scopeId}><img class="w-12 h-12 rounded-full object-cover"${ssrRenderAttr("src", $props.team.owner.profile_photo_url)}${ssrRenderAttr("alt", $props.team.owner.name)}${_scopeId}><div class="ml-4 leading-tight"${_scopeId}><div${_scopeId}>${ssrInterpolate($props.team.owner.name)}</div><div class="text-gray-700 text-sm"${_scopeId}>${ssrInterpolate($props.team.owner.email)}</div></div></div></div><div class="col-span-6 sm:col-span-4"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_jet_label, {
          for: "name",
          value: "Team Name"
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input, {
          id: "name",
          modelValue: $data.form.name,
          "onUpdate:modelValue": ($event) => $data.form.name = $event,
          type: "text",
          class: "mt-1 block w-full",
          disabled: !$props.permissions.canUpdateTeam
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_jet_input_error, {
          message: $data.form.errors.name,
          class: "mt-2"
        }, null, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "col-span-6" }, [
            createVNode(_component_jet_label, { value: "Team Owner" }),
            createVNode("div", { class: "flex items-center mt-2" }, [
              createVNode("img", {
                class: "w-12 h-12 rounded-full object-cover",
                src: $props.team.owner.profile_photo_url,
                alt: $props.team.owner.name
              }, null, 8, ["src", "alt"]),
              createVNode("div", { class: "ml-4 leading-tight" }, [
                createVNode("div", null, toDisplayString($props.team.owner.name), 1),
                createVNode("div", { class: "text-gray-700 text-sm" }, toDisplayString($props.team.owner.email), 1)
              ])
            ])
          ]),
          createVNode("div", { class: "col-span-6 sm:col-span-4" }, [
            createVNode(_component_jet_label, {
              for: "name",
              value: "Team Name"
            }),
            createVNode(_component_jet_input, {
              id: "name",
              modelValue: $data.form.name,
              "onUpdate:modelValue": ($event) => $data.form.name = $event,
              type: "text",
              class: "mt-1 block w-full",
              disabled: !$props.permissions.canUpdateTeam
            }, null, 8, ["modelValue", "onUpdate:modelValue", "disabled"]),
            createVNode(_component_jet_input_error, {
              message: $data.form.errors.name,
              class: "mt-2"
            }, null, 8, ["message"])
          ])
        ];
      }
    }),
    _: 2
  }, [
    $props.permissions.canUpdateTeam ? {
      name: "actions",
      fn: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(ssrRenderComponent(_component_jet_action_message, {
            on: $data.form.recentlySuccessful,
            class: "mr-3"
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Saved. `);
              } else {
                return [
                  createTextVNode(" Saved. ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_jet_button, {
            class: { "opacity-25": $data.form.processing },
            disabled: $data.form.processing
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Save `);
              } else {
                return [
                  createTextVNode(" Save ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
        } else {
          return [
            createVNode(_component_jet_action_message, {
              on: $data.form.recentlySuccessful,
              class: "mr-3"
            }, {
              default: withCtx(() => [
                createTextVNode(" Saved. ")
              ]),
              _: 1
            }, 8, ["on"]),
            createVNode(_component_jet_button, {
              class: { "opacity-25": $data.form.processing },
              disabled: $data.form.processing
            }, {
              default: withCtx(() => [
                createTextVNode(" Save ")
              ]),
              _: 1
            }, 8, ["class", "disabled"])
          ];
        }
      }),
      key: "0"
    } : void 0
  ]), _parent));
}
const _sfc_setup$a = _sfc_main$a.setup;
_sfc_main$a.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Teams/Partials/UpdateTeamNameForm.vue");
  return _sfc_setup$a ? _sfc_setup$a(props, ctx) : void 0;
};
const UpdateTeamNameForm = /* @__PURE__ */ _export_sfc(_sfc_main$a, [["ssrRender", _sfc_ssrRender$9]]);
const __vite_glob_0_77 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: UpdateTeamNameForm
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$9 = {
  components: {
    AppLayout,
    DeleteTeamForm,
    JetSectionBorder,
    TeamMemberManager,
    UpdateTeamNameForm
  },
  props: ["team", "availableRoles", "permissions"]
};
function _sfc_ssrRender$8(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_update_team_name_form = resolveComponent("update-team-name-form");
  const _component_team_member_manager = resolveComponent("team-member-manager");
  const _component_jet_section_border = resolveComponent("jet-section-border");
  const _component_delete_team_form = resolveComponent("delete-team-form");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({ title: "Team Settings" }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white border-b"${_scopeId}><div class="px-12"${_scopeId}><div class="flex flex-nowrap justify-between py-6"${_scopeId}><h2 class="font-semibold text-xl text-gray-800 leading-tight"${_scopeId}> Team Settings </h2></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white border-b" }, [
            createVNode("div", { class: "px-12" }, [
              createVNode("div", { class: "flex flex-nowrap justify-between py-6" }, [
                createVNode("h2", { class: "font-semibold text-xl text-gray-800 leading-tight" }, " Team Settings ")
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div${_scopeId}><div class="max-w-7xl mx-auto py-10 sm:px-6 lg:px-8"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_update_team_name_form, {
          team: $props.team,
          permissions: $props.permissions
        }, null, _parent2, _scopeId));
        _push2(ssrRenderComponent(_component_team_member_manager, {
          class: "mt-10 sm:mt-0",
          team: $props.team,
          "available-roles": $props.availableRoles,
          "user-permissions": $props.permissions
        }, null, _parent2, _scopeId));
        if ($props.permissions.canDeleteTeam && !$props.team.personal_team) {
          _push2(`<!--[-->`);
          _push2(ssrRenderComponent(_component_jet_section_border, null, null, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_delete_team_form, {
            class: "mt-10 sm:mt-0",
            team: $props.team
          }, null, _parent2, _scopeId));
          _push2(`<!--]-->`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`</div></div>`);
      } else {
        return [
          createVNode("div", null, [
            createVNode("div", { class: "max-w-7xl mx-auto py-10 sm:px-6 lg:px-8" }, [
              createVNode(_component_update_team_name_form, {
                team: $props.team,
                permissions: $props.permissions
              }, null, 8, ["team", "permissions"]),
              createVNode(_component_team_member_manager, {
                class: "mt-10 sm:mt-0",
                team: $props.team,
                "available-roles": $props.availableRoles,
                "user-permissions": $props.permissions
              }, null, 8, ["team", "available-roles", "user-permissions"]),
              $props.permissions.canDeleteTeam && !$props.team.personal_team ? (openBlock(), createBlock(Fragment, { key: 0 }, [
                createVNode(_component_jet_section_border),
                createVNode(_component_delete_team_form, {
                  class: "mt-10 sm:mt-0",
                  team: $props.team
                }, null, 8, ["team"])
              ], 64)) : createCommentVNode("", true)
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$9 = _sfc_main$9.setup;
_sfc_main$9.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Teams/Show.vue");
  return _sfc_setup$9 ? _sfc_setup$9(props, ctx) : void 0;
};
const Show = /* @__PURE__ */ _export_sfc(_sfc_main$9, [["ssrRender", _sfc_ssrRender$8]]);
const __vite_glob_0_78 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Show
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$8 = {
  components: {
    Head,
    JetAuthenticationCardLogo
  },
  props: ["terms"]
};
function _sfc_ssrRender$7(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = resolveComponent("Head");
  const _component_jet_authentication_card_logo = resolveComponent("jet-authentication-card-logo");
  _push(`<!--[-->`);
  _push(ssrRenderComponent(_component_Head, { title: "Terms of Service" }, null, _parent));
  _push(`<div class="font-sans text-gray-900 antialiased"><div class="pt-4 bg-gray-100 index_beams"><div class="min-h-screen flex flex-col items-center pt-6 sm:pt-0"><div>`);
  _push(ssrRenderComponent(_component_jet_authentication_card_logo, null, null, _parent));
  _push(`</div><div class="w-full sm:max-w-2xl mt-6 p-6 bg-white shadow-md overflow-hidden sm:rounded-lg prose">${$props.terms}</div></div></div></div><!--]-->`);
}
const _sfc_setup$8 = _sfc_main$8.setup;
_sfc_main$8.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/TermsOfService.vue");
  return _sfc_setup$8 ? _sfc_setup$8(props, ctx) : void 0;
};
const TermsOfService = /* @__PURE__ */ _export_sfc(_sfc_main$8, [["ssrRender", _sfc_ssrRender$7]]);
const __vite_glob_0_79 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: TermsOfService
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$7 = {
  components: {
    AppLayout,
    TeamProjects
  },
  props: ["user", "projects"]
};
function _sfc_ssrRender$6(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_team_projects = resolveComponent("team-projects");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({ title: "Dashboard" }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="bg-white border-b"${_scopeId}><div class="px-12"${_scopeId}><div class="flex flex-nowrap justify-between py-6"${_scopeId}><div${_scopeId}><div class="flex flex-nowrap justify-between"${_scopeId}><div class="lg:flex lg:items-center lg:justify-between"${_scopeId}><div class="flex-1 min-w-0"${_scopeId}><nav class="flex" aria-label="Breadcrumb"${_scopeId}><ol role="list" class="flex items-center space-x-4"${_scopeId}><li${_scopeId}><div class="flex"${_scopeId}><a class="text-sm font-medium text-gray-500 hover:text-gray-700"${_scopeId}>Dashboard</a></div></li><li${_scopeId}><div class="flex items-center"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="flex-shrink-0 h-5 w-5 text-gray-400"${_scopeId}><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"${_scopeId}></path></svg><a class="ml-4 text-sm font-medium text-gray-500 hover:text-gray-700"${_scopeId}>Trash</a></div></li></ol></nav><h2 class="mt-2 text-2xl font-bold break-words leading-7 text-gray-900 sm:text-3xl"${_scopeId}> Trash </h2></div></div></div></div></div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "bg-white border-b" }, [
            createVNode("div", { class: "px-12" }, [
              createVNode("div", { class: "flex flex-nowrap justify-between py-6" }, [
                createVNode("div", null, [
                  createVNode("div", { class: "flex flex-nowrap justify-between" }, [
                    createVNode("div", { class: "lg:flex lg:items-center lg:justify-between" }, [
                      createVNode("div", { class: "flex-1 min-w-0" }, [
                        createVNode("nav", {
                          class: "flex",
                          "aria-label": "Breadcrumb"
                        }, [
                          createVNode("ol", {
                            role: "list",
                            class: "flex items-center space-x-4"
                          }, [
                            createVNode("li", null, [
                              createVNode("div", { class: "flex" }, [
                                createVNode("a", { class: "text-sm font-medium text-gray-500 hover:text-gray-700" }, "Dashboard")
                              ])
                            ]),
                            createVNode("li", null, [
                              createVNode("div", { class: "flex items-center" }, [
                                (openBlock(), createBlock("svg", {
                                  xmlns: "http://www.w3.org/2000/svg",
                                  viewBox: "0 0 20 20",
                                  fill: "currentColor",
                                  "aria-hidden": "true",
                                  class: "flex-shrink-0 h-5 w-5 text-gray-400"
                                }, [
                                  createVNode("path", {
                                    "fill-rule": "evenodd",
                                    d: "M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z",
                                    "clip-rule": "evenodd"
                                  })
                                ])),
                                createVNode("a", { class: "ml-4 text-sm font-medium text-gray-500 hover:text-gray-700" }, "Trash")
                              ])
                            ])
                          ])
                        ]),
                        createVNode("h2", { class: "mt-2 text-2xl font-bold break-words leading-7 text-gray-900 sm:text-3xl" }, " Trash ")
                      ])
                    ])
                  ])
                ])
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        if ($props.projects.length > 0) {
          _push2(`<div class="px-12 py-8 mx-auto max-w-4xl"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_team_projects, {
            mode: "listing",
            projects: $props.projects
          }, null, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<div${_scopeId}><div class="text-center py-12"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" class="mx-auto h-24 w-24 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"${_scopeId}></path></svg><h3 class="mt-2 text-sm font-medium text-gray-900"${_scopeId}> No items in the trash. </h3><p class="mt-1 text-sm text-gray-500"${_scopeId}> You dont have any Projects, Studies or Datasets in your trash. </p></div></div>`);
        }
      } else {
        return [
          $props.projects.length > 0 ? (openBlock(), createBlock("div", {
            key: 0,
            class: "px-12 py-8 mx-auto max-w-4xl"
          }, [
            createVNode(_component_team_projects, {
              mode: "listing",
              projects: $props.projects
            }, null, 8, ["projects"])
          ])) : (openBlock(), createBlock("div", { key: 1 }, [
            createVNode("div", { class: "text-center py-12" }, [
              (openBlock(), createBlock("svg", {
                xmlns: "http://www.w3.org/2000/svg",
                class: "mx-auto h-24 w-24 text-gray-400",
                fill: "none",
                viewBox: "0 0 24 24",
                stroke: "currentColor",
                "stroke-width": "2"
              }, [
                createVNode("path", {
                  "stroke-linecap": "round",
                  "stroke-linejoin": "round",
                  d: "M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4"
                })
              ])),
              createVNode("h3", { class: "mt-2 text-sm font-medium text-gray-900" }, " No items in the trash. "),
              createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " You dont have any Projects, Studies or Datasets in your trash. ")
            ])
          ]))
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$7 = _sfc_main$7.setup;
_sfc_main$7.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Trashed.vue");
  return _sfc_setup$7 ? _sfc_setup$7(props, ctx) : void 0;
};
const Trashed = /* @__PURE__ */ _export_sfc(_sfc_main$7, [["ssrRender", _sfc_ssrRender$6]]);
const __vite_glob_0_80 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Trashed
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$6 = {};
function _sfc_ssrRender$5(_ctx, _push, _parent, _attrs) {
  _push(`<section${ssrRenderAttrs(mergeProps({ class: "bg-white mt-4 border-t" }, _attrs))}><div class="relative mx-auto px-12 py-8"><div class="relative"><div><div class="mx-auto text-left font-medium text-gray-900"><p class="flex items-center text-sm text-gray-700 uppercase font-bold tracking-widest"> Basic Concepts </p><p class="mt-3"> Submission to nmrXiv is divided into 3 steps <br> 1) File upload <br> 2) Auto - Processing, Assignments and Validation <br> 3) Publish <br><br> In nmrXiv, data is organised as <b class="text-teal-700">projects</b>. Consider a project is equivalent to your publication with the corresponding NMR data to be uploaded to nmrXiv. A project can have multiple samples. <b class="text-teal-700">A sample study corresponds to a group of NMR experiments of one sample</b>, e.g. 1H, 13C, APT, COSY HSQC, HMBC, NOESY in Bruker Format or (another study) in another format such as JCAMP-DX / Varian. <b class="text-teal-700">Each NMR measurement in a sample study is referred to as a dataset</b>, e.g. 1H NMR or COSY (are each a dataset). You can also publish samples on their own with out creating projects. </p><div class="w-full"><img src="/img/primer.png" class="h-[calc(40vh)] mx-auto"></div><p class="text-md"> nmrXiv allows you to upload NMR raw data from any NMR instrument. We can currently auto-detect Bruker/Varian/JOEL formats &amp; JCAMP files and will support more raw &amp; processed file formats soon. Once you upload your raw or processed NMR data, nmrXiv will auto-generate the samples and datasets for you based on the uploaded folder structure. <i><a class="text-md text-teal-700" target="_blank" href="https://docs.nmrxiv.org/submission-guides/submission-process.html">Please read our documentation for more detailed documentation about submission process.</a></i></p></div></div></div></div></section>`);
}
const _sfc_setup$6 = _sfc_main$6.setup;
_sfc_main$6.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/Primer.vue");
  return _sfc_setup$6 ? _sfc_setup$6(props, ctx) : void 0;
};
const Primer = /* @__PURE__ */ _export_sfc(_sfc_main$6, [["ssrRender", _sfc_ssrRender$5]]);
const _sfc_main$5 = {
  components: {},
  props: {
    molecule: String,
    width: {
      type: Number,
      default: 300
    },
    height: {
      type: Number,
      default: 300
    },
    showDownload: {
      type: Boolean,
      default: false
    },
    identifier: String
  },
  data() {
    return {
      results: []
    };
  },
  computed: {
    encodedSmiles() {
      return encodeURIComponent(this.molecule);
    }
  },
  mounted() {
  },
  methods: {}
};
function _sfc_ssrRender$4(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "mx-auto w-100" }, _attrs))}><iframe${ssrRenderAttr("width", $props.width - 60)}${ssrRenderAttr("height", $props.height - 65)}${ssrRenderAttr("src", _ctx.$page.props.CM_API + "depict/3D?smiles=" + $options.encodedSmiles)} frameborder="0"></iframe>`);
  if ($props.showDownload) {
    _push(`<div class="cursor-pointer mt-1 text-sm text-gray-900 float-right"><a style="${ssrRenderStyle({ "box-shadow": "none" })}" class="hover:text-gray-600">Download Molfile(3D)</a></div>`);
  } else {
    _push(`<!---->`);
  }
  _push(`</div>`);
}
const _sfc_setup$5 = _sfc_main$5.setup;
_sfc_main$5.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/Depictor3D.vue");
  return _sfc_setup$5 ? _sfc_setup$5(props, ctx) : void 0;
};
const Depictor3D = /* @__PURE__ */ _export_sfc(_sfc_main$5, [["ssrRender", _sfc_ssrRender$4]]);
const _sfc_main$4 = {
  components: {
    Depictor2D,
    Depictor3D
  },
  props: {
    modelValue: String,
    width: {
      type: Number,
      default: 300
    },
    height: {
      type: Number,
      default: 300
    },
    readonly: {
      type: Boolean,
      default: true
    },
    CIP: {
      type: Boolean,
      default: false
    },
    showDownload: {
      type: Boolean,
      default: false
    },
    identifier: String
  },
  data() {
    return {
      selectedTab: "2D",
      depictionSelection: "2D",
      tabs: ["2D", "3D"],
      edit: false,
      editor: null
    };
  },
  methods: {
    loadStructureEditor(id2) {
      this.edit = true;
      this.$nextTick(() => {
        this.editor = OCL$1.StructureEditor.createSVGEditor(id2, 1);
        if (this.modelValue) {
          this.editor.setSmiles(this.modelValue);
        }
      });
    },
    save() {
      this.$emit("update:modelValue", this.editor.getSmiles());
      this.edit = false;
    }
  }
};
function _sfc_ssrRender$3(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Depictor2D = resolveComponent("Depictor2D");
  const _component_Depictor3D = resolveComponent("Depictor3D");
  if (!$data.edit) {
    _push(`<div${ssrRenderAttrs(_attrs)}><div><div class="sm:hidden"><label for="tabs" class="sr-only">Select a tab</label><select id="tabs" name="tabs" class="block w-full rounded-md border-gray-300 focus:border-secondary-dark focus:ring-secondary-dark"><!--[-->`);
    ssrRenderList($data.tabs, (tab) => {
      _push(`<option${ssrRenderAttr("value", tab)}>${ssrInterpolate(tab)}</option>`);
    });
    _push(`<!--]--></select></div><div class="hidden sm:block"><nav class="flex space-x-2 pl-3" aria-label="Tabs"><!--[-->`);
    ssrRenderList($data.tabs, (tab) => {
      _push(`<div class="${ssrRenderClass([
        $data.selectedTab == tab ? "bg-gray-500 text-white" : "",
        "border hover:cursor-pointer text-gray-500 hover:text-gray-700 rounded-md px-3 py-2 text-sm font-medium"
      ])}">${ssrInterpolate(tab)}</div>`);
    });
    _push(`<!--]-->`);
    if (!$props.readonly) {
      _push(`<div class="hover:cursor-pointer text-gray-500 hover:text-gray-700 rounded-md px-3 py-2 text-sm font-medium"> edit </div>`);
    } else {
      _push(`<!---->`);
    }
    _push(`</nav></div></div>`);
    if ($data.selectedTab == "2D") {
      _push(`<div>`);
      _push(ssrRenderComponent(_component_Depictor2D, {
        "c-i-p": $props.CIP,
        molecule: $props.modelValue,
        "show-download": $props.showDownload,
        identifier: $props.identifier,
        height: $props.height,
        width: $props.width
      }, null, _parent));
      _push(`</div>`);
    } else {
      _push(`<!---->`);
    }
    if ($data.selectedTab == "3D") {
      _push(`<div>`);
      _push(ssrRenderComponent(_component_Depictor3D, {
        molecule: $props.modelValue,
        "show-download": $props.showDownload,
        identifier: $props.identifier,
        height: $props.height,
        width: $props.width
      }, null, _parent));
      _push(`</div>`);
    } else {
      _push(`<!---->`);
    }
    _push(`</div>`);
  } else {
    _push(`<div${ssrRenderAttrs(mergeProps({ class: "mb-2" }, _attrs))}><div id="structureEditor" class="w-full border rounded-md" style="${ssrRenderStyle({ "height": "400px" })}"></div><br><a class="border hover:cursor-pointer text-gray-500 hover:text-gray-700 rounded-md px-3 py-2 text-sm font-medium">SAVE</a></div>`);
  }
}
const _sfc_setup$4 = _sfc_main$4.setup;
_sfc_main$4.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/Depictor.vue");
  return _sfc_setup$4 ? _sfc_setup$4(props, ctx) : void 0;
};
const Depictor = /* @__PURE__ */ _export_sfc(_sfc_main$4, [["ssrRender", _sfc_ssrRender$3]]);
const _sfc_main$3 = {
  components: {
    AppLayout,
    Link,
    JetInputError,
    JetSecondaryButton,
    JetButton,
    Primer,
    FileSystemBrowser,
    TrashIcon,
    PencilIcon,
    ArrowDownOnSquareStackIcon,
    EyeIcon,
    EyeSlashIcon,
    Validation: Validation$1,
    SpectraEditor,
    Depictor,
    Depictor2D
    // slider,
    // VueTagsInput,
  },
  props: ["draft_id"],
  setup() {
    return {};
  },
  data() {
    return {
      returnUrl: "/dashboard",
      loading: false,
      loadingStep: false,
      spectraLoadingStatus: false,
      spectraLoadingMessage: null,
      showCompoundDetails: true,
      hideDownArrow: false,
      currentDraft: null,
      drafts: [],
      draftForm: this.$inertia.form({
        _method: "POST",
        name: "",
        description: "",
        error_message: null,
        tags: [],
        tag: "",
        tags_array: [],
        owner_id: null
      }),
      project: null,
      studies: null,
      studiesToImport: [],
      studySpecies: null,
      inprogressStudies: [],
      selectedStudy: null,
      studyForm: this.$inertia.form({
        _method: "POST",
        name: "",
        description: "",
        error_message: null,
        tags: [],
        species: [],
        tag: "",
        tags_array: []
      }),
      displaySamplesSummaryInfo: true,
      querySample: null,
      validation: null,
      validationStatus: true,
      smiles: "",
      percentage: 100,
      editor: null,
      showPrimer: false,
      busy: false,
      steps: [
        {
          id: "1",
          step: "tour-step-submission-header",
          name: "Files Upload",
          description: "Vitae sed mi luctus laoreet.",
          href: "#",
          status: "upcoming"
        },
        {
          id: "2",
          step: "v-step-20",
          name: "Assignments & Metadata",
          description: "Cursus semper viverra.",
          href: "#",
          status: "upcoming"
        },
        {
          id: "3",
          name: "Complete ~ Community Standards",
          description: "Penatibus eu quis ante.",
          href: "#",
          status: "upcoming"
        }
      ],
      step: 1,
      errorMessage: null,
      filesErrorMessage: null,
      createDatasetForm: this.$inertia.form({
        _method: "POST",
        name: "",
        description: "",
        error_message: null,
        team_id: null,
        owner_id: null,
        color: null,
        starred: null,
        project_id: this.project ? this.project.id : null,
        is_public: ref(false)
      })
    };
  },
  computed: {
    currentStep() {
      return this.steps.filter((s2) => s2.status == "current")[0];
    },
    primed() {
      return this.$page.props.auth.user.primed;
    },
    importPendingSamples() {
      return this.studiesToImport.filter((f2) => f2.status == false);
    },
    spectraCount() {
      let i2 = 0;
      this.studies.forEach((s2) => {
        i2 = i2 + s2.datasets.length;
      });
      return i2;
    },
    moleculesCount() {
      let i2 = 0;
      this.studies.forEach((s2) => {
        i2 = i2 + s2.sample.molecules.length;
      });
      return i2;
    },
    getMax() {
      if (this.selectedStudy) {
        let totalCount = 0;
        this.selectedStudy.sample.molecules.forEach((mol) => {
          totalCount += parseInt(
            mol.pivot.percentage_composition ? mol.pivot.percentage_composition : 0
          );
        });
        return 100 - totalCount;
      } else {
        return 100;
      }
    }
  },
  mounted() {
    const urlSearchParams = new URLSearchParams(window.location.search);
    const params = Object.fromEntries(urlSearchParams.entries());
    this.step = params["step"] ? params["step"] : "1";
    this.querySample = params["sample"] ? params["sample"] : null;
    this.fetchDrafts().then((response) => {
      this.drafts = response.data.drafts;
      this.sharedDrafts = response.data.sharedDrafts;
      if (this.draft_id) {
        if (this.draft_id != "null") {
          let selectedDraft = this.drafts.find(
            (d2) => d2.id == this.draft_id
          );
          if (!selectedDraft) {
            selectedDraft = this.sharedDrafts.find(
              (d2) => d2.id == this.draft_id
            );
          }
          if (selectedDraft) {
            this.selectDraft(selectedDraft);
          } else {
            if (response.data.default.id == this.draft_id) {
              this.selectDraft(response.data.default);
            }
          }
          this.loading = false;
        } else {
          alert(
            "Could not find the draft. Redirecting to the upload page."
          );
          return router$1.visit("upload");
        }
      } else {
        this.defaultDraft = response.data.default;
        if (this.drafts.length == 0) {
          this.selectDraft(this.defaultDraft);
          this.loading = false;
        } else {
          this.loading = false;
        }
      }
    });
    this.showPrimer = !this.primed;
    let localItems = this.findLocalItems("show_compound_details");
    if (localItems.length > 0) {
      this.showCompoundDetails = JSON.parse(localItems[0].val);
    }
  },
  methods: {
    onScroll() {
      this.hideDownArrow = true;
    },
    toggleCompoundDetails() {
      this.showCompoundDetails = !this.showCompoundDetails;
      localStorage.setItem(
        "show_compound_details",
        this.showCompoundDetails
      );
    },
    showSamplesSummary() {
      this.spectraLoadingStatus = false;
      this.displaySamplesSummaryInfo = true;
      this.selectedStudy = null;
      this.setQueryStringParameter("sample", null);
    },
    fetchDrafts() {
      this.loading = true;
      return axios.get("/dashboard/drafts");
    },
    selectDraft(draft) {
      this.currentDraft = draft;
      this.draftForm.name = this.currentDraft.name;
      this.draftForm.description = this.currentDraft.description;
      let tags = [];
      this.file = null;
      this.draftForm.tags = [];
      this.draftForm.owner_id = this.$page.props.auth.user.id;
      if (this.currentDraft.tags) {
        this.currentDraft.tags.forEach((t4) => {
          tags.push({
            text: t4.name["en"]
          });
        });
        this.draftForm.tags = tags;
      }
      this.$nextTick(() => {
        if (this.step == "2") {
          this.showPrimer = false;
          this.loadSamplesSummary();
        } else {
          this.selectStep(1);
        }
      });
    },
    createNewDraft() {
      if (!this.primed) {
        this.showPrimer = true;
        this.newDraft();
      } else {
        this.newDraft();
      }
    },
    newDraft() {
      if (this.defaultDraft) {
        this.defaultDraft.name = "Untitled Project (Draft: " + this.defaultDraft.key.split("-")[0] + ")";
        this.selectDraft(this.defaultDraft);
      } else {
        this.fetchDrafts().then((response) => {
          this.defaultDraft = response.data.default;
          this.loading = false;
          this.defaultDraft.name = "Untitled Project (Draft: " + this.defaultDraft.key.split("-")[0] + ")";
          this.selectDraft(this.defaultDraft);
        });
      }
    },
    updateDraft(e2) {
      this.currentDraft.name = e2.target.innerText;
      this.draftForm.errors = [];
      axios.put(
        "/dashboard/drafts/" + this.currentDraft.id,
        this.currentDraft
      ).then((response) => {
        this.currentDraft = response.data;
        this.draftForm.name = this.currentDraft.name;
      });
    },
    closeDraft() {
      this.fetchValidations().then(() => {
        if (this.validationStatus) {
          this.loadingStep = true;
          axios.post(
            "/dashboard/drafts/" + this.currentDraft.id + "/complete",
            {}
          ).catch(() => {
            this.loadingStep = false;
          }).then((response) => {
            this.project = response.data.project;
            this.validation = this.parseJSON(
              response.data.validation.report
            );
            if (this.project) {
              window.location = "/publish/" + this.currentDraft.id;
            }
          });
        } else {
          this.showSamplesSummary();
          alert(
            "Samples validation failed: Please provide all meta data to proceed"
          );
        }
      });
    },
    selectStep(id2) {
      this.steps.forEach((step) => {
        if (parseInt(step.id) < id2) {
          step.status = "complete";
        } else if (parseInt(step.id) == id2) {
          step.status = "current";
        } else {
          step.status = "upcoming";
        }
      });
      if (id2 == 1) {
        this.$nextTick(function() {
          this.setQueryStringParameter(
            "draft_id",
            this.currentDraft.id
          );
          this.setQueryStringParameter("step", 1);
          this.step = "1";
          if (this.$refs.fsbRef) {
            this.$refs.fsbRef.annotate();
          }
        });
      } else if (id2 == 2) {
        this.$nextTick(function() {
          this.setQueryStringParameter("step", 2);
          this.step = "2";
          if (this.querySample) {
            let i2 = 0;
            this.studies.forEach((s2) => {
              if (s2.id == this.querySample) {
                this.selectStudy(s2, i2);
              }
              i2 = i2 + 1;
            });
          }
          this.fetchValidations();
          this.updateAutoImportList();
        });
      }
    },
    setQueryStringParameter(name, value) {
      const params = new URLSearchParams(window.location.search);
      if (value) {
        params.set(name, value);
      } else {
        params.delete(name);
      }
      window.history.replaceState(
        {},
        "",
        decodeURIComponent(`${window.location.pathname}?${params}`)
      );
    },
    hidePrimer() {
      axios.post("/primer/skip").then(() => {
        router$1.reload({
          only: ["user", "user.permissions", "user.roles"]
        });
      });
    },
    skipPrimer() {
      this.showPrimer = false;
      this.selectStep(1);
    },
    filesLoading(e2) {
      this.loadingStep = e2;
    },
    updateLoadingStatus(status) {
      this.loading = status;
    },
    process() {
      this.errorMessage = null;
      let foldersExist = false;
      this.$refs.fsbRef.file.children.forEach((fso) => {
        if (fso.has_children) {
          foldersExist = true;
        }
      });
      if (foldersExist) {
        this.hasStudies(this.$refs.fsbRef.file);
        this.loadSamplesSummary();
      }
      if (this.$refs.fsbRef.file && this.$refs.fsbRef.file.children.length > 0 && foldersExist && this.studiesExist) {
        this.loadingStep = true;
        this.draftForm.owner_id = this.$page.props.auth.user.id;
        this.draftForm.tags_array = this.draftForm.tags.map(
          (a2) => a2.text
        );
      } else {
        if (this.$refs.fsbRef.file.children.length > 0 && !foldersExist) {
          this.filesErrorMessage = "Spectra files needs to be organised into folders. Please create a folder corresponding to each sample and add all your NMR spectroscopic experiment output files are added to the corresponding folders";
        } else if (this.$refs.fsbRef.file.children.length <= 0) {
          this.filesErrorMessage = "Please upload spectral data to proceed.";
        } else if (!this.studiesExist) {
          this.filesErrorMessage = "Please upload spectral data to proceed.";
        } else {
          this.filesErrorMessage = "Please make sure you fill in all the required data before you proceed";
        }
      }
    },
    loadSamplesSummary() {
      this.fetchProjectDetails().then(
        (response) => {
          this.loadingStep = false;
          this.project = response.data.project;
          this.studies = response.data.studies;
          if (this.project && this.studies && this.studies.length > 0) {
            this.loadingStep = false;
            this.selectStep(2);
            this.inprogressStudies = this.studies.filter(
              (study) => study.internal_status != "complete"
            );
            if (this.inprogressStudies.length > 0) {
              this.checkStudyStatus();
            }
          } else {
            if (this.studies.length == 0) {
              this.loadingStep = false;
            }
          }
        },
        (error) => {
          this.loadingStep = false;
          Object.keys(error.response.data.errors).forEach((key) => {
            error.response.data.errors[key] = error.response.data.errors[key].join(", ");
          });
          this.draftForm.errors = error.response.data.errors;
          this.draftForm.error_message = error.response.data.message;
          this.draftForm.hasErrors = true;
          Object.keys(this.draftForm.errors).forEach((key) => {
            if (!this.errorMessage) {
              this.errorMessage = "<b class='capitalize'>" + key + "</b>: " + this.draftForm.errors[key] + "</br>";
            } else {
              this.errorMessage += "<b class='capitalize'>" + key + "</b>: " + this.draftForm.errors[key] + "</br>";
            }
          });
        }
      );
    },
    checkStudyStatus() {
      setTimeout(() => {
        this.fetchProjectDetails().then((response) => {
          this.loadingStep = false;
          this.project = response.data.project;
          this.studies = response.data.studies;
          this.fetchValidations();
          this.spectraLoadingStatus = false;
          this.inprogressStudies = this.studies.filter(
            (study) => study.internal_status != "complete"
          );
          if (this.inprogressStudies.length > 0) {
            this.checkStudyStatus();
          } else {
            this.autoImport();
          }
        });
      }, 3e4);
    },
    editData(e2) {
      let i2 = 0;
      this.studies.forEach((s2) => {
        if (s2.name == e2.model.name) {
          this.selectStudy(s2, i2);
        }
        i2 = i2 + 1;
      });
    },
    hasStudies(file) {
      if (file.model_type == "study") {
        this.studiesExist = true;
      }
      if (file.has_children && file.children) {
        file.children.forEach((fso) => {
          this.hasStudies(fso);
        });
      }
    },
    selectStudy(study, index, datasetIndex = null) {
      if (!this.busy) {
        if (study.internal_status == "complete") {
          this.selectedStudyIndex = index;
          this.selectedStudy = study;
          this.setQueryStringParameter("sample", study.id);
          this.studyForm.name = this.selectedStudy.name;
          this.studyForm.description = this.selectedStudy.description.replace(/<\/br>/g, " ");
          this.studyForm.species = JSON.parse(
            this.selectedStudy.species
          ) ? JSON.parse(this.selectedStudy.species) : [];
          let tags = [];
          this.selectedStudy.tags.forEach((t4) => {
            tags.push({
              text: t4.name["en"]
            });
          });
          this.studyForm.tags = tags;
          let editorState = JSON.parse(
            JSON.stringify(this.displaySamplesSummaryInfo)
          );
          if (this.displaySamplesSummaryInfo) {
            this.displaySamplesSummaryInfo = false;
          }
          this.$nextTick(() => {
            if (editorState) {
              if (this.$refs.spectraEditorREF) {
                this.$refs.spectraEditorREF.registerEvents();
              }
            }
            this.editor = OCL.StructureEditor.createSVGEditor(
              "structureSearchEditor",
              1
            );
          });
          if (this.studyForm.description == "") {
            if (study.has_nmrium) {
              this.autoGenerateDescription();
            }
          }
          if (this.selectedStudy && this.selectedStudy.sample.molecules.length == 0) {
            this.autoImportMolecularData(this.selectedStudy);
          }
          if (!datasetIndex) {
            this.selectedDSIndex = 0;
          } else {
            this.selectedDSIndex = datasetIndex;
          }
        }
      }
    },
    fetchProjectDetails() {
      return axios.post(
        "/dashboard/drafts/" + this.currentDraft.id + "/process",
        this.draftForm
      );
    },
    fetchValidations() {
      return axios.get("/projects/" + this.project.id + "/validation").then((response) => {
        this.validation = response.data.report;
        this.validationStatus = true;
        this.validation.project.studies.forEach((study) => {
          if (study.status == false) {
            this.validationStatus = false;
          }
        });
      });
    },
    updateAutoImportList() {
      this.studiesToImport = [];
      this.studies.forEach((study) => {
        if (!study.has_nmrium) {
          this.studiesToImport.push({
            projectSlug: this.project.slug,
            study,
            status: false
          });
        }
      });
    },
    spectraLoading(e2) {
      this.spectraLoadingStatus = e2.status;
      this.spectraLoadingMessage = e2.message;
    },
    updateTags(e2) {
      this.busy = true;
      if (!e2.type) {
        this.studyForm.tags = e2;
      }
      this.studyForm.tags_array = this.studyForm.tags.map((a2) => a2.text);
      this.saveStudyDetails();
    },
    saveStudyDetails() {
      this.busy = true;
      this.spectraLoading({
        status: true,
        message: "Saving updates"
      });
      this.loadingStep = true;
      axios.put(
        "/dashboard/studies/" + this.selectedStudy.id + "/update",
        this.studyForm
      ).catch((error) => {
        this.loadingStep = false;
        this.spectraLoading({
          status: false,
          message: "Update save error"
        });
        this.busy = false;
        Object.keys(error.response.data.errors).forEach((key) => {
          error.response.data.errors[key] = error.response.data.errors[key].join(", ");
        });
        this.studyForm.errors = error.response.data.errors;
        this.studyForm.error_message = error.response.data.message;
        this.studyForm.hasErrors = true;
      }).then((response) => {
        if (response) {
          this.busy = false;
          this.spectraLoading({
            status: false,
            message: "Updates saved"
          });
          this.loadingStep = false;
          this.studies[this.selectedStudyIndex] = response.data;
          this.studyForm.hasErrors = false;
        }
      });
    },
    deleteMolecule(mol) {
      axios.delete(
        "/dashboard/studies/" + this.selectedStudy.id + "/molecule/" + mol.id
      ).then((res) => {
        this.selectedStudy.sample.molecules = res.data;
        this.smiles = "";
        this.percentage = 0;
        this.editor.setSmiles("");
      });
    },
    editMolecule(mol) {
      this.editor.setSmiles(mol.canonical_smiles);
      this.percentage = parseInt(mol.pivot.percentage_composition);
      axios.delete(
        "/dashboard/studies/" + this.selectedStudy.id + "/molecule/" + mol.id
      ).then((res) => {
        this.selectedStudy.sample.molecules = res.data;
      });
    },
    saveMolecule(mol, study) {
      if (!study) {
        study = this.selectedStudy;
      }
      if (!mol) {
        let mol2 = this.editor.getMolFile();
        this.standardizeMolecules(mol2).then((res) => {
          this.associateMoleculeToStudy(res.data, study);
        });
      } else {
        this.associateMoleculeToStudy(mol, study);
      }
    },
    associateMoleculeToStudy(mol, study) {
      axios.post("/dashboard/studies/" + study.id + "/molecule", {
        InChI: mol.inchi,
        InChIKey: mol.inchikey,
        percentage: this.percentage,
        mol: mol.standardized_mol,
        canonical_smiles: mol.canonical_smiles
      }).then((res) => {
        study.sample.molecules = res.data;
        this.smiles = "";
        this.percentage = this.getMax;
        this.editor.setSmiles("");
      });
    },
    standardizeMolecules(mol) {
      return axios.post(
        "https://api.naturalproducts.net/latest/chem/standardize",
        mol
      );
    },
    autoImportMolecularData(study) {
      axios.get("/dashboard/studies/" + study.id + "/annotations").then((response) => {
        let nmredataFiles = response.data;
        nmredataFiles.forEach((file) => {
          let username = this.$page.props.team && this.$page.props.team.owner ? this.$page.props.team.owner.username : this.project.owner.username;
          let url = this.url + "/" + username + "/studies/" + study.id + "/file/" + file.slug;
          axios.get(url).then((response2) => {
            axios.post(
              "https://dev.api.naturalproducts.net/latest/chem/standardize",
              response2.data
            ).then((res) => {
              let standard_inchi = res.data.inchi;
              let molExists = false;
              study.sample.molecules.forEach((mol) => {
                if (mol.standard_inchi == standard_inchi) {
                  molExists = true;
                }
              });
              if (!molExists) {
                this.saveMolecule(res.data, study);
              }
            });
          });
        });
      });
    },
    autoGenerateDescription() {
      let desc = "This dataset contains NMR spectra obtained for the sample -" + this.selectedStudy.name + "</br>";
      axios.get(
        "/dashboard/studies/" + this.selectedStudy.id + "/nmriumInfo"
      ).then((response) => {
        let nmrium_info = response.data;
        if (nmrium_info) {
          nmrium_info.data.spectra.forEach((spectra) => {
            Object.keys(spectra.info).forEach((key) => {
              desc = desc + key + ": " + spectra.info[key] + "</br>";
            });
          });
          this.studyForm.description = desc.replace(
            /<\/br>/g,
            " "
          );
          this.saveStudyDetails();
        }
      });
    },
    autoImport() {
      this.spectraLoadingStatus = true;
      this.updateAutoImportList();
      if (this.studiesToImport.length > 0) {
        this.fetchNMRium();
      } else {
        console.log(
          "Nothing to import: NMRium spectra JSON already exists"
        );
        this.spectraLoadingStatus = false;
      }
    },
    fetchNMRium() {
      let studyDetails = this.importPendingSamples.length > 0 ? this.importPendingSamples[0] : null;
      if (studyDetails) {
        this.spectraLoadingStatus = true;
        let url = null;
        if (studyDetails.study.download_url) {
          url = studyDetails.study.download_url;
        } else {
          let username = this.$page.props.team.owner ? this.$page.props.team.owner.username : this.project.owner.username;
          url = this.url + "/" + username + "/datasets/" + this.project.slug + "/" + studyDetails.study.slug;
        }
        this.spectraLoadingMessage = "<br/> <small><i>Pending: " + (this.studies.length - this.importPendingSamples.length) + "/" + this.studies.length + "</i></small> <br/> Processing Spectra from Sample: " + studyDetails.study.slug + " <br/> Spectra URL: " + url;
        axios.post("https://nodejsdev.nmrxiv.org/spectra-parser", {
          urls: [url],
          snapshot: false
        }).then((response) => {
          let parsedSpectra = response.data.data;
          parsedSpectra.spectra.forEach((spec) => {
            delete spec["data"];
            delete spec["meta"];
            delete spec["originalData"];
            delete spec["originalInfo"];
          });
          let version = parsedSpectra.version;
          delete parsedSpectra["version"];
          let molecules = parsedSpectra.molecules;
          if (molecules.length > 0) {
            molecules.forEach((mol) => {
              this.standardizeMolecules(mol.molfile).then(
                (res) => {
                  this.associateMoleculeToStudy(
                    res.data,
                    studyDetails.study
                  );
                }
              );
            });
          }
          axios.post(
            "/dashboard/studies/" + studyDetails.study.id + "/nmriumInfo",
            {
              data: parsedSpectra,
              version
            }
          ).then(() => {
            this.loadingStep = false;
            this.studiesToImport.filter(
              (f2) => f2.study.id == studyDetails.study.id
            )[0].status = true;
            this.autoImportMolecularData(
              studyDetails.study
            );
            this.fetchNMRium();
          }).catch(() => {
            this.loadingStep = false;
            this.studiesToImport.filter(
              (f2) => f2.study.id == studyDetails.study.id
            )[0].status = true;
            this.fetchNMRium();
          });
        }).catch(() => {
          this.loadingStep = false;
          let study = this.studiesToImport.filter(
            (f2) => f2.study.id == studyDetails.study.id
          )[0];
          if (study) {
            study.status = true;
            this.fetchNMRium();
          }
        });
      } else {
        this.fetchProjectDetails().then((response) => {
          this.loadingStep = false;
          this.project = response.data.project;
          this.studies = response.data.studies;
          this.fetchValidations();
          this.spectraLoadingStatus = false;
        });
      }
    },
    updateSpecies(species) {
      if (species && species != "") {
        this.studyForm.species.push(species);
        this.saveStudyDetails();
        this.studySpecies = "";
      }
    },
    removeSpecies(index) {
      if (index > -1) {
        this.studyForm.species.splice(index, 1);
        this.saveStudyDetails();
      }
    },
    loadSmiles() {
      this.errorMessage = "";
      if (this.smiles && this.smiles != "") {
        try {
          let mol = OCL.Molecule.fromSmiles(this.smiles);
          this.editor.setSmiles(this.smiles);
        } catch (e2) {
          this.errorMessage = "The entered SMILES is not valid.";
        }
      }
    }
  }
};
function _sfc_ssrRender$2(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_app_layout = resolveComponent("app-layout");
  const _component_Link = resolveComponent("Link");
  const _component_jet_input_error = resolveComponent("jet-input-error");
  const _component_jet_button = resolveComponent("jet-button");
  const _component_jet_secondary_button = resolveComponent("jet-secondary-button");
  const _component_primer = resolveComponent("primer");
  const _component_file_system_browser = resolveComponent("file-system-browser");
  const _component_EyeIcon = resolveComponent("EyeIcon");
  const _component_EyeSlashIcon = resolveComponent("EyeSlashIcon");
  const _component_Depictor2D = resolveComponent("Depictor2D");
  const _component_Validation = resolveComponent("Validation");
  const _component_SpectraEditor = resolveComponent("SpectraEditor");
  const _component_Depictor = resolveComponent("Depictor");
  const _component_TrashIcon = resolveComponent("TrashIcon");
  const _component_PencilIcon = resolveComponent("PencilIcon");
  const _component_slider = resolveComponent("slider");
  const _component_vue_tags_input = resolveComponent("vue-tags-input");
  _push(ssrRenderComponent(_component_app_layout, mergeProps({ title: "Submit Data" }, _attrs), {
    header: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="absolute inset-0 bg-gradient-to-r from-[#36b49f] to-[#DBFF75] opacity-40 [mask-image:radial-gradient(farthest-side_at_top,white,transparent)] dark:from-[#36b49f]/30 dark:to-[#DBFF75]/30 dark:opacity-100"${_scopeId}><svg aria-hidden="true" class="absolute inset-x-0 inset-y-[-50%] h-[200%] w-full skew-y-[-18deg] fill-black/40 stroke-black/50 mix-blend-overlay dark:fill-white/2.5 dark:stroke-white/5"${_scopeId}><defs${_scopeId}><pattern id=":r99:" width="72" height="56" patternUnits="userSpaceOnUse" x="-12" y="4"${_scopeId}><path d="M.5 56V.5H72" fill="none"${_scopeId}></path></pattern></defs><rect width="100%" height="100%" stroke-width="0" fill="url(#:r99:)"${_scopeId}></rect><svg x="-12" y="4" class="overflow-visible"${_scopeId}><rect stroke-width="0" width="73" height="57" x="288" y="168"${_scopeId}></rect><rect stroke-width="0" width="73" height="57" x="144" y="56"${_scopeId}></rect><rect stroke-width="0" width="73" height="57" x="504" y="168"${_scopeId}></rect><rect stroke-width="0" width="73" height="57" x="720" y="336"${_scopeId}></rect></svg></svg></div><div class="border-b bg-white relative px-6 py-4"${_scopeId}><div class="w-full sm:flex sm:items-center sm:justify-between"${_scopeId}><div${_scopeId}>`);
        if ($options.currentStep) {
          _push2(`<span class="ml-14 text-sm font-bold text-teal-600 group-hover:text-teal-800"${_scopeId}>Step `);
          if ($options.currentStep.id) {
            _push2(`<span${_scopeId}>${ssrInterpolate($options.currentStep.id)}</span>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(` / 3 - `);
          if ($options.currentStep.id == "1") {
            _push2(`<span${_scopeId}>`);
            if ($data.showPrimer && $data.currentDraft) {
              _push2(`<span${_scopeId}> Introduction </span>`);
            } else {
              _push2(`<span${_scopeId}>File Upload</span>`);
            }
            _push2(`</span>`);
          } else {
            _push2(`<!---->`);
          }
          if ($options.currentStep.id == "2") {
            _push2(`<span${_scopeId}> Auto Processing, Assignments and Validation </span>`);
          } else {
            _push2(`<!---->`);
          }
          _push2(`</span>`);
        } else {
          _push2(`<!---->`);
        }
        _push2(`<h3 class="text-sm text-gray-700 uppercase font-bold tracking-widest"${_scopeId}>`);
        if ($options.currentStep) {
          _push2(`<span${_scopeId}>`);
          if ($data.step == "1") {
            _push2(`<span${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Link, {
              class: "mr-2 ml-1 inline-flex items-center px-2.5 py-1 text-md font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
              href: "/upload"
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` ← `);
                } else {
                  return [
                    createTextVNode(" ← ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</span>`);
          } else {
            _push2(`<span${_scopeId}><a class="cursor-pointer mr-2 ml-1 inline-flex items-center px-2.5 py-1 text-md font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"${_scopeId}> ← </a></span>`);
          }
          _push2(`</span>`);
        } else {
          _push2(`<span${_scopeId}>`);
          _push2(ssrRenderComponent(_component_Link, {
            class: "mr-2 ml-1 inline-flex items-center px-2.5 py-1 text-md font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
            href: "/upload"
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` ← `);
              } else {
                return [
                  createTextVNode(" ← ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</span>`);
        }
        if ($options.currentStep && $data.currentDraft) {
          _push2(`<span${_scopeId}><p class="inline focus:outline-none focus:ring-0 focus:bg-gray-100 p-2 rounded-md" contenteditable${_scopeId}>${ssrInterpolate($data.currentDraft.name)}</p>`);
          _push2(ssrRenderComponent(_component_jet_input_error, {
            message: $data.draftForm.errors.name,
            class: "mt-2"
          }, null, _parent2, _scopeId));
          _push2(`</span>`);
        } else {
          _push2(`<span${_scopeId}> Submit data to nmrXiv </span>`);
        }
        _push2(`</h3></div><div class="mt-3 sm:ml-4 sm:mt-0"${_scopeId}>`);
        if ($data.showPrimer && $data.currentDraft) {
          _push2(`<div${_scopeId}><div class="float-left"${_scopeId}><div class="relative mt-2 flex items-start"${_scopeId}><div class="flex h-5 items-center"${_scopeId}><input id="comments" aria-describedby="comments-description" name="comments" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500"${_scopeId}></div><div class="ml-3 text-sm mr-5"${_scopeId}><label for="comments" class="font-medium text-gray-700"${_scopeId}>Don&#39;t show this again</label></div></div></div>`);
          _push2(ssrRenderComponent(_component_jet_button, {
            class: ["ml-2 float-right", {
              "opacity-25": $data.createDatasetForm.processing
            }],
            onClick: ($event) => $options.skipPrimer()
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Proceed `);
              } else {
                return [
                  createTextVNode(" Proceed ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<div${_scopeId}>`);
          if (!$options.currentStep) {
            _push2(`<span${_scopeId}>`);
            _push2(ssrRenderComponent(_component_Link, {
              class: "inline-flex items-center px-2.5 py-1 border border-gray-300 shadow-sm text-md font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
              href: $data.returnUrl
            }, {
              default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                if (_push3) {
                  _push3(` Cancel `);
                } else {
                  return [
                    createTextVNode(" Cancel ")
                  ];
                }
              }),
              _: 1
            }, _parent2, _scopeId));
            _push2(`</span>`);
          } else {
            _push2(`<span${_scopeId}>`);
            if ($options.currentStep.id == "1") {
              _push2(`<span${_scopeId}>`);
              _push2(ssrRenderComponent(_component_Link, {
                class: "mx-2 inline-flex items-center px-2.5 py-1 border border-gray-300 shadow-sm text-md font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                href: $data.returnUrl
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` Cancel `);
                  } else {
                    return [
                      createTextVNode(" Cancel ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(ssrRenderComponent(_component_jet_button, {
                id: "tour-step-proceed-from-step-1",
                class: ["ml-2", {
                  "opacity-25": $data.createDatasetForm.processing
                }],
                disabled: $data.createDatasetForm.processing || $data.loading || $data.loadingStep,
                onClick: ($event) => $options.process()
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    if ($data.loadingStep) {
                      _push3(`<span${_scopeId2}><svg class="animate-spin -ml-1 mr-3 h-2 w-2 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"${_scopeId2}><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"${_scopeId2}></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"${_scopeId2}></path></svg></span>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    _push3(` Proceed `);
                  } else {
                    return [
                      $data.loadingStep ? (openBlock(), createBlock("span", { key: 0 }, [
                        (openBlock(), createBlock("svg", {
                          class: "animate-spin -ml-1 mr-3 h-2 w-2 text-white",
                          xmlns: "http://www.w3.org/2000/svg",
                          fill: "none",
                          viewBox: "0 0 24 24"
                        }, [
                          createVNode("circle", {
                            class: "opacity-25",
                            cx: "12",
                            cy: "12",
                            r: "10",
                            stroke: "currentColor",
                            "stroke-width": "4"
                          }),
                          createVNode("path", {
                            class: "opacity-75",
                            fill: "currentColor",
                            d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                          })
                        ]))
                      ])) : createCommentVNode("", true),
                      createTextVNode(" Proceed ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</span>`);
            } else if ($options.currentStep.id == "2") {
              _push2(`<span${_scopeId}>`);
              _push2(ssrRenderComponent(_component_jet_secondary_button, {
                class: ["ml-2 float-left", {
                  "opacity-25": $data.createDatasetForm.processing
                }],
                disabled: $data.createDatasetForm.processing,
                onClick: ($event) => $options.selectStep(1)
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` Back `);
                  } else {
                    return [
                      createTextVNode(" Back ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(ssrRenderComponent(_component_jet_button, {
                id: "tour-step-proceed-from-step-2",
                class: ["ml-2", {
                  "opacity-25": $data.createDatasetForm.processing
                }],
                disabled: $data.createDatasetForm.processing || $data.loading || $data.loadingStep,
                onClick: ($event) => $options.closeDraft()
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    if ($data.loadingStep) {
                      _push3(`<span${_scopeId2}><svg class="animate-spin -ml-1 mr-3 h-2 w-2 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"${_scopeId2}><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"${_scopeId2}></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"${_scopeId2}></path></svg></span>`);
                    } else {
                      _push3(`<!---->`);
                    }
                    _push3(` Proceed `);
                  } else {
                    return [
                      $data.loadingStep ? (openBlock(), createBlock("span", { key: 0 }, [
                        (openBlock(), createBlock("svg", {
                          class: "animate-spin -ml-1 mr-3 h-2 w-2 text-white",
                          xmlns: "http://www.w3.org/2000/svg",
                          fill: "none",
                          viewBox: "0 0 24 24"
                        }, [
                          createVNode("circle", {
                            class: "opacity-25",
                            cx: "12",
                            cy: "12",
                            r: "10",
                            stroke: "currentColor",
                            "stroke-width": "4"
                          }),
                          createVNode("path", {
                            class: "opacity-75",
                            fill: "currentColor",
                            d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                          })
                        ]))
                      ])) : createCommentVNode("", true),
                      createTextVNode(" Proceed ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</span>`);
            } else if ($options.currentStep.id == "3") {
              _push2(`<span${_scopeId}>`);
              _push2(ssrRenderComponent(_component_Link, {
                id: "tour-step-finish",
                class: "inline-flex items-center px-2.5 py-1 border border-gray-300 shadow-sm text-md font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                href: _ctx.route("dashboard")
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(` Finish `);
                  } else {
                    return [
                      createTextVNode(" Finish ")
                    ];
                  }
                }),
                _: 1
              }, _parent2, _scopeId));
              _push2(`</span>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</span>`);
          }
          _push2(`</div>`);
        }
        _push2(`</div></div></div>`);
      } else {
        return [
          createVNode("div", { class: "absolute inset-0 bg-gradient-to-r from-[#36b49f] to-[#DBFF75] opacity-40 [mask-image:radial-gradient(farthest-side_at_top,white,transparent)] dark:from-[#36b49f]/30 dark:to-[#DBFF75]/30 dark:opacity-100" }, [
            (openBlock(), createBlock("svg", {
              "aria-hidden": "true",
              class: "absolute inset-x-0 inset-y-[-50%] h-[200%] w-full skew-y-[-18deg] fill-black/40 stroke-black/50 mix-blend-overlay dark:fill-white/2.5 dark:stroke-white/5"
            }, [
              createVNode("defs", null, [
                createVNode("pattern", {
                  id: ":r99:",
                  width: "72",
                  height: "56",
                  patternUnits: "userSpaceOnUse",
                  x: "-12",
                  y: "4"
                }, [
                  createVNode("path", {
                    d: "M.5 56V.5H72",
                    fill: "none"
                  })
                ])
              ]),
              createVNode("rect", {
                width: "100%",
                height: "100%",
                "stroke-width": "0",
                fill: "url(#:r99:)"
              }),
              (openBlock(), createBlock("svg", {
                x: "-12",
                y: "4",
                class: "overflow-visible"
              }, [
                createVNode("rect", {
                  "stroke-width": "0",
                  width: "73",
                  height: "57",
                  x: "288",
                  y: "168"
                }),
                createVNode("rect", {
                  "stroke-width": "0",
                  width: "73",
                  height: "57",
                  x: "144",
                  y: "56"
                }),
                createVNode("rect", {
                  "stroke-width": "0",
                  width: "73",
                  height: "57",
                  x: "504",
                  y: "168"
                }),
                createVNode("rect", {
                  "stroke-width": "0",
                  width: "73",
                  height: "57",
                  x: "720",
                  y: "336"
                })
              ]))
            ]))
          ]),
          createVNode("div", { class: "border-b bg-white relative px-6 py-4" }, [
            createVNode("div", { class: "w-full sm:flex sm:items-center sm:justify-between" }, [
              createVNode("div", null, [
                $options.currentStep ? (openBlock(), createBlock("span", {
                  key: 0,
                  class: "ml-14 text-sm font-bold text-teal-600 group-hover:text-teal-800"
                }, [
                  createTextVNode("Step "),
                  $options.currentStep.id ? (openBlock(), createBlock("span", { key: 0 }, toDisplayString($options.currentStep.id), 1)) : createCommentVNode("", true),
                  createTextVNode(" / 3 - "),
                  $options.currentStep.id == "1" ? (openBlock(), createBlock("span", { key: 1 }, [
                    $data.showPrimer && $data.currentDraft ? (openBlock(), createBlock("span", { key: 0 }, " Introduction ")) : (openBlock(), createBlock("span", { key: 1 }, "File Upload"))
                  ])) : createCommentVNode("", true),
                  $options.currentStep.id == "2" ? (openBlock(), createBlock("span", { key: 2 }, " Auto Processing, Assignments and Validation ")) : createCommentVNode("", true)
                ])) : createCommentVNode("", true),
                createVNode("h3", { class: "text-sm text-gray-700 uppercase font-bold tracking-widest" }, [
                  $options.currentStep ? (openBlock(), createBlock("span", { key: 0 }, [
                    $data.step == "1" ? (openBlock(), createBlock("span", { key: 0 }, [
                      createVNode(_component_Link, {
                        class: "mr-2 ml-1 inline-flex items-center px-2.5 py-1 text-md font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                        href: "/upload"
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" ← ")
                        ]),
                        _: 1
                      })
                    ])) : (openBlock(), createBlock("span", { key: 1 }, [
                      createVNode("a", {
                        class: "cursor-pointer mr-2 ml-1 inline-flex items-center px-2.5 py-1 text-md font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                        onClick: ($event) => $options.selectStep(1)
                      }, " ← ", 8, ["onClick"])
                    ]))
                  ])) : (openBlock(), createBlock("span", { key: 1 }, [
                    createVNode(_component_Link, {
                      class: "mr-2 ml-1 inline-flex items-center px-2.5 py-1 text-md font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                      href: "/upload"
                    }, {
                      default: withCtx(() => [
                        createTextVNode(" ← ")
                      ]),
                      _: 1
                    })
                  ])),
                  $options.currentStep && $data.currentDraft ? (openBlock(), createBlock("span", { key: 2 }, [
                    createVNode("p", {
                      class: "inline focus:outline-none focus:ring-0 focus:bg-gray-100 p-2 rounded-md",
                      contenteditable: "",
                      onBlur: ($event) => $options.updateDraft($event)
                    }, toDisplayString($data.currentDraft.name), 41, ["onBlur"]),
                    createVNode(_component_jet_input_error, {
                      message: $data.draftForm.errors.name,
                      class: "mt-2"
                    }, null, 8, ["message"])
                  ])) : (openBlock(), createBlock("span", { key: 3 }, " Submit data to nmrXiv "))
                ])
              ]),
              createVNode("div", { class: "mt-3 sm:ml-4 sm:mt-0" }, [
                $data.showPrimer && $data.currentDraft ? (openBlock(), createBlock("div", { key: 0 }, [
                  createVNode("div", { class: "float-left" }, [
                    createVNode("div", {
                      class: "relative mt-2 flex items-start",
                      onChange: ($event) => $options.hidePrimer()
                    }, [
                      createVNode("div", { class: "flex h-5 items-center" }, [
                        createVNode("input", {
                          id: "comments",
                          "aria-describedby": "comments-description",
                          name: "comments",
                          type: "checkbox",
                          class: "h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500"
                        })
                      ]),
                      createVNode("div", { class: "ml-3 text-sm mr-5" }, [
                        createVNode("label", {
                          for: "comments",
                          class: "font-medium text-gray-700"
                        }, "Don't show this again")
                      ])
                    ], 40, ["onChange"])
                  ]),
                  createVNode(_component_jet_button, {
                    class: ["ml-2 float-right", {
                      "opacity-25": $data.createDatasetForm.processing
                    }],
                    onClick: ($event) => $options.skipPrimer()
                  }, {
                    default: withCtx(() => [
                      createTextVNode(" Proceed ")
                    ]),
                    _: 1
                  }, 8, ["class", "onClick"])
                ])) : (openBlock(), createBlock("div", { key: 1 }, [
                  !$options.currentStep ? (openBlock(), createBlock("span", { key: 0 }, [
                    createVNode(_component_Link, {
                      class: "inline-flex items-center px-2.5 py-1 border border-gray-300 shadow-sm text-md font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                      href: $data.returnUrl
                    }, {
                      default: withCtx(() => [
                        createTextVNode(" Cancel ")
                      ]),
                      _: 1
                    }, 8, ["href"])
                  ])) : (openBlock(), createBlock("span", { key: 1 }, [
                    $options.currentStep.id == "1" ? (openBlock(), createBlock("span", { key: 0 }, [
                      createVNode(_component_Link, {
                        class: "mx-2 inline-flex items-center px-2.5 py-1 border border-gray-300 shadow-sm text-md font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                        href: $data.returnUrl
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Cancel ")
                        ]),
                        _: 1
                      }, 8, ["href"]),
                      createVNode(_component_jet_button, {
                        id: "tour-step-proceed-from-step-1",
                        class: ["ml-2", {
                          "opacity-25": $data.createDatasetForm.processing
                        }],
                        disabled: $data.createDatasetForm.processing || $data.loading || $data.loadingStep,
                        onClick: ($event) => $options.process()
                      }, {
                        default: withCtx(() => [
                          $data.loadingStep ? (openBlock(), createBlock("span", { key: 0 }, [
                            (openBlock(), createBlock("svg", {
                              class: "animate-spin -ml-1 mr-3 h-2 w-2 text-white",
                              xmlns: "http://www.w3.org/2000/svg",
                              fill: "none",
                              viewBox: "0 0 24 24"
                            }, [
                              createVNode("circle", {
                                class: "opacity-25",
                                cx: "12",
                                cy: "12",
                                r: "10",
                                stroke: "currentColor",
                                "stroke-width": "4"
                              }),
                              createVNode("path", {
                                class: "opacity-75",
                                fill: "currentColor",
                                d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                              })
                            ]))
                          ])) : createCommentVNode("", true),
                          createTextVNode(" Proceed ")
                        ]),
                        _: 1
                      }, 8, ["class", "disabled", "onClick"])
                    ])) : $options.currentStep.id == "2" ? (openBlock(), createBlock("span", { key: 1 }, [
                      createVNode(_component_jet_secondary_button, {
                        class: ["ml-2 float-left", {
                          "opacity-25": $data.createDatasetForm.processing
                        }],
                        disabled: $data.createDatasetForm.processing,
                        onClick: ($event) => $options.selectStep(1)
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Back ")
                        ]),
                        _: 1
                      }, 8, ["class", "disabled", "onClick"]),
                      createVNode(_component_jet_button, {
                        id: "tour-step-proceed-from-step-2",
                        class: ["ml-2", {
                          "opacity-25": $data.createDatasetForm.processing
                        }],
                        disabled: $data.createDatasetForm.processing || $data.loading || $data.loadingStep,
                        onClick: ($event) => $options.closeDraft()
                      }, {
                        default: withCtx(() => [
                          $data.loadingStep ? (openBlock(), createBlock("span", { key: 0 }, [
                            (openBlock(), createBlock("svg", {
                              class: "animate-spin -ml-1 mr-3 h-2 w-2 text-white",
                              xmlns: "http://www.w3.org/2000/svg",
                              fill: "none",
                              viewBox: "0 0 24 24"
                            }, [
                              createVNode("circle", {
                                class: "opacity-25",
                                cx: "12",
                                cy: "12",
                                r: "10",
                                stroke: "currentColor",
                                "stroke-width": "4"
                              }),
                              createVNode("path", {
                                class: "opacity-75",
                                fill: "currentColor",
                                d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                              })
                            ]))
                          ])) : createCommentVNode("", true),
                          createTextVNode(" Proceed ")
                        ]),
                        _: 1
                      }, 8, ["class", "disabled", "onClick"])
                    ])) : $options.currentStep.id == "3" ? (openBlock(), createBlock("span", { key: 2 }, [
                      createVNode(_component_Link, {
                        id: "tour-step-finish",
                        class: "inline-flex items-center px-2.5 py-1 border border-gray-300 shadow-sm text-md font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                        href: _ctx.route("dashboard")
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Finish ")
                        ]),
                        _: 1
                      }, 8, ["href"])
                    ])) : createCommentVNode("", true)
                  ]))
                ]))
              ])
            ])
          ])
        ];
      }
    }),
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="relative"${_scopeId}>`);
        if (!$data.loading) {
          _push2(`<div${_scopeId}><div class="mx-auto"${_scopeId}>`);
          if ($data.drafts.length > 0 && !$data.currentDraft) {
            _push2(`<div class="px-12"${_scopeId}><div class="my-8 mx-12 mx-auto max-w-none"${_scopeId}><div class="bg-white border rounded-lg shadow-md"${_scopeId}><div class="border-b rounded-t-lg bg-gray-50 border-gray-200 px-4 py-5 sm:px-6"${_scopeId}><div class="-ml-4 -mt-4 flex flex-wrap items-center justify-between sm:flex-nowrap"${_scopeId}><div class="ml-4 mt-4"${_scopeId}><h3 class="text-base font-semibold leading-6 text-gray-900"${_scopeId}> Drafts </h3><p class="mt-1 text-sm text-gray-500"${_scopeId}> Please select one of the drafts below to continue or start a new submission </p></div><div class="ml-4 mt-4 flex-shrink-0"${_scopeId}><button class="inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring focus:ring-gray-300 disabled:opacity-25 transition"${_scopeId}> + Create New </button></div></div></div><ul role="list" class="overflow-y-scroll h-[calc(100vh-290px)]"${_scopeId}><!--[-->`);
            ssrRenderList($data.drafts, (draft) => {
              _push2(`<li class="hover:cursor-pointer border-b hover:bg-gray-50 px-5 py-4"${_scopeId}>`);
              _push2(ssrRenderComponent(_component_Link, {
                href: _ctx.route("upload", {
                  draft_id: draft.id
                })
              }, {
                default: withCtx((_2, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`<div class="flex items-center space-x-4"${_scopeId2}><div class="flex-1 min-w-0 mr-auto max-w-2xl"${_scopeId2}><p class="text-lg font-large text-black truncate"${_scopeId2}><b${_scopeId2}>${ssrInterpolate(draft.name)}</b></p><p class="text-sm font-medium text-gray-700 truncate pr-10"${_scopeId2}>${ssrInterpolate(draft.description)}</p><p class="text-sm font-medium text-gray-500 truncate"${_scopeId2}> ID: ${ssrInterpolate(draft.key)} · Created at: ${ssrInterpolate(_ctx.formatDateTime(
                      draft.created_at
                    ))}</p></div><div${_scopeId2}><svg class="h-5 w-5 flex-none text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"${_scopeId2}><path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd"${_scopeId2}></path></svg></div></div>`);
                  } else {
                    return [
                      createVNode("div", { class: "flex items-center space-x-4" }, [
                        createVNode("div", { class: "flex-1 min-w-0 mr-auto max-w-2xl" }, [
                          createVNode("p", { class: "text-lg font-large text-black truncate" }, [
                            createVNode("b", null, toDisplayString(draft.name), 1)
                          ]),
                          createVNode("p", { class: "text-sm font-medium text-gray-700 truncate pr-10" }, toDisplayString(draft.description), 1),
                          createVNode("p", { class: "text-sm font-medium text-gray-500 truncate" }, " ID: " + toDisplayString(draft.key) + " · Created at: " + toDisplayString(_ctx.formatDateTime(
                            draft.created_at
                          )), 1)
                        ]),
                        createVNode("div", null, [
                          (openBlock(), createBlock("svg", {
                            class: "h-5 w-5 flex-none text-gray-400",
                            viewBox: "0 0 20 20",
                            fill: "currentColor",
                            "aria-hidden": "true"
                          }, [
                            createVNode("path", {
                              "fill-rule": "evenodd",
                              d: "M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z",
                              "clip-rule": "evenodd"
                            })
                          ]))
                        ])
                      ])
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
              _push2(`</li>`);
            });
            _push2(`<!--]--></ul></div></div></div>`);
          } else {
            _push2(`<div${_scopeId}>`);
            if ($data.showPrimer) {
              _push2(`<div class="pt-6"${_scopeId}><div class="h-[calc(100vh-235px)] overflow-scroll"${_scopeId}>`);
              _push2(ssrRenderComponent(_component_primer, null, null, _parent2, _scopeId));
              _push2(`</div></div>`);
            } else {
              _push2(`<div${_scopeId}>`);
              if ($options.currentStep && $data.currentDraft) {
                _push2(`<div${_scopeId}>`);
                if ($options.currentStep.id == "1") {
                  _push2(`<div id="submission-dropzone" class="border-gray-100"${_scopeId}><div class="mx-5 pt-4"${_scopeId}><small class="cursor-pointer"${_scopeId}>Draft ID: ${ssrInterpolate($data.currentDraft.key)}</small><div class="text-red-600"${_scopeId}>${$data.filesErrorMessage}</div></div><div class="relative border bg-white mt-3"${_scopeId}><div id="tour-step-upload-spectra"${_scopeId}>`);
                  _push2(ssrRenderComponent(_component_file_system_browser, {
                    ref: "fsbRef",
                    readonly: false,
                    draft: $data.currentDraft,
                    height: "h-[calc(100vh-385px)]",
                    onLoading: $options.filesLoading
                  }, null, _parent2, _scopeId));
                  _push2(`</div></div>`);
                  _push2(ssrRenderComponent(_component_jet_input_error, {
                    message: $data.draftForm.errors.studies,
                    class: "mt-2"
                  }, null, _parent2, _scopeId));
                  _push2(`</div>`);
                } else {
                  _push2(`<!---->`);
                }
                if ($options.currentStep.id == "2") {
                  _push2(`<div${_scopeId}><div class="h-[calc(100vh-135px)] overflow-hidden"${_scopeId}><div class="flex-1 flex"${_scopeId}><nav aria-label="Sections" class="flex-shrink-0 w-64 h-[calc(100vh-135px)] overflow-y-hidden bg-white border-r border-gray-200 md:flex md:flex-col"${_scopeId}><div class="${ssrRenderClass([
                    $data.displaySamplesSummaryInfo ? "bg-gray-800 text-white" : "text-dark",
                    "cursor-pointer border-gray-200 px-4 py-3 border-b text-left text-sm font-medium text-gray-500 tracking-wider flex-shrink-0 border-b border-blue-gray-200 hover:bg-gray-800 hover:text-white"
                  ])}"${_scopeId}><a${_scopeId}> SUMMARY </a></div><div class="border-gray-200 px-4 py-3 border-b bg-gray-50 text-left text-xs font-medium text-gray-500 tracking-wider flex-shrink-0 border-b border-blue-gray-200"${_scopeId}>${ssrInterpolate(_ctx.pluralize(
                    "SAMPLE",
                    $data.studies.length
                  ))} (${ssrInterpolate($data.studies.length)}) <div class="float-right cursor-pointer tooltip"${_scopeId}>`);
                  if (!$data.showCompoundDetails) {
                    _push2(ssrRenderComponent(_component_EyeIcon, { class: "w-4 h-4 mr-1 text-gray-600 hover:text-gray-500" }, null, _parent2, _scopeId));
                  } else {
                    _push2(ssrRenderComponent(_component_EyeSlashIcon, { class: "w-4 h-4 mr-1 text-gray-600 hover:text-gray-500" }, null, _parent2, _scopeId));
                  }
                  _push2(`<div class="bg-gray-900 text-center text-white px-2 py-1 shadow-lg rounded-md tooltiptextleft"${_scopeId}>`);
                  if (!$data.showCompoundDetails) {
                    _push2(`<span${_scopeId}>Show Compound details</span>`);
                  } else {
                    _push2(`<span${_scopeId}>Hide Compound details</span>`);
                  }
                  _push2(`</div></div></div><div id="tour-step-side-panel-studies" class="no-scrollbar" style="${ssrRenderStyle({ "height": "74vh", "overflow": "scroll !important" })}"${_scopeId}><!--[-->`);
                  ssrRenderList($data.studies, (study, $index) => {
                    _push2(`<a class="${ssrRenderClass([
                      $data.selectedStudy && $data.selectedStudy.id == study.id ? "bg-gray-800 text-white" : "hover:bg-gray-200 hover:bg-opacity-50",
                      "cursor-pointer flex py-4 border-b-4 border-blue-gray-200"
                    ])}"${_scopeId}><div class="cursor-pointer px-4 text-sm w-full"${_scopeId}>`);
                    if (study.internal_status == "complete") {
                      _push2(`<div class="font-medium text-blue-gray-900"${_scopeId}>`);
                      if ($data.showCompoundDetails && study.sample.molecules[0]) {
                        _push2(`<div class="border-b border-gray-100 mb-4 border"${_scopeId}>`);
                        _push2(ssrRenderComponent(_component_Depictor2D, {
                          class: "-py-4 -px-4 rounded-md",
                          molecule: study.sample.molecules[0].canonical_smiles
                        }, null, _parent2, _scopeId));
                        _push2(`</div>`);
                      } else {
                        _push2(`<!---->`);
                      }
                      _push2(`<a${_scopeId}>${ssrInterpolate(study.name)}</a>`);
                      if (study.sample.molecules.length > 0) {
                        _push2(`<span class="float-right"${_scopeId}><img class="flex-shrink-0 -mt-0.5 h-6 w-6 text-blue-gray-400" src="https://upload.wikimedia.org/wikipedia/sco/3/35/ChEBI_logo.png" alt=""${_scopeId}></span>`);
                      } else {
                        _push2(`<!---->`);
                      }
                      _push2(`<div class="mt-1 text-blue-gray-500"${_scopeId}><!--[-->`);
                      ssrRenderList(study.datasets, (ds) => {
                        _push2(`<span${_scopeId}><div class="${ssrRenderClass([
                          study.has_nmrium ? "bg-green-100 text-gray-800" : "bg-gray-100 text-gray-800",
                          "mb-0.5 inline-flex truncate break-words items-center px-3 py-0.5 rounded-full text-xs font-medium mr-1"
                        ])}"${_scopeId}><span${_scopeId}>${ssrInterpolate(ds.name)} `);
                        if (ds.type) {
                          _push2(`<span${_scopeId}>(${ssrInterpolate(ds.type)})</span>`);
                        } else {
                          _push2(`<!---->`);
                        }
                        _push2(`</span></div></span>`);
                      });
                      _push2(`<!--]--></div></div>`);
                    } else {
                      _push2(`<div${_scopeId}><div class="p-4 max-w-sm w-full mx-auto"${_scopeId}><div class="animate-pulse flex space-x-4"${_scopeId}><div class="flex-1 space-y-6 py-1"${_scopeId}><div class="h-2 bg-slate-200"${_scopeId}></div><div class="space-y-3"${_scopeId}><div class="grid grid-cols-3 gap-4"${_scopeId}><div class="h-2 bg-slate-200 rounded col-span-2"${_scopeId}></div><div class="h-2 bg-slate-200 rounded col-span-1"${_scopeId}></div></div><div class="h-2 bg-slate-200 rounded"${_scopeId}></div></div></div></div></div></div>`);
                    }
                    _push2(`</div></a>`);
                  });
                  _push2(`<!--]--></div></nav><div class="flex-1 px-2 bg-white"${_scopeId}>`);
                  if ($data.displaySamplesSummaryInfo) {
                    _push2(`<div${_scopeId}><div class="-mx-2 border-b border-b-gray-900/10 lg:border-t lg:border-t-gray-900/5"${_scopeId}><dl class="mx-auto grid max-w-7xl grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 lg:px-2 xl:px-0"${_scopeId}><div class="flex items-baseline flex-wrap justify-between gap-y-2 gap-x-4 border-t border-gray-900/5 px-4 py-10 sm:px-6 lg:border-t-0 xl:px-8"${_scopeId}><dt class="text-sm font-medium leading-6 text-gray-500"${_scopeId}> Samples </dt><dd class="w-full flex-none text-3xl font-medium leading-10 tracking-tight text-gray-900"${_scopeId}>${ssrInterpolate($data.studies.length)}</dd></div><div class="flex items-baseline flex-wrap justify-between gap-y-2 gap-x-4 border-t border-gray-900/5 px-4 py-10 sm:px-6 lg:border-t-0 xl:px-8 sm:border-l"${_scopeId}><dt class="text-sm font-medium leading-6 text-gray-500"${_scopeId}> Spectra </dt><dd class="w-full flex-none text-3xl font-medium leading-10 tracking-tight text-gray-900"${_scopeId}>${ssrInterpolate($options.spectraCount)}</dd></div><div class="flex items-baseline flex-wrap justify-between gap-y-2 gap-x-4 border-t border-gray-900/5 px-4 py-10 sm:px-6 lg:border-t-0 xl:px-8 lg:border-l"${_scopeId}><dt class="text-sm font-medium leading-6 text-gray-500"${_scopeId}> Molecules </dt><dd class="w-full flex-none text-3xl font-medium leading-10 tracking-tight text-gray-900"${_scopeId}>${ssrInterpolate($options.moleculesCount)}</dd></div>`);
                    if ($data.inprogressStudies.length == 0) {
                      _push2(`<div class="flex items-baseline flex-wrap justify-between gap-y-2 gap-x-4 border-t border-gray-900/5 px-4 py-10 sm:px-6 lg:border-t-0 xl:px-8 sm:border-l"${_scopeId}><dt class="text-sm font-medium leading-6 text-gray-500"${_scopeId}> Samples Validation </dt><dd class="w-full flex-none"${_scopeId}>`);
                      if ($data.validationStatus) {
                        _push2(`<span${_scopeId}><span class="text-green-600 text-3xl font-medium leading-10 tracking-tight text-gray-900"${_scopeId}> Success </span></span>`);
                      } else {
                        _push2(`<span${_scopeId}><span class="text-yellow-600 text-3xl font-medium leading-10 tracking-tight text-gray-900"${_scopeId}> Incomplete </span><span class="text-sm text-red-500 tracking-tight"${_scopeId}> Meta data is missing. Please check the validation report below. </span></span>`);
                      }
                      _push2(`</dd></div>`);
                    } else {
                      _push2(`<!---->`);
                    }
                    _push2(`</dl></div><div class="overflow-y-scroll h-[calc(100vh-153px)] mx-auto max-w-7xl px-4 py-8 sm:px-6 lg:px-8"${_scopeId}>`);
                    if ($data.inprogressStudies.length > 0) {
                      _push2(`<div${_scopeId}><div class="rounded-md bg-red-50 p-4 mb-12"${_scopeId}><div class="flex"${_scopeId}><div class="flex-shrink-0"${_scopeId}><svg class="animate-spin -ml-1 h-5 w-5 text-red" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"${_scopeId}><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"${_scopeId}></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"${_scopeId}></path></svg></div><div class="ml-3"${_scopeId}><h3 class="text-sm font-medium text-red-800"${_scopeId}> Processing uploaded data: Please wait for your samples to be processed. </h3><div class="mt-2 text-sm text-red-700"${_scopeId}><ul role="list" class="list-disc space-y-1 pl-5"${_scopeId}><li${_scopeId}> Processed: ${ssrInterpolate($data.studies.length - $data.inprogressStudies.length)} out of ${ssrInterpolate($data.studies.length)} samples </li></ul></div></div></div></div></div>`);
                    } else {
                      _push2(`<div${_scopeId}>`);
                      if ($options.importPendingSamples.length > 0) {
                        _push2(`<div class="mb-4"${_scopeId}><div class="bg-white border shadow sm:rounded-lg"${_scopeId}><div class="px-4 py-5 sm:p-6"${_scopeId}><h3 class="text-base font-semibold leading-6 text-gray-900"${_scopeId}> Spectra Metadata Not Found </h3><div class="mt-2 max-w-xl text-sm text-gray-500"${_scopeId}><p${_scopeId}> Some important Spectra metadata are needed. Would you like us to automatically import the missing Spectra information and kickstart the processing? </p></div><div class="mt-5"${_scopeId}><button type="button" class="inline-flex items-center rounded-md bg-green-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-green-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-green-500"${_scopeId}> Import now </button></div></div></div></div>`);
                      } else {
                        _push2(`<!---->`);
                      }
                      _push2(`</div>`);
                    }
                    _push2(`<div class="mx-auto grid mt-10 max-w-2xl grid-cols-1 grid-rows-1 items-start gap-x-8 gap-y-8 lg:mx-0 lg:max-w-none lg:grid-cols-3"${_scopeId}><div class="lg:col-span-3 mb-24 pb-24"${_scopeId}>`);
                    if ($data.validation && $data.inprogressStudies.length == 0) {
                      _push2(`<div${_scopeId}><button class="px-3 py-2 bg-white border border-gray-300 rounded-md font-semibold text-xs text-gray-700 uppercase tracking-widest shadow-sm hover:text-gray-500 focus:outline-none focus:border-blue-300 focus:ring focus:ring-blue-200 active:text-gray-800 active:bg-gray-50 disabled:opacity-25 transition ml-2 float-right hover:bg-gray-200 hover:text-gray-900"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4 mr-2 inline"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99"${_scopeId}></path></svg> Refresh </button>`);
                      _push2(ssrRenderComponent(_component_Validation, {
                        project: $data.project,
                        validation: $data.validation,
                        mode: "study",
                        onUpdate: $options.editData
                      }, null, _parent2, _scopeId));
                      _push2(`   </div>`);
                    } else {
                      _push2(`<!---->`);
                    }
                    _push2(`</div></div></div></div>`);
                  } else {
                    _push2(`<div${_scopeId}><div class="mx-auto flex flex-col md:px-0 xl:px-0"${_scopeId}><div${_scopeId}><div${_scopeId}><div class="px-4 py-1.5 -mx-2 bg-gray-50 border-b px-4 py-3 flex items-center font-semibold text-sm text-slate-900 dark:text-slate-200 bg-slate-50/90 dark:bg-slate-700/90 backdrop-blur-sm ring-1 ring-slate-900/10 dark:ring-black/10"${_scopeId}><h1 class="text-2xl font-extrabold text-gray-900"${_scopeId}>${ssrInterpolate($data.selectedStudy.name)}</h1></div><div class="scroll-smooth overflow-y-scroll h-[calc(100vh-153px)]"${_scopeId}>`);
                    if (!$data.hideDownArrow) {
                      _push2(`<div class="absolute bottom-0 right-0 object-right-bottom rounded-xl overflow-auto p-8"${_scopeId}><div class="flex justify-center"${_scopeId}><a href="#chemical-composition"${_scopeId}><div class="drop-shadow-md animate-bounce bg-gray-300 dark:bg-slate-800 p-2 w-10 h-10 ring-1 ring-slate-900/5 dark:ring-slate-200/20 shadow-lg rounded-full flex items-center justify-center"${_scopeId}><svg class="w-6 h-6 text-white-500" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" stroke="currentColor"${_scopeId}><path d="M19 14l-7 7m0 0l-7-7m7 7V3"${_scopeId}></path></svg></div></a></div></div>`);
                    } else {
                      _push2(`<!---->`);
                    }
                    _push2(`<div class="px-2 sm:px-2 md:px-0 pb-24"${_scopeId}><div class="px-2"${_scopeId}><div class="my-7"${_scopeId}>`);
                    _push2(ssrRenderComponent(_component_SpectraEditor, {
                      ref: "spectraEditorREF",
                      project: $data.project,
                      study: $data.selectedStudy,
                      onLoading: $options.spectraLoading
                    }, null, _parent2, _scopeId));
                    _push2(`</div></div><div class="px-2"${_scopeId}><div class="py-4 max-w-7xl mx-auto"${_scopeId}><div class="sm:flex sm:items-center sm:justify-between"${_scopeId}><h3 id="chemical-composition" class="text-xl font-bold text-gray-900 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId}> Chemical composition </h3></div></div><div class="grid grid-cols-2 gap-2"${_scopeId}><div class="pr-2"${_scopeId}>`);
                    if ($data.selectedStudy.sample.molecules.length > 0) {
                      _push2(`<div class="flow-root"${_scopeId}><ul role="list" class="-mb-8"${_scopeId}><!--[-->`);
                      ssrRenderList($data.selectedStudy.sample.molecules, (molecule) => {
                        _push2(`<li${_scopeId}><div class="relative pb-8"${_scopeId}><span class="absolute top-5 left-5 -ml-px h-full w-0.5 bg-gray-200" aria-hidden="true"${_scopeId}></span><div class="relative flex items-start space-x-3"${_scopeId}>`);
                        if (molecule && molecule.pivot) {
                          _push2(`<div class="relative"${_scopeId}><div class="rounded-full border p-2 z-10 bg-gray-100 text-sm"${_scopeId}>${ssrInterpolate(molecule.pivot.percentage_composition)}% </div></div>`);
                        } else {
                          _push2(`<!---->`);
                        }
                        _push2(`<div class="min-w-0 flex-1"${_scopeId}><div${_scopeId}><div class="text-sm"${_scopeId}><a href="#" class="font-medium text-gray-900"${_scopeId}>${ssrInterpolate(molecule.standard_inchi)}</a></div></div><div class="mt-2 text-sm text-gray-700"${_scopeId}><div class="rounded-md border mb-3"${_scopeId}>`);
                        if (molecule.canonical_smiles) {
                          _push2(`<div${_scopeId}>`);
                          _push2(ssrRenderComponent(_component_Depictor, {
                            class: "py-4 -px-4",
                            "model-value": molecule.canonical_smiles,
                            "show-download": false
                          }, null, _parent2, _scopeId));
                          _push2(`</div>`);
                        } else {
                          _push2(`<!---->`);
                        }
                        _push2(`</div><button class="inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"${_scopeId}>`);
                        _push2(ssrRenderComponent(_component_TrashIcon, { class: "w-4 h-4 inline mr-1" }, null, _parent2, _scopeId));
                        _push2(`Delete </button><button class="inline-flex ml-2 items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"${_scopeId}>`);
                        _push2(ssrRenderComponent(_component_PencilIcon, { class: "w-4 h-4 inline mr-1" }, null, _parent2, _scopeId));
                        _push2(`Edit </button></div></div></div></div></li>`);
                      });
                      _push2(`<!--]--></ul><div class="rounded-full border p-2 z-10 bg-gray-100 text-sm mt-14 text-center"${_scopeId}> Sample chemical composition </div></div>`);
                    } else {
                      _push2(`<div${_scopeId}><div class="text-center my-10 py-10"${_scopeId}><svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true"${_scopeId}><path vector-effect="non-scaling-stroke" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"${_scopeId}></path></svg><h3 class="mt-2 text-sm font-medium text-gray-900"${_scopeId}> No structures associated with the sample yet! </h3><p class="mt-1 text-sm text-gray-500"${_scopeId}> Get started by adding a new molecule. </p></div></div>`);
                    }
                    _push2(`</div><div class="pl-2"${_scopeId}><div class="sm:col-span-4"${_scopeId}><label for="email" class="block text-sm font-medium text-gray-700"${_scopeId}> SMILES </label><div class="mt-1 mb-2"${_scopeId}><input id="smiles"${ssrRenderAttr(
                      "value",
                      $data.smiles
                    )} name="smiles" type="text" class="shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md"${_scopeId}></div>`);
                    if ($data.smiles && $data.smiles != "") {
                      _push2(`<button class="inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 mt-2"${_scopeId}> Load Structure </button>`);
                    } else {
                      _push2(`<!---->`);
                    }
                    _push2(ssrRenderComponent(_component_jet_input_error, {
                      message: $data.errorMessage,
                      class: "mt-2"
                    }, null, _parent2, _scopeId));
                    _push2(`</div><div class="relative"${_scopeId}><div class="absolute inset-0 flex items-center" aria-hidden="true"${_scopeId}><div class="w-full border-t border-gray-300"${_scopeId}></div></div><div class="relative flex justify-center"${_scopeId}><span class="px-2 bg-white text-sm text-gray-500"${_scopeId}> Or </span></div></div><div class="float-right text-xs cursor-pointer hover:text-blue-700"${_scopeId}><a href="https://docs.nmrxiv.org/submission-guides/editor.html" target="_blank"${_scopeId}>Need help? </a></div><div id="structureSearchEditor" class="w-full border my-4 rounded-md" style="${ssrRenderStyle({ "height": "400px" })}"${_scopeId}></div><div class="mt-1 mb-6"${_scopeId}><label for="email" class="block text-sm font-medium text-gray-700"${_scopeId}> Percentage composition (${ssrInterpolate($data.percentage)}%) </label>`);
                    _push2(ssrRenderComponent(_component_slider, {
                      modelValue: $data.percentage,
                      "onUpdate:modelValue": ($event) => $data.percentage = $event,
                      min: 0,
                      max: $options.getMax,
                      height: 10,
                      color: "#000",
                      "track-color": "#999"
                    }, null, _parent2, _scopeId));
                    _push2(`</div><button type="button" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500"${_scopeId}> ADD </button></div></div></div><hr class="mt-4 mx-3"${_scopeId}><div class="px-2 sm:px-2"${_scopeId}><div class="pt-4 xl:col-span-2"${_scopeId}><h1 class="text-xl mb-2 font-bold text-gray-900"${_scopeId}> Sample Details </h1><div class="mb-3"${_scopeId}><label for="description" class="block text-sm font-medium text-gray-700 after:content-[&#39;*&#39;] after:ml-0.5 after:text-red-500"${_scopeId}> Sample Description <span class="float-right rounded-full px-2"${_scopeId}> Auto generate </span></label><div class="mt-1"${_scopeId}><textarea id="study-description" name="study-description" rows="3" class="block w-full shadow-sm focus:ring-teal-500 focus:border-teal-500 sm:text-sm border border-gray-300 rounded-md"${_scopeId}>${ssrInterpolate(
                      $data.studyForm.description
                    )}</textarea>`);
                    _push2(ssrRenderComponent(_component_jet_input_error, {
                      message: $data.studyForm.errors.description,
                      class: "mt-2"
                    }, null, _parent2, _scopeId));
                    _push2(`</div></div><div class="mb-3"${_scopeId}><label for="description" class="block text-sm font-medium text-gray-700"${_scopeId}> Keywords </label><div${_scopeId}>`);
                    _push2(ssrRenderComponent(_component_vue_tags_input, {
                      modelValue: $data.studyForm.tag,
                      "onUpdate:modelValue": ($event) => $data.studyForm.tag = $event,
                      placeholder: "Type a keyword or keywords separated by comma (,) and press enter",
                      separators: [
                        ";",
                        ","
                      ],
                      "max-width": "100%",
                      tags: $data.studyForm.tags,
                      onTagsChanged: $options.updateTags
                    }, null, _parent2, _scopeId));
                    _push2(ssrRenderComponent(_component_jet_input_error, {
                      message: $data.studyForm.errors.tags,
                      class: "mt-2"
                    }, null, _parent2, _scopeId));
                    _push2(`</div></div></div><div class="mb-3"${_scopeId}><label for="description" class="block text-sm font-medium text-gray-700"${_scopeId}> Organism (Optional) </label><div class="mt-2 sm:flex sm:items-start sm:justify-between"${_scopeId}><div class="text-sm text-gray-500 w-full"${_scopeId}><ontology-autocomplete class="rounded-md" format="text"${ssrRenderAttr(
                      "value",
                      $data.studySpecies
                    )} placeholder="Search species"${_scopeId}></ontology-autocomplete></div><div class="mt-5 sm:ml-6 sm:mt-0 sm:flex sm:flex-shrink-0 sm:items-center"${_scopeId}><button type="button" class="inline-flex items-center gap-x-1.5 py-3 bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50"${_scopeId}><svg class="-ml-0.5 h-5 w-5 text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"${_scopeId}><path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z"${_scopeId}></path></svg> Add </button></div></div><div class="mt-2"${_scopeId}><!--[-->`);
                    ssrRenderList($data.studyForm.species, (species, $index) => {
                      _push2(`<div class="bg-gray-100 text-gray-800 mb-0.5 inline-flex truncate break-words items-center px-3 py-2 rounded-full text-sm font-medium mr-1"${_scopeId}><ontology-term-annotation${ssrRenderAttr(
                        "annotation",
                        species
                      )}${_scopeId}></ontology-term-annotation><span class="cursor-pointer"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-5 h-5 ml-2"${_scopeId}><path fill-rule="evenodd" d="M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm-1.72 6.97a.75.75 0 10-1.06 1.06L10.94 12l-1.72 1.72a.75.75 0 101.06 1.06L12 13.06l1.72 1.72a.75.75 0 101.06-1.06L13.06 12l1.72-1.72a.75.75 0 10-1.06-1.06L12 10.94l-1.72-1.72z" clip-rule="evenodd"${_scopeId}></path></svg></span></div>`);
                    });
                    _push2(`<!--]--></div></div></div></div></div></div></div></div></div>`);
                  }
                  _push2(`</div></div></div>`);
                  if ($data.spectraLoadingStatus) {
                    _push2(`<div class="w-full h-screen mx-84 px-10 fixed block top-0 left-0 bg-white opacity-90 z-50"${_scopeId}><div role="status" class="absolute -translate-x-1/2 -translate-y-1/2 top-2/4 left-1/2"${_scopeId}><svg aria-hidden="true" class="w-8 h-8 mr-2 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600" viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg"${_scopeId}><path d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z" fill="currentColor"${_scopeId}></path><path d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z" fill="currentFill"${_scopeId}></path></svg><div class="my-4"${_scopeId}>${$data.spectraLoadingMessage}</div><button type="button" class="inline-flex w-full justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto"${_scopeId}> Cancel </button></div></div>`);
                  } else {
                    _push2(`<!---->`);
                  }
                  _push2(`</div>`);
                } else {
                  _push2(`<!---->`);
                }
                _push2(`</div>`);
              } else {
                _push2(`<!---->`);
              }
              _push2(`</div>`);
            }
            _push2(`</div>`);
          }
          _push2(`</div></div>`);
        } else {
          _push2(`<div class="h-[calc(100vh-260px)] text-center py-12"${_scopeId}><svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-dark flex-inline inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"${_scopeId}><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"${_scopeId}></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"${_scopeId}></path></svg> Loading... </div>`);
        }
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "relative" }, [
            !$data.loading ? (openBlock(), createBlock("div", { key: 0 }, [
              createVNode("div", { class: "mx-auto" }, [
                $data.drafts.length > 0 && !$data.currentDraft ? (openBlock(), createBlock("div", {
                  key: 0,
                  class: "px-12"
                }, [
                  createVNode("div", { class: "my-8 mx-12 mx-auto max-w-none" }, [
                    createVNode("div", { class: "bg-white border rounded-lg shadow-md" }, [
                      createVNode("div", { class: "border-b rounded-t-lg bg-gray-50 border-gray-200 px-4 py-5 sm:px-6" }, [
                        createVNode("div", { class: "-ml-4 -mt-4 flex flex-wrap items-center justify-between sm:flex-nowrap" }, [
                          createVNode("div", { class: "ml-4 mt-4" }, [
                            createVNode("h3", { class: "text-base font-semibold leading-6 text-gray-900" }, " Drafts "),
                            createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " Please select one of the drafts below to continue or start a new submission ")
                          ]),
                          createVNode("div", { class: "ml-4 mt-4 flex-shrink-0" }, [
                            createVNode("button", {
                              class: "inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 active:bg-gray-900 focus:outline-none focus:border-gray-900 focus:ring focus:ring-gray-300 disabled:opacity-25 transition",
                              onClick: ($event) => $options.createNewDraft()
                            }, " + Create New ", 8, ["onClick"])
                          ])
                        ])
                      ]),
                      createVNode("ul", {
                        role: "list",
                        class: "overflow-y-scroll h-[calc(100vh-290px)]"
                      }, [
                        (openBlock(true), createBlock(Fragment, null, renderList($data.drafts, (draft) => {
                          return openBlock(), createBlock("li", {
                            key: draft.id,
                            class: "hover:cursor-pointer border-b hover:bg-gray-50 px-5 py-4"
                          }, [
                            createVNode(_component_Link, {
                              href: _ctx.route("upload", {
                                draft_id: draft.id
                              })
                            }, {
                              default: withCtx(() => [
                                createVNode("div", { class: "flex items-center space-x-4" }, [
                                  createVNode("div", { class: "flex-1 min-w-0 mr-auto max-w-2xl" }, [
                                    createVNode("p", { class: "text-lg font-large text-black truncate" }, [
                                      createVNode("b", null, toDisplayString(draft.name), 1)
                                    ]),
                                    createVNode("p", { class: "text-sm font-medium text-gray-700 truncate pr-10" }, toDisplayString(draft.description), 1),
                                    createVNode("p", { class: "text-sm font-medium text-gray-500 truncate" }, " ID: " + toDisplayString(draft.key) + " · Created at: " + toDisplayString(_ctx.formatDateTime(
                                      draft.created_at
                                    )), 1)
                                  ]),
                                  createVNode("div", null, [
                                    (openBlock(), createBlock("svg", {
                                      class: "h-5 w-5 flex-none text-gray-400",
                                      viewBox: "0 0 20 20",
                                      fill: "currentColor",
                                      "aria-hidden": "true"
                                    }, [
                                      createVNode("path", {
                                        "fill-rule": "evenodd",
                                        d: "M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z",
                                        "clip-rule": "evenodd"
                                      })
                                    ]))
                                  ])
                                ])
                              ]),
                              _: 2
                            }, 1032, ["href"])
                          ]);
                        }), 128))
                      ])
                    ])
                  ])
                ])) : (openBlock(), createBlock("div", { key: 1 }, [
                  $data.showPrimer ? (openBlock(), createBlock("div", {
                    key: 0,
                    class: "pt-6"
                  }, [
                    createVNode("div", { class: "h-[calc(100vh-235px)] overflow-scroll" }, [
                      createVNode(_component_primer)
                    ])
                  ])) : (openBlock(), createBlock("div", { key: 1 }, [
                    $options.currentStep && $data.currentDraft ? (openBlock(), createBlock("div", { key: 0 }, [
                      $options.currentStep.id == "1" ? (openBlock(), createBlock("div", {
                        key: 0,
                        id: "submission-dropzone",
                        class: "border-gray-100"
                      }, [
                        createVNode("div", { class: "mx-5 pt-4" }, [
                          createVNode("small", { class: "cursor-pointer" }, "Draft ID: " + toDisplayString($data.currentDraft.key), 1),
                          createVNode("div", {
                            class: "text-red-600",
                            innerHTML: $data.filesErrorMessage
                          }, null, 8, ["innerHTML"])
                        ]),
                        createVNode("div", { class: "relative border bg-white mt-3" }, [
                          createVNode("div", { id: "tour-step-upload-spectra" }, [
                            createVNode(_component_file_system_browser, {
                              ref: "fsbRef",
                              readonly: false,
                              draft: $data.currentDraft,
                              height: "h-[calc(100vh-385px)]",
                              onLoading: $options.filesLoading
                            }, null, 8, ["draft", "height", "onLoading"])
                          ])
                        ]),
                        createVNode(_component_jet_input_error, {
                          message: $data.draftForm.errors.studies,
                          class: "mt-2"
                        }, null, 8, ["message"])
                      ])) : createCommentVNode("", true),
                      $options.currentStep.id == "2" ? (openBlock(), createBlock("div", { key: 1 }, [
                        createVNode("div", { class: "h-[calc(100vh-135px)] overflow-hidden" }, [
                          createVNode("div", { class: "flex-1 flex" }, [
                            createVNode("nav", {
                              "aria-label": "Sections",
                              class: "flex-shrink-0 w-64 h-[calc(100vh-135px)] overflow-y-hidden bg-white border-r border-gray-200 md:flex md:flex-col"
                            }, [
                              createVNode("div", {
                                class: [
                                  $data.displaySamplesSummaryInfo ? "bg-gray-800 text-white" : "text-dark",
                                  "cursor-pointer border-gray-200 px-4 py-3 border-b text-left text-sm font-medium text-gray-500 tracking-wider flex-shrink-0 border-b border-blue-gray-200 hover:bg-gray-800 hover:text-white"
                                ],
                                onClick: $options.showSamplesSummary
                              }, [
                                createVNode("a", null, " SUMMARY ")
                              ], 10, ["onClick"]),
                              createVNode("div", { class: "border-gray-200 px-4 py-3 border-b bg-gray-50 text-left text-xs font-medium text-gray-500 tracking-wider flex-shrink-0 border-b border-blue-gray-200" }, [
                                createTextVNode(toDisplayString(_ctx.pluralize(
                                  "SAMPLE",
                                  $data.studies.length
                                )) + " (" + toDisplayString($data.studies.length) + ") ", 1),
                                createVNode("div", {
                                  class: "float-right cursor-pointer tooltip",
                                  onClick: ($event) => $options.toggleCompoundDetails()
                                }, [
                                  !$data.showCompoundDetails ? (openBlock(), createBlock(_component_EyeIcon, {
                                    key: 0,
                                    class: "w-4 h-4 mr-1 text-gray-600 hover:text-gray-500"
                                  })) : (openBlock(), createBlock(_component_EyeSlashIcon, {
                                    key: 1,
                                    class: "w-4 h-4 mr-1 text-gray-600 hover:text-gray-500"
                                  })),
                                  createVNode("div", { class: "bg-gray-900 text-center text-white px-2 py-1 shadow-lg rounded-md tooltiptextleft" }, [
                                    !$data.showCompoundDetails ? (openBlock(), createBlock("span", { key: 0 }, "Show Compound details")) : (openBlock(), createBlock("span", { key: 1 }, "Hide Compound details"))
                                  ])
                                ], 8, ["onClick"])
                              ]),
                              createVNode("div", {
                                id: "tour-step-side-panel-studies",
                                class: "no-scrollbar",
                                style: { "height": "74vh", "overflow": "scroll !important" }
                              }, [
                                (openBlock(true), createBlock(Fragment, null, renderList($data.studies, (study, $index) => {
                                  return openBlock(), createBlock("a", {
                                    key: study.slug,
                                    class: [
                                      $data.selectedStudy && $data.selectedStudy.id == study.id ? "bg-gray-800 text-white" : "hover:bg-gray-200 hover:bg-opacity-50",
                                      "cursor-pointer flex py-4 border-b-4 border-blue-gray-200"
                                    ]
                                  }, [
                                    createVNode("div", {
                                      class: "cursor-pointer px-4 text-sm w-full",
                                      onClick: ($event) => $options.selectStudy(
                                        study,
                                        $index
                                      )
                                    }, [
                                      study.internal_status == "complete" ? (openBlock(), createBlock("div", {
                                        key: 0,
                                        class: "font-medium text-blue-gray-900"
                                      }, [
                                        $data.showCompoundDetails && study.sample.molecules[0] ? (openBlock(), createBlock("div", {
                                          key: 0,
                                          class: "border-b border-gray-100 mb-4 border"
                                        }, [
                                          createVNode(_component_Depictor2D, {
                                            class: "-py-4 -px-4 rounded-md",
                                            molecule: study.sample.molecules[0].canonical_smiles
                                          }, null, 8, ["molecule"])
                                        ])) : createCommentVNode("", true),
                                        createVNode("a", null, toDisplayString(study.name), 1),
                                        study.sample.molecules.length > 0 ? (openBlock(), createBlock("span", {
                                          key: 1,
                                          class: "float-right"
                                        }, [
                                          createVNode("img", {
                                            class: "flex-shrink-0 -mt-0.5 h-6 w-6 text-blue-gray-400",
                                            src: "https://upload.wikimedia.org/wikipedia/sco/3/35/ChEBI_logo.png",
                                            alt: ""
                                          })
                                        ])) : createCommentVNode("", true),
                                        createVNode("div", { class: "mt-1 text-blue-gray-500" }, [
                                          (openBlock(true), createBlock(Fragment, null, renderList(study.datasets, (ds) => {
                                            return openBlock(), createBlock("span", {
                                              key: ds.id
                                            }, [
                                              createVNode("div", {
                                                class: [
                                                  study.has_nmrium ? "bg-green-100 text-gray-800" : "bg-gray-100 text-gray-800",
                                                  "mb-0.5 inline-flex truncate break-words items-center px-3 py-0.5 rounded-full text-xs font-medium mr-1"
                                                ]
                                              }, [
                                                createVNode("span", null, [
                                                  createTextVNode(toDisplayString(ds.name) + " ", 1),
                                                  ds.type ? (openBlock(), createBlock("span", { key: 0 }, "(" + toDisplayString(ds.type) + ")", 1)) : createCommentVNode("", true)
                                                ])
                                              ], 2)
                                            ]);
                                          }), 128))
                                        ])
                                      ])) : (openBlock(), createBlock("div", { key: 1 }, [
                                        createVNode("div", { class: "p-4 max-w-sm w-full mx-auto" }, [
                                          createVNode("div", { class: "animate-pulse flex space-x-4" }, [
                                            createVNode("div", { class: "flex-1 space-y-6 py-1" }, [
                                              createVNode("div", { class: "h-2 bg-slate-200" }),
                                              createVNode("div", { class: "space-y-3" }, [
                                                createVNode("div", { class: "grid grid-cols-3 gap-4" }, [
                                                  createVNode("div", { class: "h-2 bg-slate-200 rounded col-span-2" }),
                                                  createVNode("div", { class: "h-2 bg-slate-200 rounded col-span-1" })
                                                ]),
                                                createVNode("div", { class: "h-2 bg-slate-200 rounded" })
                                              ])
                                            ])
                                          ])
                                        ])
                                      ]))
                                    ], 8, ["onClick"])
                                  ], 2);
                                }), 128))
                              ])
                            ]),
                            createVNode("div", { class: "flex-1 px-2 bg-white" }, [
                              $data.displaySamplesSummaryInfo ? (openBlock(), createBlock("div", { key: 0 }, [
                                createVNode("div", { class: "-mx-2 border-b border-b-gray-900/10 lg:border-t lg:border-t-gray-900/5" }, [
                                  createVNode("dl", { class: "mx-auto grid max-w-7xl grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 lg:px-2 xl:px-0" }, [
                                    createVNode("div", { class: "flex items-baseline flex-wrap justify-between gap-y-2 gap-x-4 border-t border-gray-900/5 px-4 py-10 sm:px-6 lg:border-t-0 xl:px-8" }, [
                                      createVNode("dt", { class: "text-sm font-medium leading-6 text-gray-500" }, " Samples "),
                                      createVNode("dd", { class: "w-full flex-none text-3xl font-medium leading-10 tracking-tight text-gray-900" }, toDisplayString($data.studies.length), 1)
                                    ]),
                                    createVNode("div", { class: "flex items-baseline flex-wrap justify-between gap-y-2 gap-x-4 border-t border-gray-900/5 px-4 py-10 sm:px-6 lg:border-t-0 xl:px-8 sm:border-l" }, [
                                      createVNode("dt", { class: "text-sm font-medium leading-6 text-gray-500" }, " Spectra "),
                                      createVNode("dd", { class: "w-full flex-none text-3xl font-medium leading-10 tracking-tight text-gray-900" }, toDisplayString($options.spectraCount), 1)
                                    ]),
                                    createVNode("div", { class: "flex items-baseline flex-wrap justify-between gap-y-2 gap-x-4 border-t border-gray-900/5 px-4 py-10 sm:px-6 lg:border-t-0 xl:px-8 lg:border-l" }, [
                                      createVNode("dt", { class: "text-sm font-medium leading-6 text-gray-500" }, " Molecules "),
                                      createVNode("dd", { class: "w-full flex-none text-3xl font-medium leading-10 tracking-tight text-gray-900" }, toDisplayString($options.moleculesCount), 1)
                                    ]),
                                    $data.inprogressStudies.length == 0 ? (openBlock(), createBlock("div", {
                                      key: 0,
                                      class: "flex items-baseline flex-wrap justify-between gap-y-2 gap-x-4 border-t border-gray-900/5 px-4 py-10 sm:px-6 lg:border-t-0 xl:px-8 sm:border-l"
                                    }, [
                                      createVNode("dt", { class: "text-sm font-medium leading-6 text-gray-500" }, " Samples Validation "),
                                      createVNode("dd", { class: "w-full flex-none" }, [
                                        $data.validationStatus ? (openBlock(), createBlock("span", { key: 0 }, [
                                          createVNode("span", { class: "text-green-600 text-3xl font-medium leading-10 tracking-tight text-gray-900" }, " Success ")
                                        ])) : (openBlock(), createBlock("span", { key: 1 }, [
                                          createVNode("span", { class: "text-yellow-600 text-3xl font-medium leading-10 tracking-tight text-gray-900" }, " Incomplete "),
                                          createVNode("span", { class: "text-sm text-red-500 tracking-tight" }, " Meta data is missing. Please check the validation report below. ")
                                        ]))
                                      ])
                                    ])) : createCommentVNode("", true)
                                  ])
                                ]),
                                createVNode("div", { class: "overflow-y-scroll h-[calc(100vh-153px)] mx-auto max-w-7xl px-4 py-8 sm:px-6 lg:px-8" }, [
                                  $data.inprogressStudies.length > 0 ? (openBlock(), createBlock("div", { key: 0 }, [
                                    createVNode("div", { class: "rounded-md bg-red-50 p-4 mb-12" }, [
                                      createVNode("div", { class: "flex" }, [
                                        createVNode("div", { class: "flex-shrink-0" }, [
                                          (openBlock(), createBlock("svg", {
                                            class: "animate-spin -ml-1 h-5 w-5 text-red",
                                            xmlns: "http://www.w3.org/2000/svg",
                                            fill: "none",
                                            viewBox: "0 0 24 24"
                                          }, [
                                            createVNode("circle", {
                                              class: "opacity-25",
                                              cx: "12",
                                              cy: "12",
                                              r: "10",
                                              stroke: "currentColor",
                                              "stroke-width": "4"
                                            }),
                                            createVNode("path", {
                                              class: "opacity-75",
                                              fill: "currentColor",
                                              d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                                            })
                                          ]))
                                        ]),
                                        createVNode("div", { class: "ml-3" }, [
                                          createVNode("h3", { class: "text-sm font-medium text-red-800" }, " Processing uploaded data: Please wait for your samples to be processed. "),
                                          createVNode("div", { class: "mt-2 text-sm text-red-700" }, [
                                            createVNode("ul", {
                                              role: "list",
                                              class: "list-disc space-y-1 pl-5"
                                            }, [
                                              createVNode("li", null, " Processed: " + toDisplayString($data.studies.length - $data.inprogressStudies.length) + " out of " + toDisplayString($data.studies.length) + " samples ", 1)
                                            ])
                                          ])
                                        ])
                                      ])
                                    ])
                                  ])) : (openBlock(), createBlock("div", { key: 1 }, [
                                    $options.importPendingSamples.length > 0 ? (openBlock(), createBlock("div", {
                                      key: 0,
                                      class: "mb-4"
                                    }, [
                                      createVNode("div", { class: "bg-white border shadow sm:rounded-lg" }, [
                                        createVNode("div", { class: "px-4 py-5 sm:p-6" }, [
                                          createVNode("h3", { class: "text-base font-semibold leading-6 text-gray-900" }, " Spectra Metadata Not Found "),
                                          createVNode("div", { class: "mt-2 max-w-xl text-sm text-gray-500" }, [
                                            createVNode("p", null, " Some important Spectra metadata are needed. Would you like us to automatically import the missing Spectra information and kickstart the processing? ")
                                          ]),
                                          createVNode("div", { class: "mt-5" }, [
                                            createVNode("button", {
                                              type: "button",
                                              class: "inline-flex items-center rounded-md bg-green-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-green-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-green-500",
                                              onClick: $options.autoImport
                                            }, " Import now ", 8, ["onClick"])
                                          ])
                                        ])
                                      ])
                                    ])) : createCommentVNode("", true)
                                  ])),
                                  createVNode("div", { class: "mx-auto grid mt-10 max-w-2xl grid-cols-1 grid-rows-1 items-start gap-x-8 gap-y-8 lg:mx-0 lg:max-w-none lg:grid-cols-3" }, [
                                    createVNode("div", { class: "lg:col-span-3 mb-24 pb-24" }, [
                                      $data.validation && $data.inprogressStudies.length == 0 ? (openBlock(), createBlock("div", { key: 0 }, [
                                        createVNode("button", {
                                          class: "px-3 py-2 bg-white border border-gray-300 rounded-md font-semibold text-xs text-gray-700 uppercase tracking-widest shadow-sm hover:text-gray-500 focus:outline-none focus:border-blue-300 focus:ring focus:ring-blue-200 active:text-gray-800 active:bg-gray-50 disabled:opacity-25 transition ml-2 float-right hover:bg-gray-200 hover:text-gray-900",
                                          onClick: $options.fetchValidations
                                        }, [
                                          (openBlock(), createBlock("svg", {
                                            xmlns: "http://www.w3.org/2000/svg",
                                            fill: "none",
                                            viewBox: "0 0 24 24",
                                            "stroke-width": "1.5",
                                            stroke: "currentColor",
                                            class: "w-4 h-4 mr-2 inline"
                                          }, [
                                            createVNode("path", {
                                              "stroke-linecap": "round",
                                              "stroke-linejoin": "round",
                                              d: "M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99"
                                            })
                                          ])),
                                          createTextVNode(" Refresh ")
                                        ], 8, ["onClick"]),
                                        createVNode(_component_Validation, {
                                          project: $data.project,
                                          validation: $data.validation,
                                          mode: "study",
                                          onUpdate: $options.editData
                                        }, null, 8, ["project", "validation", "onUpdate"]),
                                        createTextVNode("   ")
                                      ])) : createCommentVNode("", true)
                                    ])
                                  ])
                                ])
                              ])) : (openBlock(), createBlock("div", { key: 1 }, [
                                createVNode("div", { class: "mx-auto flex flex-col md:px-0 xl:px-0" }, [
                                  createVNode("div", null, [
                                    createVNode("div", null, [
                                      createVNode("div", { class: "px-4 py-1.5 -mx-2 bg-gray-50 border-b px-4 py-3 flex items-center font-semibold text-sm text-slate-900 dark:text-slate-200 bg-slate-50/90 dark:bg-slate-700/90 backdrop-blur-sm ring-1 ring-slate-900/10 dark:ring-black/10" }, [
                                        createVNode("h1", { class: "text-2xl font-extrabold text-gray-900" }, toDisplayString($data.selectedStudy.name), 1)
                                      ]),
                                      createVNode("div", {
                                        onScroll: $options.onScroll,
                                        class: "scroll-smooth overflow-y-scroll h-[calc(100vh-153px)]"
                                      }, [
                                        !$data.hideDownArrow ? (openBlock(), createBlock("div", {
                                          key: 0,
                                          class: "absolute bottom-0 right-0 object-right-bottom rounded-xl overflow-auto p-8"
                                        }, [
                                          createVNode("div", { class: "flex justify-center" }, [
                                            createVNode("a", { href: "#chemical-composition" }, [
                                              createVNode("div", { class: "drop-shadow-md animate-bounce bg-gray-300 dark:bg-slate-800 p-2 w-10 h-10 ring-1 ring-slate-900/5 dark:ring-slate-200/20 shadow-lg rounded-full flex items-center justify-center" }, [
                                                (openBlock(), createBlock("svg", {
                                                  class: "w-6 h-6 text-white-500",
                                                  fill: "none",
                                                  "stroke-linecap": "round",
                                                  "stroke-linejoin": "round",
                                                  "stroke-width": "2",
                                                  viewBox: "0 0 24 24",
                                                  stroke: "currentColor"
                                                }, [
                                                  createVNode("path", { d: "M19 14l-7 7m0 0l-7-7m7 7V3" })
                                                ]))
                                              ])
                                            ])
                                          ])
                                        ])) : createCommentVNode("", true),
                                        createVNode("div", { class: "px-2 sm:px-2 md:px-0 pb-24" }, [
                                          createVNode("div", { class: "px-2" }, [
                                            createVNode("div", { class: "my-7" }, [
                                              createVNode(_component_SpectraEditor, {
                                                ref: "spectraEditorREF",
                                                project: $data.project,
                                                study: $data.selectedStudy,
                                                onLoading: $options.spectraLoading
                                              }, null, 8, ["project", "study", "onLoading"])
                                            ])
                                          ]),
                                          createVNode("div", { class: "px-2" }, [
                                            createVNode("div", { class: "py-4 max-w-7xl mx-auto" }, [
                                              createVNode("div", { class: "sm:flex sm:items-center sm:justify-between" }, [
                                                createVNode("h3", {
                                                  id: "chemical-composition",
                                                  class: "text-xl font-bold text-gray-900 after:content-['*'] after:ml-0.5 after:text-red-500"
                                                }, " Chemical composition ")
                                              ])
                                            ]),
                                            createVNode("div", { class: "grid grid-cols-2 gap-2" }, [
                                              createVNode("div", { class: "pr-2" }, [
                                                $data.selectedStudy.sample.molecules.length > 0 ? (openBlock(), createBlock("div", {
                                                  key: 0,
                                                  class: "flow-root"
                                                }, [
                                                  createVNode("ul", {
                                                    role: "list",
                                                    class: "-mb-8"
                                                  }, [
                                                    (openBlock(true), createBlock(Fragment, null, renderList($data.selectedStudy.sample.molecules, (molecule) => {
                                                      return openBlock(), createBlock("li", {
                                                        key: molecule.standard_inchi
                                                      }, [
                                                        createVNode("div", { class: "relative pb-8" }, [
                                                          createVNode("span", {
                                                            class: "absolute top-5 left-5 -ml-px h-full w-0.5 bg-gray-200",
                                                            "aria-hidden": "true"
                                                          }),
                                                          createVNode("div", { class: "relative flex items-start space-x-3" }, [
                                                            molecule && molecule.pivot ? (openBlock(), createBlock("div", {
                                                              key: 0,
                                                              class: "relative"
                                                            }, [
                                                              createVNode("div", { class: "rounded-full border p-2 z-10 bg-gray-100 text-sm" }, toDisplayString(molecule.pivot.percentage_composition) + "% ", 1)
                                                            ])) : createCommentVNode("", true),
                                                            createVNode("div", { class: "min-w-0 flex-1" }, [
                                                              createVNode("div", null, [
                                                                createVNode("div", { class: "text-sm" }, [
                                                                  createVNode("a", {
                                                                    href: "#",
                                                                    class: "font-medium text-gray-900"
                                                                  }, toDisplayString(molecule.standard_inchi), 1)
                                                                ])
                                                              ]),
                                                              createVNode("div", { class: "mt-2 text-sm text-gray-700" }, [
                                                                createVNode("div", { class: "rounded-md border mb-3" }, [
                                                                  molecule.canonical_smiles ? (openBlock(), createBlock("div", { key: 0 }, [
                                                                    createVNode(_component_Depictor, {
                                                                      class: "py-4 -px-4",
                                                                      "model-value": molecule.canonical_smiles,
                                                                      "show-download": false
                                                                    }, null, 8, ["model-value"])
                                                                  ])) : createCommentVNode("", true)
                                                                ]),
                                                                createVNode("button", {
                                                                  class: "inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500",
                                                                  onClick: ($event) => $options.deleteMolecule(
                                                                    molecule
                                                                  )
                                                                }, [
                                                                  createVNode(_component_TrashIcon, { class: "w-4 h-4 inline mr-1" }),
                                                                  createTextVNode("Delete ")
                                                                ], 8, ["onClick"]),
                                                                createVNode("button", {
                                                                  class: "inline-flex ml-2 items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500",
                                                                  onClick: ($event) => $options.editMolecule(
                                                                    molecule
                                                                  )
                                                                }, [
                                                                  createVNode(_component_PencilIcon, { class: "w-4 h-4 inline mr-1" }),
                                                                  createTextVNode("Edit ")
                                                                ], 8, ["onClick"])
                                                              ])
                                                            ])
                                                          ])
                                                        ])
                                                      ]);
                                                    }), 128))
                                                  ]),
                                                  createVNode("div", { class: "rounded-full border p-2 z-10 bg-gray-100 text-sm mt-14 text-center" }, " Sample chemical composition ")
                                                ])) : (openBlock(), createBlock("div", { key: 1 }, [
                                                  createVNode("div", { class: "text-center my-10 py-10" }, [
                                                    (openBlock(), createBlock("svg", {
                                                      class: "mx-auto h-12 w-12 text-gray-400",
                                                      fill: "none",
                                                      viewBox: "0 0 24 24",
                                                      stroke: "currentColor",
                                                      "aria-hidden": "true"
                                                    }, [
                                                      createVNode("path", {
                                                        "vector-effect": "non-scaling-stroke",
                                                        "stroke-linecap": "round",
                                                        "stroke-linejoin": "round",
                                                        "stroke-width": "2",
                                                        d: "M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z"
                                                      })
                                                    ])),
                                                    createVNode("h3", { class: "mt-2 text-sm font-medium text-gray-900" }, " No structures associated with the sample yet! "),
                                                    createVNode("p", { class: "mt-1 text-sm text-gray-500" }, " Get started by adding a new molecule. ")
                                                  ])
                                                ]))
                                              ]),
                                              createVNode("div", { class: "pl-2" }, [
                                                createVNode("div", { class: "sm:col-span-4" }, [
                                                  createVNode("label", {
                                                    for: "email",
                                                    class: "block text-sm font-medium text-gray-700"
                                                  }, " SMILES "),
                                                  createVNode("div", { class: "mt-1 mb-2" }, [
                                                    withDirectives(createVNode("input", {
                                                      id: "smiles",
                                                      "onUpdate:modelValue": ($event) => $data.smiles = $event,
                                                      name: "smiles",
                                                      type: "text",
                                                      class: "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md",
                                                      onBlur: $options.loadSmiles
                                                    }, null, 40, ["onUpdate:modelValue", "onBlur"]), [
                                                      [
                                                        vModelText,
                                                        $data.smiles
                                                      ]
                                                    ])
                                                  ]),
                                                  $data.smiles && $data.smiles != "" ? (openBlock(), createBlock("button", {
                                                    key: 0,
                                                    class: "inline-flex items-center px-2.5 py-1.5 border border-gray-300 shadow-sm text-xs font-medium rounded text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 mt-2",
                                                    onClick: $options.loadSmiles
                                                  }, " Load Structure ", 8, ["onClick"])) : createCommentVNode("", true),
                                                  createVNode(_component_jet_input_error, {
                                                    message: $data.errorMessage,
                                                    class: "mt-2"
                                                  }, null, 8, ["message"])
                                                ]),
                                                createVNode("div", { class: "relative" }, [
                                                  createVNode("div", {
                                                    class: "absolute inset-0 flex items-center",
                                                    "aria-hidden": "true"
                                                  }, [
                                                    createVNode("div", { class: "w-full border-t border-gray-300" })
                                                  ]),
                                                  createVNode("div", { class: "relative flex justify-center" }, [
                                                    createVNode("span", { class: "px-2 bg-white text-sm text-gray-500" }, " Or ")
                                                  ])
                                                ]),
                                                createVNode("div", { class: "float-right text-xs cursor-pointer hover:text-blue-700" }, [
                                                  createVNode("a", {
                                                    href: "https://docs.nmrxiv.org/submission-guides/editor.html",
                                                    target: "_blank"
                                                  }, "Need help? ")
                                                ]),
                                                createVNode("div", {
                                                  id: "structureSearchEditor",
                                                  class: "w-full border my-4 rounded-md",
                                                  style: { "height": "400px" }
                                                }),
                                                createVNode("div", { class: "mt-1 mb-6" }, [
                                                  createVNode("label", {
                                                    for: "email",
                                                    class: "block text-sm font-medium text-gray-700"
                                                  }, " Percentage composition (" + toDisplayString($data.percentage) + "%) ", 1),
                                                  createVNode(_component_slider, {
                                                    modelValue: $data.percentage,
                                                    "onUpdate:modelValue": ($event) => $data.percentage = $event,
                                                    min: 0,
                                                    max: $options.getMax,
                                                    height: 10,
                                                    color: "#000",
                                                    "track-color": "#999"
                                                  }, null, 8, ["modelValue", "onUpdate:modelValue", "max"])
                                                ]),
                                                createVNode("button", {
                                                  type: "button",
                                                  class: "inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500",
                                                  onClick: ($event) => $options.saveMolecule(
                                                    null
                                                  )
                                                }, " ADD ", 8, ["onClick"])
                                              ])
                                            ])
                                          ]),
                                          createVNode("hr", { class: "mt-4 mx-3" }),
                                          createVNode("div", { class: "px-2 sm:px-2" }, [
                                            createVNode("div", { class: "pt-4 xl:col-span-2" }, [
                                              createVNode("h1", { class: "text-xl mb-2 font-bold text-gray-900" }, " Sample Details "),
                                              createVNode("div", { class: "mb-3" }, [
                                                createVNode("label", {
                                                  for: "description",
                                                  class: "block text-sm font-medium text-gray-700 after:content-['*'] after:ml-0.5 after:text-red-500"
                                                }, [
                                                  createTextVNode(" Sample Description "),
                                                  createVNode("span", {
                                                    class: "float-right rounded-full px-2",
                                                    onClick: ($event) => $options.autoGenerateDescription()
                                                  }, " Auto generate ", 8, ["onClick"])
                                                ]),
                                                createVNode("div", { class: "mt-1" }, [
                                                  withDirectives(createVNode("textarea", {
                                                    id: "study-description",
                                                    "onUpdate:modelValue": ($event) => $data.studyForm.description = $event,
                                                    name: "study-description",
                                                    rows: "3",
                                                    class: "block w-full shadow-sm focus:ring-teal-500 focus:border-teal-500 sm:text-sm border border-gray-300 rounded-md",
                                                    onBlur: $options.saveStudyDetails
                                                  }, null, 40, ["onUpdate:modelValue", "onBlur"]), [
                                                    [
                                                      vModelText,
                                                      $data.studyForm.description
                                                    ]
                                                  ]),
                                                  createVNode(_component_jet_input_error, {
                                                    message: $data.studyForm.errors.description,
                                                    class: "mt-2"
                                                  }, null, 8, ["message"])
                                                ])
                                              ]),
                                              createVNode("div", { class: "mb-3" }, [
                                                createVNode("label", {
                                                  for: "description",
                                                  class: "block text-sm font-medium text-gray-700"
                                                }, " Keywords "),
                                                createVNode("div", null, [
                                                  createVNode(_component_vue_tags_input, {
                                                    modelValue: $data.studyForm.tag,
                                                    "onUpdate:modelValue": ($event) => $data.studyForm.tag = $event,
                                                    placeholder: "Type a keyword or keywords separated by comma (,) and press enter",
                                                    separators: [
                                                      ";",
                                                      ","
                                                    ],
                                                    "max-width": "100%",
                                                    tags: $data.studyForm.tags,
                                                    onTagsChanged: $options.updateTags
                                                  }, null, 8, ["modelValue", "onUpdate:modelValue", "tags", "onTagsChanged"]),
                                                  createVNode(_component_jet_input_error, {
                                                    message: $data.studyForm.errors.tags,
                                                    class: "mt-2"
                                                  }, null, 8, ["message"])
                                                ])
                                              ])
                                            ]),
                                            createVNode("div", { class: "mb-3" }, [
                                              createVNode("label", {
                                                for: "description",
                                                class: "block text-sm font-medium text-gray-700"
                                              }, " Organism (Optional) "),
                                              createVNode("div", { class: "mt-2 sm:flex sm:items-start sm:justify-between" }, [
                                                createVNode("div", { class: "text-sm text-gray-500 w-full" }, [
                                                  createVNode("ontology-autocomplete", {
                                                    class: "rounded-md",
                                                    format: "text",
                                                    value: $data.studySpecies,
                                                    placeholder: "Search species",
                                                    onChange: ($event) => $data.studySpecies = $event.detail[0],
                                                    onBlur: ($event) => $options.updateSpecies(
                                                      $data.studySpecies
                                                    )
                                                  }, null, 40, ["value", "onChange", "onBlur"])
                                                ]),
                                                createVNode("div", { class: "mt-5 sm:ml-6 sm:mt-0 sm:flex sm:flex-shrink-0 sm:items-center" }, [
                                                  createVNode("button", {
                                                    type: "button",
                                                    class: "inline-flex items-center gap-x-1.5 py-3 bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50",
                                                    onClick: ($event) => $options.updateSpecies(
                                                      $data.studySpecies
                                                    )
                                                  }, [
                                                    (openBlock(), createBlock("svg", {
                                                      class: "-ml-0.5 h-5 w-5 text-gray-400",
                                                      viewBox: "0 0 20 20",
                                                      fill: "currentColor",
                                                      "aria-hidden": "true"
                                                    }, [
                                                      createVNode("path", { d: "M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z" })
                                                    ])),
                                                    createTextVNode(" Add ")
                                                  ], 8, ["onClick"])
                                                ])
                                              ]),
                                              createVNode("div", { class: "mt-2" }, [
                                                (openBlock(true), createBlock(Fragment, null, renderList($data.studyForm.species, (species, $index) => {
                                                  return openBlock(), createBlock("div", {
                                                    key: $index,
                                                    class: "bg-gray-100 text-gray-800 mb-0.5 inline-flex truncate break-words items-center px-3 py-2 rounded-full text-sm font-medium mr-1"
                                                  }, [
                                                    createVNode("ontology-term-annotation", {
                                                      annotation: species
                                                    }, null, 8, ["annotation"]),
                                                    createVNode("span", {
                                                      class: "cursor-pointer",
                                                      onClick: ($event) => $options.removeSpecies(
                                                        $index
                                                      )
                                                    }, [
                                                      (openBlock(), createBlock("svg", {
                                                        xmlns: "http://www.w3.org/2000/svg",
                                                        viewBox: "0 0 24 24",
                                                        fill: "currentColor",
                                                        class: "w-5 h-5 ml-2"
                                                      }, [
                                                        createVNode("path", {
                                                          "fill-rule": "evenodd",
                                                          d: "M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm-1.72 6.97a.75.75 0 10-1.06 1.06L10.94 12l-1.72 1.72a.75.75 0 101.06 1.06L12 13.06l1.72 1.72a.75.75 0 101.06-1.06L13.06 12l1.72-1.72a.75.75 0 10-1.06-1.06L12 10.94l-1.72-1.72z",
                                                          "clip-rule": "evenodd"
                                                        })
                                                      ]))
                                                    ], 8, ["onClick"])
                                                  ]);
                                                }), 128))
                                              ])
                                            ])
                                          ])
                                        ])
                                      ], 40, ["onScroll"])
                                    ])
                                  ])
                                ])
                              ]))
                            ])
                          ])
                        ]),
                        $data.spectraLoadingStatus ? (openBlock(), createBlock("div", {
                          key: 0,
                          class: "w-full h-screen mx-84 px-10 fixed block top-0 left-0 bg-white opacity-90 z-50"
                        }, [
                          createVNode("div", {
                            role: "status",
                            class: "absolute -translate-x-1/2 -translate-y-1/2 top-2/4 left-1/2"
                          }, [
                            (openBlock(), createBlock("svg", {
                              "aria-hidden": "true",
                              class: "w-8 h-8 mr-2 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600",
                              viewBox: "0 0 100 101",
                              fill: "none",
                              xmlns: "http://www.w3.org/2000/svg"
                            }, [
                              createVNode("path", {
                                d: "M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z",
                                fill: "currentColor"
                              }),
                              createVNode("path", {
                                d: "M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z",
                                fill: "currentFill"
                              })
                            ])),
                            createVNode("div", {
                              innerHTML: $data.spectraLoadingMessage,
                              class: "my-4"
                            }, null, 8, ["innerHTML"]),
                            createVNode("button", {
                              type: "button",
                              class: "inline-flex w-full justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto",
                              onClick: $options.showSamplesSummary
                            }, " Cancel ", 8, ["onClick"])
                          ])
                        ])) : createCommentVNode("", true)
                      ])) : createCommentVNode("", true)
                    ])) : createCommentVNode("", true)
                  ]))
                ]))
              ])
            ])) : (openBlock(), createBlock("div", {
              key: 1,
              class: "h-[calc(100vh-260px)] text-center py-12"
            }, [
              (openBlock(), createBlock("svg", {
                class: "animate-spin -ml-1 mr-3 h-5 w-5 text-dark flex-inline inline",
                xmlns: "http://www.w3.org/2000/svg",
                fill: "none",
                viewBox: "0 0 24 24"
              }, [
                createVNode("circle", {
                  class: "opacity-25",
                  cx: "12",
                  cy: "12",
                  r: "10",
                  stroke: "currentColor",
                  "stroke-width": "4"
                }),
                createVNode("path", {
                  class: "opacity-75",
                  fill: "currentColor",
                  d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                })
              ])),
              createTextVNode(" Loading... ")
            ]))
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const _sfc_setup$3 = _sfc_main$3.setup;
_sfc_main$3.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Upload.vue");
  return _sfc_setup$3 ? _sfc_setup$3(props, ctx) : void 0;
};
const Upload = /* @__PURE__ */ _export_sfc(_sfc_main$3, [["ssrRender", _sfc_ssrRender$2]]);
const __vite_glob_0_81 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Upload
}, Symbol.toStringTag, { value: "Module" }));
const _sfc_main$2 = {
  components: {
    ProjectCard
  },
  props: ["limit"],
  setup() {
  },
  data() {
    return {
      projects: []
    };
  },
  mounted() {
    let max = this.limit ? this.limit : 8;
    axios.get("/api/v1/projects").then((response) => {
      this.projects = response.data.data.slice(0, max);
    });
  },
  methods: {}
};
function _sfc_ssrRender$1(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_project_card = resolveComponent("project-card");
  if ($data.projects && $data.projects.length > 0) {
    _push(`<div${ssrRenderAttrs(mergeProps({ class: "mt-4 mx-auto max-w-md grid gap-8 sm:max-w-lg lg:grid-cols-4 lg:max-w-7xl" }, _attrs))}><!--[-->`);
    ssrRenderList($data.projects, (project) => {
      _push(`<span>`);
      _push(ssrRenderComponent(_component_project_card, {
        mode: "mini",
        project
      }, null, _parent));
      _push(`</span>`);
    });
    _push(`<!--]--></div>`);
  } else {
    _push(`<!---->`);
  }
}
const _sfc_setup$2 = _sfc_main$2.setup;
_sfc_main$2.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Shared/Projects.vue");
  return _sfc_setup$2 ? _sfc_setup$2(props, ctx) : void 0;
};
const Projects = /* @__PURE__ */ _export_sfc(_sfc_main$2, [["ssrRender", _sfc_ssrRender$1]]);
const _sfc_main$1 = {
  __name: "FAQs",
  __ssrInlineRender: true,
  props: ["limit"],
  setup(__props) {
    const faqs = [
      {
        question: "How can I submit my data to nmrXiv?",
        answer: " Register to nmrXiv. Structure your data in folders similar to nmrXiv structuring of projects, studies, and datasets. This step might not be intuitive so we recommend checking its docummentation. Upload your data, edit it, and provide its metadata via the submission pipeline."
      },
      {
        question: "What should I do if I think I've found a bug?",
        answer: "If you believe you've found a bug in nmrXiv, please write to us at info.nmrxiv@uni-jena.de or reach out to our Helpdesk https://www.nfdi4chem.de/helpdesk/."
      },
      {
        question: "Who can use my public/published resources?",
        answer: "If you make your resources public (projects, studies, datasets), you are making them open for access to everyone (even to the non-registered user of nmrXiv), but you can specify rights by choosing licenses for your projects and studies (study license propagate to its datasets). Once your project is made public, you cannot edit, delete or make it private again."
      },
      {
        question: "What are supported files format in nmrXiv?",
        answer: "nmrXiv accepts all NMR formats uploaded. However, not all of them are readable at the moment. So far, only NMRium-supported formats can be translated into spectra in nmrXiv. Those formats are jcamp-dx, jeol, Bruker folders, NMReData, and nmrium. For validation purposes, the uploaded data should have at least one readable format."
      }
      // More questions...
    ];
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "bg-white" }, _attrs))}><div class="mx-auto max-w-7xl px-6 py-24 sm:py-32 lg:px-8 lg:py-40"><div class="mx-auto max-w-4xl divide-y divide-gray-900/10"><h2 class="text-2xl font-bold leading-10 tracking-tight text-gray-900"> Frequently asked questions </h2><dl class="mt-10 space-y-6 divide-y divide-gray-900/10"><!--[-->`);
      ssrRenderList(faqs.slice(0, __props.limit), (faq) => {
        _push(ssrRenderComponent(unref(Disclosure), {
          as: "div",
          key: faq.question,
          class: "pt-6"
        }, {
          default: withCtx(({ open: open2 }, _push2, _parent2, _scopeId) => {
            if (_push2) {
              _push2(`<dt${_scopeId}>`);
              _push2(ssrRenderComponent(unref(DisclosureButton), { class: "flex w-full items-start justify-between text-left text-gray-900" }, {
                default: withCtx((_, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`<span class="text-base font-semibold leading-7"${_scopeId2}>${ssrInterpolate(faq.question)}</span><span class="ml-6 flex h-7 items-center"${_scopeId2}>`);
                    if (!open2) {
                      _push3(ssrRenderComponent(unref(PlusSmallIcon$1), {
                        class: "h-6 w-6",
                        "aria-hidden": "true"
                      }, null, _parent3, _scopeId2));
                    } else {
                      _push3(ssrRenderComponent(unref(MinusSmallIcon), {
                        class: "h-6 w-6",
                        "aria-hidden": "true"
                      }, null, _parent3, _scopeId2));
                    }
                    _push3(`</span>`);
                  } else {
                    return [
                      createVNode("span", { class: "text-base font-semibold leading-7" }, toDisplayString(faq.question), 1),
                      createVNode("span", { class: "ml-6 flex h-7 items-center" }, [
                        !open2 ? (openBlock(), createBlock(unref(PlusSmallIcon$1), {
                          key: 0,
                          class: "h-6 w-6",
                          "aria-hidden": "true"
                        })) : (openBlock(), createBlock(unref(MinusSmallIcon), {
                          key: 1,
                          class: "h-6 w-6",
                          "aria-hidden": "true"
                        }))
                      ])
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
              _push2(`</dt>`);
              _push2(ssrRenderComponent(unref(DisclosurePanel), {
                as: "dd",
                class: "mt-2 pr-12"
              }, {
                default: withCtx((_, _push3, _parent3, _scopeId2) => {
                  if (_push3) {
                    _push3(`<p class="text-base leading-7 text-gray-600"${_scopeId2}>${ssrInterpolate(faq.answer)}</p>`);
                  } else {
                    return [
                      createVNode("p", { class: "text-base leading-7 text-gray-600" }, toDisplayString(faq.answer), 1)
                    ];
                  }
                }),
                _: 2
              }, _parent2, _scopeId));
            } else {
              return [
                createVNode("dt", null, [
                  createVNode(unref(DisclosureButton), { class: "flex w-full items-start justify-between text-left text-gray-900" }, {
                    default: withCtx(() => [
                      createVNode("span", { class: "text-base font-semibold leading-7" }, toDisplayString(faq.question), 1),
                      createVNode("span", { class: "ml-6 flex h-7 items-center" }, [
                        !open2 ? (openBlock(), createBlock(unref(PlusSmallIcon$1), {
                          key: 0,
                          class: "h-6 w-6",
                          "aria-hidden": "true"
                        })) : (openBlock(), createBlock(unref(MinusSmallIcon), {
                          key: 1,
                          class: "h-6 w-6",
                          "aria-hidden": "true"
                        }))
                      ])
                    ]),
                    _: 2
                  }, 1024)
                ]),
                createVNode(unref(DisclosurePanel), {
                  as: "dd",
                  class: "mt-2 pr-12"
                }, {
                  default: withCtx(() => [
                    createVNode("p", { class: "text-base leading-7 text-gray-600" }, toDisplayString(faq.answer), 1)
                  ]),
                  _: 2
                }, 1024)
              ];
            }
          }),
          _: 2
        }, _parent));
      });
      _push(`<!--]--></dl></div></div></div>`);
    };
  }
};
const _sfc_setup$1 = _sfc_main$1.setup;
_sfc_main$1.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/App/FAQs.vue");
  return _sfc_setup$1 ? _sfc_setup$1(props, ctx) : void 0;
};
const Search = [
  {
    name: "Browse",
    description: "Know more about the data deposited in nmrXiv by browsing projects and datasets. You can also learn more about our data schema on our documentation site.",
    href: "#",
    icon: InboxIcon
  },
  {
    name: "Advanced search",
    description: "Search similar spectra by simple drag and drop of your machine output files or search spectra by structures. Need further guidance or found any missing information. Reach out to us or check out our documentation site.",
    href: "#",
    icon: MagnifyingGlassIcon$2
  }
];
const features = [
  {
    name: "Advanced search",
    description: "",
    icon: MagnifyingGlassIcon$2
  },
  {
    name: "Open Source",
    description: "",
    icon: ScaleIcon$1
  },
  {
    name: "Auto Assignments",
    description: "",
    icon: ShareIcon$1
  },
  {
    name: "Prediction",
    description: "",
    icon: PencilSquareIcon$1
  },
  {
    name: "Schemas and MIChI",
    description: "",
    icon: DocumentTextIcon$1
  },
  {
    name: "Community challenges",
    description: "",
    icon: ChatBubbleLeftIcon
  },
  {
    name: "Docs & API",
    description: "",
    icon: DocumentTextIcon$1
  },
  {
    name: "Backups",
    description: "",
    icon: CircleStackIcon
  }
];
const footerNavigation = {
  // Search: [
  //   { name: "Browse", href: "/projects" },
  //   { name: "Advanced Search", href: "/projects" },
  // ],
  quicklinks: [
    { name: "Projects", href: "/projects" },
    { name: "Spectra", href: "/spectra" }
  ],
  support: [
    { name: "Documentation", href: "https://docs.nmrxiv.org" },
    {
      name: "Guides",
      href: "https://docs.nmrxiv.org/docs/submission-guides/overview"
    },
    {
      name: "API Status",
      href: "https://docs.nmrxiv.org/docs/developer-guides/API"
    }
  ],
  About: [
    {
      name: "Adivsory Board",
      href: "https://docs.nmrxiv.org/docs/contributing/contributors-and-steering-committee"
    }
  ],
  legal: [
    { name: "Privacy", href: "/privacy-policy" },
    { name: "Terms", href: "/terms-of-service" }
  ],
  social: [
    {
      name: "GitHub",
      href: "https://github.com/nfdi4chem/nmrxiv",
      icon: defineComponent({
        render: () => h$1("svg", { fill: "currentColor", viewBox: "0 0 24 24" }, [
          h$1("path", {
            "fill-rule": "evenodd",
            d: "M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z",
            "clip-rule": "evenodd"
          })
        ])
      })
    }
  ]
};
const _sfc_main = {
  components: {
    Head,
    Link,
    JetApplicationLogo,
    ChatBubbleLeftIcon,
    ChatBubbleLeftRightIcon,
    DocumentTextIcon: DocumentTextIcon$1,
    HeartIcon,
    InboxIcon,
    Bars3Icon,
    PencilSquareIcon: PencilSquareIcon$1,
    MagnifyingGlassIcon: MagnifyingGlassIcon$2,
    ArrowUturnLeftIcon,
    SparklesIcon,
    TrashIcon: TrashIcon$1,
    ShareIcon: ShareIcon$1,
    UsersIcon,
    XMarkIcon,
    ScaleIcon: ScaleIcon$1,
    Popover,
    PopoverButton,
    PopoverGroup,
    PopoverPanel,
    ChevronDownIcon,
    CircleStackIcon,
    ToolTip,
    Projects,
    FAQs: _sfc_main$1,
    FlashMessages
  },
  props: {
    spectra: Number,
    projects: Number,
    compounds: Number,
    techniques: Number
  },
  setup() {
    return {
      Search,
      features,
      footerNavigation
    };
  },
  data() {
    return {
      schema: {}
    };
  },
  mounted() {
    axios.get(route("bioschemas.datacatalog")).then((response) => {
      this.schema = response.data;
    });
  }
};
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_Head = resolveComponent("Head");
  const _component_FlashMessages = resolveComponent("FlashMessages");
  const _component_Popover = resolveComponent("Popover");
  const _component_Link = resolveComponent("Link");
  const _component_jet_application_logo = resolveComponent("jet-application-logo");
  const _component_PopoverButton = resolveComponent("PopoverButton");
  const _component_Bars3Icon = resolveComponent("Bars3Icon");
  const _component_PopoverGroup = resolveComponent("PopoverGroup");
  const _component_PopoverPanel = resolveComponent("PopoverPanel");
  const _component_XMarkIcon = resolveComponent("XMarkIcon");
  const _component_ToolTip = resolveComponent("ToolTip");
  const _component_InboxIcon = resolveComponent("InboxIcon");
  const _component_Projects = resolveComponent("Projects");
  const _component_SparklesIcon = resolveComponent("SparklesIcon");
  const _component_FAQs = resolveComponent("FAQs");
  _push(`<!--[--><div class="bg-white">`);
  _push(ssrRenderComponent(_component_Head, null, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<title${_scopeId}>Welcome</title><meta name="description" content="Open, FAIR and Consensus-Driven NMR spectroscopy data repository and analysis platform"${_scopeId}><meta property="og:title" content="nmrXiv - Open, FAIR and Consensus-Driven NMR spectroscopy data repository and analysis platform"${_scopeId}><meta property="og:type" content="article"${_scopeId}><meta property="og:site_name" content="nmrXiv"${_scopeId}><meta property="og:url" content="https://nmrxiv.org"${_scopeId}><meta property="og:image" content=""${_scopeId}><meta property="og:image:width" content="1200"${_scopeId}><meta property="og:image:height" content="630"${_scopeId}><meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0"${_scopeId}><meta http-equiv="X-UA-Compatible" content="IE=edge;"${_scopeId}><meta name="fragment" content="!"${_scopeId}><meta name="referrer" content="strict-origin-when-cross-origin"${_scopeId}><link rel="shortcut icon" href="https://nmrxiv.org/favicon.ico"${_scopeId}><link rel="manifest" href="/document/manifest.json" crossorigin="use-credentials"${_scopeId}>`);
      } else {
        return [
          createVNode("title", null, "Welcome"),
          createVNode("meta", {
            name: "description",
            content: "Open, FAIR and Consensus-Driven NMR spectroscopy data repository and analysis platform"
          }),
          createVNode("meta", {
            property: "og:title",
            content: "nmrXiv - Open, FAIR and Consensus-Driven NMR spectroscopy data repository and analysis platform"
          }),
          createVNode("meta", {
            property: "og:type",
            content: "article"
          }),
          createVNode("meta", {
            property: "og:site_name",
            content: "nmrXiv"
          }),
          createVNode("meta", {
            property: "og:url",
            content: "https://nmrxiv.org"
          }),
          createVNode("meta", {
            property: "og:image",
            content: ""
          }),
          createVNode("meta", {
            property: "og:image:width",
            content: "1200"
          }),
          createVNode("meta", {
            property: "og:image:height",
            content: "630"
          }),
          createVNode("meta", {
            name: "viewport",
            content: "width=device-width, user-scalable=no, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0"
          }),
          createVNode("meta", {
            "http-equiv": "X-UA-Compatible",
            content: "IE=edge;"
          }),
          createVNode("meta", {
            name: "fragment",
            content: "!"
          }),
          createVNode("meta", {
            name: "referrer",
            content: "strict-origin-when-cross-origin"
          }),
          createVNode("link", {
            rel: "shortcut icon",
            href: "https://nmrxiv.org/favicon.ico"
          }),
          createVNode("link", {
            rel: "manifest",
            href: "/document/manifest.json",
            crossorigin: "use-credentials"
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(ssrRenderComponent(_component_FlashMessages, null, null, _parent));
  _push(`<main><div class="relative index_beams"><header>`);
  _push(ssrRenderComponent(_component_Popover, { class: "relative" }, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex justify-between items-center mx-auto px-4 py-6 sm:px-6 md:justify-start md:space-x-10 lg:px-8"${_scopeId}><div class="flex justify-start lg:w-0 lg:flex-1"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_Link, { href: "/" }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_jet_application_logo, { class: "block h-10 p-0.5 ml-1.5 w-auto" }, null, _parent3, _scopeId2));
            } else {
              return [
                createVNode(_component_jet_application_logo, { class: "block h-10 p-0.5 ml-1.5 w-auto" })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div><div class="-mr-2 -my-2 md:hidden"${_scopeId}>`);
        _push2(ssrRenderComponent(_component_PopoverButton, { class: "rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-teal-500" }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<span class="sr-only"${_scopeId2}>Open menu</span>`);
              _push3(ssrRenderComponent(_component_Bars3Icon, {
                class: "h-6 w-6",
                "aria-hidden": "true"
              }, null, _parent3, _scopeId2));
            } else {
              return [
                createVNode("span", { class: "sr-only" }, "Open menu"),
                createVNode(_component_Bars3Icon, {
                  class: "h-6 w-6",
                  "aria-hidden": "true"
                })
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
        _push2(ssrRenderComponent(_component_PopoverGroup, {
          as: "nav",
          class: "hidden md:flex space-x-10"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(ssrRenderComponent(_component_Link, {
                href: "/projects",
                class: "text-base font-medium text-gray-500 hover:text-gray-900"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Projects `);
                  } else {
                    return [
                      createTextVNode(" Projects ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(ssrRenderComponent(_component_Link, {
                href: "/spectra",
                class: "text-base font-medium text-gray-500 hover:text-gray-900"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Spectra `);
                  } else {
                    return [
                      createTextVNode(" Spectra ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(ssrRenderComponent(_component_Link, {
                href: "/compounds",
                class: "text-base font-medium text-gray-500 hover:text-gray-900"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Compounds `);
                  } else {
                    return [
                      createTextVNode(" Compounds ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`<a target="_blank" href="https://docs.nmrxiv.org" class="text-base font-medium text-gray-500 hover:text-gray-900"${_scopeId2}> Docs </a>`);
            } else {
              return [
                createVNode(_component_Link, {
                  href: "/projects",
                  class: "text-base font-medium text-gray-500 hover:text-gray-900"
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Projects ")
                  ]),
                  _: 1
                }),
                createVNode(_component_Link, {
                  href: "/spectra",
                  class: "text-base font-medium text-gray-500 hover:text-gray-900"
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Spectra ")
                  ]),
                  _: 1
                }),
                createVNode(_component_Link, {
                  href: "/compounds",
                  class: "text-base font-medium text-gray-500 hover:text-gray-900"
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Compounds ")
                  ]),
                  _: 1
                }),
                createVNode("a", {
                  target: "_blank",
                  href: "https://docs.nmrxiv.org",
                  class: "text-base font-medium text-gray-500 hover:text-gray-900"
                }, " Docs ")
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        if (_ctx.$page.props.auth.user && _ctx.$page.props.auth.user.first_name != null) {
          _push2(`<div class="hidden md:flex items-center justify-end md:flex-1 lg:w-0"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_Link, {
            href: "/dashboard",
            class: "ml-8 whitespace-nowrap inline-flex items-center justify-center bg-gradient-to-r from-indigo-600 to-teal-600 bg-origin-border px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white hover:from-indigo-700 hover:to-teal-700"
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Dashboard `);
              } else {
                return [
                  createTextVNode(" Dashboard ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div>`);
        } else {
          _push2(`<div class="hidden md:flex items-center justify-end md:flex-1 lg:w-0"${_scopeId}>`);
          _push2(ssrRenderComponent(_component_Link, {
            href: "/login",
            class: "whitespace-nowrap text-base font-medium text-gray-500 hover:text-gray-900"
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Login `);
              } else {
                return [
                  createTextVNode(" Login ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(ssrRenderComponent(_component_Link, {
            href: "/register",
            class: "ml-8 whitespace-nowrap inline-flex items-center justify-center bg-gradient-to-r from-indigo-600 to-teal-600 bg-origin-border px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white hover:from-indigo-700 hover:to-teal-700"
          }, {
            default: withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(` Register `);
              } else {
                return [
                  createTextVNode(" Register ")
                ];
              }
            }),
            _: 1
          }, _parent2, _scopeId));
          _push2(`</div>`);
        }
        _push2(`</div><div${_scopeId}>`);
        _push2(ssrRenderComponent(_component_PopoverPanel, {
          focus: "",
          class: "absolute z-30 top-0 inset-x-0 p-2 transition transform origin-top-right md:hidden"
        }, {
          default: withCtx((_2, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<div class="rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 bg-white divide-y-2 divide-gray-50"${_scopeId2}><div class="pt-5 pb-6 px-5"${_scopeId2}><div class="flex items-center justify-between"${_scopeId2}><div${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_jet_application_logo, { class: "block h-10 p-0.5 ml-1.5 w-auto" }, null, _parent3, _scopeId2));
              _push3(`</div><div class="-mr-2"${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_PopoverButton, { class: "bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-teal-500" }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(`<span class="sr-only"${_scopeId3}>Close menu</span>`);
                    _push4(ssrRenderComponent(_component_XMarkIcon, {
                      class: "h-6 w-6",
                      "aria-hidden": "true"
                    }, null, _parent4, _scopeId3));
                  } else {
                    return [
                      createVNode("span", { class: "sr-only" }, "Close menu"),
                      createVNode(_component_XMarkIcon, {
                        class: "h-6 w-6",
                        "aria-hidden": "true"
                      })
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</div></div><div class="mt-6"${_scopeId2}><nav class="grid grid-cols-1 gap-7"${_scopeId2}><!--[-->`);
              ssrRenderList($setup.Search, (item) => {
                _push3(ssrRenderComponent(_component_Link, {
                  key: item.name,
                  href: item.href,
                  class: "-m-3 p-3 flex items-center rounded-lg hover:bg-gray-50"
                }, {
                  default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                    if (_push4) {
                      _push4(`<div class="flex-shrink-0 flex items-center justify-center h-10 w-10 rounded-md bg-gradient-to-r from-indigo-600 to-teal-600 text-white"${_scopeId3}>`);
                      ssrRenderVNode(_push4, createVNode(resolveDynamicComponent(item.icon), {
                        class: "h-6 w-6",
                        "aria-hidden": "true"
                      }, null), _parent4, _scopeId3);
                      _push4(`</div><div class="ml-4 text-base font-medium text-gray-900"${_scopeId3}>${ssrInterpolate(item.name)}</div>`);
                    } else {
                      return [
                        createVNode("div", { class: "flex-shrink-0 flex items-center justify-center h-10 w-10 rounded-md bg-gradient-to-r from-indigo-600 to-teal-600 text-white" }, [
                          (openBlock(), createBlock(resolveDynamicComponent(item.icon), {
                            class: "h-6 w-6",
                            "aria-hidden": "true"
                          }))
                        ]),
                        createVNode("div", { class: "ml-4 text-base font-medium text-gray-900" }, toDisplayString(item.name), 1)
                      ];
                    }
                  }),
                  _: 2
                }, _parent3, _scopeId2));
              });
              _push3(`<!--]--></nav></div></div><div class="py-6 px-5"${_scopeId2}><div class="grid grid-cols-2 gap-4"${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_Link, {
                href: "/projects",
                class: "text-base font-medium text-gray-900 hover:text-gray-700"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Projects `);
                  } else {
                    return [
                      createTextVNode(" Projects ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(ssrRenderComponent(_component_Link, {
                href: "/datasets",
                class: "text-base font-medium text-gray-900 hover:text-gray-700"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Datasets `);
                  } else {
                    return [
                      createTextVNode(" Datasets ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(ssrRenderComponent(_component_Link, {
                href: "/compounds",
                class: "text-base font-medium text-gray-900 hover:text-gray-700"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Compounds `);
                  } else {
                    return [
                      createTextVNode(" Compounds ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`<a target="_blank" href="https://docs.nmrxiv.org" class="text-base font-medium text-gray-900 hover:text-gray-700"${_scopeId2}> Docs </a></div><div class="mt-6"${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_Link, {
                href: "/login",
                class: "w-full flex items-center justify-center bg-gradient-to-r from-indigo-600 to-teal-600 bg-origin-border px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white hover:from-indigo-700 hover:to-teal-700"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Login `);
                  } else {
                    return [
                      createTextVNode(" Login ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`<p class="mt-6 text-center text-base font-medium text-gray-500"${_scopeId2}>`);
              _push3(ssrRenderComponent(_component_Link, {
                href: "/register",
                class: "text-gray-900"
              }, {
                default: withCtx((_3, _push4, _parent4, _scopeId3) => {
                  if (_push4) {
                    _push4(` Register `);
                  } else {
                    return [
                      createTextVNode(" Register ")
                    ];
                  }
                }),
                _: 1
              }, _parent3, _scopeId2));
              _push3(`</p></div></div></div>`);
            } else {
              return [
                createVNode("div", { class: "rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 bg-white divide-y-2 divide-gray-50" }, [
                  createVNode("div", { class: "pt-5 pb-6 px-5" }, [
                    createVNode("div", { class: "flex items-center justify-between" }, [
                      createVNode("div", null, [
                        createVNode(_component_jet_application_logo, { class: "block h-10 p-0.5 ml-1.5 w-auto" })
                      ]),
                      createVNode("div", { class: "-mr-2" }, [
                        createVNode(_component_PopoverButton, { class: "bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-teal-500" }, {
                          default: withCtx(() => [
                            createVNode("span", { class: "sr-only" }, "Close menu"),
                            createVNode(_component_XMarkIcon, {
                              class: "h-6 w-6",
                              "aria-hidden": "true"
                            })
                          ]),
                          _: 1
                        })
                      ])
                    ]),
                    createVNode("div", { class: "mt-6" }, [
                      createVNode("nav", { class: "grid grid-cols-1 gap-7" }, [
                        (openBlock(true), createBlock(Fragment, null, renderList($setup.Search, (item) => {
                          return openBlock(), createBlock(_component_Link, {
                            key: item.name,
                            href: item.href,
                            class: "-m-3 p-3 flex items-center rounded-lg hover:bg-gray-50"
                          }, {
                            default: withCtx(() => [
                              createVNode("div", { class: "flex-shrink-0 flex items-center justify-center h-10 w-10 rounded-md bg-gradient-to-r from-indigo-600 to-teal-600 text-white" }, [
                                (openBlock(), createBlock(resolveDynamicComponent(item.icon), {
                                  class: "h-6 w-6",
                                  "aria-hidden": "true"
                                }))
                              ]),
                              createVNode("div", { class: "ml-4 text-base font-medium text-gray-900" }, toDisplayString(item.name), 1)
                            ]),
                            _: 2
                          }, 1032, ["href"]);
                        }), 128))
                      ])
                    ])
                  ]),
                  createVNode("div", { class: "py-6 px-5" }, [
                    createVNode("div", { class: "grid grid-cols-2 gap-4" }, [
                      createVNode(_component_Link, {
                        href: "/projects",
                        class: "text-base font-medium text-gray-900 hover:text-gray-700"
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Projects ")
                        ]),
                        _: 1
                      }),
                      createVNode(_component_Link, {
                        href: "/datasets",
                        class: "text-base font-medium text-gray-900 hover:text-gray-700"
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Datasets ")
                        ]),
                        _: 1
                      }),
                      createVNode(_component_Link, {
                        href: "/compounds",
                        class: "text-base font-medium text-gray-900 hover:text-gray-700"
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Compounds ")
                        ]),
                        _: 1
                      }),
                      createVNode("a", {
                        target: "_blank",
                        href: "https://docs.nmrxiv.org",
                        class: "text-base font-medium text-gray-900 hover:text-gray-700"
                      }, " Docs ")
                    ]),
                    createVNode("div", { class: "mt-6" }, [
                      createVNode(_component_Link, {
                        href: "/login",
                        class: "w-full flex items-center justify-center bg-gradient-to-r from-indigo-600 to-teal-600 bg-origin-border px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white hover:from-indigo-700 hover:to-teal-700"
                      }, {
                        default: withCtx(() => [
                          createTextVNode(" Login ")
                        ]),
                        _: 1
                      }),
                      createVNode("p", { class: "mt-6 text-center text-base font-medium text-gray-500" }, [
                        createVNode(_component_Link, {
                          href: "/register",
                          class: "text-gray-900"
                        }, {
                          default: withCtx(() => [
                            createTextVNode(" Register ")
                          ]),
                          _: 1
                        })
                      ])
                    ])
                  ])
                ])
              ];
            }
          }),
          _: 1
        }, _parent2, _scopeId));
        _push2(`</div>`);
      } else {
        return [
          createVNode("div", { class: "flex justify-between items-center mx-auto px-4 py-6 sm:px-6 md:justify-start md:space-x-10 lg:px-8" }, [
            createVNode("div", { class: "flex justify-start lg:w-0 lg:flex-1" }, [
              createVNode(_component_Link, { href: "/" }, {
                default: withCtx(() => [
                  createVNode(_component_jet_application_logo, { class: "block h-10 p-0.5 ml-1.5 w-auto" })
                ]),
                _: 1
              })
            ]),
            createVNode("div", { class: "-mr-2 -my-2 md:hidden" }, [
              createVNode(_component_PopoverButton, { class: "rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-teal-500" }, {
                default: withCtx(() => [
                  createVNode("span", { class: "sr-only" }, "Open menu"),
                  createVNode(_component_Bars3Icon, {
                    class: "h-6 w-6",
                    "aria-hidden": "true"
                  })
                ]),
                _: 1
              })
            ]),
            createVNode(_component_PopoverGroup, {
              as: "nav",
              class: "hidden md:flex space-x-10"
            }, {
              default: withCtx(() => [
                createVNode(_component_Link, {
                  href: "/projects",
                  class: "text-base font-medium text-gray-500 hover:text-gray-900"
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Projects ")
                  ]),
                  _: 1
                }),
                createVNode(_component_Link, {
                  href: "/spectra",
                  class: "text-base font-medium text-gray-500 hover:text-gray-900"
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Spectra ")
                  ]),
                  _: 1
                }),
                createVNode(_component_Link, {
                  href: "/compounds",
                  class: "text-base font-medium text-gray-500 hover:text-gray-900"
                }, {
                  default: withCtx(() => [
                    createTextVNode(" Compounds ")
                  ]),
                  _: 1
                }),
                createVNode("a", {
                  target: "_blank",
                  href: "https://docs.nmrxiv.org",
                  class: "text-base font-medium text-gray-500 hover:text-gray-900"
                }, " Docs ")
              ]),
              _: 1
            }),
            _ctx.$page.props.auth.user && _ctx.$page.props.auth.user.first_name != null ? (openBlock(), createBlock("div", {
              key: 0,
              class: "hidden md:flex items-center justify-end md:flex-1 lg:w-0"
            }, [
              createVNode(_component_Link, {
                href: "/dashboard",
                class: "ml-8 whitespace-nowrap inline-flex items-center justify-center bg-gradient-to-r from-indigo-600 to-teal-600 bg-origin-border px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white hover:from-indigo-700 hover:to-teal-700"
              }, {
                default: withCtx(() => [
                  createTextVNode(" Dashboard ")
                ]),
                _: 1
              })
            ])) : (openBlock(), createBlock("div", {
              key: 1,
              class: "hidden md:flex items-center justify-end md:flex-1 lg:w-0"
            }, [
              createVNode(_component_Link, {
                href: "/login",
                class: "whitespace-nowrap text-base font-medium text-gray-500 hover:text-gray-900"
              }, {
                default: withCtx(() => [
                  createTextVNode(" Login ")
                ]),
                _: 1
              }),
              createVNode(_component_Link, {
                href: "/register",
                class: "ml-8 whitespace-nowrap inline-flex items-center justify-center bg-gradient-to-r from-indigo-600 to-teal-600 bg-origin-border px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white hover:from-indigo-700 hover:to-teal-700"
              }, {
                default: withCtx(() => [
                  createTextVNode(" Register ")
                ]),
                _: 1
              })
            ]))
          ]),
          createVNode(Transition, {
            "enter-active-class": "duration-200 ease-out",
            "enter-from-class": "opacity-0 scale-95",
            "enter-to-class": "opacity-100 scale-100",
            "leave-active-class": "duration-100 ease-in",
            "leave-from-class": "opacity-100 scale-100",
            "leave-to-class": "opacity-0 scale-95"
          }, {
            default: withCtx(() => [
              createVNode("div", null, [
                createVNode(_component_PopoverPanel, {
                  focus: "",
                  class: "absolute z-30 top-0 inset-x-0 p-2 transition transform origin-top-right md:hidden"
                }, {
                  default: withCtx(() => [
                    createVNode("div", { class: "rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 bg-white divide-y-2 divide-gray-50" }, [
                      createVNode("div", { class: "pt-5 pb-6 px-5" }, [
                        createVNode("div", { class: "flex items-center justify-between" }, [
                          createVNode("div", null, [
                            createVNode(_component_jet_application_logo, { class: "block h-10 p-0.5 ml-1.5 w-auto" })
                          ]),
                          createVNode("div", { class: "-mr-2" }, [
                            createVNode(_component_PopoverButton, { class: "bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-teal-500" }, {
                              default: withCtx(() => [
                                createVNode("span", { class: "sr-only" }, "Close menu"),
                                createVNode(_component_XMarkIcon, {
                                  class: "h-6 w-6",
                                  "aria-hidden": "true"
                                })
                              ]),
                              _: 1
                            })
                          ])
                        ]),
                        createVNode("div", { class: "mt-6" }, [
                          createVNode("nav", { class: "grid grid-cols-1 gap-7" }, [
                            (openBlock(true), createBlock(Fragment, null, renderList($setup.Search, (item) => {
                              return openBlock(), createBlock(_component_Link, {
                                key: item.name,
                                href: item.href,
                                class: "-m-3 p-3 flex items-center rounded-lg hover:bg-gray-50"
                              }, {
                                default: withCtx(() => [
                                  createVNode("div", { class: "flex-shrink-0 flex items-center justify-center h-10 w-10 rounded-md bg-gradient-to-r from-indigo-600 to-teal-600 text-white" }, [
                                    (openBlock(), createBlock(resolveDynamicComponent(item.icon), {
                                      class: "h-6 w-6",
                                      "aria-hidden": "true"
                                    }))
                                  ]),
                                  createVNode("div", { class: "ml-4 text-base font-medium text-gray-900" }, toDisplayString(item.name), 1)
                                ]),
                                _: 2
                              }, 1032, ["href"]);
                            }), 128))
                          ])
                        ])
                      ]),
                      createVNode("div", { class: "py-6 px-5" }, [
                        createVNode("div", { class: "grid grid-cols-2 gap-4" }, [
                          createVNode(_component_Link, {
                            href: "/projects",
                            class: "text-base font-medium text-gray-900 hover:text-gray-700"
                          }, {
                            default: withCtx(() => [
                              createTextVNode(" Projects ")
                            ]),
                            _: 1
                          }),
                          createVNode(_component_Link, {
                            href: "/datasets",
                            class: "text-base font-medium text-gray-900 hover:text-gray-700"
                          }, {
                            default: withCtx(() => [
                              createTextVNode(" Datasets ")
                            ]),
                            _: 1
                          }),
                          createVNode(_component_Link, {
                            href: "/compounds",
                            class: "text-base font-medium text-gray-900 hover:text-gray-700"
                          }, {
                            default: withCtx(() => [
                              createTextVNode(" Compounds ")
                            ]),
                            _: 1
                          }),
                          createVNode("a", {
                            target: "_blank",
                            href: "https://docs.nmrxiv.org",
                            class: "text-base font-medium text-gray-900 hover:text-gray-700"
                          }, " Docs ")
                        ]),
                        createVNode("div", { class: "mt-6" }, [
                          createVNode(_component_Link, {
                            href: "/login",
                            class: "w-full flex items-center justify-center bg-gradient-to-r from-indigo-600 to-teal-600 bg-origin-border px-4 py-2 border border-transparent rounded-md shadow-sm text-base font-medium text-white hover:from-indigo-700 hover:to-teal-700"
                          }, {
                            default: withCtx(() => [
                              createTextVNode(" Login ")
                            ]),
                            _: 1
                          }),
                          createVNode("p", { class: "mt-6 text-center text-base font-medium text-gray-500" }, [
                            createVNode(_component_Link, {
                              href: "/register",
                              class: "text-gray-900"
                            }, {
                              default: withCtx(() => [
                                createTextVNode(" Register ")
                              ]),
                              _: 1
                            })
                          ])
                        ])
                      ])
                    ])
                  ]),
                  _: 1
                })
              ])
            ]),
            _: 1
          })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</header><div class="mx-auto sm:px-6 lg:px-8"><div class="relative sm:rounded-2xl"><div class="relative px-4 py-8 sm:px-6 sm:py-12 lg:py-12 lg:px-8"><h1 class="text-center text-2xl font-extrabold tracking-tight sm:text-5xl lg:text-4xl"><span class="block text-teal-900">Open, FAIR and Consensus-Driven</span><span class="block text-teal-200">NMR spectroscopy data repository and analysis platform.</span></h1><p class="mt-6 max-w-lg mx-auto text-center text-xl text-dark-200 sm:max-w-3xl"> We archive raw and processed NMR data, providing support for browsing, search, analysis, and dissemination of NMR data worldwide. </p><div class="mt-10 max-w-sm mx-auto sm:max-w-none sm:flex sm:justify-center"><div class="space-y-4 sm:space-y-0 sm:mx-auto sm:inline-grid sm:grid-cols-2 sm:gap-5">`);
  _push(ssrRenderComponent(_component_Link, {
    href: "/register",
    class: "flex items-center justify-center px-4 py-3 border border-1 text-base font-medium rounded-md shadow-sm text-teal-700 bg-white hover:bg-teal-50 sm:px-8"
  }, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Submit data `);
        _push2(ssrRenderComponent(_component_ToolTip, { text: "To submit data you will need an account with nmrXiv, so you will be redirected to our register page and once registered you can then go ahead and submit data. For more information please checkout our <a target='_blank' href='//docs.nmrxiv.org' class='text-gray-400' target='_blank'>documentation</a>." }, null, _parent2, _scopeId));
      } else {
        return [
          createTextVNode(" Submit data "),
          createVNode(_component_ToolTip, { text: "To submit data you will need an account with nmrXiv, so you will be redirected to our register page and once registered you can then go ahead and submit data. For more information please checkout our <a target='_blank' href='//docs.nmrxiv.org' class='text-gray-400' target='_blank'>documentation</a>." })
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(ssrRenderComponent(_component_Link, {
    href: "/projects",
    class: "flex items-center justify-center px-4 py-3 border border-1 text-base font-medium rounded-md shadow-sm text-white bg-teal-500 sm:px-8"
  }, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Browse data `);
      } else {
        return [
          createTextVNode(" Browse data ")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div></div></div></div></div></div><div class="relative bg-transparent"><div class="absolute inset-x-0 top-0 overflow-hidden pl-[50%]"><img src="/img/beams-basic.png" alt="" class="-ml-[39rem] w-[113.125rem] max-w-none"></div><div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8"><div class="relative pt-12 sm:p-24 xl:col-start-1 border-b border-slate-100"><h2 class="text-sm font-semibold tracking-wide uppercase"><span class="bg-clip-text text-gray-600">Metrics</span></h2><p class="mt-3 text-xl font-bold"> Validate your spectral findings and develop new/accurate tools using state of the art AI/ML models. </p><div class="mt-4 grid grid-cols-1 gap-y-12 gap-x-6 sm:grid-cols-2"><p><span class="block text-2xl font-bold">${ssrInterpolate($props.projects)} Projects</span></p><p><span class="block text-2xl font-bold">${ssrInterpolate($props.compounds)} Compounds</span></p><p><span class="block text-2xl font-bold">${ssrInterpolate($props.spectra)} Spectra</span></p><p><span class="block text-2xl font-bold">${ssrInterpolate($props.techniques)} Techniques</span></p></div></div></div></div><div class="relative pt-16"><div><div class="lg:mx-auto lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-2 lg:grid-flow-col-dense lg:gap-24 overflow-x-hidden py-10 border-r"><div class="px-4 max-w-xl mx-auto sm:px-6 lg:py-16 lg:max-w-none lg:mx-0 lg:px-0"><div><div><span class="h-12 w-12 rounded-md flex items-center justify-center bg-gradient-to-r from-indigo-600 to-teal-600">`);
  _push(ssrRenderComponent(_component_InboxIcon, {
    class: "h-6 w-6 text-white",
    "aria-hidden": "true"
  }, null, _parent));
  _push(`</span></div><div class="mt-6"><h2 class="text-3xl font-extrabold tracking-tight text-gray-900"> Submit spectral data to us </h2><p class="mt-4 text-lg text-gray-500"> nmrXiv offers a ready-to-use NMR data management platform to host your raw instrument data and processed files for free and provides you with tools and services to analyse data. Additionally, get community support for any of your NMR spectra-related queries or provide one yourself. </p><div class="mt-6">`);
  _push(ssrRenderComponent(_component_Link, {
    href: "/login",
    class: "inline-flex bg-gradient-to-r from-indigo-600 to-teal-600 bg-origin-border px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm text-white hover:from-indigo-700 hover:to-teal-700"
  }, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Get started `);
      } else {
        return [
          createTextVNode(" Get started ")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div></div></div></div><div class="mt-12 sm:mt-16 lg:mt-0"><div class="pl-4 -mr-48 sm:pl-6 md:-mr-16 lg:px-0 lg:m-0 lg:relative lg:h-full"><img class="w-full rounded-xl shadow-xl ring-1 ring-black ring-opacity-5 lg:absolute lg:left-0 lg:h-full lg:w-auto lg:max-w-none" src="/img/welcome1.jpg" alt=""></div></div></div><div class="my-5 py-10"><div class="lg:mx-auto lg:max-w-7xl px-8 lg:grid lg:grid-cols-1 lg:grid-flow-col-dense lg:gap-24"><div><div class="md:flex md:items-center md:justify-between"><h2 class="text-2xl font-extrabold tracking-tight text-gray-900"> Trending projects </h2>`);
  _push(ssrRenderComponent(_component_Link, {
    href: "/projects",
    class: "hidden text-sm font-medium text-indigo-600 hover:text-indigo-500 md:block"
  }, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`Explore more<span aria-hidden="true"${_scopeId}> →</span>`);
      } else {
        return [
          createTextVNode("Explore more"),
          createVNode("span", { "aria-hidden": "true" }, " →")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div></div></div><div class="lg:mx-auto lg:max-w-7xl px-8 lg:grid lg:grid-cols-1 lg:grid-flow-col-dense lg:gap-24"><div><div class="max-w-7xl mx-auto py-3 px-0 sm:flex sm:items-center"><div class="mt-2 sm:mt-0"><div class="-m-1 flex flex-wrap items-center">`);
  _push(ssrRenderComponent(_component_Link, {
    href: "/projects?filter=recent",
    class: "m-1 inline-flex rounded-full border border-gray-200 items-center py-1.5 pl-3 pr-3 text-sm font-medium bg-white text-gray-900 hover:text-white hover:bg-black"
  }, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<span${_scopeId}>Recent</span>`);
      } else {
        return [
          createVNode("span", null, "Recent")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(ssrRenderComponent(_component_Link, {
    href: "/projects?filter=trending",
    class: "m-1 inline-flex rounded-full border border-gray-200 items-center py-1.5 pl-3 pr-3 text-sm font-medium bg-white text-gray-900 hover:text-white hover:bg-black"
  }, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<span${_scopeId}>Trending</span>`);
      } else {
        return [
          createVNode("span", null, "Trending")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div></div></div></div></div><div class="lg:mx-auto lg:max-w-7xl lg:px-8 md:grid grid-cols-1 grid-flow-col-dense lg:gap-24 px-4">`);
  _push(ssrRenderComponent(_component_Projects, { limit: 8 }, null, _parent));
  _push(`</div></div></div><div class="mt-24"><div class="lg:mx-auto lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-2 lg:grid-flow-col-dense lg:gap-24 overflow-x-hidden py-10 border-l"><div class="px-4 max-w-xl mx-auto sm:px-6 lg:py-32 lg:max-w-none lg:mx-0 lg:px-0 lg:col-start-2"><div><div><span class="h-12 w-12 rounded-md flex items-center justify-center bg-gradient-to-r from-indigo-600 to-teal-600">`);
  _push(ssrRenderComponent(_component_SparklesIcon, {
    class: "h-6 w-6 text-white",
    "aria-hidden": "true"
  }, null, _parent));
  _push(`</span></div><div class="mt-6"><h2 class="text-3xl font-extrabold tracking-tight text-gray-900"> Develop tools with our API </h2><p class="mt-4 text-lg text-gray-500"> Software programmers and data scientists can leverage nmrXiv API and its rich data/metadata descriptions to develop advanced toolsets/software. </p><div class="mt-6"><a target="_blank" href="https://docs.nmrxiv.org/docs/developer-guides/API" class="inline-flex bg-gradient-to-r from-indigo-600 to-teal-600 bg-origin-border px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm text-white hover:from-indigo-700 hover:to-teal-700"> API Documentation </a></div></div></div></div><div class="mt-12 sm:mt-16 lg:mt-0 lg:col-start-1"><div class="pr-4 -ml-48 sm:pr-6 md:-ml-16 lg:px-0 lg:m-0 lg:relative lg:h-full"><img class="w-full rounded-xl shadow-xl ring-1 ring-black ring-opacity-5 lg:absolute lg:right-0 lg:h-full lg:w-auto lg:max-w-none" src="https://docs.nmrxiv.org/img/postman.png" alt=""></div></div></div></div><div class="mt-24"><div class="lg:mx-auto lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-2 lg:grid-flow-col-dense lg:gap-24 overflow-x-hidden py-10 border-r"><div class="px-4 max-w-xl mx-auto sm:px-6 lg:py-16 lg:max-w-none lg:mx-0 lg:px-0"><div><div><span class="h-12 w-12 rounded-md flex items-center justify-center bg-gradient-to-r from-indigo-600 to-teal-600">`);
  _push(ssrRenderComponent(_component_InboxIcon, {
    class: "h-6 w-6 text-white",
    "aria-hidden": "true"
  }, null, _parent));
  _push(`</span></div><div class="mt-6"><h2 class="text-3xl font-extrabold tracking-tight text-gray-900"> Review and analyse the spectral assignments </h2><p class="mt-4 text-lg text-gray-500"> Data deposited in nmrXiv requires original machine output files or processed raw data. With this data, researchers can annotate the missing assignments in the spectra, reanalyse previous work and offer additional help there by sharing their knowledge and expertise. </p><div class="mt-6">`);
  _push(ssrRenderComponent(_component_Link, {
    href: "#",
    class: "inline-flex bg-gradient-to-r from-indigo-600 to-teal-600 bg-origin-border px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm text-white hover:from-indigo-700 hover:to-teal-700"
  }, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Need help with structure ellucidation? <i${_scopeId}><small${_scopeId}> (coming soon)</small></i>`);
      } else {
        return [
          createTextVNode(" Need help with structure ellucidation? "),
          createVNode("i", null, [
            createVNode("small", null, " (coming soon)")
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<br>`);
  _push(ssrRenderComponent(_component_Link, {
    href: "#",
    class: "inline-flex bg-gradient-to-r from-indigo-600 to-teal-600 bg-origin-border px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm text-white hover:from-indigo-700 hover:to-teal-700 mt-4"
  }, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Check out active challenges <i${_scopeId}><small${_scopeId}> (coming soon)</small></i>`);
      } else {
        return [
          createTextVNode(" Check out active challenges "),
          createVNode("i", null, [
            createVNode("small", null, " (coming soon)")
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div></div></div></div><div class="mt-12 sm:mt-16 lg:mt-0"><div class="pl-4 -mr-48 sm:pl-6 md:-mr-16 lg:px-0 lg:m-0 lg:relative lg:h-full"><img class="w-full rounded-xl shadow-xl ring-1 ring-black ring-opacity-5 lg:absolute lg:left-0 lg:h-full lg:w-auto lg:max-w-none" src="/img/welcome2.jpg" alt=""></div></div></div></div></div><div>`);
  _push(ssrRenderComponent(_component_FAQs, null, null, _parent));
  _push(`</div><div class="bg-gradient-to-r from-indigo-800 to-teal-700"><div class="max-w-4xl mx-auto px-4 py-16 sm:px-6 sm:pt-20 sm:pb-24 lg:max-w-7xl lg:pt-24 lg:px-8"><h2 class="text-3xl font-extrabold text-white tracking-tight"> Built to be FAIR from ground up </h2><div class="mt-12 grid grid-cols-1 gap-x-6 gap-y-12 sm:grid-cols-2 lg:mt-16 lg:grid-cols-4 lg:gap-x-8 lg:gap-y-16"><!--[-->`);
  ssrRenderList($setup.features, (feature) => {
    _push(`<div><div><span class="flex items-center justify-center h-12 w-12 rounded-md bg-white bg-opacity-10">`);
    ssrRenderVNode(_push, createVNode(resolveDynamicComponent(feature.icon), {
      class: "h-6 w-6 text-white",
      "aria-hidden": "true"
    }, null), _parent);
    _push(`</span></div><div class="mt-6"><h3 class="text-lg font-medium text-white">${ssrInterpolate(feature.name)}</h3><p class="mt-2 text-base text-indigo-200">${ssrInterpolate(feature.description)}</p></div></div>`);
  });
  _push(`<!--]--></div></div></div><div class="bg-gray-50 border-t border-b border-gray-100"><div class="max-w-7xl mx-auto content-center py-16 px-4 sm:px-6 lg:px-8"><p class="text-center text-sm font-semibold uppercase text-gray-600 tracking-wide"></p><div class="mt-6 grid grid-cols-3 gap-8"><div class="col-span-3 md:col-span-1 flex justify-center"><a target="_blank" href="https://cheminf.uni-jena.de/"><img class="h-12" src="https://www.uni-jena.de/unijenamedia/universitaet/abteilung-hochschulkommunikation/marketing/wort-bildmarke-universitaet-jena.jpg?height=335&amp;width=1000" alt="FSU Jena"></a></div><div class="col-span-3 md:col-span-1 flex justify-center"><a target="_blank" href="https://www.nfdi4chem.de/"><img class="h-12" src="/img/nmrxiv-logo.png" alt="NFDI4Chem"></a></div><div class="col-span-3 md:col-span-1 flex justify-center"><a target="_blank" href="https://www.nmrium.org/"><img class="h-12" src="/img/nmrium-logo.png" alt="NMRium"></a></div></div></div></div><div class="bg-white"><div class="max-w-4xl mx-auto py-16 px-4 sm:px-6 sm:py-24 lg:max-w-7xl lg:px-8 lg:flex lg:items-center lg:justify-between"><h2 class="text-4xl font-extrabold tracking-tight text-gray-900 sm:text-4xl"><span class="block">Want to submit data?</span><span class="-mb-1 pb-1 block bg-gradient-to-r from-indigo-600 to-teal-600 bg-clip-text text-transparent">Get in touch or create an account.</span></h2><div class="mt-6 space-y-4 sm:space-y-0 sm:flex sm:space-x-5">`);
  _push(ssrRenderComponent(_component_Link, {
    href: "/login",
    class: "flex items-center justify-center bg-gradient-to-r from-indigo-600 to-teal-600 bg-origin-border px-4 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white hover:from-indigo-700 hover:to-teal-700"
  }, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(` Get started `);
      } else {
        return [
          createTextVNode(" Get started ")
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`<a target="_blank" href="//docs.nmrxiv.org" class="flex items-center justify-center px-4 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-teal-800 bg-teal-50 hover:text-white hover:bg-teal-100"> Learn more </a></div></div></div></main><footer class="bg-gray-50" aria-labelledby="footer-heading"><h2 id="footer-heading" class="sr-only">Footer</h2><div class="max-w-7xl mx-auto pt-16 pb-8 px-4 sm:px-6 lg:pt-24 lg:px-8"><div class="xl:grid xl:grid-cols-3 xl:gap-8"><div class="mt-12 xl:mt-0 items center content-center">`);
  _push(ssrRenderComponent(_component_jet_application_logo, { class: "p-0.5 ml-1.5" }, null, _parent));
  _push(`</div><div class="grid grid-cols-2 gap-8 xl:col-span-2"><div class="md:grid md:grid-cols-2 md:gap-8"><div><h3 class="text-sm font-semibold text-gray-400 tracking-wider uppercase"> Quick links </h3><ul role="list" class="mt-4 space-y-4"><!--[-->`);
  ssrRenderList($setup.footerNavigation.quicklinks, (item) => {
    _push(`<li>`);
    _push(ssrRenderComponent(_component_Link, {
      href: item.href,
      class: "text-base text-gray-500 hover:text-gray-900"
    }, {
      default: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`${ssrInterpolate(item.name)}`);
        } else {
          return [
            createTextVNode(toDisplayString(item.name), 1)
          ];
        }
      }),
      _: 2
    }, _parent));
    _push(`</li>`);
  });
  _push(`<!--]--><li><a target="_blank" href="https://docs.nmrxiv.org/FAQs.html" class="text-base text-gray-500 hover:text-gray-900"> FAQs </a></li></ul></div><div class="mt-12 md:mt-0"><h3 class="text-sm font-semibold text-gray-400 tracking-wider uppercase"> Support </h3><ul role="list" class="mt-4 space-y-4"><!--[-->`);
  ssrRenderList($setup.footerNavigation.support, (item) => {
    _push(`<li><a target="_blank"${ssrRenderAttr("href", item.href)} class="text-base text-gray-500 hover:text-gray-900">${ssrInterpolate(item.name)}</a></li>`);
  });
  _push(`<!--]--></ul></div></div><div class="md:grid md:grid-cols-2 md:gap-8"><div><h3 class="text-sm font-semibold text-gray-400 tracking-wider uppercase"> About </h3><ul role="list" class="mt-4 space-y-4"><!--[-->`);
  ssrRenderList($setup.footerNavigation.About, (item) => {
    _push(`<li><a target="_blank"${ssrRenderAttr("href", item.href)} class="text-base text-gray-500 hover:text-gray-900">${ssrInterpolate(item.name)}</a></li>`);
  });
  _push(`<!--]--></ul></div><div class="mt-12 md:mt-0"><h3 class="text-sm font-semibold text-gray-400 tracking-wider uppercase"> Legal </h3><ul role="list" class="mt-4 space-y-4"><!--[-->`);
  ssrRenderList($setup.footerNavigation.legal, (item) => {
    _push(`<li>`);
    _push(ssrRenderComponent(_component_Link, {
      href: item.href,
      class: "text-base text-gray-500 hover:text-gray-900"
    }, {
      default: withCtx((_, _push2, _parent2, _scopeId) => {
        if (_push2) {
          _push2(`${ssrInterpolate(item.name)}`);
        } else {
          return [
            createTextVNode(toDisplayString(item.name), 1)
          ];
        }
      }),
      _: 2
    }, _parent));
    _push(`</li>`);
  });
  _push(`<!--]--></ul></div></div></div></div><div class="my-12 px-12 border-t border-gray-200 pt-8 md:flex md:items-center md:justify-between lg:mt-16"><div class="flex space-x-6 md:order-2"><!--[-->`);
  ssrRenderList($setup.footerNavigation.social, (item) => {
    _push(`<a${ssrRenderAttr("href", item.href)} class="text-gray-400 hover:text-gray-500"><span class="sr-only">${ssrInterpolate(item.name)}</span>`);
    ssrRenderVNode(_push, createVNode(resolveDynamicComponent(item.icon), {
      class: "h-6 w-6",
      "aria-hidden": "true"
    }, null), _parent);
    _push(`</a>`);
  });
  _push(`<!--]--></div><p class="mt-8 text-base text-gray-400 md:mt-0 md:order-1"> © 2023 nmrXiv. All rights reserved. </p></div></div></footer></div>`);
  ssrRenderVNode(_push, createVNode(resolveDynamicComponent("script"), { type: "application/ld+json" }, {
    default: withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`${ssrInterpolate($data.schema)}`);
      } else {
        return [
          createTextVNode(toDisplayString($data.schema), 1)
        ];
      }
    }),
    _: 1
  }), _parent);
  _push(`<!--]-->`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("resources/js/Pages/Welcome.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const Welcome = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
const __vite_glob_0_82 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Welcome
}, Symbol.toStringTag, { value: "Module" }));
function t(t4, r2) {
  for (var n2 = 0; n2 < r2.length; n2++) {
    var e2 = r2[n2];
    e2.enumerable = e2.enumerable || false, e2.configurable = true, "value" in e2 && (e2.writable = true), Object.defineProperty(t4, "symbol" == typeof (o2 = function(t5, r3) {
      if ("object" != typeof t5 || null === t5)
        return t5;
      var n3 = t5[Symbol.toPrimitive];
      if (void 0 !== n3) {
        var e3 = n3.call(t5, "string");
        if ("object" != typeof e3)
          return e3;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return String(t5);
    }(e2.key)) ? o2 : String(o2), e2);
  }
  var o2;
}
function r(r2, n2, e2) {
  return n2 && t(r2.prototype, n2), e2 && t(r2, e2), Object.defineProperty(r2, "prototype", { writable: false }), r2;
}
function n() {
  return n = Object.assign ? Object.assign.bind() : function(t4) {
    for (var r2 = 1; r2 < arguments.length; r2++) {
      var n2 = arguments[r2];
      for (var e2 in n2)
        Object.prototype.hasOwnProperty.call(n2, e2) && (t4[e2] = n2[e2]);
    }
    return t4;
  }, n.apply(this, arguments);
}
function e(t4) {
  return e = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t5) {
    return t5.__proto__ || Object.getPrototypeOf(t5);
  }, e(t4);
}
function o(t4, r2) {
  return o = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t5, r3) {
    return t5.__proto__ = r3, t5;
  }, o(t4, r2);
}
function i(t4, r2, n2) {
  return i = function() {
    if ("undefined" == typeof Reflect || !Reflect.construct)
      return false;
    if (Reflect.construct.sham)
      return false;
    if ("function" == typeof Proxy)
      return true;
    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
      })), true;
    } catch (t5) {
      return false;
    }
  }() ? Reflect.construct.bind() : function(t5, r3, n3) {
    var e2 = [null];
    e2.push.apply(e2, r3);
    var i2 = new (Function.bind.apply(t5, e2))();
    return n3 && o(i2, n3.prototype), i2;
  }, i.apply(null, arguments);
}
function u(t4) {
  var r2 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
  return u = function(t5) {
    if (null === t5 || -1 === Function.toString.call(t5).indexOf("[native code]"))
      return t5;
    if ("function" != typeof t5)
      throw new TypeError("Super expression must either be null or a function");
    if (void 0 !== r2) {
      if (r2.has(t5))
        return r2.get(t5);
      r2.set(t5, n2);
    }
    function n2() {
      return i(t5, arguments, e(this).constructor);
    }
    return n2.prototype = Object.create(t5.prototype, { constructor: { value: n2, enumerable: false, writable: true, configurable: true } }), o(n2, t5);
  }, u(t4);
}
var f = String.prototype.replace, a = /%20/g, c = "RFC3986", l = { default: c, formatters: { RFC1738: function(t4) {
  return f.call(t4, a, "+");
}, RFC3986: function(t4) {
  return String(t4);
} }, RFC1738: "RFC1738", RFC3986: c }, s = Object.prototype.hasOwnProperty, v = Array.isArray, p = function() {
  for (var t4 = [], r2 = 0; r2 < 256; ++r2)
    t4.push("%" + ((r2 < 16 ? "0" : "") + r2.toString(16)).toUpperCase());
  return t4;
}(), y = function(t4, r2) {
  for (var n2 = r2 && r2.plainObjects ? /* @__PURE__ */ Object.create(null) : {}, e2 = 0; e2 < t4.length; ++e2)
    void 0 !== t4[e2] && (n2[e2] = t4[e2]);
  return n2;
}, d = { arrayToObject: y, assign: function(t4, r2) {
  return Object.keys(r2).reduce(function(t5, n2) {
    return t5[n2] = r2[n2], t5;
  }, t4);
}, combine: function(t4, r2) {
  return [].concat(t4, r2);
}, compact: function(t4) {
  for (var r2 = [{ obj: { o: t4 }, prop: "o" }], n2 = [], e2 = 0; e2 < r2.length; ++e2)
    for (var o2 = r2[e2], i2 = o2.obj[o2.prop], u2 = Object.keys(i2), f2 = 0; f2 < u2.length; ++f2) {
      var a2 = u2[f2], c2 = i2[a2];
      "object" == typeof c2 && null !== c2 && -1 === n2.indexOf(c2) && (r2.push({ obj: i2, prop: a2 }), n2.push(c2));
    }
  return function(t5) {
    for (; t5.length > 1; ) {
      var r3 = t5.pop(), n3 = r3.obj[r3.prop];
      if (v(n3)) {
        for (var e3 = [], o3 = 0; o3 < n3.length; ++o3)
          void 0 !== n3[o3] && e3.push(n3[o3]);
        r3.obj[r3.prop] = e3;
      }
    }
  }(r2), t4;
}, decode: function(t4, r2, n2) {
  var e2 = t4.replace(/\+/g, " ");
  if ("iso-8859-1" === n2)
    return e2.replace(/%[0-9a-f]{2}/gi, unescape);
  try {
    return decodeURIComponent(e2);
  } catch (t5) {
    return e2;
  }
}, encode: function(t4, r2, n2, e2, o2) {
  if (0 === t4.length)
    return t4;
  var i2 = t4;
  if ("symbol" == typeof t4 ? i2 = Symbol.prototype.toString.call(t4) : "string" != typeof t4 && (i2 = String(t4)), "iso-8859-1" === n2)
    return escape(i2).replace(/%u[0-9a-f]{4}/gi, function(t5) {
      return "%26%23" + parseInt(t5.slice(2), 16) + "%3B";
    });
  for (var u2 = "", f2 = 0; f2 < i2.length; ++f2) {
    var a2 = i2.charCodeAt(f2);
    45 === a2 || 46 === a2 || 95 === a2 || 126 === a2 || a2 >= 48 && a2 <= 57 || a2 >= 65 && a2 <= 90 || a2 >= 97 && a2 <= 122 || o2 === l.RFC1738 && (40 === a2 || 41 === a2) ? u2 += i2.charAt(f2) : a2 < 128 ? u2 += p[a2] : a2 < 2048 ? u2 += p[192 | a2 >> 6] + p[128 | 63 & a2] : a2 < 55296 || a2 >= 57344 ? u2 += p[224 | a2 >> 12] + p[128 | a2 >> 6 & 63] + p[128 | 63 & a2] : (a2 = 65536 + ((1023 & a2) << 10 | 1023 & i2.charCodeAt(f2 += 1)), u2 += p[240 | a2 >> 18] + p[128 | a2 >> 12 & 63] + p[128 | a2 >> 6 & 63] + p[128 | 63 & a2]);
  }
  return u2;
}, isBuffer: function(t4) {
  return !(!t4 || "object" != typeof t4 || !(t4.constructor && t4.constructor.isBuffer && t4.constructor.isBuffer(t4)));
}, isRegExp: function(t4) {
  return "[object RegExp]" === Object.prototype.toString.call(t4);
}, maybeMap: function(t4, r2) {
  if (v(t4)) {
    for (var n2 = [], e2 = 0; e2 < t4.length; e2 += 1)
      n2.push(r2(t4[e2]));
    return n2;
  }
  return r2(t4);
}, merge: function t2(r2, n2, e2) {
  if (!n2)
    return r2;
  if ("object" != typeof n2) {
    if (v(r2))
      r2.push(n2);
    else {
      if (!r2 || "object" != typeof r2)
        return [r2, n2];
      (e2 && (e2.plainObjects || e2.allowPrototypes) || !s.call(Object.prototype, n2)) && (r2[n2] = true);
    }
    return r2;
  }
  if (!r2 || "object" != typeof r2)
    return [r2].concat(n2);
  var o2 = r2;
  return v(r2) && !v(n2) && (o2 = y(r2, e2)), v(r2) && v(n2) ? (n2.forEach(function(n3, o3) {
    if (s.call(r2, o3)) {
      var i2 = r2[o3];
      i2 && "object" == typeof i2 && n3 && "object" == typeof n3 ? r2[o3] = t2(i2, n3, e2) : r2.push(n3);
    } else
      r2[o3] = n3;
  }), r2) : Object.keys(n2).reduce(function(r3, o3) {
    var i2 = n2[o3];
    return r3[o3] = s.call(r3, o3) ? t2(r3[o3], i2, e2) : i2, r3;
  }, o2);
} }, b = Object.prototype.hasOwnProperty, h = { brackets: function(t4) {
  return t4 + "[]";
}, comma: "comma", indices: function(t4, r2) {
  return t4 + "[" + r2 + "]";
}, repeat: function(t4) {
  return t4;
} }, g = Array.isArray, m = String.prototype.split, j = Array.prototype.push, w = function(t4, r2) {
  j.apply(t4, g(r2) ? r2 : [r2]);
}, O = Date.prototype.toISOString, E = l.default, R = { addQueryPrefix: false, allowDots: false, charset: "utf-8", charsetSentinel: false, delimiter: "&", encode: true, encoder: d.encode, encodeValuesOnly: false, format: E, formatter: l.formatters[E], indices: false, serializeDate: function(t4) {
  return O.call(t4);
}, skipNulls: false, strictNullHandling: false }, S = function t3(r2, n2, e2, o2, i2, u2, f2, a2, c2, l2, s2, v2, p2, y2) {
  var b2, h2 = r2;
  if ("function" == typeof f2 ? h2 = f2(n2, h2) : h2 instanceof Date ? h2 = l2(h2) : "comma" === e2 && g(h2) && (h2 = d.maybeMap(h2, function(t4) {
    return t4 instanceof Date ? l2(t4) : t4;
  })), null === h2) {
    if (o2)
      return u2 && !p2 ? u2(n2, R.encoder, y2, "key", s2) : n2;
    h2 = "";
  }
  if ("string" == typeof (b2 = h2) || "number" == typeof b2 || "boolean" == typeof b2 || "symbol" == typeof b2 || "bigint" == typeof b2 || d.isBuffer(h2)) {
    if (u2) {
      var j2 = p2 ? n2 : u2(n2, R.encoder, y2, "key", s2);
      if ("comma" === e2 && p2) {
        for (var O2 = m.call(String(h2), ","), E2 = "", S2 = 0; S2 < O2.length; ++S2)
          E2 += (0 === S2 ? "" : ",") + v2(u2(O2[S2], R.encoder, y2, "value", s2));
        return [v2(j2) + "=" + E2];
      }
      return [v2(j2) + "=" + v2(u2(h2, R.encoder, y2, "value", s2))];
    }
    return [v2(n2) + "=" + v2(String(h2))];
  }
  var k2, x2 = [];
  if (void 0 === h2)
    return x2;
  if ("comma" === e2 && g(h2))
    k2 = [{ value: h2.length > 0 ? h2.join(",") || null : void 0 }];
  else if (g(f2))
    k2 = f2;
  else {
    var T2 = Object.keys(h2);
    k2 = a2 ? T2.sort(a2) : T2;
  }
  for (var N2 = 0; N2 < k2.length; ++N2) {
    var C2 = k2[N2], D2 = "object" == typeof C2 && void 0 !== C2.value ? C2.value : h2[C2];
    if (!i2 || null !== D2) {
      var $2 = g(h2) ? "function" == typeof e2 ? e2(n2, C2) : n2 : n2 + (c2 ? "." + C2 : "[" + C2 + "]");
      w(x2, t3(D2, $2, e2, o2, i2, u2, f2, a2, c2, l2, s2, v2, p2, y2));
    }
  }
  return x2;
}, k = Object.prototype.hasOwnProperty, x = Array.isArray, T = { allowDots: false, allowPrototypes: false, arrayLimit: 20, charset: "utf-8", charsetSentinel: false, comma: false, decoder: d.decode, delimiter: "&", depth: 5, ignoreQueryPrefix: false, interpretNumericEntities: false, parameterLimit: 1e3, parseArrays: true, plainObjects: false, strictNullHandling: false }, N = function(t4) {
  return t4.replace(/&#(\d+);/g, function(t5, r2) {
    return String.fromCharCode(parseInt(r2, 10));
  });
}, C = function(t4, r2) {
  return t4 && "string" == typeof t4 && r2.comma && t4.indexOf(",") > -1 ? t4.split(",") : t4;
}, D = function(t4, r2, n2, e2) {
  if (t4) {
    var o2 = n2.allowDots ? t4.replace(/\.([^.[]+)/g, "[$1]") : t4, i2 = /(\[[^[\]]*])/g, u2 = n2.depth > 0 && /(\[[^[\]]*])/.exec(o2), f2 = u2 ? o2.slice(0, u2.index) : o2, a2 = [];
    if (f2) {
      if (!n2.plainObjects && k.call(Object.prototype, f2) && !n2.allowPrototypes)
        return;
      a2.push(f2);
    }
    for (var c2 = 0; n2.depth > 0 && null !== (u2 = i2.exec(o2)) && c2 < n2.depth; ) {
      if (c2 += 1, !n2.plainObjects && k.call(Object.prototype, u2[1].slice(1, -1)) && !n2.allowPrototypes)
        return;
      a2.push(u2[1]);
    }
    return u2 && a2.push("[" + o2.slice(u2.index) + "]"), function(t5, r3, n3, e3) {
      for (var o3 = e3 ? r3 : C(r3, n3), i3 = t5.length - 1; i3 >= 0; --i3) {
        var u3, f3 = t5[i3];
        if ("[]" === f3 && n3.parseArrays)
          u3 = [].concat(o3);
        else {
          u3 = n3.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
          var a3 = "[" === f3.charAt(0) && "]" === f3.charAt(f3.length - 1) ? f3.slice(1, -1) : f3, c3 = parseInt(a3, 10);
          n3.parseArrays || "" !== a3 ? !isNaN(c3) && f3 !== a3 && String(c3) === a3 && c3 >= 0 && n3.parseArrays && c3 <= n3.arrayLimit ? (u3 = [])[c3] = o3 : "__proto__" !== a3 && (u3[a3] = o3) : u3 = { 0: o3 };
        }
        o3 = u3;
      }
      return o3;
    }(a2, r2, n2, e2);
  }
}, $ = function(t4, r2) {
  var n2 = function(t5) {
    if (!t5)
      return T;
    if (null != t5.decoder && "function" != typeof t5.decoder)
      throw new TypeError("Decoder has to be a function.");
    if (void 0 !== t5.charset && "utf-8" !== t5.charset && "iso-8859-1" !== t5.charset)
      throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
    return { allowDots: void 0 === t5.allowDots ? T.allowDots : !!t5.allowDots, allowPrototypes: "boolean" == typeof t5.allowPrototypes ? t5.allowPrototypes : T.allowPrototypes, arrayLimit: "number" == typeof t5.arrayLimit ? t5.arrayLimit : T.arrayLimit, charset: void 0 === t5.charset ? T.charset : t5.charset, charsetSentinel: "boolean" == typeof t5.charsetSentinel ? t5.charsetSentinel : T.charsetSentinel, comma: "boolean" == typeof t5.comma ? t5.comma : T.comma, decoder: "function" == typeof t5.decoder ? t5.decoder : T.decoder, delimiter: "string" == typeof t5.delimiter || d.isRegExp(t5.delimiter) ? t5.delimiter : T.delimiter, depth: "number" == typeof t5.depth || false === t5.depth ? +t5.depth : T.depth, ignoreQueryPrefix: true === t5.ignoreQueryPrefix, interpretNumericEntities: "boolean" == typeof t5.interpretNumericEntities ? t5.interpretNumericEntities : T.interpretNumericEntities, parameterLimit: "number" == typeof t5.parameterLimit ? t5.parameterLimit : T.parameterLimit, parseArrays: false !== t5.parseArrays, plainObjects: "boolean" == typeof t5.plainObjects ? t5.plainObjects : T.plainObjects, strictNullHandling: "boolean" == typeof t5.strictNullHandling ? t5.strictNullHandling : T.strictNullHandling };
  }(r2);
  if ("" === t4 || null == t4)
    return n2.plainObjects ? /* @__PURE__ */ Object.create(null) : {};
  for (var e2 = "string" == typeof t4 ? function(t5, r3) {
    var n3, e3 = {}, o3 = (r3.ignoreQueryPrefix ? t5.replace(/^\?/, "") : t5).split(r3.delimiter, Infinity === r3.parameterLimit ? void 0 : r3.parameterLimit), i3 = -1, u3 = r3.charset;
    if (r3.charsetSentinel)
      for (n3 = 0; n3 < o3.length; ++n3)
        0 === o3[n3].indexOf("utf8=") && ("utf8=%E2%9C%93" === o3[n3] ? u3 = "utf-8" : "utf8=%26%2310003%3B" === o3[n3] && (u3 = "iso-8859-1"), i3 = n3, n3 = o3.length);
    for (n3 = 0; n3 < o3.length; ++n3)
      if (n3 !== i3) {
        var f3, a3, c2 = o3[n3], l2 = c2.indexOf("]="), s2 = -1 === l2 ? c2.indexOf("=") : l2 + 1;
        -1 === s2 ? (f3 = r3.decoder(c2, T.decoder, u3, "key"), a3 = r3.strictNullHandling ? null : "") : (f3 = r3.decoder(c2.slice(0, s2), T.decoder, u3, "key"), a3 = d.maybeMap(C(c2.slice(s2 + 1), r3), function(t6) {
          return r3.decoder(t6, T.decoder, u3, "value");
        })), a3 && r3.interpretNumericEntities && "iso-8859-1" === u3 && (a3 = N(a3)), c2.indexOf("[]=") > -1 && (a3 = x(a3) ? [a3] : a3), e3[f3] = k.call(e3, f3) ? d.combine(e3[f3], a3) : a3;
      }
    return e3;
  }(t4, n2) : t4, o2 = n2.plainObjects ? /* @__PURE__ */ Object.create(null) : {}, i2 = Object.keys(e2), u2 = 0; u2 < i2.length; ++u2) {
    var f2 = i2[u2], a2 = D(f2, e2[f2], n2, "string" == typeof t4);
    o2 = d.merge(o2, a2, n2);
  }
  return d.compact(o2);
}, F = /* @__PURE__ */ function() {
  function t4(t5, r2, n3) {
    var e2, o2;
    this.name = t5, this.definition = r2, this.bindings = null != (e2 = r2.bindings) ? e2 : {}, this.wheres = null != (o2 = r2.wheres) ? o2 : {}, this.config = n3;
  }
  var n2 = t4.prototype;
  return n2.matchesUrl = function(t5) {
    var r2 = this;
    if (!this.definition.methods.includes("GET"))
      return false;
    var n3 = this.template.replace(/(\/?){([^}?]*)(\??)}/g, function(t6, n4, e3, o3) {
      var i3, u3 = "(?<" + e3 + ">" + ((null == (i3 = r2.wheres[e3]) ? void 0 : i3.replace(/(^\^)|(\$$)/g, "")) || "[^/?]+") + ")";
      return o3 ? "(" + n4 + u3 + ")?" : "" + n4 + u3;
    }).replace(/^\w+:\/\//, ""), e2 = t5.replace(/^\w+:\/\//, "").split("?"), o2 = e2[0], i2 = e2[1], u2 = new RegExp("^" + n3 + "/?$").exec(decodeURI(o2));
    if (u2) {
      for (var f2 in u2.groups)
        u2.groups[f2] = "string" == typeof u2.groups[f2] ? decodeURIComponent(u2.groups[f2]) : u2.groups[f2];
      return { params: u2.groups, query: $(i2) };
    }
    return false;
  }, n2.compile = function(t5) {
    var r2 = this;
    return this.parameterSegments.length ? this.template.replace(/{([^}?]+)(\??)}/g, function(n3, e2, o2) {
      var i2, u2;
      if (!o2 && [null, void 0].includes(t5[e2]))
        throw new Error("Ziggy error: '" + e2 + "' parameter is required for route '" + r2.name + "'.");
      if (r2.wheres[e2] && !new RegExp("^" + (o2 ? "(" + r2.wheres[e2] + ")?" : r2.wheres[e2]) + "$").test(null != (u2 = t5[e2]) ? u2 : ""))
        throw new Error("Ziggy error: '" + e2 + "' parameter does not match required format '" + r2.wheres[e2] + "' for route '" + r2.name + "'.");
      return encodeURI(null != (i2 = t5[e2]) ? i2 : "").replace(/%7C/g, "|").replace(/%25/g, "%").replace(/\$/g, "%24");
    }).replace(this.origin + "//", this.origin + "/").replace(/\/+$/, "") : this.template;
  }, r(t4, [{ key: "template", get: function() {
    var t5 = (this.origin + "/" + this.definition.uri).replace(/\/+$/, "");
    return "" === t5 ? "/" : t5;
  } }, { key: "origin", get: function() {
    return this.config.absolute ? this.definition.domain ? "" + this.config.url.match(/^\w+:\/\//)[0] + this.definition.domain + (this.config.port ? ":" + this.config.port : "") : this.config.url : "";
  } }, { key: "parameterSegments", get: function() {
    var t5, r2;
    return null != (t5 = null == (r2 = this.template.match(/{[^}?]+\??}/g)) ? void 0 : r2.map(function(t6) {
      return { name: t6.replace(/{|\??}/g, ""), required: !/\?}$/.test(t6) };
    })) ? t5 : [];
  } }]), t4;
}(), I = /* @__PURE__ */ function(t4) {
  var e2, i2;
  function u2(r2, e3, o2, i3) {
    var u3;
    if (void 0 === o2 && (o2 = true), (u3 = t4.call(this) || this).t = null != i3 ? i3 : "undefined" != typeof Ziggy ? Ziggy : null == globalThis ? void 0 : globalThis.Ziggy, u3.t = n({}, u3.t, { absolute: o2 }), r2) {
      if (!u3.t.routes[r2])
        throw new Error("Ziggy error: route '" + r2 + "' is not in the route list.");
      u3.i = new F(r2, u3.t.routes[r2], u3.t), u3.u = u3.l(e3);
    }
    return u3;
  }
  i2 = t4, (e2 = u2).prototype = Object.create(i2.prototype), e2.prototype.constructor = e2, o(e2, i2);
  var f2 = u2.prototype;
  return f2.toString = function() {
    var t5 = this, r2 = Object.keys(this.u).filter(function(r3) {
      return !t5.i.parameterSegments.some(function(t6) {
        return t6.name === r3;
      });
    }).filter(function(t6) {
      return "_query" !== t6;
    }).reduce(function(r3, e3) {
      var o2;
      return n({}, r3, ((o2 = {})[e3] = t5.u[e3], o2));
    }, {});
    return this.i.compile(this.u) + function(t6, r3) {
      var n2, e3 = t6, o2 = function(t7) {
        if (!t7)
          return R;
        if (null != t7.encoder && "function" != typeof t7.encoder)
          throw new TypeError("Encoder has to be a function.");
        var r4 = t7.charset || R.charset;
        if (void 0 !== t7.charset && "utf-8" !== t7.charset && "iso-8859-1" !== t7.charset)
          throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");
        var n3 = l.default;
        if (void 0 !== t7.format) {
          if (!b.call(l.formatters, t7.format))
            throw new TypeError("Unknown format option provided.");
          n3 = t7.format;
        }
        var e4 = l.formatters[n3], o3 = R.filter;
        return ("function" == typeof t7.filter || g(t7.filter)) && (o3 = t7.filter), { addQueryPrefix: "boolean" == typeof t7.addQueryPrefix ? t7.addQueryPrefix : R.addQueryPrefix, allowDots: void 0 === t7.allowDots ? R.allowDots : !!t7.allowDots, charset: r4, charsetSentinel: "boolean" == typeof t7.charsetSentinel ? t7.charsetSentinel : R.charsetSentinel, delimiter: void 0 === t7.delimiter ? R.delimiter : t7.delimiter, encode: "boolean" == typeof t7.encode ? t7.encode : R.encode, encoder: "function" == typeof t7.encoder ? t7.encoder : R.encoder, encodeValuesOnly: "boolean" == typeof t7.encodeValuesOnly ? t7.encodeValuesOnly : R.encodeValuesOnly, filter: o3, format: n3, formatter: e4, serializeDate: "function" == typeof t7.serializeDate ? t7.serializeDate : R.serializeDate, skipNulls: "boolean" == typeof t7.skipNulls ? t7.skipNulls : R.skipNulls, sort: "function" == typeof t7.sort ? t7.sort : null, strictNullHandling: "boolean" == typeof t7.strictNullHandling ? t7.strictNullHandling : R.strictNullHandling };
      }(r3);
      "function" == typeof o2.filter ? e3 = (0, o2.filter)("", e3) : g(o2.filter) && (n2 = o2.filter);
      var i3 = [];
      if ("object" != typeof e3 || null === e3)
        return "";
      var u3 = h[r3 && r3.arrayFormat in h ? r3.arrayFormat : r3 && "indices" in r3 ? r3.indices ? "indices" : "repeat" : "indices"];
      n2 || (n2 = Object.keys(e3)), o2.sort && n2.sort(o2.sort);
      for (var f3 = 0; f3 < n2.length; ++f3) {
        var a2 = n2[f3];
        o2.skipNulls && null === e3[a2] || w(i3, S(e3[a2], a2, u3, o2.strictNullHandling, o2.skipNulls, o2.encode ? o2.encoder : null, o2.filter, o2.sort, o2.allowDots, o2.serializeDate, o2.format, o2.formatter, o2.encodeValuesOnly, o2.charset));
      }
      var c2 = i3.join(o2.delimiter), s2 = true === o2.addQueryPrefix ? "?" : "";
      return o2.charsetSentinel && (s2 += "iso-8859-1" === o2.charset ? "utf8=%26%2310003%3B&" : "utf8=%E2%9C%93&"), c2.length > 0 ? s2 + c2 : "";
    }(n({}, r2, this.u._query), { addQueryPrefix: true, arrayFormat: "indices", encodeValuesOnly: true, skipNulls: true, encoder: function(t6, r3) {
      return "boolean" == typeof t6 ? Number(t6) : r3(t6);
    } });
  }, f2.v = function(t5) {
    var r2 = this;
    t5 ? this.t.absolute && t5.startsWith("/") && (t5 = this.p().host + t5) : t5 = this.h();
    var e3 = {}, o2 = Object.entries(this.t.routes).find(function(n2) {
      return e3 = new F(n2[0], n2[1], r2.t).matchesUrl(t5);
    }) || [void 0, void 0];
    return n({ name: o2[0] }, e3, { route: o2[1] });
  }, f2.h = function() {
    var t5 = this.p(), r2 = t5.pathname, n2 = t5.search;
    return (this.t.absolute ? t5.host + r2 : r2.replace(this.t.url.replace(/^\w*:\/\/[^/]+/, ""), "").replace(/^\/+/, "/")) + n2;
  }, f2.current = function(t5, r2) {
    var e3 = this.v(), o2 = e3.name, i3 = e3.params, u3 = e3.query, f3 = e3.route;
    if (!t5)
      return o2;
    var a2 = new RegExp("^" + t5.replace(/\./g, "\\.").replace(/\*/g, ".*") + "$").test(o2);
    if ([null, void 0].includes(r2) || !a2)
      return a2;
    var c2 = new F(o2, f3, this.t);
    r2 = this.l(r2, c2);
    var l2 = n({}, i3, u3);
    return !(!Object.values(r2).every(function(t6) {
      return !t6;
    }) || Object.values(l2).some(function(t6) {
      return void 0 !== t6;
    })) || Object.entries(r2).every(function(t6) {
      return l2[t6[0]] == t6[1];
    });
  }, f2.p = function() {
    var t5, r2, n2, e3, o2, i3, u3 = "undefined" != typeof window ? window.location : {}, f3 = u3.host, a2 = u3.pathname, c2 = u3.search;
    return { host: null != (t5 = null == (r2 = this.t.location) ? void 0 : r2.host) ? t5 : void 0 === f3 ? "" : f3, pathname: null != (n2 = null == (e3 = this.t.location) ? void 0 : e3.pathname) ? n2 : void 0 === a2 ? "" : a2, search: null != (o2 = null == (i3 = this.t.location) ? void 0 : i3.search) ? o2 : void 0 === c2 ? "" : c2 };
  }, f2.has = function(t5) {
    return Object.keys(this.t.routes).includes(t5);
  }, f2.l = function(t5, r2) {
    var e3 = this;
    void 0 === t5 && (t5 = {}), void 0 === r2 && (r2 = this.i), null != t5 || (t5 = {}), t5 = ["string", "number"].includes(typeof t5) ? [t5] : t5;
    var o2 = r2.parameterSegments.filter(function(t6) {
      return !e3.t.defaults[t6.name];
    });
    if (Array.isArray(t5))
      t5 = t5.reduce(function(t6, r3, e4) {
        var i4, u3;
        return n({}, t6, o2[e4] ? ((i4 = {})[o2[e4].name] = r3, i4) : "object" == typeof r3 ? r3 : ((u3 = {})[r3] = "", u3));
      }, {});
    else if (1 === o2.length && !t5[o2[0].name] && (t5.hasOwnProperty(Object.values(r2.bindings)[0]) || t5.hasOwnProperty("id"))) {
      var i3;
      (i3 = {})[o2[0].name] = t5, t5 = i3;
    }
    return n({}, this.g(r2), this.m(t5, r2));
  }, f2.g = function(t5) {
    var r2 = this;
    return t5.parameterSegments.filter(function(t6) {
      return r2.t.defaults[t6.name];
    }).reduce(function(t6, e3, o2) {
      var i3, u3 = e3.name;
      return n({}, t6, ((i3 = {})[u3] = r2.t.defaults[u3], i3));
    }, {});
  }, f2.m = function(t5, r2) {
    var e3 = r2.bindings, o2 = r2.parameterSegments;
    return Object.entries(t5).reduce(function(t6, r3) {
      var i3, u3, f3 = r3[0], a2 = r3[1];
      if (!a2 || "object" != typeof a2 || Array.isArray(a2) || !o2.some(function(t7) {
        return t7.name === f3;
      }))
        return n({}, t6, ((u3 = {})[f3] = a2, u3));
      if (!a2.hasOwnProperty(e3[f3])) {
        if (!a2.hasOwnProperty("id"))
          throw new Error("Ziggy error: object passed as '" + f3 + "' parameter is missing route model binding key '" + e3[f3] + "'.");
        e3[f3] = "id";
      }
      return n({}, t6, ((i3 = {})[f3] = a2[e3[f3]], i3));
    }, {});
  }, f2.valueOf = function() {
    return this.toString();
  }, f2.check = function(t5) {
    return this.has(t5);
  }, r(u2, [{ key: "params", get: function() {
    var t5 = this.v();
    return n({}, t5.params, t5.query);
  } }]), u2;
}(/* @__PURE__ */ u(String)), P = { install: function(t4, r2) {
  var n2 = function(t5, n3, e2, o2) {
    return void 0 === o2 && (o2 = r2), function(t6, r3, n4, e3) {
      var o3 = new I(t6, r3, n4, e3);
      return t6 ? o3.toString() : o3;
    }(t5, n3, e2, o2);
  };
  t4.mixin({ methods: { route: n2 } }), parseInt(t4.version) > 2 && t4.provide("route", n2);
} };
const Ziggy$1 = { "url": "http://localhost", "port": null, "defaults": {}, "routes": { "l5-swagger.default.api": { "uri": "api/documentation", "methods": ["GET", "HEAD"] }, "l5-swagger.default.docs": { "uri": "docs/{jsonFile?}", "methods": ["GET", "HEAD"], "parameters": ["jsonFile"] }, "l5-swagger.default.asset": { "uri": "docs/asset/{asset}", "methods": ["GET", "HEAD"], "parameters": ["asset"] }, "l5-swagger.default.oauth2_callback": { "uri": "api/oauth2-callback", "methods": ["GET", "HEAD"] }, "login": { "uri": "login", "methods": ["GET", "HEAD"] }, "logout": { "uri": "logout", "methods": ["POST"] }, "password.request": { "uri": "forgot-password", "methods": ["GET", "HEAD"] }, "password.reset": { "uri": "reset-password/{token}", "methods": ["GET", "HEAD"], "parameters": ["token"] }, "password.email": { "uri": "forgot-password", "methods": ["POST"] }, "password.update": { "uri": "reset-password", "methods": ["POST"] }, "register": { "uri": "register", "methods": ["GET", "HEAD"] }, "verification.notice": { "uri": "email/verify", "methods": ["GET", "HEAD"] }, "verification.verify": { "uri": "email/verify/{id}/{hash}", "methods": ["GET", "HEAD"], "parameters": ["id", "hash"] }, "verification.send": { "uri": "email/verification-notification", "methods": ["POST"] }, "user-profile-information.update": { "uri": "user/profile-information", "methods": ["PUT"] }, "user-password.update": { "uri": "user/password", "methods": ["PUT"] }, "password.confirmation": { "uri": "user/confirmed-password-status", "methods": ["GET", "HEAD"] }, "password.confirm": { "uri": "user/confirm-password", "methods": ["POST"] }, "two-factor.login": { "uri": "two-factor-challenge", "methods": ["GET", "HEAD"] }, "two-factor.enable": { "uri": "user/two-factor-authentication", "methods": ["POST"] }, "two-factor.confirm": { "uri": "user/confirmed-two-factor-authentication", "methods": ["POST"] }, "two-factor.disable": { "uri": "user/two-factor-authentication", "methods": ["DELETE"] }, "two-factor.qr-code": { "uri": "user/two-factor-qr-code", "methods": ["GET", "HEAD"] }, "two-factor.secret-key": { "uri": "user/two-factor-secret-key", "methods": ["GET", "HEAD"] }, "two-factor.recovery-codes": { "uri": "user/two-factor-recovery-codes", "methods": ["GET", "HEAD"] }, "horizon.stats.index": { "uri": "horizon/api/stats", "methods": ["GET", "HEAD"] }, "horizon.workload.index": { "uri": "horizon/api/workload", "methods": ["GET", "HEAD"] }, "horizon.masters.index": { "uri": "horizon/api/masters", "methods": ["GET", "HEAD"] }, "horizon.monitoring.index": { "uri": "horizon/api/monitoring", "methods": ["GET", "HEAD"] }, "horizon.monitoring.store": { "uri": "horizon/api/monitoring", "methods": ["POST"] }, "horizon.monitoring-tag.paginate": { "uri": "horizon/api/monitoring/{tag}", "methods": ["GET", "HEAD"], "parameters": ["tag"] }, "horizon.monitoring-tag.destroy": { "uri": "horizon/api/monitoring/{tag}", "methods": ["DELETE"], "wheres": { "tag": ".*" }, "parameters": ["tag"] }, "horizon.jobs-metrics.index": { "uri": "horizon/api/metrics/jobs", "methods": ["GET", "HEAD"] }, "horizon.jobs-metrics.show": { "uri": "horizon/api/metrics/jobs/{id}", "methods": ["GET", "HEAD"], "parameters": ["id"] }, "horizon.queues-metrics.index": { "uri": "horizon/api/metrics/queues", "methods": ["GET", "HEAD"] }, "horizon.queues-metrics.show": { "uri": "horizon/api/metrics/queues/{id}", "methods": ["GET", "HEAD"], "parameters": ["id"] }, "horizon.jobs-batches.index": { "uri": "horizon/api/batches", "methods": ["GET", "HEAD"] }, "horizon.jobs-batches.show": { "uri": "horizon/api/batches/{id}", "methods": ["GET", "HEAD"], "parameters": ["id"] }, "horizon.jobs-batches.retry": { "uri": "horizon/api/batches/retry/{id}", "methods": ["POST"], "parameters": ["id"] }, "horizon.pending-jobs.index": { "uri": "horizon/api/jobs/pending", "methods": ["GET", "HEAD"] }, "horizon.completed-jobs.index": { "uri": "horizon/api/jobs/completed", "methods": ["GET", "HEAD"] }, "horizon.silenced-jobs.index": { "uri": "horizon/api/jobs/silenced", "methods": ["GET", "HEAD"] }, "horizon.failed-jobs.index": { "uri": "horizon/api/jobs/failed", "methods": ["GET", "HEAD"] }, "horizon.failed-jobs.show": { "uri": "horizon/api/jobs/failed/{id}", "methods": ["GET", "HEAD"], "parameters": ["id"] }, "horizon.retry-jobs.show": { "uri": "horizon/api/jobs/retry/{id}", "methods": ["POST"], "parameters": ["id"] }, "horizon.jobs.show": { "uri": "horizon/api/jobs/{id}", "methods": ["GET", "HEAD"], "parameters": ["id"] }, "horizon.index": { "uri": "horizon/{view?}", "methods": ["GET", "HEAD"], "wheres": { "view": "(.*)" }, "parameters": ["view"] }, "terms.show": { "uri": "terms-of-service", "methods": ["GET", "HEAD"] }, "policy.show": { "uri": "privacy-policy", "methods": ["GET", "HEAD"] }, "profile.show": { "uri": "user/profile", "methods": ["GET", "HEAD"] }, "other-browser-sessions.destroy": { "uri": "user/other-browser-sessions", "methods": ["DELETE"] }, "current-user-photo.destroy": { "uri": "user/profile-photo", "methods": ["DELETE"] }, "api-tokens.index": { "uri": "user/api-tokens", "methods": ["GET", "HEAD"] }, "api-tokens.store": { "uri": "user/api-tokens", "methods": ["POST"] }, "api-tokens.update": { "uri": "user/api-tokens/{token}", "methods": ["PUT"], "parameters": ["token"] }, "api-tokens.destroy": { "uri": "user/api-tokens/{token}", "methods": ["DELETE"], "parameters": ["token"] }, "teams.create": { "uri": "teams/create", "methods": ["GET", "HEAD"] }, "teams.store": { "uri": "teams", "methods": ["POST"] }, "teams.show": { "uri": "teams/{team}", "methods": ["GET", "HEAD"], "parameters": ["team"] }, "teams.update": { "uri": "teams/{team}", "methods": ["PUT"], "parameters": ["team"] }, "app.teams.destroy": { "uri": "teams/{team}", "methods": ["DELETE"], "parameters": ["team"] }, "current-team.update": { "uri": "current-team", "methods": ["PUT"] }, "team-members.store": { "uri": "teams/{team}/members", "methods": ["POST"], "parameters": ["team"] }, "team-members.update": { "uri": "teams/{team}/members/{user}", "methods": ["PUT"], "parameters": ["team", "user"] }, "team-members.destroy": { "uri": "teams/{team}/members/{user}", "methods": ["DELETE"], "parameters": ["team", "user"] }, "team-invitations.accept": { "uri": "team-invitations/{invitation}", "methods": ["GET", "HEAD"], "parameters": ["invitation"] }, "team-invitations.destroy": { "uri": "team-invitations/{invitation}", "methods": ["DELETE"], "parameters": ["invitation"] }, "sanctum.csrf-cookie": { "uri": "sanctum/csrf-cookie", "methods": ["GET", "HEAD"] }, "telescope": { "uri": "telescope/{view?}", "methods": ["GET", "HEAD"], "wheres": { "view": "(.*)" }, "parameters": ["view"] }, "ignition.healthCheck": { "uri": "_ignition/health-check", "methods": ["GET", "HEAD"] }, "ignition.executeSolution": { "uri": "_ignition/execute-solution", "methods": ["POST"] }, "ignition.updateConfig": { "uri": "_ignition/update-config", "methods": ["POST"] }, "public.projects": { "uri": "projects", "methods": ["GET", "HEAD"] }, "public.project": { "uri": "projects/{owner}/{slug}", "methods": ["GET", "HEAD"], "parameters": ["owner", "slug"] }, "public.samples": { "uri": "api/v1/samples", "methods": ["GET", "HEAD"] }, "public.sample": { "uri": "api/v1/sample/{id}", "methods": ["GET", "HEAD"], "parameters": ["id"] }, "public.datasets": { "uri": "api/v1/datasets", "methods": ["GET", "HEAD"] }, "public.dataset": { "uri": "datasets/{owner}/{slug}", "methods": ["GET", "HEAD"], "parameters": ["owner", "slug"] }, "bioschemas.datacatalog": { "uri": "api/v1/schemas/bioschemas", "methods": ["GET", "HEAD"] }, "bioschemas.model": { "uri": "api/v1/schemas/bioschemas/{username}/{project}/{study?}/{dataset?}", "methods": ["GET", "HEAD"], "parameters": ["username", "project", "study", "dataset"] }, "bioschemas.id": { "uri": "api/v1/schemas/bioschemas/{id}", "methods": ["GET", "HEAD"], "parameters": ["id"] }, "auth.checkPassword": { "uri": "auth/checkPassword", "methods": ["GET", "HEAD"] }, "landing": { "uri": "/", "methods": ["GET", "HEAD"] }, "supportBubble.submit": { "uri": "support-bubble", "methods": ["POST"] }, "impersonate": { "uri": "impersonate/take/{id}/{guardName?}", "methods": ["GET", "HEAD"], "parameters": ["id", "guardName"] }, "impersonate.leave": { "uri": "impersonate/leave", "methods": ["GET", "HEAD"] }, "welcome": { "uri": "welcome/{user}", "methods": ["GET", "HEAD"], "parameters": ["user"], "bindings": { "user": "id" } }, "password.set": { "uri": "welcome/{user}", "methods": ["POST"], "parameters": ["user"], "bindings": { "user": "id" } }, "licenses": { "uri": "licenses", "methods": ["GET", "HEAD"] }, "license": { "uri": "licenses/{id}", "methods": ["GET", "HEAD"], "parameters": ["id"] }, "author.save": { "uri": "authors/{project}", "methods": ["POST"], "parameters": ["project"], "bindings": { "project": "id" } }, "author.delete": { "uri": "authors/{project}/delete", "methods": ["DELETE"], "parameters": ["project"], "bindings": { "project": "id" } }, "author.updateRole": { "uri": "authors/{project}/updateRole", "methods": ["POST"], "parameters": ["project"], "bindings": { "project": "id" } }, "citation.save": { "uri": "citations/{project}", "methods": ["POST"], "parameters": ["project"], "bindings": { "project": "id" } }, "citation.delete": { "uri": "citations/{project}/delete", "methods": ["DELETE"], "parameters": ["project"], "bindings": { "project": "id" } }, "onboarding.complete": { "uri": "onboarding/{status}", "methods": ["POST"], "parameters": ["status"] }, "primer.skip": { "uri": "primer/skip", "methods": ["POST"] }, "project.status": { "uri": "projects/status/{project}/queue", "methods": ["GET", "HEAD"], "parameters": ["project"], "bindings": { "project": "id" } }, "project.validation": { "uri": "projects/{project}/validation", "methods": ["GET", "HEAD"], "parameters": ["project"], "bindings": { "project": "id" } }, "users.markNotificationAsRead": { "uri": "users/notification/{user}/markAsRead", "methods": ["POST"], "parameters": ["user"], "bindings": { "user": "id" } }, "users.markAllNotificationAsRead": { "uri": "users/notification/markAllAsRead", "methods": ["POST"] }, "dashboard": { "uri": "dashboard", "methods": ["GET", "HEAD"] }, "upload": { "uri": "upload", "methods": ["GET", "HEAD"] }, "publish": { "uri": "publish/{draft}", "methods": ["GET", "HEAD"], "parameters": ["draft"], "bindings": { "draft": "id" } }, "submission": { "uri": "dashboard/ssubmission", "methods": ["GET", "HEAD"] }, "shared-with-me": { "uri": "dashboard/shared-with-me", "methods": ["GET", "HEAD"] }, "starred": { "uri": "dashboard/starred", "methods": ["GET", "HEAD"] }, "trashed": { "uri": "dashboard/trashed", "methods": ["GET", "HEAD"] }, "recent": { "uri": "dashboard/recent", "methods": ["GET", "HEAD"] }, "dashboard.projects": { "uri": "dashboard/projects/{project}", "methods": ["GET", "HEAD"], "parameters": ["project"], "bindings": { "project": "id" } }, "dashboard.project.settings": { "uri": "dashboard/projects/{project}/settings", "methods": ["GET", "HEAD"], "parameters": ["project"], "bindings": { "project": "id" } }, "dashboard.project.studies": { "uri": "dashboard/projects/{project}/studies", "methods": ["GET", "HEAD"], "parameters": ["project"], "bindings": { "project": "id" } }, "dashboard.project.restore": { "uri": "dashboard/projects/{project}", "methods": ["PUT"], "parameters": ["project"], "bindings": { "project": "id" } }, "dashboard.project.toggle-archive": { "uri": "dashboard/projects/{project}/toggle-archive", "methods": ["PUT"], "parameters": ["project"], "bindings": { "project": "id" } }, "dashboard.project.destroy": { "uri": "dashboard/projects/{project}", "methods": ["DELETE"], "parameters": ["project"], "bindings": { "project": "id" } }, "dashboard.project.create": { "uri": "dashboard/projects/create", "methods": ["POST"] }, "dashboard.project.update": { "uri": "dashboard/projects/{project}/update", "methods": ["PUT"], "parameters": ["project"], "bindings": { "project": "id" } }, "dashboard.project.activity": { "uri": "dashboard/projects/{project}/activity", "methods": ["GET", "HEAD"], "parameters": ["project"], "bindings": { "project": "id" } }, "dashboard.project.validation": { "uri": "dashboard/projects/{project}/validation", "methods": ["GET", "HEAD"], "parameters": ["project"], "bindings": { "project": "id" } }, "dashboard.project.publish": { "uri": "dashboard/projects/{project}/publish", "methods": ["POST"], "parameters": ["project"], "bindings": { "project": "id" } }, "project-members.store": { "uri": "dashboard/projects/{project}/members", "methods": ["POST"], "parameters": ["project"] }, "project-members.update": { "uri": "dashboard/projects/{project}/members/{user}", "methods": ["PUT"], "parameters": ["project", "user"] }, "project-members.destroy": { "uri": "dashboard/projects/{project}/members/{user}", "methods": ["DELETE"], "parameters": ["project", "user"] }, "project-invitations.accept": { "uri": "dashboard/project-invitations/{invitation}", "methods": ["GET", "HEAD"], "parameters": ["invitation"], "bindings": { "invitation": "id" } }, "project-invitations.destroy": { "uri": "dashboard/project-invitations/{invitation}", "methods": ["DELETE"], "parameters": ["invitation"], "bindings": { "invitation": "id" } }, "dashboard.studies": { "uri": "dashboard/studies/{study}", "methods": ["GET", "HEAD"], "parameters": ["study"], "bindings": { "study": "id" } }, "dashboard.study.files": { "uri": "dashboard/studies/{study}/files", "methods": ["GET", "HEAD"], "parameters": ["study"], "bindings": { "study": "id" } }, "dashboard.study.annotations": { "uri": "dashboard/studies/{study}/annotations", "methods": ["GET", "HEAD"], "parameters": ["study"], "bindings": { "study": "id" } }, "dashboard.study.datasets": { "uri": "dashboard/studies/{study}/datasets", "methods": ["GET", "HEAD"], "parameters": ["study"], "bindings": { "study": "id" } }, "dashboard.study.settings": { "uri": "dashboard/studies/{study}/settings", "methods": ["GET", "HEAD"], "parameters": ["study"], "bindings": { "study": "id" } }, "dashboard.study.destroy": { "uri": "dashboard/studies/{study}", "methods": ["DELETE"], "parameters": ["study"], "bindings": { "study": "id" } }, "dashboard.study.create": { "uri": "dashboard/studies/create", "methods": ["POST"] }, "dashboard.study.update": { "uri": "dashboard/studies/{study}/update", "methods": ["PUT"], "parameters": ["study"], "bindings": { "study": "id" } }, "dashboard.study.activity": { "uri": "dashboard/studies/{study}/activity", "methods": ["GET", "HEAD"], "parameters": ["study"], "bindings": { "study": "id" } }, "study-members.store": { "uri": "dashboard/studies/{study}/members", "methods": ["POST"], "parameters": ["study"] }, "study-members.update": { "uri": "dashboard/studies/{study}/members/{user}", "methods": ["PUT"], "parameters": ["study", "user"] }, "study-members.destroy": { "uri": "dashboard/studies/{study}/members/{user}", "methods": ["DELETE"], "parameters": ["study", "user"] }, "dashboard.studies.nmriumVersions": { "uri": "dashboard/studies/{study}/nmriumVersions", "methods": ["GET", "HEAD"], "parameters": ["study"], "bindings": { "study": "id" } }, "dashboard.studies.nmrium": { "uri": "studies/{study}/nmriumInfo", "methods": ["GET", "HEAD"], "parameters": ["study"], "bindings": { "study": "id" } }, "dashboard.studies.nmriumInfo": { "uri": "dashboard/studies/{study}/nmriumInfo", "methods": ["POST"], "parameters": ["study"], "bindings": { "study": "id" } }, "dashboard.study.preview": { "uri": "dashboard/studies/{study}/preview", "methods": ["POST"], "parameters": ["study"], "bindings": { "study": "id" } }, "study-molecule.store": { "uri": "dashboard/studies/{study}/molecule", "methods": ["POST"], "parameters": ["study"], "bindings": { "study": "id" } }, "study-molecule.delete": { "uri": "dashboard/studies/{study}/molecule/{molecule}", "methods": ["DELETE"], "parameters": ["study", "molecule"], "bindings": { "study": "id", "molecule": "id" } }, "study-invitations.accept": { "uri": "dashboard/study-invitations/{invitation}", "methods": ["GET", "HEAD"], "parameters": ["invitation"], "bindings": { "invitation": "id" } }, "study-invitations.destroy": { "uri": "dashboard/study-invitations/{invitation}", "methods": ["DELETE"], "parameters": ["invitation"], "bindings": { "invitation": "id" } }, "dashboard.datasets.nmriumVersions": { "uri": "dashboard/datasets/{dataset}/nmriumVersions", "methods": ["GET", "HEAD"], "parameters": ["dataset"], "bindings": { "dataset": "id" } }, "dashboard.datasets.nmrium": { "uri": "datasets/{dataset}/nmriumInfo", "methods": ["GET", "HEAD"], "parameters": ["dataset"], "bindings": { "dataset": "id" } }, "dashboard.datasets.nmriumInfo": { "uri": "dashboard/datasets/{dataset}/nmriumInfo", "methods": ["POST"], "parameters": ["dataset"], "bindings": { "dataset": "id" } }, "dashboard.dataset.preview": { "uri": "dashboard/datasets/{dataset}/preview", "methods": ["POST"], "parameters": ["dataset"], "bindings": { "dataset": "id" } }, "dashboard.draft.info": { "uri": "dashboard/drafts/{draft}/info", "methods": ["GET", "HEAD"], "parameters": ["draft"], "bindings": { "draft": "id" } }, "dashboard.draft.files": { "uri": "dashboard/drafts/{draft}/files", "methods": ["GET", "HEAD"], "parameters": ["draft"], "bindings": { "draft": "id" } }, "dashboard.draft.missing-files": { "uri": "dashboard/drafts/{draft}/missing-files", "methods": ["GET", "HEAD"], "parameters": ["draft"], "bindings": { "draft": "id" } }, "dashboard.draft.update": { "uri": "dashboard/drafts/{draft}", "methods": ["PUT"], "parameters": ["draft"], "bindings": { "draft": "id" } }, "dashboard.draft.files.delete": { "uri": "dashboard/drafts/{draft}/files/{filesystemobject}", "methods": ["DELETE"], "parameters": ["draft", "filesystemobject"], "bindings": { "draft": "id", "filesystemobject": "id" } }, "dashboard.draft.annotate": { "uri": "dashboard/drafts/{draft}/annotate", "methods": ["GET", "HEAD"], "parameters": ["draft"], "bindings": { "draft": "id" } }, "dashboard.draft.process": { "uri": "dashboard/drafts/{draft}/process", "methods": ["POST"], "parameters": ["draft"], "bindings": { "draft": "id" } }, "dashboard.draft.complete": { "uri": "dashboard/drafts/{draft}/complete", "methods": ["POST"], "parameters": ["draft"], "bindings": { "draft": "id" } }, "console": { "uri": "admin/console", "methods": ["GET", "HEAD"] }, "console.users": { "uri": "admin/users", "methods": ["GET", "HEAD"] }, "console.users.create": { "uri": "admin/users/create", "methods": ["GET", "HEAD"] }, "console.users.store": { "uri": "admin/users", "methods": ["POST"] }, "console.users.edit": { "uri": "admin/users/edit/{user}", "methods": ["GET", "HEAD"], "parameters": ["user"], "bindings": { "user": "id" } }, "console.users.impersonate": { "uri": "admin/users/impersonate/{user}", "methods": ["GET", "HEAD"], "parameters": ["user"], "bindings": { "user": "id" } }, "console.users.update": { "uri": "admin/users/edit/{user}", "methods": ["PUT"], "parameters": ["user"], "bindings": { "user": "id" } }, "console.users.update-password": { "uri": "admin/users/edit/{user}/password", "methods": ["PUT"], "parameters": ["user"], "bindings": { "user": "id" } }, "console.users.update-role": { "uri": "admin/users/edit/{user}/role", "methods": ["PUT"], "parameters": ["user"], "bindings": { "user": "id" } }, "console.users.destroy-photo": { "uri": "admin/users/edit/{user}/photo", "methods": ["DELETE"], "parameters": ["user"], "bindings": { "user": "id" } }, "console.announcements": { "uri": "admin/announcements", "methods": ["GET", "HEAD"] }, "console.announcements.create": { "uri": "admin/announcements", "methods": ["POST"] }, "console.announcements.edit": { "uri": "admin/announcements/{announcement}", "methods": ["PUT"], "parameters": ["announcement"], "bindings": { "announcement": "id" } }, "console.announcements.destroy": { "uri": "admin/announcements/{announcement}", "methods": ["DELETE"], "parameters": ["announcement"], "bindings": { "announcement": "id" } }, "console.spectra": { "uri": "admin/spectra", "methods": ["GET", "HEAD"] }, "console.spectra.snapshots": { "uri": "admin/snapshots", "methods": ["GET", "HEAD"] }, "public": { "uri": "{id}", "methods": ["GET", "HEAD"], "wheres": { "id": "(P|S|D|M|p|s|d|m)[0-9]+" }, "parameters": ["id"] }, "compounds": { "uri": "compounds", "methods": ["GET", "HEAD"] }, "badge.doi": { "uri": "badge/doi/{id}", "methods": ["GET", "HEAD"], "parameters": ["id"] }, "download": { "uri": "{username}/download/{project}/{key?}", "methods": ["GET", "HEAD"], "parameters": ["username", "project", "key"] }, "download.set": { "uri": "{username}/datasets/{project}/{study?}/{dataset?}", "methods": ["GET", "HEAD"], "parameters": ["username", "project", "study", "dataset"] }, "dataset.download": { "uri": "{username}/download/{project}/{study}/{filename}", "methods": ["GET", "HEAD"], "parameters": ["username", "project", "study", "filename"] }, "study.file": { "uri": "{code}/studies/{study}/file/{filename}", "methods": ["GET", "HEAD"], "parameters": ["code", "study", "filename"], "bindings": { "study": "id" } }, "project.toggle-upvote": { "uri": "projects/{project}/toggleUpVote", "methods": ["GET", "HEAD"], "parameters": ["project"], "bindings": { "project": "id" } }, "project.toggle-starred": { "uri": "projects/{project}/toggleStarred", "methods": ["GET", "HEAD"], "parameters": ["project"], "bindings": { "project": "id" } }, "study.toggle-starred": { "uri": "studies/{study}/toggleStarred", "methods": ["GET", "HEAD"], "parameters": ["study"], "bindings": { "study": "id" } }, "project.studies": { "uri": "projects/{project}/studies", "methods": ["GET", "HEAD"], "parameters": ["project"], "bindings": { "project": "id" } }, "public.spectra": { "uri": "spectra", "methods": ["GET", "HEAD"] } } };
if (typeof window !== "undefined" && typeof window.Ziggy !== "undefined") {
  Object.assign(Ziggy$1.routes, window.Ziggy.routes);
}
const helpers = {
  methods: {
    tagQuery(query) {
      if (query) {
        if (this.isInchi(query)) {
          return "InChi";
        } else if (this.isInChiKey(query)) {
          return "InChiKey";
        } else {
          try {
            let molecule = OCL$1.Molecule.fromSmiles(query);
          } catch (err) {
            return "text";
          }
          return "smiles";
        }
      }
    },
    removeDuplicates(a2) {
      return a2.filter(function(value, index) {
        return a2.indexOf(value) == index;
      });
    },
    isInchi(query) {
      return !!query.trim().match(
        /^((InChI=)?[^J][0-9BCOHNSOPrIFla+\-\(\)\\\/,pqbtmsih]{6,})$/gi
      ) && query.startsWith("InChI=");
    },
    isInChiKey(query) {
      return 25 === query.length && "-" === query[14] && !!query.match(/^([0-9A-Z\-]+)$/) || 27 === query.length && "-" === query[14] && "-" === query[25] && !!query.match(/^([0-9A-Z\-]+)$/);
    },
    hasAnyRole: function(roles) {
      return this.checkIfValueExists(roles, "roles");
    },
    hasAnyPermission: function(permissions) {
      return this.checkIfValueExists(permissions, "permissions");
    },
    checkIfValueExists(queryArray, type) {
      if (this.$page.props.user && this.$page.props.user[type]) {
        let allValues = Array.from(this.$page.props.user[type]);
        return queryArray.some((r2) => allValues.indexOf(r2) >= 0);
      }
    },
    formatDate(timestamp) {
      const date = new Date(timestamp);
      return new Intl.DateTimeFormat("default", {
        dateStyle: "long"
      }).format(date);
    },
    formatDateTime(timestamp) {
      const date = new Date(timestamp);
      return new Intl.DateTimeFormat("en", {
        dateStyle: "full",
        timeStyle: "short"
      }).format(date);
    },
    md(data) {
      return data ? marked.parse(data) : "";
    },
    getHash(input) {
      var hash = 0, len = input.length;
      for (var i2 = 0; i2 < len; i2++) {
        hash = (hash << 5) - hash + input.charCodeAt(i2);
        hash |= 0;
      }
      return hash;
    },
    findLocalItems(query) {
      var i2, results = [];
      if (typeof window !== "undefined") {
        for (i2 in localStorage) {
          if (localStorage.hasOwnProperty(i2)) {
            if (i2.match(query) || !query && typeof i2 === "string") {
              let value = JSON.parse(localStorage.getItem(i2));
              if (value) {
                results.push({ key: i2, val: value });
              }
            }
          }
        }
      }
      return results;
    },
    slugify(str) {
      str = str.replace(/^\s+|\s+$/g, "");
      str = str.toLowerCase();
      var from = "àáäâèéëêìíïîòóöôùúüûñç·/_,:;";
      var to = "aaaaeeeeiiiioooouuuunc------";
      for (var i2 = 0, l2 = from.length; i2 < l2; i2++) {
        str = str.replace(
          new RegExp(from.charAt(i2), "g"),
          to.charAt(i2)
        );
      }
      str = str.replace(/[^a-z0-9 -]/g, "").replace(/\s+/g, "-").replace(/-+/g, "-");
      return str;
    },
    copyToClipboard(text) {
      copyText(text, void 0, (error) => {
        if (error) {
          console.log(error);
        } else {
          console.log("copied");
        }
      });
    },
    bytesToSize(bytes) {
      var sizes = ["Bytes", "KB", "MB", "GB", "TB"];
      if (bytes == 0)
        return "0 Byte";
      var i2 = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
      return Math.round(bytes / Math.pow(1024, i2), 2) + " " + sizes[i2];
    },
    isString(val) {
      return typeof val === "string" || val instanceof String;
    },
    parseJSON(val) {
      if (!val) {
        return null;
      }
      if (this.isString(val)) {
        return JSON.parse(val);
      }
      return val;
    },
    downloadMolFile2D(e2, smiles, identifier, CM_API) {
      axios.get(
        CM_API + "convert/mol2D?smiles=" + encodeURIComponent(smiles) + "&generator=rdkit"
      ).then((response) => {
        this.saveTextAsFile(
          response.data,
          "Molfile_V2_" + identifier + ".mol",
          "chemical/x-mdl-molfile"
        );
      }).catch((error) => {
        console.error("Error downloading the file:", error);
      });
    },
    downloadMolFile3D(e2, smiles, identifier, CM_API) {
      axios.get(
        CM_API + "convert/mol3D?smiles=" + encodeURIComponent(smiles) + "&generator=rdkit"
      ).then((response) => {
        this.saveTextAsFile(
          response.data,
          "Molfile_V3_" + identifier + ".mol",
          "chemical/x-mdl-molfile"
        );
      }).catch((error) => {
        console.error("Error downloading the file:", error);
      });
    },
    getMolfileStringBySmiles(smiles) {
      try {
        const npMolecule = OCL$1.Molecule.fromSmiles(smiles);
        return npMolecule.toMolfileV3();
      } catch (e2) {
        console.log(e2.name + " in OpenChemLib: " + e2.message);
      }
    },
    saveTextAsFile(textToWrite, fileNameToSaveAs, fileType) {
      let textFileAsBlob = new Blob([textToWrite], { type: fileType });
      let downloadLink = document.createElement("a");
      downloadLink.download = fileNameToSaveAs;
      downloadLink.innerHTML = "Download File";
      if (window.webkitURL != null) {
        downloadLink.href = window.webkitURL.createObjectURL(textFileAsBlob);
      } else {
        downloadLink.href = window.URL.createObjectURL(textFileAsBlob);
        downloadLink.style.display = "none";
        document.body.appendChild(downloadLink);
      }
      downloadLink.click();
    },
    /*Extract Doi from URL*/
    extractDoi(query) {
      if (query.indexOf("http") > -1) {
        var url = new URL(query);
        query = url.pathname.replace("/", "");
      }
      return query.trim();
    },
    fixedDecimelPoint(input, decimelPoint) {
      return Number.parseFloat(input).toFixed(decimelPoint);
    },
    hasAnyRole: function(roles) {
      return this.checkIfValueExists(roles, "roles");
    },
    hasAnyPermission: function(permissions) {
      return this.checkIfValueExists(permissions, "permissions");
    },
    checkIfValueExists(queryArray, type) {
      if (this.$page.props.user && this.$page.props.user[type]) {
        let allValues = Array.from(this.$page.props.user[type]);
        return queryArray.some((r2) => allValues.indexOf(r2) >= 0);
      }
    },
    formatDate(timestamp) {
      const date = new Date(timestamp);
      return new Intl.DateTimeFormat("default", {
        dateStyle: "long"
      }).format(date);
    },
    formatDateTime(timestamp) {
      const date = new Date(timestamp);
      return new Intl.DateTimeFormat("en", {
        dateStyle: "full",
        timeStyle: "short"
      }).format(date);
    },
    md(data) {
      return data ? marked.parse(data) : "";
    },
    getHash(input) {
      var hash = 0, len = input.length;
      for (var i2 = 0; i2 < len; i2++) {
        hash = (hash << 5) - hash + input.charCodeAt(i2);
        hash |= 0;
      }
      return hash;
    },
    slugify(str) {
      str = str.replace(/^\s+|\s+$/g, "");
      str = str.toLowerCase();
      var from = "àáäâèéëêìíïîòóöôùúüûñç·/_,:;";
      var to = "aaaaeeeeiiiioooouuuunc------";
      for (var i2 = 0, l2 = from.length; i2 < l2; i2++) {
        str = str.replace(
          new RegExp(from.charAt(i2), "g"),
          to.charAt(i2)
        );
      }
      str = str.replace(/[^a-z0-9 -]/g, "").replace(/\s+/g, "-").replace(/-+/g, "-");
      return str;
    },
    copyToClipboard(text, element) {
      if (typeof element == "string") {
        document.getElementById(id).select();
      } else {
        element.select();
      }
      copyText(text, void 0, (error) => {
        if (error) {
          console.log(error);
        }
      });
    },
    bytesToSize(bytes) {
      var sizes = ["Bytes", "KB", "MB", "GB", "TB"];
      if (bytes == 0)
        return "0 Byte";
      var i2 = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
      return Math.round(bytes / Math.pow(1024, i2), 2) + " " + sizes[i2];
    },
    isString(val) {
      return typeof val === "string" || val instanceof String;
    },
    parseJSON(val) {
      if (!val) {
        return null;
      }
      if (this.isString(val)) {
        return JSON.parse(val);
      }
      return val;
    },
    isValidEmail(email) {
      var re = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
      return re.test(email);
    },
    isEmpty(obj) {
      return Object.keys(obj).length === 0;
    },
    pluralize(value, number) {
      return pluralize(value, number);
    },
    /*Extract Doi from URL*/
    extractDoi(query) {
      if (query.indexOf("http") > -1) {
        var url = new URL(query);
        query = url.pathname.replace("/", "");
      }
      return query.trim();
    }
  },
  computed: {
    editable() {
      if (this.role) {
        if (this.role == "creator" || this.role == "owner" || this.role == "collaborator") {
          return true;
        }
      }
      if (this.teamRole && this.teamRole.key) {
        if (this.teamRole.key == "creator" || this.teamRole.key == "owner" || this.teamRole.key == "collaborator") {
          return true;
        }
      } else {
        return false;
      }
    },
    editableTeamRole() {
      if (this.teamRole && this.teamRole.name) {
        if (this.teamRole.key == "owner" || this.teamRole.key == "collaborator") {
          return true;
        } else {
          return false;
        }
      } else {
        return true;
      }
    }
  }
};
createServer(
  (page) => createInertiaApp({
    page,
    render: renderToString,
    resolve: (name) => {
      const pages = /* @__PURE__ */ Object.assign({ "./Pages/API/Index.vue": __vite_glob_0_0, "./Pages/API/Partials/ApiTokenManager.vue": __vite_glob_0_1, "./Pages/Announcement/Index.vue": __vite_glob_0_2, "./Pages/Announcement/Partials/Create.vue": __vite_glob_0_3, "./Pages/Announcement/Partials/Edit.vue": __vite_glob_0_4, "./Pages/Auth/ConfirmPassword.vue": __vite_glob_0_5, "./Pages/Auth/ForgotPassword.vue": __vite_glob_0_6, "./Pages/Auth/Login.vue": __vite_glob_0_7, "./Pages/Auth/Register.vue": __vite_glob_0_8, "./Pages/Auth/ResetPassword.vue": __vite_glob_0_9, "./Pages/Auth/SetPassword.vue": __vite_glob_0_10, "./Pages/Auth/TwoFactorChallenge.vue": __vite_glob_0_11, "./Pages/Auth/VerifyEmail.vue": __vite_glob_0_12, "./Pages/Console/Index.vue": __vite_glob_0_13, "./Pages/Console/Spectra/Index.vue": __vite_glob_0_14, "./Pages/Console/Spectra/Snapshot.vue": __vite_glob_0_15, "./Pages/Console/Users/Create.vue": __vite_glob_0_16, "./Pages/Console/Users/Edit.vue": __vite_glob_0_17, "./Pages/Console/Users/Index.vue": __vite_glob_0_18, "./Pages/Console/Users/Partials/UserPassword.vue": __vite_glob_0_19, "./Pages/Console/Users/Partials/UserProfile.vue": __vite_glob_0_20, "./Pages/Dashboard.vue": __vite_glob_0_21, "./Pages/PrivacyPolicy.vue": __vite_glob_0_22, "./Pages/Profile/Partials/DeleteUserForm.vue": __vite_glob_0_23, "./Pages/Profile/Partials/LogoutOtherBrowserSessionsForm.vue": __vite_glob_0_24, "./Pages/Profile/Partials/TwoFactorAuthenticationForm.vue": __vite_glob_0_25, "./Pages/Profile/Partials/UpdatePasswordForm.vue": __vite_glob_0_26, "./Pages/Profile/Partials/UpdateProfileInformationForm.vue": __vite_glob_0_27, "./Pages/Profile/Show.vue": __vite_glob_0_28, "./Pages/Project/Index.vue": __vite_glob_0_29, "./Pages/Project/Partials/Activity.vue": __vite_glob_0_30, "./Pages/Project/Partials/Archive.vue": __vite_glob_0_31, "./Pages/Project/Partials/Create.vue": __vite_glob_0_32, "./Pages/Project/Partials/Delete.vue": __vite_glob_0_33, "./Pages/Project/Partials/Details.vue": __vite_glob_0_34, "./Pages/Project/Partials/Restore.vue": __vite_glob_0_35, "./Pages/Project/Partials/Unarchive.vue": __vite_glob_0_36, "./Pages/Project/Settings.vue": __vite_glob_0_37, "./Pages/Project/Show.vue": __vite_glob_0_38, "./Pages/Project/Validation.vue": __vite_glob_0_39, "./Pages/Public/Compounds.vue": __vite_glob_0_40, "./Pages/Public/Datasets.vue": __vite_glob_0_41, "./Pages/Public/Embed/Sample.vue": __vite_glob_0_42, "./Pages/Public/Project/Dataset.vue": __vite_glob_0_43, "./Pages/Public/Project/Files.vue": __vite_glob_0_44, "./Pages/Public/Project/Layout.vue": __vite_glob_0_45, "./Pages/Public/Project/License.vue": __vite_glob_0_46, "./Pages/Public/Project/Samples.vue": __vite_glob_0_47, "./Pages/Public/Project/Show.vue": __vite_glob_0_48, "./Pages/Public/Project/Study.vue": __vite_glob_0_49, "./Pages/Public/Projects.vue": __vite_glob_0_50, "./Pages/Public/Sample/Layout.vue": __vite_glob_0_51, "./Pages/Public/Sample/Show.vue": __vite_glob_0_52, "./Pages/Public/Studies.vue": __vite_glob_0_53, "./Pages/Publish.vue": __vite_glob_0_54, "./Pages/Recent.vue": __vite_glob_0_55, "./Pages/SharedWithMe.vue": __vite_glob_0_56, "./Pages/Starred.vue": __vite_glob_0_57, "./Pages/Study/About.vue": __vite_glob_0_58, "./Pages/Study/Content.vue": __vite_glob_0_59, "./Pages/Study/Datasets.vue": __vite_glob_0_60, "./Pages/Study/Files.vue": __vite_glob_0_61, "./Pages/Study/Index.vue": __vite_glob_0_62, "./Pages/Study/Integrations.vue": __vite_glob_0_63, "./Pages/Study/Layout.vue": __vite_glob_0_64, "./Pages/Study/MolecularIdentifications.vue": __vite_glob_0_65, "./Pages/Study/Notifications.vue": __vite_glob_0_66, "./Pages/Study/Partials/Activity.vue": __vite_glob_0_67, "./Pages/Study/Partials/Create.vue": __vite_glob_0_68, "./Pages/Study/Partials/Delete.vue": __vite_glob_0_69, "./Pages/Study/Partials/Details.vue": __vite_glob_0_70, "./Pages/Study/Protocols.vue": __vite_glob_0_71, "./Pages/Study/Settings.vue": __vite_glob_0_72, "./Pages/Teams/Create.vue": __vite_glob_0_73, "./Pages/Teams/Partials/CreateTeamForm.vue": __vite_glob_0_74, "./Pages/Teams/Partials/DeleteTeamForm.vue": __vite_glob_0_75, "./Pages/Teams/Partials/TeamMemberManager.vue": __vite_glob_0_76, "./Pages/Teams/Partials/UpdateTeamNameForm.vue": __vite_glob_0_77, "./Pages/Teams/Show.vue": __vite_glob_0_78, "./Pages/TermsOfService.vue": __vite_glob_0_79, "./Pages/Trashed.vue": __vite_glob_0_80, "./Pages/Upload.vue": __vite_glob_0_81, "./Pages/Welcome.vue": __vite_glob_0_82 });
      return pages[`./Pages/${name}.vue`];
    },
    setup({ App, props, plugin }) {
      return createSSRApp({
        render: () => h$1(App, props)
      }).use(plugin).use(P, Ziggy$1).mixin(helpers);
    }
  })
);
