name : nmrXiv prod deployment to GKE vis Github Actions

on:
  push:
    branches: [prod-helm-deploy]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: nmrxiv-prod
  GKE_ZONE: europe-west3-a
  DEPLOYMENT_NAME: nmrxiv-nmrxiv-app
  REPOSITORY_NAME: nmrxiv-prod
  APP_IMAGE: nmrxiv-app
  NGINX_IMAGE: nmrxiv-nginx

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    if: github.ref == 'refs/heads/prod-helm-deploy'
    runs-on: ubuntu-latest
    #needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |-
        gcloud --quiet auth configure-docker
    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.3.0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Build the Docker image
    - name: Build App Image
      echo "docker push europe-west3-docker.pkg.dev/${{ PROJECT_ID }}/${{ REPOSITORY_NAME }}/${{ APP_IMAGE:latest }}"
      run: |-
        docker build -f ./resources/ops/docker/app/app.dockerfile \
          --tag "europe-west3-docker.pkg.dev/$PROJECT_ID/$REPOSITORY_NAME/$APP_IMAGE:latest" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
    - name: Build Nginx Image
      run: |-
        docker build -f ./resources/ops/docker/nginx/nginx.dockerfile \
          --tag "europe-west3-docker.pkg.dev/$PROJECT_ID/$REPOSITORY_NAME/$NGINX_IMAGE:latest" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
    # Push the Docker image to Google Container Registry
    - name: Push App Image to GCR
      run: |-
        docker push "europe-west3-docker.pkg.dev/$PROJECT_ID/$REPOSITORY_NAME/$APP_IMAGE:latest"

    - name: Push Nginx Image to GCR
      run: |-
        docker push "europe-west3-docker.pkg.dev/$PROJECT_ID/$REPOSITORY_NAME/$NGINX_IMAGE:latest"

    # Set up kustomize
    # - name: Set up Kustomize
    #   run: |-
    #     curl --location https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.2.0/kustomize_v4.2.0_linux_amd64.tar.gz | tar xz
    #     chmod u+x ./kustomize
    # Deploy the latest Docker image to the GKE cluster
    - name: Deploy
      run: |-
        kubectl rollout restart deployment/$DEPLOYMENT_NAME
        kubectl rollout status deployment/$DEPLOYMENT_NAME --timeout=300s
        kubectl get services -o wide