name : Code-cov test

on:
  push:
    branches: [code-cov]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: nmrxiv-dev
  GKE_ZONE: europe-west3-a
  DEPLOYMENT_NAME: nmrxiv-nmrxiv-app
  SCHEDULER_DEPLOYMENT_NAME: nmrxiv-scheduler
  WORKER_DEPLOYMENT_NAME: nmrxiv-worker
  DOCKER_HUB_USERNAME : ${{ secrets.DOCKER_HUB_USERNAME  }}
  DOCKER_HUB_PASSWORD : ${{ secrets.DOCKER_HUB_PASSWORD  }}
  REPOSITORY_NAME: nmrxiv
  REPOSITORY_NAMESPACE: nfdi4chem

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nmrxiv
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v1

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
        coverage: pcov

    - name: Install composer dependencies
      run: |
       composer install --ignore-platform-reqs
    
    - name: Prepare Laravel Application
      run: |
        php -r "file_exists('.env') || copy('.env.ci.test', '.env');"

        echo AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_DEV }} >> .env
        echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }} >> .env
        echo MEILISEARCH_KEY=${{ secrets.MEILISEARCH_KEY_DEV }} >> .env
        echo MEILISEARCH_PUBLICKEY=${{ secrets.MEILISEARCH_PUBLICKEY_DEV }} >> .env
        echo TWITTER_CLIENT_ID=${{ secrets.TWITTER_CLIENT_ID_DEV }} >> .env
        echo TWITTER_CLIENT_SECRET=${{ secrets.TWITTER_CLIENT_SECRET_DEV }} >> .env
        echo GITHUB_CLIENT_ID=${{ secrets.CLIENT_ID_GITHUB_DEV }} >> .env
        echo GITHUB_CLIENT_SECRET=${{ secrets.CLIENT_SECRET_GITHUB_DEV }} >> .env

        php artisan key:generate

    - name: Install pcov
      run: |
        apt-get update
        apt-get -y install php-pcov

    - name: Install front-end dependencies
      run: |
        npm install
        npm run build
    
    - name: Run tests and collect coverage
      run: vendor/bin/phpunit --coverage-clover coverage.xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4-beta
    env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_ORG_TOKEN }}
    

    

    

