name : Deploy to Production

on:
  push:
    branches: [prod-helm-deploy]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: nmrxiv-prod
  GKE_ZONE: europe-west3-a
  DEPLOYMENT_NAME: nmrxiv-nmrxiv-app
  SCHEDULER_DEPLOYMENT_NAME: nmrxiv-scheduler
  WORKER_DEPLOYMENT_NAME: nmrxiv-worker
  DOCKER_HUB_USERNAME : ${{ secrets.DOCKER_HUB_USERNAME  }}
  DOCKER_HUB_PASSWORD : ${{ secrets.DOCKER_HUB_PASSWORD  }}
  REPOSITORY_NAME: nmrxiv
  REPOSITORY_NAMESPACE: nfdi4chem
  

jobs:
  php-unit-test:
    uses: NFDI4Chem/nmrxiv/.github/workflows/test.yml@development

  setup-build-publish-deploy:
    name: Build & deploy to production
    if: github.ref == 'refs/heads/prod-helm-deploy'
    needs: php-unit-test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Get the GKE credentials
    - uses: google-github-actions/get-gke-credentials@v0.3.0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    #Fetch latest release
    - name: Fetch latest release
      id: fetch-latest-release
      uses: InsonusK/get-latest-release@v1.0.1
      with:
        myToken: ${{ github.token }}
        #exclude_types: "draft|prerelease"
        view_top: 10
    - name: "Print release name"
      run: |
        echo "tag_name: ${{ steps.fetch-latest-release.outputs.tag_name }}"

    # Login to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        username: ${{ env.DOCKER_HUB_USERNAME  }}
        password: ${{ env.DOCKER_HUB_PASSWORD  }}

    # Build and push the app Docker image
    - name: Build and push App Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./resources/ops/docker/app/app.dockerfile
        push: true
        build-args: |
          RELEASE_VERSION=app-${{ steps.fetch-latest-release.outputs.tag_name }}
        tags: ${{ env.REPOSITORY_NAMESPACE }}/${{ env.REPOSITORY_NAME }}:app-latest, ${{ env.REPOSITORY_NAMESPACE }}/${{ env.REPOSITORY_NAME }}:app-${{ steps.fetch-latest-release.outputs.tag_name }}
        username: ${{ env.DOCKER_HUB_USERNAME  }}
        password: ${{ env.DOCKER_HUB_PASSWORD  }}

    # Build and push the nginx Docker image
    - name: Build and push Nginx Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./resources/ops/docker/nginx/nginx.dockerfile
        push: true
        build-args: |
          RELEASE_VERSION=nginx-${{ steps.fetch-latest-release.outputs.tag_name }}
        tags: ${{ env.REPOSITORY_NAMESPACE }}/${{ env.REPOSITORY_NAME }}:nginx-latest, ${{ env.REPOSITORY_NAMESPACE }}/${{ env.REPOSITORY_NAME }}:nginx-${{ steps.fetch-latest-release.outputs.tag_name }}
        username: ${{ env.DOCKER_HUB_USERNAME  }}
        password: ${{ env.DOCKER_HUB_PASSWORD  }}

    - name: Deploy
      run: |-
        kubectl rollout restart deployment/$DEPLOYMENT_NAME
        kubectl rollout status deployment/$DEPLOYMENT_NAME --timeout=300s
        kubectl rollout restart deployment/$WORKER_DEPLOYMENT_NAME
        kubectl rollout restart deployment/$SCHEDULER_DEPLOYMENT_NAME
        kubectl get services -o wide